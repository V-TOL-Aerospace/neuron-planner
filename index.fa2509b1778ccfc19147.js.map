{"version":3,"file":"index.fa2509b1778ccfc19147.js","mappings":"yLAIIA,EAAgC,IAAIC,IAAI,YACxCC,EAAgC,IAAID,IAAI,YACxCE,EAAgC,IAAIF,IAAI,WACxCG,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCL,GACrEM,EAAqC,IAAgCJ,GACrEK,EAAqC,IAAgCJ,GAEzEC,EAAwBI,KAAK,CAACC,EAAOC,GAAI,4qRAA8qRL,EAAqC,iIAAmIC,EAAqC,ioCAAmoCC,EAAqC,8hMAAmiM,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qDAAqD,MAAQ,GAAG,SAAW,urKAAurK,eAAiB,CAAC,gggBAAmggB,WAAa,MAE96qC,W,8DCXIH,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,8wBAA+wB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iCAAiC,MAAQ,GAAG,SAAW,qPAAqP,eAAiB,CAAC,+wBAA+wB,WAAa,MAE76D,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,iwKAA0xK,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,kCAAkC,MAAQ,GAAG,SAAW,qxDAAqxD,eAAiB,CAAC,kwKAA0xK,WAAa,MAEp+Y,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,+SAAgT,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gCAAgC,MAAQ,GAAG,SAAW,6DAA6D,eAAiB,CAAC,gTAAgT,WAAa,MAEtzB,W,sICGIN,EAA0B,IAA4B,KAC1DA,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAC1BP,EAAwBO,EAAE,KAE1BP,EAAwBI,KAAK,CAACC,EAAOC,GAAI,mFAAsF,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iCAAiC,MAAQ,GAAG,SAAW,cAAc,eAAiB,CAAC,oRAAoS,WAAa,MAEliB,W,8DClBIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,ywBAA0wB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+BAA+B,MAAQ,GAAG,SAAW,oSAAoS,eAAiB,CAAC,0wBAA0wB,WAAa,MAEh9D,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,ijIAAkjI,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gCAAgC,MAAQ,GAAG,SAAW,m4CAAm4C,eAAiB,CAAC,kjIAAkjI,WAAa,MAEhoT,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,qsIAAssI,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,sCAAsC,MAAQ,GAAG,SAAW,0vCAA0vC,eAAiB,CAAC,ssIAAssI,WAAa,MAEryT,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,w9DAAy9D,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yCAAyC,MAAQ,GAAG,SAAW,qeAAqe,eAAiB,CAAC,y9DAAy9D,WAAa,MAEzjJ,W,QCDAD,EAAOG,QAAU,SAAUC,GACzB,IAAIC,EAAO,GA6FX,OA3FAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIC,EAAU,GACVC,OAA+B,IAAZF,EAAK,GA4B5B,OA1BIA,EAAK,KACPC,GAAW,cAAcE,OAAOH,EAAK,GAAI,QAGvCA,EAAK,KACPC,GAAW,UAAUE,OAAOH,EAAK,GAAI,OAGnCE,IACFD,GAAW,SAASE,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,OAG5EC,GAAWN,EAAuBK,GAE9BE,IACFD,GAAW,KAGTD,EAAK,KACPC,GAAW,KAGTD,EAAK,KACPC,GAAW,KAGNA,KACNI,KAAK,KAIVT,EAAKH,EAAI,SAAWa,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASK,KAG7B,IAAIC,EAAyB,GAE7B,GAAIJ,EACF,IAAK,IAAIK,EAAI,EAAGA,EAAIf,KAAKM,OAAQS,IAAK,CACpC,IAAIrB,EAAKM,KAAKe,GAAG,GAEP,MAANrB,IACFoB,EAAuBpB,IAAM,GAKnC,IAAK,IAAIsB,EAAK,EAAGA,EAAKR,EAAQF,OAAQU,IAAM,CAC1C,IAAId,EAAO,GAAGG,OAAOG,EAAQQ,IAEzBN,GAAUI,EAAuBZ,EAAK,WAIrB,IAAVU,SACc,IAAZV,EAAK,KAGdA,EAAK,GAAK,SAASG,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,MAAMG,OAAOH,EAAK,GAAI,MAF/FA,EAAK,GAAKU,GAOVH,IACGP,EAAK,IAGRA,EAAK,GAAK,UAAUG,OAAOH,EAAK,GAAI,MAAMG,OAAOH,EAAK,GAAI,KAC1DA,EAAK,GAAKO,GAHVP,EAAK,GAAKO,GAOVE,IACGT,EAAK,IAGRA,EAAK,GAAK,cAAcG,OAAOH,EAAK,GAAI,OAAOG,OAAOH,EAAK,GAAI,KAC/DA,EAAK,GAAKS,GAHVT,EAAK,GAAK,GAAGG,OAAOM,IAOxBb,EAAKN,KAAKU,MAIPJ,I,QClGTL,EAAOG,QAAU,SAAUqB,EAAKC,GAK9B,OAJKA,IACHA,EAAU,IAGPD,GAILA,EAAME,OAAOF,EAAIG,WAAaH,EAAII,QAAUJ,GAExC,eAAeK,KAAKL,KACtBA,EAAMA,EAAIM,MAAM,GAAI,IAGlBL,EAAQM,OACVP,GAAOC,EAAQM,MAKb,oBAAoBF,KAAKL,IAAQC,EAAQO,WACpC,IAAKpB,OAAOY,EAAIS,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAAQ,KAG9DT,GAnBEA,I,QCNXxB,EAAOG,QAAU,SAAUM,GACzB,IAAIC,EAAUD,EAAK,GACfyB,EAAazB,EAAK,GAEtB,IAAKyB,EACH,OAAOxB,EAGT,GAAoB,mBAATyB,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzDO,EAAO,+DAA+D7B,OAAOwB,GAC7EM,EAAgB,OAAO9B,OAAO6B,EAAM,OACpCE,EAAaT,EAAWU,QAAQpC,KAAI,SAAUqC,GAChD,MAAO,iBAAiBjC,OAAOsB,EAAWY,YAAc,IAAIlC,OAAOiC,EAAQ,UAE7E,MAAO,CAACnC,GAASE,OAAO+B,GAAY/B,OAAO,CAAC8B,IAAgB5B,KAAK,MAGnE,MAAO,CAACJ,GAASI,KAAK,Q,QClBxB,IAAIiC,EAAc,GAElB,SAASC,EAAqBC,GAG5B,IAFA,IAAIC,GAAU,EAELhD,EAAI,EAAGA,EAAI6C,EAAYlC,OAAQX,IACtC,GAAI6C,EAAY7C,GAAG+C,aAAeA,EAAY,CAC5CC,EAAShD,EACT,MAIJ,OAAOgD,EAGT,SAASC,EAAa9C,EAAMoB,GAI1B,IAHA,IAAI2B,EAAa,GACbC,EAAc,GAETnD,EAAI,EAAGA,EAAIG,EAAKQ,OAAQX,IAAK,CACpC,IAAIO,EAAOJ,EAAKH,GACZD,EAAKwB,EAAQ6B,KAAO7C,EAAK,GAAKgB,EAAQ6B,KAAO7C,EAAK,GAClD8C,EAAQH,EAAWnD,IAAO,EAC1BgD,EAAa,GAAGrC,OAAOX,EAAI,KAAKW,OAAO2C,GAC3CH,EAAWnD,GAAMsD,EAAQ,EACzB,IAAIC,EAAoBR,EAAqBC,GACzCQ,EAAM,CACRC,IAAKjD,EAAK,GACVO,MAAOP,EAAK,GACZkD,UAAWlD,EAAK,GAChBS,SAAUT,EAAK,GACfU,MAAOV,EAAK,IAGd,IAA2B,IAAvB+C,EACFT,EAAYS,GAAmBI,aAC/Bb,EAAYS,GAAmBK,QAAQJ,OAClC,CACL,IAAII,EAAUC,EAAgBL,EAAKhC,GACnCA,EAAQsC,QAAU7D,EAClB6C,EAAYiB,OAAO9D,EAAG,EAAG,CACvB+C,WAAYA,EACZY,QAASA,EACTD,WAAY,IAIhBP,EAAYtD,KAAKkD,GAGnB,OAAOI,EAGT,SAASS,EAAgBL,EAAKhC,GAC5B,IAAIwC,EAAMxC,EAAQyC,OAAOzC,GAezB,OAdAwC,EAAIE,OAAOV,GAEG,SAAiBW,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOV,MAAQD,EAAIC,KAAOU,EAAOpD,QAAUyC,EAAIzC,OAASoD,EAAOT,YAAcF,EAAIE,WAAaS,EAAOlD,WAAauC,EAAIvC,UAAYkD,EAAOjD,QAAUsC,EAAItC,MACzJ,OAGF8C,EAAIE,OAAOV,EAAMW,QAEjBH,EAAII,UAOVrE,EAAOG,QAAU,SAAUE,EAAMoB,GAG/B,IAAI6C,EAAkBnB,EADtB9C,EAAOA,GAAQ,GADfoB,EAAUA,GAAW,IAGrB,OAAO,SAAgB8C,GACrBA,EAAUA,GAAW,GAErB,IAAK,IAAIrE,EAAI,EAAGA,EAAIoE,EAAgBzD,OAAQX,IAAK,CAC/C,IACIsE,EAAQxB,EADKsB,EAAgBpE,IAEjC6C,EAAYyB,GAAOZ,aAKrB,IAFA,IAAIa,EAAqBtB,EAAaoB,EAAS9C,GAEtCiD,EAAK,EAAGA,EAAKJ,EAAgBzD,OAAQ6D,IAAM,CAClD,IAEIC,EAAS3B,EAFKsB,EAAgBI,IAIK,IAAnC3B,EAAY4B,GAAQf,aACtBb,EAAY4B,GAAQd,UAEpBd,EAAYiB,OAAOW,EAAQ,IAI/BL,EAAkBG,K,QCnGtB,IAAIG,EAAO,GAoCX5E,EAAOG,QAVP,SAA0B0E,EAAQC,GAChC,IAAIC,EAxBN,SAAmBA,GACjB,QAA4B,IAAjBH,EAAKG,GAAyB,CACvC,IAAIC,EAAcC,SAASC,cAAcH,GAEzC,GAAII,OAAOC,mBAAqBJ,aAAuBG,OAAOC,kBAC5D,IAGEJ,EAAcA,EAAYK,gBAAgBC,KAC1C,MAAOC,GAEPP,EAAc,KAIlBJ,EAAKG,GAAUC,EAGjB,OAAOJ,EAAKG,GAMCS,CAAUX,GAEvB,IAAKE,EACH,MAAM,IAAIU,MAAM,2GAGlBV,EAAOW,YAAYZ,K,QCzBrB9E,EAAOG,QAPP,SAA4BsB,GAC1B,IAAIkE,EAAUV,SAASW,cAAc,SAGrC,OAFAnE,EAAQoE,cAAcF,EAASlE,EAAQqE,YACvCrE,EAAQoD,OAAOc,EAASlE,EAAQA,SACzBkE,I,cCIT3F,EAAOG,QARP,SAAwC4F,GACtC,IAAIC,EAAmD,KAEnDA,GACFD,EAAaE,aAAa,QAASD,K,QC8DvChG,EAAOG,QAZP,SAAgBsB,GACd,IAAIsE,EAAetE,EAAQyE,mBAAmBzE,GAC9C,MAAO,CACL0C,OAAQ,SAAgBV,IAzD5B,SAAesC,EAActE,EAASgC,GACpC,IAAIC,EAAM,GAEND,EAAIvC,WACNwC,GAAO,cAAc9C,OAAO6C,EAAIvC,SAAU,QAGxCuC,EAAIzC,QACN0C,GAAO,UAAU9C,OAAO6C,EAAIzC,MAAO,OAGrC,IAAIL,OAAiC,IAAd8C,EAAItC,MAEvBR,IACF+C,GAAO,SAAS9C,OAAO6C,EAAItC,MAAMN,OAAS,EAAI,IAAID,OAAO6C,EAAItC,OAAS,GAAI,OAG5EuC,GAAOD,EAAIC,IAEP/C,IACF+C,GAAO,KAGLD,EAAIzC,QACN0C,GAAO,KAGLD,EAAIvC,WACNwC,GAAO,KAGT,IAAIC,EAAYF,EAAIE,UAEhBA,GAA6B,oBAATxB,OACtBuB,GAAO,uDAAuD9C,OAAOuB,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUmB,MAAe,QAMtIlC,EAAQ0E,kBAAkBzC,EAAKqC,EAActE,EAAQA,SAkBjD2E,CAAML,EAActE,EAASgC,IAE/BY,OAAQ,YAjBZ,SAA4B0B,GAE1B,GAAgC,OAA5BA,EAAaM,WACf,OAAO,EAGTN,EAAaM,WAAWC,YAAYP,GAYhCQ,CAAmBR,O,QCjDzB/F,EAAOG,QAZP,SAA2BuD,EAAKqC,GAC9B,GAAIA,EAAaS,WACfT,EAAaS,WAAWC,QAAU/C,MAC7B,CACL,KAAOqC,EAAaW,YAClBX,EAAaO,YAAYP,EAAaW,YAGxCX,EAAaL,YAAYT,SAAS0B,eAAejD,O,gJCAjDjC,EAAU,GAEdA,EAAQ0E,kBAAoB,IAC5B1E,EAAQoE,cAAgB,IAElBpE,EAAQoD,OAAS,SAAc,KAAM,QAE3CpD,EAAQyC,OAAS,IACjBzC,EAAQyE,mBAAqB,IAEhB,IAAI,IAASzE,GAKJ,KAAW,YAAiB,W,ICrBtCmF,E,kBA6BZ,SAASC,EAAoBC,GACzB,IAAI5G,EAAI,KAER,OAAO4G,GACH,KAAKF,EAAYG,UACb7G,EAAI,MACJ,MAEJ,KAAK0G,EAAYI,UACb9G,EAAI,MACJ,MAEJ,KAAK0G,EAAYK,WACb/G,EAAI,MACJ,MAEJ,KAAK0G,EAAYM,YACbhH,EAAI,MACJ,MAEJ,KAAK0G,EAAYO,aACbjH,EAAI,MACJ,MAEJ,KAAK0G,EAAYQ,UACblH,EAAI,MACJ,MAEJ,KAAK0G,EAAYS,KACbnH,EAAI,MACJ,MAEJ,KAAK0G,EAAYU,SACbpH,EAAI,MACJ,MAEJ,KAAK0G,EAAYW,WACbrH,EAAI,MACJ,MAEJ,KAAK0G,EAAYY,WACbtH,EAAI,MACJ,MAEJ,KAAK0G,EAAYa,YACbvH,EAAI,MACJ,MAEJ,KAAK0G,EAAYc,OACbxH,EAAI,MACJ,MAEJ,KAAK0G,EAAYe,SACbzH,EAAI,MACJ,MAEJ,KAAK0G,EAAYgB,OACb1H,EAAI,MACJ,MAEJ,KAAK0G,EAAYiB,KACb3H,EAAI,KACJ,MAEJ,KAAK0G,EAAYkB,SACb5H,EAAI,MACJ,MAEJ,KAAK0G,EAAYmB,OACb7H,EAAI,MACJ,MAEJ,KAAK0G,EAAYoB,SACb9H,EAAI,KACJ,MAEJ,KAAK0G,EAAYqB,MACb/H,EAAI,MACJ,MAEJ,KAAK0G,EAAYsB,QACbhI,EAAI,MACJ,MAEJ,KAAK0G,EAAYuB,MACbjI,EAAI,MACJ,MAEJ,KAAK0G,EAAYwB,YACblI,EAAI,MACJ,MAEJ,KAAK0G,EAAYyB,YACbnI,EAAI,MAQZ,OAAOA,EAsBJ,SAASoI,EAAgBxB,EAAyByB,GAAmB,GACxE,IAAIrI,EAAI2G,EAAoBC,GACxB0B,EAAO,CACPC,UAAW,CACTC,KAAMH,EAAW,GAAK,KAG5B,OAAOrI,GAAI,QAAKA,EAAGsI,GAAMG,KAAO,IAAIC,gBA/JxC,SAAYhC,GACR,6BACA,6BACA,+BACA,iCACA,mCACA,6BACA,mBACA,2BACA,uBACA,iBACA,4BACA,gCACA,gCACA,kCACA,wBACA,4BACA,wBACA,oBACA,4BACA,sBACA,0BACA,sBACA,kCACA,kCAxBJ,CAAYA,IAAAA,EAAW,KCOvB,MAAMiC,EAAuB,CACzBC,QAAS,EAAQ,IACjBC,UAAW,EAAQ,KACnBC,cAAe,EAAQ,MAIpB,SAASC,EAAyBC,EAAmBC,GACxD,MAAQ,eAAeD,4BAAqCA,uDACpCA,UAAmBC,gBAGxC,SAASC,EAAsBF,EAAmBC,GACrD,OAAIA,EAOG,IAAI,UAAU,CACjBE,UAAWH,EACXI,KAAML,EAAyBC,EAAYC,KARpC,IAAI,OAAO,OAAD,wBACV,kCAAgC,CACnCE,UAAWH,KAXvB,4BAA4BL,GA6BrB,MAAMU,EAUTC,YAAYC,EAAc,GAAIC,EAAmB,KAAMC,EAA4C,MATnG,KAAAF,KAAc,GAUVlJ,KAAKkJ,KAAOA,EACZlJ,KAAKmJ,KAAOA,EAETC,IACCpJ,KAAKoJ,SAAWA,IASrB,SAASC,EAAyBC,EAAqB,SAAUC,EAAyC,GAAIC,EAA0B,MAC3I,IAAIC,EAAM/E,SAASW,cAAc,OACjCoE,EAAIX,UAAY,sBAEhB,IAAIY,EAAIhF,SAASW,cAAc,OAC/BqE,EAAEZ,UAAY,4BACdY,EAAEvE,YAAYT,SAAS0B,eAAekD,IACtCG,EAAItE,YAAYuE,GAEhB,IAAI,MAAM/J,KAAK4J,EACX,GAAG5J,EAAG,CACF,IAAIgK,EAAIjF,SAASW,cAAc,OAG/B,GAFAsE,EAAEb,UAAY,2BAEXnJ,EAAEwJ,KACD,IAAI,IAAIS,KAAM7B,EAAgBpI,EAAEwJ,MAC5BS,EAAGC,UAAUC,IAAI,4BACjBH,EAAExE,YAAYyE,GAQtB,IAAIG,EAAIrF,SAASW,cAAc,QAC/B0E,EAAEjB,UAAY,gCACdiB,EAAE5E,YAAYT,SAAS0B,eAAezG,EAAEuJ,OACxCS,EAAExE,YAAY4E,GAEXpK,EAAEyJ,WACDO,EAAEK,QAAU,WACR,OAAOrK,EAAEyJ,SAASI,KAI1BC,EAAItE,YAAYwE,OACb,CACH,IAAIA,EAAIjF,SAASW,cAAc,MAC/BsE,EAAEb,UAAY,4BACdW,EAAItE,YAAYwE,GAIxB,OAAOF,E,aC9GJ,SAASQ,EAASC,EAAYC,GACjC,OAAOhJ,OAAO+I,GAAKE,SAASD,EAAQ,KAIxC,IAAIE,EAAS,EACN,SAASC,EAAUC,EAAO,SAE7B,OADAF,IACO,GAAGE,IAASF,IAIhB,SAASG,EAA4BC,GAMxC,IAAIC,EAAiB,EACrB,IAAK,IAAI/K,EAAI,EAAGA,EAAI8K,EAAOnK,OAAS,EAAGX,IAAK,CACxC,MAAMgL,EAAKF,EAAO9K,GACZiL,EAAKH,EAAO9K,EAAE,GACdkL,EAAKF,EAAGG,SACRC,EAAKH,EAAGE,OAAOD,EAAGG,MAClBrB,EAAIkB,EAAGI,cAAcF,GAErBG,EAAQC,KAAKC,IAAID,KAAKE,IAAIV,EAAGW,SAAWV,EAAGU,UAAW,GAC5DZ,GAAkBS,KAAKI,KAAKJ,KAAKC,IAAIzB,EAAE,GAAKuB,GAGhD,OAAOR,EAIJ,SAASc,EAA0BC,GACtC,MAAMC,EAAMP,KAAKQ,MAAMF,EAAW,MAC5BG,EAAMT,KAAKQ,MAAMF,EAAW,KAAO,IACnCI,EAAMV,KAAKQ,MAAMF,EAAW,KAAO,IAEzC,MAAO,GAAGxB,EAASyB,EAAI,MAAMzB,EAAS2B,EAAI,MAAM3B,EAAS4B,EAAI,KAI1D,SAASC,EAASC,GAErB,OAAQA,EAAK,KAAQnH,OAAOoH,iBADR,GCxCxB,SAASC,EAAwBjB,EAAakB,GAC1C,MAAMC,EAAKhB,KAAKQ,MAAMX,GACtB,GAAImB,GAAM,GAAKA,EAAK,GAChB,MAAM,IAAIjH,MAAM,sBAAsB8F,KAAQmB,MAElD,MAAO,WAAWlC,EAASkC,EAAI,KAAKD,EAAW,IAAM,MAKzD,IAAI,IAAIvM,EAAI,EAAGA,GAAK,GAAIA,IAAK,CACzB,IAAIyM,EAAa,mBAAmBzM,IACpC,SAAWsM,EAAwBtM,GAAG,GAAQyM,GAC9C,SAAWH,EAAwBtM,GAAG,GAAOyM,EAAa,WAM9D,SAASC,EAAiBC,GACtB,OAAQA,EAAmB,EAexB,MAAMC,EAYTtD,YAAYuD,EAAS,EAAKC,EAAS,EAAKzB,EAAY,EAAK0B,EAAW,IAChE1M,KAAKwM,EAAIA,EACTxM,KAAKyM,EAAIA,EACTzM,KAAKgL,KAAOA,EACZhL,KAAK0M,IAAMA,EAMfC,OAAOC,EAAcC,GAAoB,GACrC,OAAQ7M,KAAKwM,GAAKI,EAAMJ,GAAOxM,KAAKyM,GAAKG,EAAMH,GAAOzM,KAAKgL,MAAQ4B,EAAM5B,QAAW6B,GAAc7M,KAAK0M,KAAOE,EAAMF,KAMxHI,KAAKJ,EAAW,MACZ,OAAO,IAAIH,EAAOvM,KAAKwM,EAAGxM,KAAKyM,EAAGzM,KAAKgL,KAAM0B,GAAY1M,KAAK0M,KAQjEK,iCAAiCC,EAAgBC,EAAiBP,EAAa,IAC5E,IAAIQ,EAAO,GAAKF,EAIhB,MAAMG,EAAUhC,KAAKiC,GAAG,IAExB,OAAO,IAAIb,EACPvM,KAAKwM,EAAIS,EAAW9B,KAAKkC,IAAIH,EAAOC,GACpCnN,KAAKyM,EAAIQ,EAAW9B,KAAKmC,IAAIJ,EAAOC,GACpCnN,KAAKgL,KACL0B,GASRa,+BAA+BC,EAAcP,EAAiBP,EAAa,IACvE,OAAO,IAAIH,EACPvM,KAAKwM,EAAIS,EAAW9B,KAAKkC,IAAIG,GAC7BxN,KAAKyM,EAAIQ,EAAW9B,KAAKmC,IAAIE,GAC7BxN,KAAKgL,KACL0B,GAORzB,cAAcwC,GACV,OAAOtC,KAAKI,KAAKJ,KAAKC,IAAID,KAAKE,IAAIrL,KAAKwM,EAAIiB,EAAEjB,GAAI,GAAKrB,KAAKC,IAAID,KAAKE,IAAIrL,KAAKyM,EAAIgB,EAAEhB,GAAI,IAM3FiB,SAASD,GACN,OAAOtC,KAAKwC,MAAMF,EAAEhB,EAAIzM,KAAKyM,EAAGgB,EAAEjB,EAAIxM,KAAKwM,GAK/CoB,qBAAqBC,GAGjB,IAFA,IAAIC,EAAQ,EAEHnO,EAAI,EAAGoO,EAAIF,EAASvN,OAAQX,EAAIoO,EAAGpO,IAM1CmO,GALWD,EAASlO,GAAG6M,EACZqB,EAASlO,GAAKkO,EAASvN,OAAS,EAAI,EAAIX,EAAI,GAAG8M,EAIlC,GACxBqB,GAJWD,EAASlO,GAAKkO,EAASvN,OAAS,EAAI,EAAIX,EAAI,GAAG6M,EAC/CqB,EAASlO,GAAG8M,EAGC,GAG1B,OAAOtB,KAAKE,IAAIyC,GAKpBE,0BACI,IAAIC,GAAI,OACJhC,EACId,KAAKE,IAAIrL,KAAKgL,MACdqB,EAAiBrM,KAAKgL,OAC1BkD,EAAqBC,kBACrB,CAACnO,KAAKwM,EAAGxM,KAAKyM,IAIlB,OAAO,IAAIyB,EAAqBD,EAAE,GAAIA,EAAE,GAAI,EAAK,EAAKjO,KAAK0M,KAQ/DkB,iCAAiCQ,EAA4BpD,EAAc,MAClEA,IACDA,EAjIZ,SAAsBqD,EAAiBC,GACnC,IAAItD,EAAOG,KAAKQ,OAAO2C,IAAa,KAAS,GAI7C,OAHIjC,EAAiBgC,KACjBrD,IAAS,GAENA,EA4HQuD,CAAaH,EAAMC,SAAUD,EAAME,YAE9C,IAAIL,GAAI,OACJC,EAAqBC,kBACrBlC,EACId,KAAKE,IAAIL,GACTqB,EAAiBrB,IACrB,CAACoD,EAAME,UAAWF,EAAMC,WAI5B,OAAO,IAAI9B,EAAO0B,EAAE,GAAIA,EAAE,GAAIjD,EAAMoD,EAAM1B,MAI3C,MAAM8B,EAaTvF,YAAY0B,EAAWC,EAAW6D,GAC9BzO,KAAK2K,GAAKA,EACV3K,KAAK4K,GAAKA,EACV5K,KAAKyO,SAAWA,GC/LxB,IAAYC,EAmRAC,GAnRZ,SAAYD,GAER,+BACA,yBACA,iCACA,2BALJ,CAAYA,IAAAA,EAAa,KAUlB,MAAME,EAMT3F,YAAY4F,EAAY,EAAKC,EAAW,EAAKC,EAAa,EAAKC,EAAc,GAEzEhP,KAAK6O,KAAOA,EACZ7O,KAAK8O,IAAMA,EACX9O,KAAKiP,MAAQJ,EAAOE,EACpB/O,KAAKkP,OAASJ,EAAME,EAGxBD,QACI,OAAO/O,KAAKiP,MAAQjP,KAAK6O,KAG7BG,SACI,OAAOhP,KAAKkP,OAASlP,KAAK8O,IAI9BK,WACI,OAASnP,KAAKiP,MAAQjP,KAAK6O,MAAQ,EAAK7O,KAAK6O,KAGjDO,YACI,OAASpP,KAAK8O,IAAM9O,KAAKkP,QAAU,EAAKlP,KAAKkP,OAGjDG,gBAGI,OAAOlE,KAAKI,KAAKJ,KAAKC,IAAIpL,KAAK+O,QAAS,GAAK5D,KAAKC,IAAIpL,KAAKgP,SAAU,KAM7E,SAASM,EAAuBC,EAAarP,GACzC,MAAM+D,EAAQsL,EAAMC,QAAQtP,GACxB+D,GAAS,GACTsL,EAAM9L,OAAOQ,EAAO,GAkB5B,SAASwL,EAAqBC,EAAeC,EAAaC,EAAeC,GACrE,IAAIC,GAAUH,EAAKnD,EAAIkD,EAAOlD,IAAMqD,EAAKpD,EAAImD,EAAOnD,IAAQkD,EAAKlD,EAAIiD,EAAOjD,IAAMoD,EAAKrD,EAAIoD,EAAOpD,GAElG,GAAa,GAATsD,EACA,OAAO,IAAIvD,EACf,IACIwD,IADcL,EAAOjD,EAAImD,EAAOnD,IAAMoD,EAAKrD,EAAIoD,EAAOpD,IAAQkD,EAAOlD,EAAIoD,EAAOpD,IAAMqD,EAAKpD,EAAImD,EAAOnD,IACtFqD,EAEhB/F,IADe2F,EAAOjD,EAAImD,EAAOnD,IAAMkD,EAAKnD,EAAIkD,EAAOlD,IAAQkD,EAAOlD,EAAIoD,EAAOpD,IAAMmD,EAAKlD,EAAIiD,EAAOjD,IACtFqD,EACrB,OAAKC,EAAI,GAAKA,EAAI,GAAOhG,EAAI,GAAKA,EAAI,EAC3B,IAAIwC,EAER,IAAIA,EACPmD,EAAOlD,EAAKuD,GAAKJ,EAAKnD,EAAIkD,EAAOlD,GACjCkD,EAAOjD,EAAKsD,GAAKJ,EAAKlD,EAAIiD,EAAOjD,GACjCiD,EAAO1E,MA0Bf,SAASgF,EAAe/B,EAAUgC,GAC9B,IAAItF,EAAK,IAAI4B,EACT3B,EAAK,IAAI2B,EACT2D,GAAS,EAEb,GAAID,EAAK3P,OAAS,EAEd,OAAO4P,EAEX,IAAIC,EAAWF,EAAKA,EAAK3P,OAAS,GAAGwM,OAErC,IAAK,IAAInN,EAAI,EAAGA,EAAIsQ,EAAK3P,OAAQX,IACjC,CAEI,IAAIyQ,EAAWH,EAAKtQ,GAAGmN,OAEnBsD,EAAS3D,EAAI0D,EAAS1D,GAEtB9B,EAAKwF,EACLvF,EAAKwF,IAILzF,EAAKyF,EACLxF,EAAKuF,GAGJC,EAAS3D,EAAIwB,EAAExB,GAAOwB,EAAExB,GAAK0D,EAAS1D,IACnCwB,EAAEzB,EAAI7B,EAAG6B,IAAM5B,EAAG6B,EAAI9B,EAAG8B,IAC1B7B,EAAG4B,EAAI7B,EAAG6B,IAAMyB,EAAExB,EAAI9B,EAAG8B,KAE5ByD,GAAUA,GAEdC,EAAWC,EAEf,OAAOF,EAIX,SAASG,EAA8BX,EAAeC,EAAaC,EAAeC,GAC9E,IAAIC,GAAUH,EAAKnD,EAAIkD,EAAOlD,IAAMqD,EAAKpD,EAAImD,EAAOnD,IAAQkD,EAAKlD,EAAIiD,EAAOjD,IAAMoD,EAAKrD,EAAIoD,EAAOpD,GAElG,GAAa,GAATsD,EACA,OAAO,IAAIvD,EACf,IACIwD,IADcL,EAAOjD,EAAImD,EAAOnD,IAAMoD,EAAKrD,EAAIoD,EAAOpD,IAAQkD,EAAOlD,EAAIoD,EAAOpD,IAAMqD,EAAKpD,EAAImD,EAAOnD,IACtFqD,EAcpB,OAbmBJ,EAAOjD,EAAImD,EAAOnD,EAAMkD,EAAKnD,EAAIkD,EAAOlD,EAAQkD,EAAOlD,EAAIoD,EAAOpD,EAAMmD,EAAKlD,EAAIiD,EAAOjD,EAO9F,IAAIF,EACbmD,EAAOlD,EAAKuD,GAAKJ,EAAKnD,EAAIkD,EAAOlD,GACjCkD,EAAOjD,EAAKsD,GAAKJ,EAAKlD,EAAIiD,EAAOjD,GACjCiD,EAAO1E,MAOf,SAASsF,EAAiBC,EAAczQ,GACpC,IAAI0Q,EAAS,IAAIjE,EACbkE,EAAeC,OAAOC,UAE1B,IAAI,MAAMC,KAAO9Q,EAAM,CACnB,MAAM+Q,EAAQN,EAAMtF,cAAc2F,GAE9BC,EAAQJ,IACRD,EAASI,EACTH,EAAeI,GAIvB,OAAOL,EAIX,SAASM,EAAgBP,EAAczQ,EAAgBiR,EAAqBvD,GACxE,GAAoB,GAAhBuD,EAAmB,CAEnB,IAAIC,EAAmB,IACnBC,EAxIZ,SAAkBzD,EAAc0D,GAO5B,OANA1D,GAuImD,IAtInDA,GAAgB,KAEJ,IACRA,GAAS,KAENA,EAiI4B2D,CAAS3D,GAapC4D,EAA2Bb,EAAMxD,iCAAiCkE,GAA2BD,GAC7FK,EAA0Bd,EAAMxD,iCAAiCkE,EAA0BD,GAG3FM,EAAwC,IAAIC,IAE5CC,EAAwC,IAAID,IAEhD,IAAI,MAAME,KAAQ3R,EAAM,CAEpB,IAAImO,EAAIoC,EAA8BoB,EAAK9G,GAAI8G,EAAK7G,GAAIwG,EAA0BC,GAGlFC,EAAkBI,IAAIzD,EAAGwD,GAGzB,IAAIE,EAAapB,EAAMtF,cAAcgD,GAEhCuD,EAAmBI,IAAID,IACxBH,EAAmBE,IAAIC,EAAY1D,GAI3C,IAAI4D,EAAeC,MAAMC,KAAKP,EAAmBQ,QACjDH,EAAaI,MAAK,SAASC,EAAGzE,GAC1B,OAAOyE,EAAIzE,KAKf,IAAI0E,EAAMzB,OAAOC,UACbhR,EAAI,EACR,KAAOwS,GAAOzB,OAAOC,WAAahR,EAAIkS,EAAavR,QAC3CuR,EAAalS,IAAMoR,IACnBoB,EAAMN,EAAalS,IACvBA,IAIAwS,GAAOzB,OAAOC,YACdwB,EAAMN,EAAaA,EAAavR,OAAS,IAE7C,IACI8R,EADeN,MAAMC,KAAKT,EAAkBe,WAAWC,QAAOJ,GAAKA,EAAE,GAAGjH,cAAcsF,IAAU4B,IAClElS,KAAIiS,GAAKA,EAAE,KAE7C,OAAOpB,EAAgBP,EAAO6B,EAAgB,EAAG5E,GAC9C,CACH,IAAIgD,EAAS1Q,EAAK,GACdyS,EAAW7B,OAAOC,UAEtB,IAAI,MAAMc,KAAQ3R,EAAM,CACpB,IAEI0S,EAFOjC,EAAMtF,cAAcwG,EAAK9G,IACzB4F,EAAMtF,cAAcwG,EAAK7G,IACJ6G,EAAK9G,GAAK8G,EAAK7G,GAE3C2H,EAAWhC,EAAMtF,cAAcuH,KAC/BhC,EAASiB,EACTc,EAAWhC,EAAMtF,cAAcuH,IAIvC,OAAOhC,IAKf,SAAY7B,GACR,YACA,UACA,aACA,oBACA,kBALJ,CAAYA,IAAAA,EAAa,K,QClRb8D,EAMAC,E,2SANZ,SAAYD,GACR,qBACA,wBAFJ,CAAYA,IAAAA,EAAuB,KAMnC,SAAYC,GACR,kBACA,YACA,oBACA,mBACA,uBACA,2BACA,uCACA,qBACA,wBATJ,CAAYA,IAAAA,EAAoB,KA6BzB,MAAMxE,EASTjF,YAAYoF,EAAgB,EAAKC,EAAiB,EAAKhD,EAAgB,EAAKqH,EAAe,EAAKjG,EAAW,I,YACvG1M,KAAKqO,SAAWA,EAChBrO,KAAKsO,UAAYA,EACjBtO,KAAKsL,SAAWA,EAChBtL,KAAK2S,QAAUA,EACf3S,KAAK0M,IAAMA,EAGfkB,yBACI,MAAO,QAGXjB,OAAOC,GACH,OAAO5M,KAAKqO,UAAYzB,EAAMyB,UACvBrO,KAAKsO,WAAa1B,EAAM0B,WACxBtO,KAAKsL,UAAYsB,EAAMtB,UACvBtL,KAAK2S,SAAW/F,EAAM+F,QAGjCC,aACI,OAAO,SAAS,CAAC5S,KAAKqO,SAAUrO,KAAKsO,YAGzCV,oBAAoBiF,GAChB,OAAO,IAAI3E,EAAqB2E,EAAOC,IAAKD,EAAOE,KAGvDjI,OAAOE,EAAc,MACjB,OAAOuB,EAAOyG,0BAA0BhT,KAAMgL,GAGlD4C,gBAAgBqF,GACZ,OAAOA,EAAIjF,0BAGfJ,iBAAiBsF,GACb,OAAOA,EAAUjT,KAAIgO,GAAKA,EAAED,4BAGhCJ,0BAA0BuF,GAOtB,OALIzC,OAAO0C,SAASD,EAAO9E,WACvBqC,OAAO0C,SAASD,EAAO7E,YACvBoC,OAAO0C,SAASD,EAAO7H,iBACNzK,IAAfsS,EAAOzG,KAAsC,OAAfyG,EAAOzG,KAK/CkB,iBAAiByF,GACb,IAAInF,EAAqBoF,mBAAmBD,GACxC,MAAM,IAAInO,MAAM,8DAEpB,OAAO,IAAIgJ,EACPwC,OAAO6C,MAAMF,EAAEhF,UAAY,EAAMgF,EAAEhF,SACnCqC,OAAO6C,MAAMF,EAAE/E,WAAa,EAAM+E,EAAE/E,UACpCoC,OAAO6C,MAAMF,EAAE/H,UAAY,EAAM+H,EAAE/H,SACnCoF,OAAO6C,MAAMF,EAAEV,SAAW,EAAMU,EAAEV,QAClCU,EAAE3G,IAAM2G,EAAE3G,IAAI3M,WAAa,IAInCyT,UACI,MAAiC,CAC7BnF,SAAUrO,KAAKqO,SACfC,UAAWtO,KAAKsO,UAChBhD,SAAStL,KAAKsL,SACdqH,QAAQ3S,KAAK2S,QACbjG,IAAI1M,KAAK0M,KAajB3M,SAAS0T,GAAuB,EAAMC,GAAsB,GACxD,MAAO,IAAI1T,KAAK2T,iBAAiBD,OAAiB1T,KAAK2T,iBAAiBD,OAAiB1T,KAAK4T,iBAAiBH,MAGlHE,iBAAiBD,GAAsB,GACpC,OAAOA,EAAc1T,KAAKqO,SAASwF,QAAQ,GAAK,IAAM,EAAA7T,KAAI,SAAc,KAAlBA,KAAmBA,KAAKqO,UAAU,GAG3FyF,kBAAkBJ,GAAsB,GACrC,OAAOA,EAAc1T,KAAKsO,UAAUuF,QAAQ,GAAK,IAAM,EAAA7T,KAAI,SAAc,KAAlBA,KAAmBA,KAAKsO,WAAW,GAG7FsF,iBAAiBH,GAAuB,GACrC,OAAOA,GAAgBzT,KAAKsL,SAAW4C,EAAqB6F,iBAAkBF,QAAQ,GAAK,IAAM7T,KAAKsL,SAASuI,QAAQ,GAAK,K,yBAtBlHG,EAAWC,GACrB,MAAMC,EAAMF,EAAK,EAAKC,EAAS,IAAM,IAAOA,EAAS,IAAM,IACrDE,EAAM,GAAKH,EAAK,EAAKA,GAAMA,EAAMA,GACjCI,EAAM,GAAOJ,GAAM,MAAQ,EAAK,GAChCK,GAAO,EAAY,GAALL,EAAW,EAAK,KAAS,IAE7C,MAAO,GAAGG,EAAIN,QAAQ,OAAOO,EAAIP,QAAQ,OAAOQ,EAAIR,QAAQ,OAAOK,KAhFhE,EAAAH,gBAAkB,MA8GtB,MAAMO,GAWTrL,YAAYL,EAAY,SAAU2L,EAAsB,EAAKC,EAAsB,EAAKC,EAAuB,EAAKC,EAAqB,EAAGC,EAAsB,GAC9J3U,KAAK4I,KAAOA,EACZ5I,KAAKuU,aAAeA,EACpBvU,KAAKwU,aAAeA,EACpBxU,KAAKyU,cAAgBA,EACrBzU,KAAK0U,YAAcA,EACnB1U,KAAK2U,aAAeA,EAGxB7H,OACI,OAAO,IAAIwH,GACPtU,KAAK4I,KACL5I,KAAKuU,aACLvU,KAAKwU,aACLxU,KAAKyU,cACLzU,KAAK0U,YACL1U,KAAK2U,cAIbhI,OAAOC,GACH,OAAQ5M,KAAK4I,MAAQgE,EAAMhE,MACnB5I,KAAKuU,cAAgB3H,EAAM2H,cAC3BvU,KAAKwU,cAAgB5H,EAAM4H,cAC3BxU,KAAKyU,eAAiB7H,EAAM6H,eAC5BzU,KAAK0U,aAAe9H,EAAM8H,aAC1B1U,KAAK2U,cAAgB/H,EAAM+H,aAGvCC,WACI,OAAQ5U,KAAKuU,aAAe,GACpBvU,KAAKwU,aAAe,GACpBxU,KAAKyU,cAAgB,GACrBzU,KAAK0U,YAAc,GACnB1U,KAAK2U,aAAe,EAGhCE,sBAAsB5H,GAClB,IAAI6H,EAAa,KAEjB,GAAG9U,KAAK4U,YAAc3H,EAAW,EAAG,CAEhC,MAAMb,EAAapM,KAAK+U,mBAAmB9H,GACxCb,IACC0I,EAAM1I,EAAW2C,QAAU/O,KAAK0U,aAIxC,OAAOI,EAGXE,aAAaC,GACT,IAAIH,EAAa,KAEjB,GAAG9U,KAAK4U,YAAcK,EAAoB,EAAG,CAEzC,MAAMC,EAAclV,KAAK0U,YAAcO,EACjCE,EAAShK,KAAKwC,MAAM3N,KAAKwU,aAAc,EAAExU,KAAKuU,cAGpDO,EAAOI,EAAc,EAAK/J,KAAKiK,IAAID,GAGvC,OAAOL,EAGXO,eAAepI,GACX,IAAIqI,EAAY,KAEhB,GAAGtV,KAAK4U,YAAc3H,EAAW,EAAG,CAEhC,MAAMsI,EAASpK,KAAKwC,MAAM3N,KAAKyU,cAAe,EAAEzU,KAAKuU,cAC/CY,EAAShK,KAAKwC,MAAM3N,KAAKwU,aAAc,EAAExU,KAAKuU,cAG9CiB,EAAKrK,KAAKiK,IAAIG,GAAUtI,EACxBwI,EAAKtK,KAAKiK,IAAID,GAAUlI,EAE9BqI,EAAO,IAAI1G,GAAM6G,GAAKD,EAAI,EAAEC,EAAI,EAAED,GAGtC,OAAOF,EAGXP,mBAAmB9H,GACf,IAAIqI,EAAY,KAEhB,GAAGtV,KAAK4U,YAAc3H,EAAW,EAAG,CAEhC,MAAMsI,EAASpK,KAAKwC,MAAM3N,KAAKyU,cAAe,EAAEzU,KAAKuU,cAC/CY,EAAShK,KAAKwC,MAAM3N,KAAKwU,aAAc,EAAExU,KAAKuU,cAG9CiB,EAAKrK,KAAKiK,IAAIG,GAAUtI,EACxBwI,EAAKtK,KAAKiK,IAAID,GAAUlI,EAE9BqI,EAAO,IAAI1G,GAAM6G,GAAKD,EAAI,EAAEC,EAAI,EAAED,GAGtC,OAAOF,EAKX1H,0BAA0BuF,GAKtB,OAHKA,EAAOuC,MAAQpB,GAA2BqB,MAC1CxC,EAAOyC,SAAWtB,GAA2BuB,QAMtDjI,iBAAiByF,GAEb,IAAIiB,GAA2BhB,mBAAmBD,GAC9C,MAAM,IAAInO,MAAM,oEAEpB,OAAO,IAAIoP,GACPjB,EAAEzK,KACFyK,EAAEkB,aACFlB,EAAEmB,aACFnB,EAAEoB,cACFpB,EAAEqB,YACFrB,EAAEsB,cAIVnB,UACI,MAAuC,CACnCoC,QAAStB,GAA2BuB,QACpCH,KAAMpB,GAA2BqB,KACjC/M,KAAM5I,KAAK4I,KACX2L,aAAcvU,KAAKuU,aACnBC,aAAcxU,KAAKwU,aACnBC,cAAezU,KAAKyU,cACpBC,YAAa1U,KAAK0U,YAClBC,aAAc3U,KAAK2U,eAnJpB,GAAAgB,KAAO,6BACP,GAAAE,QAAU,uC,4BC1JTC,GAMAC,GAWAC,G,4SAjBZ,SAAYF,GACR,6BADJ,CAAYA,KAAAA,GAAoB,KAMhC,SAAYC,GACR,qCACA,iDACA,+CACA,iDACA,iDACA,mDANJ,CAAYA,KAAAA,GAAmB,KAW/B,SAAYC,GACR,iCADJ,CAAYA,KAAAA,GAAmB,KAiBxB,MAAMC,GAgBTrI,cACI5N,KAAKkW,mBAAmBJ,GAAqBK,WAAW,GAAM,GAAO,GACrEnW,KAAKoW,kBAAkBL,GAAoBM,cAAe,GAAK,GAAO,GACtErW,KAAKsW,WAAWL,GAAcM,sBAAsB,GAAO,GAG/D3I,wBAAwBxE,I,+VACpB,CAAApJ,KAAI,GAAiBoJ,EAAQ,QAGjCwE,oBAAoBxE,GAChB,MAAM1J,EAAK4K,EAAU,UAErB,OADA,GAAAtK,KAAI,WAAoB0R,IAAIhS,EAAI0J,GACzB,GAAApJ,KAAI,WAAkBwW,KAAKxW,KAAMN,GAmB5CkO,0BAA0BuE,EAA0BsE,EAAeC,GAA4B,EAAMC,GAAsB,GACvH,GAAA3W,KAAI,WAAuB0R,IAAIS,EAAKsE,GACpC,GAAAzW,KAAI,WAAkB,KAAtBA,KAAuB0W,EAAmBC,GAG9C/I,yBAAyBuE,EAAyBsE,EAAcC,GAA4B,EAAMC,GAAsB,GACpH,GAAA3W,KAAI,WAAsB0R,IAAIS,EAAKsE,GACnC,GAAAzW,KAAI,WAAkB,KAAtBA,KAAuB0W,EAAmBC,GAG9C/I,yBAAyBuE,EAAyBsE,EAAcC,GAA4B,EAAMC,GAAsB,GACpH,GAAA3W,KAAI,WAAsB0R,IAAIS,EAAKsE,GACnC,GAAAzW,KAAI,WAAkB,KAAtBA,KAAuB0W,EAAmBC,GAG9C/I,kBAAkB6I,EAAkCC,GAA4B,EAAOC,GAAsB,GACzG3W,KAAK4W,kBAAkBZ,GAAoBa,YAAaJ,EAAM7N,MAAM,GAAO,GAC3E5I,KAAKoW,kBAAkBL,GAAoBe,oBAAqBL,EAAMlC,cAAc,GAAO,GAC3FvU,KAAKoW,kBAAkBL,GAAoBgB,mBAAoBN,EAAM/B,aAAa,GAAO,GACzF1U,KAAKoW,kBAAkBL,GAAoBiB,oBAAqBP,EAAM9B,cAAc,GAAO,GAC3F3U,KAAKoW,kBAAkBL,GAAoBkB,oBAAqBR,EAAMjC,cAAc,GAAO,GAC3FxU,KAAKoW,kBAAkBL,GAAoBmB,qBAAsBT,EAAMhC,eAAe,GAAO,GAE7F,GAAAzU,KAAI,WAAkB,KAAtBA,KAAuB0W,EAAmBC,GAG9C/I,0BAA0BuE,GACtB,OAAO,GAAAnS,KAAI,WAAuBmX,IAAIhF,GAG1CvE,yBAAyBuE,GACrB,OAAO,GAAAnS,KAAI,WAAsBmX,IAAIhF,GAGzCvE,yBAAyBuE,GACrB,OAAO,GAAAnS,KAAI,WAAsBmX,IAAIhF,GAGzCvE,oBACI,OAAO,IAAI0G,GACPtU,KAAKoX,kBAAkBpB,GAAoBa,aAC3C7W,KAAKqX,kBAAkBtB,GAAoBe,qBAC3C9W,KAAKqX,kBAAkBtB,GAAoBkB,qBAC3CjX,KAAKqX,kBAAkBtB,GAAoBmB,sBAC3ClX,KAAKqX,kBAAkBtB,GAAoBgB,oBAC3C/W,KAAKqX,kBAAkBtB,GAAoBiB,sBAInDpJ,iBACI,MAA0B,CACtBuI,UAAWnW,KAAKsX,mBAAmBxB,GAAqBK,WACxDE,cAAerW,KAAKqX,kBAAkBtB,GAAoBM,eAC1DS,oBAAqB9W,KAAKqX,kBAAkBtB,GAAoBe,qBAChEG,oBAAqBjX,KAAKqX,kBAAkBtB,GAAoBkB,qBAChEC,qBAAsBlX,KAAKqX,kBAAkBtB,GAAoBmB,sBACjEH,mBAAoB/W,KAAKqX,kBAAkBtB,GAAoBgB,oBAC/DC,oBAAqBhX,KAAKqX,kBAAkBtB,GAAoBiB,qBAChEH,YAAa7W,KAAKoX,kBAAkBpB,GAAoBa,cAIhEjJ,YAAYyF,GACRrT,KAAKkW,mBAAmBJ,GAAqBK,UAAWoB,QAAQlE,EAAE8C,YAAY,GAAO,GACrFnW,KAAKoW,kBAAkBL,GAAoBM,cAAe3F,OAAO6C,MAAMF,EAAEgD,eAAiB,EAAIhD,EAAEgD,eAAe,GAAO,GACtHrW,KAAKoW,kBAAkBL,GAAoBe,oBAAqBpG,OAAO6C,MAAMF,EAAEyD,qBAAuB,EAAIzD,EAAEyD,qBAAqB,GAAO,GACxI9W,KAAKoW,kBAAkBL,GAAoBgB,mBAAoBrG,OAAO6C,MAAMF,EAAE0D,oBAAsB,EAAI1D,EAAE0D,oBAAoB,GAAO,GACrI/W,KAAKoW,kBAAkBL,GAAoBiB,oBAAqBtG,OAAO6C,MAAMF,EAAE2D,qBAAuB,EAAI3D,EAAE2D,qBAAqB,GAAO,GACxIhX,KAAKoW,kBAAkBL,GAAoBkB,oBAAqBvG,OAAO6C,MAAMF,EAAE4D,qBAAuB,EAAI5D,EAAE4D,qBAAqB,GAAO,GACxIjX,KAAKoW,kBAAkBL,GAAoBmB,qBAAsBxG,OAAO6C,MAAMF,EAAE6D,sBAAwB,EAAI7D,EAAE6D,sBAAsB,GAAO,GAC3IlX,KAAK4W,kBAAkBZ,GAAoBa,YAAaxD,EAAEwD,YAAY9W,YAAY,GAAO,GAEzF,GAAAC,KAAI,WAAkB,KAAtBA,MAAuB,GAAM,I,kBAxFTN,GACjB,GAAAM,KAAI,WAAoB4R,IAAIlS,IAC3B,GAAAM,KAAI,WAAoBwX,OAAO9X,IAEtC,YAEwBgX,EAA2BC,GAChD,GAAGD,EACC,IAAI,MAAMe,KAAM,GAAAzX,KAAI,WAAoB0X,SACpCD,IAGLd,GAAe,GAAA3W,KAAI,YAClB,GAAAA,KAAI,WAAc,KAAlBA,OA3CD,GAAAuW,qBAAuB,IAAIjC,GAA2B,SAAU,GAAI,KAAO,KAAO,IAAM,KACxF,GAAAqD,eAA6C,CAChD1B,GAAcM,qBACd,IAAIjC,GAA2B,QAAS,GAAI,KAAO,KAAO,IAAM,MAIpE,UAAiE,IAAI/C,KACrE,UAA8D,IAAIA,KAClE,UAA8D,IAAIA,KAElE,UAAgC,MAChC,UAAiD,IAAIA,K,kTCnDlD,MAAMqG,GAOT3O,YAAa4O,GANb,oB,+VAOI,CAAA7X,KAAI,GAAW6X,EAAU,KAQ7BC,kBAAkB5O,EAAyB6O,EAAgFC,EAAqB,KAAMC,GAAmB,GAChKF,EAAMrY,KACPqY,EAAMrY,GAAK4K,KAEf,IAAIyD,EAAIrJ,SAASW,cAAc,SAU/B,OATA0I,EAAEjF,UAAY,GAAG,GAAA9I,KAAI,wBACrB+N,EAAEmK,QAAUH,EAAMrY,GACfsY,IACCjK,EAAEoK,MAAQH,GACXC,IACClK,EAAExJ,MAAM6T,WAAa,UAEzBrK,EAAE5I,YAAY+D,aAAgBmP,YAAcnP,EAAOxE,SAAS0B,eAAe8C,IAEpE6E,EAMXuK,mBAAmB7B,EAAa,MAC5B,IAAIhN,EAAM/E,SAASW,cAAc,UAIjC,OAHAoE,EAAIX,UAAY,GAAG,GAAA9I,KAAI,yBAA0B,GAAAA,KAAI,8BACzC,MAATyW,IACChN,EAAIgN,MAAQA,GACThN,EAOX8O,uBAAuBC,EAAiCC,EAAiB,MACrE,IAAIhP,EAAM/E,SAASW,cAAc,SAMjC,OALAoE,EAAIiM,KAAO,OACG,MAAX+C,IACChP,EAAIiP,OAASD,GACjBhP,EAAIX,UAAY,GAAG,GAAA9I,KAAI,wBACvByJ,EAAIkP,SAAWH,EACR/O,EAQXmP,yBAAyB1P,EAAasP,GAClC,IAAI/O,EAAM/E,SAASW,cAAc,UAIjC,OAHAoE,EAAIX,UAAY,GAAG,GAAA9I,KAAI,yBAA0B,GAAAA,KAAI,+BACrDyJ,EAAIO,QAAUwO,EACd/O,EAAItE,YAAYT,SAAS0B,eAAe8C,IACjCO,EAOXoP,0BAA0BpC,EAAc+B,GACpC,IAAI/O,EAAM/E,SAASW,cAAc,SAKjC,OAJAoE,EAAIiM,KAAO,OACXjM,EAAIgN,MAAQA,EAAM1W,WAClB0J,EAAIX,UAAY,GAAG,GAAA9I,KAAI,wBACvByJ,EAAIkP,SAAWH,EACR/O,EAUXqP,yBAAyBrC,EAAc+B,EAAiCpE,EAAa,KAAM2E,EAAa,KAAMC,EAAY,MACtH,IAAIvP,EAAM/E,SAASW,cAAc,SAWjC,OAVAoE,EAAIiM,KAAO,SACD,MAAPtB,IACC3K,EAAI2K,IAAMA,EAAIrU,YACR,MAAPgZ,IACCtP,EAAIsP,IAAMA,EAAIhZ,YACP,MAARiZ,IACCvP,EAAIuP,KAAOA,EAAKjZ,YACpB0J,EAAIgN,MAAQA,EAAM1W,WAClB0J,EAAIX,UAAY,GAAG,GAAA9I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDyJ,EAAIkP,SAAWH,EACR/O,EAWXwP,wBAAwBxC,EAAc+B,EAAiCpE,EAAY2E,EAAYC,EAAY,MACvG,IAAIvP,EAAM/E,SAASW,cAAc,SAUjC,OATAoE,EAAIiM,KAAO,QACXjM,EAAI2K,IAAMA,EAAIrU,WACd0J,EAAIsP,IAAMA,EAAIhZ,WACH,MAARiZ,IACCA,GAAQD,EAAM3E,GAAO,KACzB3K,EAAIuP,KAAOA,EAAKjZ,WAChB0J,EAAIgN,MAAQA,EAAM1W,WAClB0J,EAAIX,UAAY,GAAG,GAAA9I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDyJ,EAAIkP,SAAWH,EACR/O,EAOXyP,2BAA2BC,EAAiBX,GACxC,IAAI/O,EAAM/E,SAASW,cAAc,SAKjC,OAJAoE,EAAIiM,KAAO,WACXjM,EAAI0P,QAAUA,EACd1P,EAAIX,UAAY,GAAG,GAAA9I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDyJ,EAAIkP,SAAWH,EACR/O,EASX2P,yBAAyBlY,EAAkBmY,EAAiBb,EAAiCc,EAAuB,MAChH,IAAI7P,EAAM/E,SAASW,cAAc,UAEjC,GAAGnE,EAAQZ,QAAU+Y,EAAO/Y,OACxB,MAAM,IAAI4E,MAAM,4CAA4ChE,EAAQZ,aAAa+Y,EAAO/Y,WAG5F,IAAK,IAAIX,EAAI,EAAGA,EAAIuB,EAAQZ,OAAQX,IAAK,CACrC,IAAI4Z,EAAS7U,SAASW,cAAc,UACpCkU,EAAO9C,MAAQvV,EAAQvB,GACvB4Z,EAAOrQ,KAAOmQ,EAAO1Z,GAClB2Z,GAAmBA,GAAiBpY,EAAQvB,KAC3C4Z,EAAOC,UAAW,GACtB/P,EAAItE,YAAYoU,GAIpB,OAFA9P,EAAIX,UAAY,GAAG,GAAA9I,KAAI,wBACvByJ,EAAIkP,SAAWH,EACR/O,G,stBCzJR,MAAMgQ,WAA0B7B,GA6BnC3O,YAAYhJ,GACRyZ,MAAM,mB,aAtBV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBAeI,GAAA1Z,KAAI,IAAY,EAAI,KACpB,GAAAA,KAAI,GAAa,GAAE,KACnB,GAAAA,KAAI,GAAoB,GAAE,KAC1B,GAAAA,KAAI,GAAQC,EAAG,KACf,GAAAD,KAAI,GAA2B,GAAE,KACjC,GAAAA,KAAI,GAAQ,KAAI,KAChBA,KAAK2Z,oBAAoB,MACzB3Z,KAAK4Z,oBAAoB,MACzB5Z,KAAK6Z,kBAAkB,MAG3BC,sBACO,GAAA9Z,KAAI,SACH,GAAAA,KAAI,QAAW,KAAfA,KAAgBA,MAGxB+Z,kBAAkBC,GACX,GAAAha,KAAI,QACA,GAAAA,KAAI,SACHga,EAAEC,MAAM,GAAAja,KAAI,SASZ,GAAAA,KAAI,QAAWR,KAAKwa,IAEpB,GAAAha,KAAI,QAAkBR,KAAKwa,GAI/BE,QAAQC,MAAM,+BAItBC,uBAAuBJ,GACnB,IAAIK,EAAgB,GAAAra,KAAI,QAAWwP,QAAQwK,IACrB,IAAnBK,IACC,GAAAra,KAAI,QAAWyD,OAAO4W,EAAe,GACrCL,EAAElW,UAGN,IAAIwW,EAAe,GAAAta,KAAI,QAAkBwP,QAAQwK,IAC5B,IAAlBM,GACC,GAAAta,KAAI,QAAWyD,OAAO6W,EAAc,GAoC5CC,SAASrR,EAAY,mBACjB,GAAAlJ,KAAI,GAAQ0E,SAASW,cAAc,OAAM,KACzC,GAAArF,KAAI,QAAMN,GAAK,gBAAgB4K,MAC/B,GAAAtK,KAAI,QAAM8I,UAAY,kBAEtB,IAAIqP,EAAQzT,SAASW,cAAc,OACnC8S,EAAMrP,UAAY,wBAElB,IAAIY,EAAIhF,SAASW,cAAc,OAC/BqE,EAAEZ,UAAY,6BACdY,EAAEvE,YAAYT,SAAS0B,eAAe8C,IACtCiP,EAAMhT,YAAYuE,GAElB,IAAIC,EAAIjF,SAASW,cAAc,OAC/BsE,EAAEb,UAAY,yCAEd,GAAA9I,KAAI,GAA2B,GAAE,KACjC,IAAI,MAAMwa,KAAgBf,GAAkBgB,cAAe,CACvD,MAAMzS,EAAW,GAAAhI,KAAI,WAAgB,KAApBA,KAAqBwa,GAEtC,IAAIE,EAAKhW,SAASW,cAAc,UAChCqV,EAAG5R,UAAY0R,EACfE,EAAGvC,MAAQ,kBACXuC,EAAG1Q,QAAUhK,KAAK2a,gBAAgBnE,KAAKxW,MACvC,IAAI,MAAML,KAAKoI,EAAgB1B,EAAYe,SAAUY,GACjD0S,EAAGvV,YAAYxF,GAInBgK,EAAExE,YAAYuV,GAEd,IAAIE,EAAKlW,SAASW,cAAc,UAChCuV,EAAG9R,UAAY0R,EACfI,EAAGzC,MAAQ,4BACXyC,EAAG5Q,QAAUhK,KAAK6a,kBAAkBrE,KAAKxW,MACzC2J,EAAExE,YAAYyV,GACd,GAAA5a,KAAI,QAAyBR,KAAKob,GAElC,IAAIE,EAAKpW,SAASW,cAAc,UAChCyV,EAAGhS,UAAY0R,EACfM,EAAG3C,MAAQ,UACX2C,EAAG9Q,QAAU,GAAAhK,KAAI,WAAewW,KAAKxW,MAAO,GAI5C,IAAI,MAAML,KAAKoI,EAAgB1B,EAAYU,SAAUiB,GACjD8S,EAAG3V,YAAYxF,GACnBgK,EAAExE,YAAY2V,GAEd,IAAIC,EAAKrW,SAASW,cAAc,UAChC0V,EAAGjS,UAAY0R,EACfO,EAAG5C,MAAQ,YACX4C,EAAG/Q,QAAU,GAAAhK,KAAI,WAAewW,KAAKxW,KAAM,GAC3C,IAAI,MAAML,KAAKoI,EAAgB1B,EAAYW,WAAYgB,GACnD+S,EAAG5V,YAAYxF,GACnBgK,EAAExE,YAAY4V,GAEd,IAAIC,EAAKtW,SAASW,cAAc,UAChC2V,EAAGlS,UAAY0R,EACfQ,EAAG7C,MAAQ,OACX6C,EAAGhR,QAAUhK,KAAKib,UAAUzE,KAAKxW,MACjC,IAAI,MAAML,KAAKoI,EAAgB1B,EAAYS,KAAMkB,GAC7CgT,EAAG7V,YAAYxF,GACnBgK,EAAExE,YAAY6V,GAEd,IAAIE,EAAKxW,SAASW,cAAc,UAChC6V,EAAGpS,UAAY0R,EACfU,EAAG/C,MAAQ,SACX+C,EAAGlR,QAAUhK,KAAKmb,eAAe3E,KAAKxW,MACtC,IAAI,MAAML,KAAKoI,EAAgB1B,EAAYc,OAAQa,GAC/CkT,EAAG/V,YAAYxF,GACnBgK,EAAExE,YAAY+V,GASlB,OAPA/C,EAAMhT,YAAYwE,GAElB,GAAA3J,KAAI,WAAyB,KAA7BA,MACA,GAAAA,KAAI,WAAuB,KAA3BA,MAEA,GAAAA,KAAI,QAAMmF,YAAYgT,GAEf,GAAAnY,KAAI,QAuDf2Z,oBAAoByB,GAChB,GAAApb,KAAI,GAAcob,EAAS,KAG/BxB,oBAAoBpB,GAChB,GAAAxY,KAAI,GAAcwY,EAAS,KAG/BqB,kBAAkBwB,GACd,GAAArb,KAAI,GAAYqb,EAAO,KAG3BC,eACI,OAAO,GAAAtb,KAAI,QAGf6a,oBAEI,GADA,GAAA7a,KAAI,IAAa,GAAAA,KAAI,QAAS,KAC3B,GAAAA,KAAI,QAAW,CAEd,GAAAA,KAAI,GAAa,GAAGK,OAAO,GAAAL,KAAI,SAAkB,KACjD,GAAAA,KAAI,GAAoB,GAAE,KAE1B,IAAI,IAAIub,KAAW,GAAAvb,KAAI,QACnBub,EAAQtB,MAAM,GAAAja,KAAI,aACnB,CAEH,GAAAA,KAAI,GAAoB,GAAGK,OAAO,GAAAL,KAAI,SAAW,KACjD,GAAAA,KAAI,GAAa,GAAE,KAEnB,IAAI,IAAIub,KAAW,GAAAvb,KAAI,QACnBub,EAAQzX,SAGhB,GAAA9D,KAAI,WAAyB,KAA7BA,MACA,GAAAA,KAAI,WAAuB,KAA3BA,MAGJ2a,kBACI,MAAMa,EAAQ,eAAe,GAAAxb,KAAI,SACjC,GAAAA,KAAI,QAAMyb,UAAUD,EAAME,YAAa,CACnCC,QAAS,CAAC,GAAI,MAGlB/W,OAAOgX,WAAWC,eAAc,GAIpCZ,YAGIrW,OAAOgX,WAAWC,eAAc,GAGpCV,iBAEO,GAAAnb,KAAI,SACH,GAAAA,KAAI,QAAW,KAAfA,KAAgBA,MAGxB8b,aACI,OAAOrC,GAAkBsC,WAG7BC,kBAGI,MADsC,GAI1CC,UAEI,OAAOjc,KAAKua,WAGhB3M,0BAA0BuF,GAKtB,OAHKA,EAAOuC,MAAQ+D,GAAkB9D,MACjCxC,EAAOyC,SAAW6D,GAAkB5D,QAK7CjI,iBAAiByF,EAAyBpT,GAEtC,IAAIwZ,GAAkBnG,mBAAmBD,GACrC,MAAM,IAAInO,MAAM,2DAEpB,OAAO,IAAIuU,GAAkBxZ,GAGjCuT,UAEI,MAA8B,CAC1BoC,QAAS6D,GAAkB5D,QAC3BH,KAAM+D,GAAkB9D,O,oKApQzB,GAAA3V,KAAI,UACA,GAAAA,KAAI,QACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,0BAE3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,4BAGnC,cAGG,IAAI,IAAIoS,KAAO,GAAAlc,KAAI,QAA0B,CACzC,MAAMgI,EAAW,GAAAhI,KAAI,WAAgB,KAApBA,KAAqBkc,EAAIpT,WAC1CoT,EAAIC,UAAY,GAChB,MAAMC,EAAQrU,EAAgB,GAAA/H,KAAI,QAAYqG,EAAYiB,KAAOjB,EAAYgB,OAAQW,GACrF,IAAI,MAAMrI,KAAKyc,EACXF,EAAI/W,YAAYxF,KAE3B,YAEe6a,GACZ,OAAQA,EAAa6B,SAAS,UACjC,cAGM,GAAArc,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,YA6GawS,EAAmB,GAC1B,GAAAtc,KAAI,SAA0B,GAAbsc,IACb,GAAAtc,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAmCwW,KAAKxW,MAAO,MAMlE,GAAAA,KAAI,QAAS,KAAbA,KAAcA,KAAMsc,GAEjB,GAAAtc,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,oBA3Of,GAAAC,KAAO,iBACP,GAAAhH,KAAO,oBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,OACX,GAAAb,YAAa,EAab,GAAAhI,gBAAkB,MAClB,GAAA8I,gBAAkB,KAClB,GAAAC,YAAc,KAGd,GAAArC,cAAgB,CACnB,+BACA,sC,+qBCtCD,MAAMsC,GAaT9T,YAAY+T,EAA0BC,EAA2B,I,aAVjE,oBACA,oBAEA,oBAQI,GAAAjd,KAAI,GAAsBgd,EAAiB,KAC3C,GAAAhd,KAAI,GAAe,IAAIkd,gBAAiB,KACxC,GAAAld,KAAI,GAA6Bid,EAAe,KAgCpDE,OAEI,GAAAnd,KAAI,QAAaod,QAGrBC,QACIrd,KAAKmd,OAKL,IAAIG,EAFqBxL,MAAMC,KAAKrN,SAAS6Y,iBAAiB,YAEzBjL,QACjC9F,GAAKA,EAAE9M,GAAG2c,SAAS,GAAArc,KAAI,UAAyBwM,EAAE9M,GAAGY,OAAS,GAAAN,KAAI,QAAoBM,SAI1F,IAAI,MAAMX,KAAK,GAAAK,KAAI,QACfsd,EAAgBA,EAAchL,QAAO9F,IAAMA,EAAE9M,GAAG2c,SAAS,GAAG,GAAArc,KAAI,WAAuBL,QAG3F,IAAI,IAAIqF,KAAKsY,EACT,GAAAtd,KAAI,WAAoC,KAAxCA,KAAyCgF,I,wEAlDtCwY,EAA6BC,GAEpCA,EAAe5T,UAAUC,IAAIiT,GAAWW,kBAC3C,YAEaF,EAA6BC,GACvCA,EAAe5T,UAAU/F,OAAOiZ,GAAWW,kBAE9C,YAEmCF,GAChC,IAAGA,EAAgB9d,GAcf,MAAM,IAAIwF,MAAM,sCAdG,CACnB,MAAMyY,EAAqBH,EAAgB9d,GAAGke,MAAM,GAAA5d,KAAI,QAAsB,KACxE6d,EAAoBF,EAAmBrd,OAAS,EAAIqd,EAAmB,GAAK,KAClF,IAAIF,EAAiBI,EAAoBnZ,SAASoZ,eAAeD,GAAqB,KAEtF,IAAGJ,EAMC,MAAM,IAAIvY,MAAM,8CAAgD2Y,GAHhEL,EAAgBO,iBAAiBhB,GAAWiB,gBAAiB,GAAAhe,KAAI,WAAYwW,KAAKxW,KAAMwd,EAAiBC,IACzGD,EAAgBO,iBAAiBhB,GAAWkB,cAAe,GAAAje,KAAI,WAAewW,KAAKxW,KAAMwd,EAAiBC,MAtC/G,GAAAS,oBAAsB,kBAOtB,GAAAF,gBAAyB,aACzB,GAAAC,cAAuB,aAEvB,GAAAP,gBAAyB,iB,ivBCM7B,MAAMS,WAA8B1E,GA2BvCxQ,YAAYhJ,EAAWmO,EAA2B,MAC9CsL,MAAMzZ,G,aArBV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBAOI,GAAAD,KAAI,GAAW,KAAI,KACnB,GAAAA,KAAI,GAAU,KAAI,KAClB,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAa,KAAI,KACrB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAA0B,KAAI,KAElC,GAAAA,KAAI,GAAkB,EAAC,KACvB,GAAAA,KAAI,IAAkB,EAAK,KAC3B,GAAAA,KAAI,GAAsB,EAAC,KAC3B,GAAAA,KAAI,QAEDoO,GACCpO,KAAKoe,UAAUhQ,GAEnB,GAAApO,KAAI,GAAoBiW,GAAcoI,aAAa,GAAAre,KAAI,WAAkBwW,KAAKxW,OAAM,KAGxFse,yBACO,GAAAte,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBiW,GAAcoI,aAAa,GAAAre,KAAI,WAAkBwW,KAAKxW,OAAM,KAiBxFue,wBAAwBC,GACjB,GAAAxe,KAAI,SAAYwe,EACfxe,KAAKmb,iBAELjB,QAAQuE,KAAK,yCAerBL,UAAUhQ,GACN,IAAI,GAAApO,KAAI,QAAU,CACd,GAAAA,KAAI,GAAW,SAASoO,EAAMwE,aAAa,CACvC8L,WAAW,EACXC,SAAS,EACTxV,KAAMN,EAAsB,4BAC9B,KAEF,GAAA7I,KAAI,QAAS4e,GAAG,OAAQ,GAAA5e,KAAI,WAA6BwW,KAAKxW,OAC9D,GAAAA,KAAI,QAAS4e,GAAG,WAAY,GAAA5e,KAAI,WAAwBwW,KAAKxW,OAE7D,MAAM6e,EAAa,CACf,IAAI7V,EAAuB,eAAgB3C,EAAYQ,UAAW7G,KAAK8e,aAAatI,KAAKxW,OACzF,KACA,IAAIgJ,EAAuB,SAAU3C,EAAYc,OAAQnH,KAAKue,wBAAwB/H,KAAKxW,QAE/F,GAAAA,KAAI,QAAS+e,UAAU1V,EAAyB,WAAYwV,EAAY,GAAA7e,KAAI,UAE5EA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,SAG/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyBoO,GAG7B0Q,eACO,GAAA9e,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,iBACV,GAAA1c,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAuBwW,KAAKxW,MAAO,MA4C1Dgf,oBACI,OAAO,GAAAhf,KAAI,QAGfif,kBAAkBC,GACd,GAAAlf,KAAI,GAAkBkf,EAAa,KAEhC,GAAAlf,KAAI,UACH,GAAAA,KAAI,QAAWyW,MAAQ,GAAAzW,KAAI,QAAgBD,YAE/CC,KAAK8Z,sBAGTqF,kBACI,OAAO,GAAAnf,KAAI,QAAkB,EAAI,EAGrCof,oBACI,OAAO,GAAApf,KAAI,QAGfqf,kBAAkBC,GACd,GAAAtf,KAAI,GAAkBsf,EAAa,KAEhC,GAAAtf,KAAI,UACH,GAAAA,KAAI,QAAcmZ,QAAU,GAAAnZ,KAAI,SAEpCA,KAAK8Z,sBA+CAmB,YACLrW,OAAOgX,WAAWC,eAAc,EAAM,GAAGkB,GAAWmB,uBAAuBC,GAAsBvB,YAG5FzB,iBACF,GAAAnb,KAAI,SACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAEpC0Z,MAAMyB,iBAGDa,kBACL,OAAO,GAAAhc,KAAI,QAAU,CAAC,GAAAA,KAAI,SAAW,GAGhC8b,aACL,OAAOqC,GAAsBpC,WAGxBE,UACL,IAAI,GAAAjc,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAKua,SAAS,YAAW,KAErC,IAAIgF,EAAI7a,SAASW,cAAc,OAC/Bka,EAAEzW,UAAY,0BAEd,MAAM0W,EAAK,wDACX,GAAAxf,KAAI,GAAYA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQqO,SAAW,EAAK,GAAArO,KAAI,WAA2BwW,KAAKxW,OAAQ,GAAI,GAAI,MAAO,KACnJ,GAAAA,KAAI,QAAUmY,MAAQqH,EACtBD,EAAEpa,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAWwf,IACjED,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMyf,EAAK,yDACX,GAAAzf,KAAI,GAAYA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQsO,UAAY,EAAK,GAAAtO,KAAI,WAA4BwW,KAAKxW,OAAQ,IAAK,IAAK,MAAO,KACvJ,GAAAA,KAAI,QAAUmY,MAAQsH,EACtBF,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAWyf,IAClEF,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM0f,EAAK,+EACX,GAAA1f,KAAI,GAAYA,KAAK8Y,0BAA0B,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQsL,SAAW,GAAOmO,GAAkB1F,gBAAiB,GAAA/T,KAAI,WAA2BwW,KAAKxW,OAAM,KACxK,GAAAA,KAAI,QAAUmY,MAAQuH,EACtBH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,iBAAkB,GAAA9X,KAAI,QAAW0f,IACtEH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM2f,EAAK,wDACX,GAAA3f,KAAI,GAAYA,KAAK8Y,yBAA0B,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQ2S,QAAU,EAAM,GAAA3S,KAAI,WAA0BwW,KAAKxW,OAAQ,IAAK,KAAI,KAC7I,GAAAA,KAAI,QAAUmY,MAAQwH,EACtBJ,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAW2f,IAChEJ,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM4f,EAAK,wEACX,GAAA5f,KAAI,GAAaA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAiB,GAAAA,KAAI,WAAgCwW,KAAKxW,MAAO,GAAE,KACtH,GAAAA,KAAI,QAAWmY,MAAQyH,EACvBL,EAAEpa,YAAYnF,KAAK8X,kBAAkB,QAAS,GAAA9X,KAAI,QAAY4f,IAC9DL,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM6f,EAAK,6DACX,GAAA7f,KAAI,GAAgBA,KAAKkZ,2BAA2B,GAAAlZ,KAAI,QAAiB,GAAAA,KAAI,WAAgCwW,KAAKxW,OAAM,KACxH,GAAAA,KAAI,QAAcmY,MAAQ0H,EAC1BN,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAe6f,IACpEN,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM8f,EAAM,8DACZ,GAAA9f,KAAI,GAAuBA,KAAK4Y,yBAAyB3C,GAAcM,qBAAqB3N,KAAMhE,OAAO4X,sBAAsBhG,KAAK,KAAM/D,EAAwBsN,UAAS,KAC3K,GAAA/f,KAAI,QAAqBmY,MAAQ2H,EACjCP,EAAEpa,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAAsB8f,IAC1EP,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMggB,EAAM,2EACZ,GAAAhgB,KAAI,GAA0BA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAsBme,GAAsB8B,WAAY,GAAAjgB,KAAI,WAAoCwW,KAAKxW,MAAO,EAAG,KAAM,IAAI,KACzL,GAAAA,KAAI,QAAwBmY,MAAQ6H,EACpCT,EAAEpa,YAAYnF,KAAK8X,kBAAkB,OAAQ,GAAA9X,KAAI,QAAyBggB,IAC1ET,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,QAAMkgB,OAAOX,GAGrB,OAAO,GAAAvf,KAAI,QAGfmgB,sBAAsBlL,GAClB,GAAAjV,KAAI,WAAuB,KAA3BA,KAA4BiV,GAoBhCJ,wBACI,OAAO,GAAA7U,KAAI,QAGf4N,0BAAmCuF,GAK/B,OAHKA,EAAOuC,MAAQyI,GAAsBxI,MACrCxC,EAAOyC,SAAWuI,GAAsBtI,QAKjDjI,iBAA0ByF,EAA0BpT,GAEhD,IAAIke,GAAsB7K,mBAAmBD,GACzC,MAAM,IAAInO,MAAM,4DAEpB,MAAMkJ,EAAQF,EAAqBkS,UAAU/M,EAAEjF,OACzCH,EAAI,IAAIkQ,GAAsBle,EAAKmO,GAIzC,OAHAH,EAAEgR,kBAAkBvO,OAAO6C,MAAMF,EAAE6L,eAAiB,EAAM7L,EAAE6L,eAC5DjR,EAAEoR,kBAAkB9H,QAAQlE,EAAEiM,gBAC9BrR,EAAEkS,sBAAsBzP,OAAO6C,MAAMF,EAAE4B,mBAAqB,EAAM5B,EAAE4B,mBAC7DhH,EAGFuF,UAEL,MAA+B,CAC3BoC,QAASuI,GAAsBtI,QAC/BH,KAAMyI,GAAsBxI,KAC5BvH,MAAO,GAAApO,KAAI,QAAQwT,UACnB0L,cAAe,GAAAlf,KAAI,QACnBsf,cAAe,GAAAtf,KAAI,QACnBiV,kBAAmB,GAAAjV,KAAI,U,8PA1TxB,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAqBqgB,UAAY,GACrC,GAAArgB,KAAI,QAAqBmF,YAAYT,SAAS0B,eAAe6P,GAAcmB,kBAAkBpB,GAAoBa,gBAIlH,GAAA7W,KAAI,QACHA,KAAKmgB,sBAAsB,GAAAngB,KAAI,SAE/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAO,GAAO,IAE3D,YAUsBsgB,GACnBtgB,KAAKue,wBAAwB+B,EAAM9b,SACtC,YAE2B8b,GACxB,IAAIlS,EAAQF,EAAqBqS,aAAaD,EAAM9b,OAAOgc,aACvD,GAAAxgB,KAAI,UACJoO,EAAM9C,SAAW,GAAAtL,KAAI,QAAQsL,UACjC,GAAAtL,KAAI,WAAoB,KAAxBA,KAAyBoO,IAC5B,cAqCM,GAAApO,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,YAEmBsE,EAA4BqS,GAAwB,EAAMC,GAAmB,EAAMC,GAAqB,GAoBxH,GAnBA,GAAA3gB,KAAI,GAAUoO,EAAK,KAEhBqS,GAAiB,GAAAzgB,KAAI,SACpB,GAAAA,KAAI,QAAS4gB,UAAUxS,EAAMwE,cAE9B8N,IACI,GAAA1gB,KAAI,UACH,GAAAA,KAAI,QAAUyW,MAAQrI,EAAMC,SAAStO,YAEtC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUyW,MAAQrI,EAAME,UAAUvO,YAEvC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUyW,OAASrI,EAAM9C,SAAWmO,GAAkB1F,iBAAiBhU,YAE5E,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUyW,MAAQrI,EAAMuE,QAAQ5S,aAGzC4gB,EAAc,CACb,IAAIE,EAAa5K,GAAc6K,aAAajM,sBAAsB,GAAA7U,KAAI,QAAQsL,UAC3EuV,IACI,GAAA7gB,KAAI,UACH,GAAAA,KAAI,QAAwByW,OAASoK,EAAa1C,GAAsB8B,YAAYlgB,YAExF,GAAAC,KAAI,WAAuB,KAA3BA,KAA4B6gB,GAAY,GAAO,IAIvD7gB,KAAK8Z,uBACR,cAiCM,GAAA9Z,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQqO,SAAW,GAAArO,KAAI,QAAU+gB,eAEzC,GAAA/gB,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQsO,UAAY,GAAAtO,KAAI,QAAU+gB,eAE1C,GAAA/gB,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQsL,SAAW,GAAAtL,KAAI,QAAU+gB,cAAgBtH,GAAkB1F,iBAE3E,GAAA/T,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQ2S,QAAU,GAAA3S,KAAI,QAAU+gB,eAExC,GAAA/gB,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGG,GAAAA,KAAI,GAAkB,GAAAA,KAAI,QAAW+gB,cAAa,KAElD/gB,KAAK8Z,uBACR,cAGG,GAAA9Z,KAAI,GAAkB,GAAAA,KAAI,QAAcmZ,QAAO,KAE/CnZ,KAAK8Z,uBACR,cAGG,GAAA9Z,KAAI,WAAuB,KAA3BA,KAA4B,GAAAA,KAAI,QAAwB+gB,cAAgB5C,GAAsB8B,aACjG,YAsFsBhL,EAA0B0L,GAAuB,EAAMjK,GAA4B,GAGtG,GAFA,GAAA1W,KAAI,GAAsBiV,EAAiB,KAExC0L,EAAc,CACb,IAAIrV,EAAW2K,GAAc6K,aAAa9L,aAAahV,KAAK6U,yBAExDvJ,GAAYA,GAAY,GAAAtL,KAAI,QAAQsL,WACpC,GAAAtL,KAAI,QAAQsL,SAAWA,EACvB,GAAAtL,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAM,IAIvD0W,GACC1W,KAAK8Z,uBAhVG,GAAA6C,KAAO,WACP,GAAAhH,KAAO,wBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,WACX,GAAAb,YAAa,EAoBtB,GAAAkE,WAAa,ICxCjB,SAASe,GAAaC,GACzB,MAAO,iBAAiBC,KAAKC,SAASF,IAOnC,SAAeG,GAAcC,EAAiBnf,G,qCACjD,IAAIkD,EAAUV,SAASW,cAAc,KACrC,MAAMic,EAAOriB,IAAIsiB,gBAAgBrf,GACjCkD,EAAQM,aAAa,OAAQ4b,GAC7Blc,EAAQM,aAAa,WAAY2b,GAEjCjc,EAAQb,MAAMid,QAAU,OACxB9c,SAAS+c,KAAKtc,YAAYC,GAE1BA,EAAQsc,QAERhd,SAAS+c,KAAK1b,YAAYX,I,olBCjB9B,MAAMuc,GAAW,uCACXC,GAAW,mCAoFV,SAAeC,GAAqBC,G,0CAEvC,IACIC,GADS,IAAIC,WACGC,gBAAgBH,EAAgB,YAChDI,EAAoB,KAExB,GAAuC,OAAnCH,EAAOI,gBAAgBC,SAAmB,CAC1C,IAAIC,EAAiC,GACjCC,EAAiC,GACjCC,EAAoC,GAExC,IAAK,MAAMriB,KAAQ6hB,EAAOS,qBAAqB,aAAc,CACzD,IAAIC,EAAgB,UACpB,IACIA,EAAgBviB,EAAKsiB,qBAAqB,QAAQ,GAAGE,WAAW,GAAGC,UAAUC,OAEjF,UACA,IAAIC,EAAe/Q,MAAMC,KAAK7R,EAAKsiB,qBAAqB,YACpDM,EAAchR,MAAMC,KAAK7R,EAAKsiB,qBAAqB,UACnDO,EAAYjR,MAAMC,KAAK7R,EAAKsiB,qBAAqB,eAErD,IAAI,MAAMQ,KAAS9iB,EAAKsiB,qBAAqB,iBACzCK,EAAeA,EAAaxiB,OAAOyR,MAAMC,KAAKiR,EAAMR,qBAAqB,aACzEM,EAAcA,EAAYziB,OAAOyR,MAAMC,KAAKiR,EAAMR,qBAAqB,WACvEO,EAAYA,EAAU1iB,OAAOyR,MAAMC,KAAKiR,EAAMR,qBAAqB,gBAIvE,IAAK,MAAOS,EAAKC,KAAWJ,EAAYzQ,UAAW,CAC/C,IAAIjE,EAAQ,GACZ,IACIA,EAAQ8U,EAAOV,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OAChF,MAAM5d,GACJkV,QAAQuE,KAAK,8BAAgCwE,EAAM,GAAGljB,YAClDiF,aAAame,WAGbjJ,QAAQuE,KAAKzZ,GAIrB,GAAIoJ,EAAM9N,OAAQ,CACd,IAAI2N,EAAImV,GAAiBhV,EAAMwP,MAAM,MACrC3P,EAAEvB,IAAM+V,EACRJ,EAAQ7iB,KAAKyO,IAKrB,IAAK,MAAOgV,EAAKI,KAASN,EAAU1Q,UAAW,CAC3C,IAAI5H,EAAS,GAEb,IACIA,EAAS4Y,EAAKb,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OAC/E,MAAM5d,GACJkV,QAAQuE,KAAK,4BAA8BwE,EAAM,GAAGljB,YAChDiF,aAAame,WAGbjJ,QAAQuE,KAAKzZ,GAIrB,GAAGyF,EAAOnK,OAAQ,CACd,IAAIgjB,EAAa7Y,EAAOmT,MAAM,KAE1B2F,EAAgC,GACpC,IAAK,MAAMnV,KAASkV,EAChBC,EAAO/jB,KAAK4jB,GAAiBhV,EAAMwP,MAAM,OAG7C0E,EAAM9iB,KAAK+jB,IAKnB,IAAK,MAAON,EAAKO,KAAYX,EAAaxQ,UAAW,CACjD,IAAI5H,EAAS,GAEb,IACIA,EAAS+Y,EAAQhB,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OAClF,MAAM5d,GACJkV,QAAQuE,KAAK,+BAAiCwE,EAAM,GAAGljB,YACnDiF,aAAame,WAGbjJ,QAAQuE,KAAKzZ,GAIrB,GAAGyF,EAAOnK,OAAQ,CAEd,IAAIgjB,EAAa7Y,EAAOmT,MAAM,KAE1B2F,EAAgC,GACpC,IAAK,MAAMnV,KAASkV,EAChBC,EAAO/jB,KAAK4jB,GAAiBhV,EAAMwP,MAAM,OAG7C2E,EAAS/iB,KAAK+jB,KAK1BrB,EAAM,CAAEG,QAASA,EAASC,MAAOA,EAAOC,SAAUA,QAElDrI,QAAQC,MAAM,kCAGlB,OAAO+H,KAIX,SAASkB,GAAiB3Y,GAEtB,IAAIqI,EAAMrI,EAAOnK,QAAU,EAAIoQ,OAAO+S,WAAWhZ,EAAO,IAAM,EAC1DiZ,EAAMjZ,EAAOnK,QAAU,EAAIoQ,OAAO+S,WAAWhZ,EAAO,IAAM,EAC1DkZ,EAAMlZ,EAAOnK,QAAU,EAAIoQ,OAAO+S,WAAWhZ,EAAO,IAAM,EAE9D,OAAO,IAAIyD,EACPwC,OAAO6C,MAAMT,GAAO,EAAMA,EAC1BpC,OAAO6C,MAAMmQ,GAAO,EAAMA,EAC1BhT,OAAO6C,MAAMoQ,GAAO,EAAMA,GAK3B,SAAeC,GAA8BvB,EAAgCwB,EAAoCtB,G,0CACpH,MAAMuB,QAAgBC,GAA0B1B,EAASwB,EAAWtB,GAC9DyB,EAAO,IAAIC,KACb,CAACH,GACD,CACIpO,KAAMiM,KAGdP,GAAcJ,GAAa,OAAQgD,MAIhC,SAAeE,GAA8B7B,EAAgCwB,EAAoCtB,G,0CACpH,MAAMuB,QAAgBC,GAA0B1B,EAASwB,EAAWtB,GAC9D4B,QAKV,SAAqCjiB,G,0CAEjC,MAAMkiB,EAAa,IAAI,MAAexC,IAChCyC,EAAS,IAAI,MAAcD,GASjC,aANMC,EAAOva,IAAI,UAAW,IAAI,MAAe5H,UAGzCmiB,EAAOC,QAGNF,EAAWG,aAjBAC,CAAsBV,GACxC1C,GAAcJ,GAAa,OAAQmD,MAoBhC,SAAeJ,GAA0B1B,EAAgCC,EAAgCC,G,0CAC5G,IAAIkC,EAAc/f,SAASggB,eAAeC,eAAe,GAAI,GAAI,MACjE,MAAMC,EAAUH,EAAYpf,cAAc,OAC1Cuf,EAAQlf,aAAa,QAAS,kCAC9B,MAAMmf,EAAeJ,EAAYpf,cAAc,YAC/Cuf,EAAQzf,YAAY0f,GACpBJ,EAAYtf,YAAYyf,GAGxB,IAAI,IAAIjlB,EAAE,EAAGA,EAAE0iB,EAAQ/hB,OAAQX,IAC3BklB,EAAa1f,YACT2f,GAAsBL,EAAapC,EAAQ1iB,GAAG+M,IAAM2V,EAAQ1iB,GAAG+M,IAAM,WAAW/M,EAAE,IAAK0iB,EAAQ1iB,GAAG0O,SAAUgU,EAAQ1iB,GAAG2O,YAK/H,IAAI,IAAI3O,EAAE,EAAGA,EAAE2iB,EAAMhiB,OAAQX,IACtB2iB,EAAM3iB,GAAGW,QACRukB,EAAa1f,YAAY4f,GAAqBN,EAAmB,GAAL9kB,EAAU,cAAgB,SAASA,EAAE,IAAK2iB,EAAM3iB,KAIpH,IAAI,IAAIA,EAAE,EAAGA,EAAE4iB,EAASjiB,OAAQX,IACzB4iB,EAAS5iB,GAAGW,QACXukB,EAAa1f,YAAY6f,GAAwBP,EAAa,WAAW9kB,EAAE,IAAK4iB,EAAS5iB,KAGjG,OAIG,SAAgC8kB,GAEnC,MAAO,0CADO,IAAIQ,eAAgBC,kBAAkBT,GAL7CU,CAAuBV,MAUlC,SAASK,GAAsBL,EAA0B7b,EAAakK,EAAYC,GAC9E,MAAMqS,EAAgBX,EAAYpf,cAAc,aAC1CggB,EAAWZ,EAAYpf,cAAc,QAC3CggB,EAASlJ,UAAYvT,EACrB,MAAM0c,EAAkBb,EAAYpf,cAAc,eAC5CkgB,EAAYd,EAAYpf,cAAc,SACtCmgB,EAAkBf,EAAYpf,cAAc,eAMlD,OALAmgB,EAAgBrJ,UAAY,GAAGpJ,KAAOD,IACtCsS,EAAcjgB,YAAYkgB,GAC1BD,EAAcjgB,YAAYmgB,GAC1BF,EAAcjgB,YAAYogB,GAC1BA,EAAUpgB,YAAYqgB,GACfJ,EAIX,SAASL,GAAqBN,EAA0B7b,EAAa6c,GACjE,MAAML,EAAgBX,EAAYpf,cAAc,aAC1CggB,EAAWZ,EAAYpf,cAAc,QAC3CggB,EAASlJ,UAAYvT,EACrB,MAAM0c,EAAkBb,EAAYpf,cAAc,eAC5CqgB,EAAiBjB,EAAYpf,cAAc,cAC3CmgB,EAAkBf,EAAYpf,cAAc,eAC5CsgB,EAAQF,EAAYxlB,KAAIuM,GAAK,GAAGA,EAAE8B,aAAa9B,EAAE6B,aAMvD,OALAmX,EAAgBrJ,UAAYwJ,EAAMplB,KAAK,KACvC6kB,EAAcjgB,YAAYkgB,GAC1BD,EAAcjgB,YAAYmgB,GAC1BF,EAAcjgB,YAAYugB,GAC1BA,EAAevgB,YAAYqgB,GACpBJ,EAIX,SAASJ,GAAwBP,EAA0B7b,EAAa6c,GACpE,MAAML,EAAgBX,EAAYpf,cAAc,aAC1CggB,EAAWZ,EAAYpf,cAAc,QAC3CggB,EAASlJ,UAAYvT,EACrB,MAAM0c,EAAkBb,EAAYpf,cAAc,eAC5CugB,EAAcnB,EAAYpf,cAAc,WACxCwgB,EAAepB,EAAYpf,cAAc,mBACzCygB,EAAWrB,EAAYpf,cAAc,cACrCmgB,EAAkBf,EAAYpf,cAAc,eAC5CsgB,EAAQF,EAAYxlB,KAAIuM,GAAK,GAAGA,EAAE8B,aAAa9B,EAAE6B,aAQvD,OAPAmX,EAAgBrJ,UAAYwJ,EAAMplB,KAAK,KACvC6kB,EAAcjgB,YAAYkgB,GAC1BD,EAAcjgB,YAAYmgB,GAC1BF,EAAcjgB,YAAYygB,GAC1BA,EAAYzgB,YAAY0gB,GACxBA,EAAa1gB,YAAY2gB,GACzBA,EAAS3gB,YAAYqgB,GACdJ,E,4tBClUJ,MAAMW,WAA0BtM,GAqBnCxQ,YAAYhJ,EAAWsQ,EAA2B,KAAMyV,EAAyB,MAC7EtM,MAAMzZ,G,aAhBV,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAII,GAAAD,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAe,KAAI,KACvB,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAU,GAAE,KAChB,GAAAA,KAAI,GAAS,KAAI,KACjB,GAAAA,KAAI,IAAc,EAAI,KACtBA,KAAKimB,UAAU1V,GACfvQ,KAAKkmB,QAAQF,GAajBC,UAAU7X,GACN,GAAG,GAAApO,KAAI,QAGH,GAAAA,KAAI,QAAQ4gB,UAAUxS,EAAMwE,kBACzB,CACH,IAAIoH,EAAI,SAAS5L,EAAMwE,aAAc,CACjC8L,WAAW,EACXC,SAAS,EACTxV,KAAMN,EAAsB,8BAGhCmR,EAAE4E,GAAG,OAAQ5e,KAAKmmB,YAAY3P,KAAKxW,OACnCga,EAAE4E,GAAG,WAAY,GAAA5e,KAAI,WAAkBwW,KAAKxW,OAC5C,GAAAA,KAAI,WAAgB,KAApBA,KAAqBga,GAErB,GAAAha,KAAI,GAAUga,EAAC,KACZ,GAAAha,KAAI,SACHA,KAAK+Z,kBAAkBC,GAG/Bha,KAAKmmB,cAGTD,QAAQ9X,GACJ,GAAG,GAAApO,KAAI,QAGH,GAAAA,KAAI,QAAM4gB,UAAUxS,EAAMwE,kBACvB,CACH,IAAIoH,EAAI,SAAS5L,EAAMwE,aAAc,CACjC8L,WAAW,EACXC,SAAS,EACTxV,KAAMN,EAAsB,4BAGhCmR,EAAE4E,GAAG,OAAQ5e,KAAKmmB,YAAY3P,KAAKxW,OACnCga,EAAE4E,GAAG,WAAY,GAAA5e,KAAI,WAAkBwW,KAAKxW,OAC5C,GAAAA,KAAI,WAAgB,KAApBA,KAAqBga,GAErB,GAAAha,KAAI,GAAQga,EAAC,KACV,GAAAha,KAAI,SACHA,KAAK+Z,kBAAkBC,GAG/Bha,KAAKmmB,cAGTA,cACuB,MAAf,GAAAnmB,KAAI,SAAkC,MAAb,GAAAA,KAAI,QAE1B,GAAAA,KAAI,QACH,GAAAA,KAAI,QAAOomB,WAAW,CAAC,GAAApmB,KAAI,QAAQwgB,YAAa,GAAAxgB,KAAI,QAAMwgB,eAE1D,GAAAxgB,KAAI,GAAS,WAAW,CAAC,GAAAA,KAAI,QAAQwgB,YAAa,GAAAxgB,KAAI,QAAMwgB,aAAc,CAAC6F,MAAO,WAAU,KAEzF,GAAArmB,KAAI,SACHA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,WAInCA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChC,GAAAA,KAAI,GAAS,KAAI,MAGrB,GAAAA,KAAI,WAAgB,KAApBA,MAGJsmB,kBACI,OAAO,GAAAtmB,KAAI,QAGfumB,iBAAiBC,GACb,GAAAxmB,KAAI,GAAcwmB,EAAS,KAExB,GAAAxmB,KAAI,SAEHA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,SAC3BA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,WAG3BA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChCA,KAAKoa,uBAAuB,GAAApa,KAAI,UAIxCymB,wBAAwBjO,EAAmB,MACvC,GAAAxY,KAAI,GAAuBwY,EAAS,KAGxCkO,WACI,OAAO,GAAA1mB,KAAI,QAGf8e,eACO,GAAA9e,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,iBACV,GAAA1c,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAuBwW,KAAKxW,MAAO,MA4C1D2mB,qBACI,IAAIC,EAA8B,GAKlC,OAJI,GAAA5mB,KAAI,SAAW,GAAAA,KAAI,UACnB4mB,EAAKpnB,KAAK0O,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAQwgB,cACxDoG,EAAKpnB,KAAK0O,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAMwgB,eAEnDoG,EAWF3L,YACLrW,OAAOgX,WAAWC,eAAc,EAAM,GAAGkB,GAAWmB,uBAAuB6H,GAAkBnJ,YAGxFzB,iBACF,GAAAnb,KAAI,UACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChC,GAAAA,KAAI,GAAU,KAAI,MAGnB,GAAAA,KAAI,UACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChC,GAAAA,KAAI,GAAQ,KAAI,MAGjB,GAAAA,KAAI,UACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChC,GAAAA,KAAI,GAAS,KAAI,MAGrB0Z,MAAMyB,iBAKDc,UACL,IAAI,GAAAjc,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAKua,SAAS,QAAO,KAEjC,IAAIgF,EAAI7a,SAASW,cAAc,OAC/Bka,EAAEzW,UAAY,0BAGd,MAAM8W,EAAK,qDACX,GAAA5f,KAAI,GAAeA,KAAKsY,qBAAoB,KAC5C,GAAAtY,KAAI,QAAamY,MAAQyH,EACzBL,EAAEpa,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAAc4f,IAClEL,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM6f,EAAK,oEACX,GAAA7f,KAAI,GAAgBA,KAAKsY,qBAAoB,KAC7C,GAAAtY,KAAI,QAAcmY,MAAQ0H,EAC1BN,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAe6f,IACpEN,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,WAAgB,KAApBA,MAGA,MAAM6mB,EAAM,kCACZ,GAAA7mB,KAAI,GAAkBA,KAAKkZ,2BAA2BlZ,KAAKsmB,kBAAmB,GAAAtmB,KAAI,WAA+BwW,KAAKxW,OAAM,KAC5H,GAAAA,KAAI,QAAgBmY,MAAQ0O,EAC5BtH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,gBAAiB,GAAA9X,KAAI,QAAiB6mB,IAC3EtH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM8mB,EAAM,+CACZ,GAAA9mB,KAAI,GAAcA,KAAK6Y,0BAA0B,GAAA7Y,KAAI,QAAS,GAAAA,KAAI,WAAwBwW,KAAKxW,OAAM,KACrG,GAAAA,KAAI,QAAYmY,MAAQ2O,EACxBvH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAa8mB,IAChEvH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMyf,EAAK,yCACLsH,EAAM,qCACNC,EAAM,qCACZ,GAAAhnB,KAAI,GAAmBA,KAAK4Y,yBAAyB,MAAO,GAAA5Y,KAAI,WAAgBwW,KAAKxW,OAAM,KAC3F,GAAAA,KAAI,QAAiBmY,MAAQ4O,EAC7BxH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkByf,IACzEF,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,GAAmBA,KAAK4Y,yBAAyB,MAAO,GAAA5Y,KAAI,WAAgBwW,KAAKxW,OAAM,KAC3F,GAAAA,KAAI,QAAiBmY,MAAQ6O,EAC7BzH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkByf,GAAI,IAC7EF,EAAEpa,YAAY,GAAAnF,KAAI,SAKlB,GAAAA,KAAI,QAAMkgB,OAAOX,GAGrB,OAAO,GAAAvf,KAAI,QAWfinB,YACI,OAAO,GAAAjnB,KAAI,QAGfknB,UAAUC,EAAczG,GAAqB,GACzC,GAAA1gB,KAAI,GAAUmnB,EAAK,KAChB,GAAAnnB,KAAI,SAAe0gB,IAClB,GAAA1gB,KAAI,QAAYyW,MAAQ0Q,GAEzB,GAAAnnB,KAAI,SACH,GAAAA,KAAI,WAAgB,KAApBA,KAAqB,GAAAA,KAAI,SAC1B,GAAAA,KAAI,SACH,GAAAA,KAAI,WAAgB,KAApBA,KAAqB,GAAAA,KAAI,SAGjC4N,0BAAmCuF,GAK/B,OAHKA,EAAOuC,MAAQqQ,GAAkBpQ,MACjCxC,EAAOyC,SAAWmQ,GAAkBlQ,QAK7CjI,iBAAiByF,EAAyBpT,GAEtC,IAAI8lB,GAAkBzS,mBAAmBD,GACrC,MAAM,IAAInO,MAAM,2DAEpB,IAAI+I,EAAI,IAAI8X,GAAkB9lB,EAAKiO,EAAqBkS,UAAU/M,EAAE9C,OAAQrC,EAAqBkS,UAAU/M,EAAE2S,MAE7G,OADA/X,EAAEiZ,UAAU7T,EAAE8T,MAAMpnB,YACbkO,EAGFuF,UAEL,MAA8B,CAC1BoC,QAASmQ,GAAkBlQ,QAC3BH,KAAMqQ,GAAkBpQ,KACxBpF,MAAO,GAAAvQ,KAAI,QAAUkO,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAQwgB,aAAe,IAAItS,EACtF8X,IAAK,GAAAhmB,KAAI,QAAQkO,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAMwgB,aAAe,IAAItS,EAChFiZ,MAAO,GAAAnnB,KAAI,U,8NA5SHwe,GACZ,MAAMK,EAAa,CACf,IAAI7V,EAAuB,eAAgB3C,EAAYQ,UAAW7G,KAAK8e,aAAatI,KAAKxW,OACzF,KACA,IAAIgJ,EAAuB,SAAU3C,EAAYc,OAAQnH,KAAKmb,eAAe3E,KAAKxW,QAEtFwe,EAAQO,UAAU1V,EAAyB,GAAArJ,KAAI,QAAU,GAAAA,KAAI,QAAU,WAAY6e,EAAYL,KAClG,cA2GM,GAAAxe,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,YAEgBwW,GACbtgB,KAAKmb,kBACR,cAGG,GAAG,GAAAnb,KAAI,QAAc,CACjB,IAAIonB,EAAO,EACX,GAAG,GAAApnB,KAAI,SAAW,GAAAA,KAAI,QAAO,CACzB,IAAI2K,EAAKuD,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAQwgB,aACnD5V,EAAKsD,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAMwgB,aACjD3V,EAAKF,EAAGG,SACRC,EAAKH,EAAGE,OAAOD,EAAGG,MACtBoc,EAAOvc,EAAGI,cAAcF,GAAMgb,GAAkBlJ,gBAEpD,GAAA7c,KAAI,QAAayW,MAAQ2Q,EAAKvT,QAAQ,GAG1C,GAAG,GAAA7T,KAAI,QAAe,CAClB,IAAIgN,EAAU,EACd,GAAG,GAAAhN,KAAI,SAAW,GAAAA,KAAI,QAAO,CACzB,IAAI2K,EAAKuD,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAQwgB,aACnD5V,EAAKsD,EAAqBqS,aAAa,GAAAvgB,KAAI,QAAMwgB,aACjD3V,EAAKF,EAAGG,SACRC,EAAKH,EAAGE,OAAOD,EAAGG,MAClBwC,EAAQ3C,EAAG6C,SAAS3C,GACxBiC,EAA+B,KAAnB7B,KAAKiC,GAAG,EAAII,GAAWrC,KAAKiC,GAAM,IAC3CJ,EAAU,IACTA,GAAW,KAEnB,GAAAhN,KAAI,QAAcyW,MAAQzJ,EAAQ6G,QAAQ,KAEjD,cAYG+P,GAA8B,GAAI,CAAC5jB,KAAK2mB,sBAAuB,KAClE,cAGGzC,GAA8B,GAAI,CAAClkB,KAAK2mB,sBAAuB,KAClE,cAqFG3mB,KAAKumB,iBAAiB,GAAAvmB,KAAI,QAAgBmZ,UAC7C,cAGGnZ,KAAKknB,UAAU,GAAAlnB,KAAI,QAAYyW,OAAO,IApS1B,GAAAkG,KAAO,OACP,GAAAhH,KAAO,oBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,O,uvBCHxB,MAAMyK,WAA6B5N,GAwBtCxQ,YAAYhJ,EAAWqnB,EAA+B,GAAIC,EAAwB,MAC9E7N,MAAMzZ,G,aAnBV,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAII,GAAAD,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAkB,KAAI,KAC1B,GAAAA,KAAI,GAAa,KAAI,KACrB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAU,GAAE,KAEhBA,KAAKwnB,YAAYD,GAEjB,GAAAvnB,KAAI,GAAiBsnB,EAAQhnB,OAAS,GAAE,KACxC,GAAAN,KAAI,GAAoB,EAAC,KACzB,GAAAA,KAAI,GAAY,GAAE,KACfsnB,EAAQhnB,QACc,GAAlBgnB,EAAQhnB,QACP4Z,QAAQuE,KAAK,gFAEjBze,KAAKynB,YAAYH,IAGjBtnB,KAAK0nB,iBAIbpB,kBACI,OAAO,GAAAtmB,KAAI,QAGf2nB,oBAAoBC,GAGhB,GAFA,GAAA5nB,KAAI,GAAiB4nB,EAAY,KAE9B,GAAA5nB,KAAI,QAEH,IAAI,IAAIub,KAAW,GAAAvb,KAAI,QACnBA,KAAK+Z,kBAAkBwB,QAG3B,IAAI,IAAIA,KAAW,GAAAvb,KAAI,QACnBA,KAAKoa,uBAAuBmB,GAIxCiM,YAAYD,GACR,GAAAvnB,KAAI,GAAYunB,EAAO,KAG3Bd,wBAAwBjO,EAAmB,MACvC,GAAAxY,KAAI,GAAuBwY,EAAS,KAsBxCqP,qBAAqBC,GACjB,MAAM7E,EAAM,GAAAjjB,KAAI,QAAUwP,QAAQsY,GAE/B7E,GAAO,GACN,GAAAjjB,KAAI,WAAmB,KAAvBA,KAAwB,GAAAA,KAAI,QAAWijB,GAAM,GAC7CjjB,KAAK0nB,kBAELxN,QAAQuE,KAAK,gDAIrBsJ,sBAAsBD,GAClB,MAAM7E,EAAM,GAAAjjB,KAAI,QAAUwP,QAAQsY,GAC/B7E,GAAO,GACN,GAAAjjB,KAAI,WAAmB,KAAvBA,KAAwB,GAAAA,KAAI,QAAWijB,EAAK,GAC5CjjB,KAAK0nB,kBAELxN,QAAQuE,KAAK,gDAIrBuJ,cAAcF,GACV,MAAM7E,EAAM,GAAAjjB,KAAI,QAAUwP,QAAQsY,GAE/B7E,GAAO,EACN,GAAAjjB,KAAI,GAAoBijB,EAAG,KAE3B/I,QAAQuE,KAAK,gDAQrBwJ,cACI,OAAO,GAAAjoB,KAAI,QAefkoB,WAAWJ,EAA6BJ,GAAe,IAChD,GAAA1nB,KAAI,QAAoB,GAAK,GAAAA,KAAI,SAAqB,GAAAA,KAAI,QAAUM,SACnE,GAAAN,KAAI,GAAoBmL,KAAKiJ,IAAI,GAAApU,KAAI,QAAUM,OAAS,EAAG,GAAE,KAEjE,IAAI0Z,EAAI,SAAS,CAAC8N,EAAOzZ,SAAUyZ,EAAOxZ,WAAY,CAClDoQ,WAAW,EACXC,SAAS,EACTxV,KAAMN,EAAsB,0BAGhCmR,EAAE4E,GAAG,OAAQ5e,KAAK0nB,eAAelR,KAAKxW,OACtCga,EAAE4E,GAAG,QAAS,GAAA5e,KAAI,WAAyBwW,KAAKxW,OAChDga,EAAE4E,GAAG,WAAY,GAAA5e,KAAI,WAAwBwW,KAAKxW,OAClD,GAAAA,KAAI,WAAgB,KAApBA,KAAqBga,GAErB,GAAAha,KAAI,QAAUyD,OAAO,GAAAzD,KAAI,QAAmB,EAAGga,GAC5C,GAAAha,KAAI,SACHA,KAAK+Z,kBAAkBC,GAExB0N,GACC1nB,KAAK0nB,iBAGb5I,eACO,GAAA9e,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,iBACV,GAAA1c,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAuBwW,KAAKxW,MAAO,MAW1DynB,YAAYH,EAA+B,IACvC,IAAI,MAAM/H,KAAK+H,EACXtnB,KAAKkoB,WAAW3I,GAAG,GAGvBvf,KAAK0nB,iBAGTS,cACI,OAAO,GAAAnoB,KAAI,QAGfooB,wBACI,OAAO,GAAApoB,KAAI,QAAUC,KAAIgO,GAAKC,EAAqBqS,aAAatS,EAAEuS,eAOtE6H,uBAAuBP,GACnB,MAAM7E,EAAM,GAAAjjB,KAAI,QAAUwP,QAAQsY,GAC/B7E,GAAO,GACNjjB,KAAKoa,uBAAuB0N,GAC5B,GAAA9nB,KAAI,QAAUyD,OAAOwf,EAAK,GAC1BjjB,KAAK0nB,kBAELxN,QAAQuE,KAAK,gDAgBrB6J,wBACI,GAAG,GAAAtoB,KAAI,QAAW,CACd,MAAMyN,EAAI,GAAAzN,KAAI,QAAU0b,YAClB6M,EAAK9a,EAAE+a,eACPC,EAAKhb,EAAEib,eACPC,EAAKJ,EAAGxV,IAAM0V,EAAG1V,IACjB6V,EAAKL,EAAGzV,IAAM2V,EAAG3V,IACjB7E,EAAI,IAAIC,EAAqBua,EAAG3V,IAAM8V,EAAK,EAAGH,EAAG1V,IAAM4V,EAAK,GAElE3oB,KAAKkoB,WAAWja,IAIxByZ,iBACI,GAAG,GAAA1nB,KAAI,QAAUM,OAAS,EAAG,CACzB,IAAIgnB,EAAU,GAEd,IAAI,MAAM/H,KAAK,GAAAvf,KAAI,QACfsnB,EAAQ9nB,KAAK+f,EAAEiB,aAGhB,GAAAxgB,KAAI,QAGH,GAAAA,KAAI,QAAUomB,WAAWkB,IAGzB,GAAAtnB,KAAI,GAAY,UAAUsnB,EAAS,CAACjB,MAAO,QAAO,KAClD,GAAArmB,KAAI,QAAU4e,GAAG,QAAS,GAAA5e,KAAI,WAA0BwW,KAAKxW,OAC7DA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,eAG/BA,KAAKmb,iBAGN,GAAAnb,KAAI,SACH,GAAAA,KAAI,QAAoB,KAAxBA,MACJA,KAAK8Z,sBAEL,GAAA9Z,KAAI,WAAgB,KAApBA,MAaJ6oB,gBACI,MAAMC,EAAa,GAAA9oB,KAAI,WAAoB,KAAxBA,MAEnB,GAAG8oB,EAAWxoB,QAAU,EACpB,OAAO,EAEX,IAAIA,EAAS,EACb,IAAI,IAAIX,EAAI,EAAGA,EAAImpB,EAAWxoB,OAAQX,IAAK,CACvC,MAAMgL,EAAKme,EAAWnpB,GAChBiL,EAAKjL,EAAKmpB,EAAWxoB,OAAS,EAAKwoB,EAAWnpB,EAAE,GAAKmpB,EAAW,GACtExoB,GAAUqK,EAAGM,cAAcL,GAG/B,OAAOtK,EAAS+mB,GAAqBxK,gBAGzCkM,WACI,MAAMD,EAAa,GAAA9oB,KAAI,WAAoB,KAAxBA,MACnB,OAAG8oB,EAAWxoB,QAAU,EACb,EAEJiM,EAAOyc,cAAcF,GAAczB,GAAqBvK,YAkC1D7B,YACLrW,OAAOgX,WAAWC,eAAc,EAAM,GAAGkB,GAAWmB,uBAAuBmJ,GAAqBzK,YAG3FzB,iBACL,IAAI,MAAMoE,KAAK,GAAAvf,KAAI,QACfA,KAAKoa,uBAAuBmF,GAEhC,GAAAvf,KAAI,GAAY,GAAE,KAEf,GAAAA,KAAI,UACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAChC,GAAAA,KAAI,GAAY,KAAI,MAGxB0Z,MAAMyB,iBAKDc,UACL,IAAI,GAAAjc,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAKua,SAAS,WAAU,KAEpC,IAAIgF,EAAI7a,SAASW,cAAc,OAC/Bka,EAAEzW,UAAY,0BAGd,MAAM8W,EAAK,0DACX,GAAA5f,KAAI,GAAqBA,KAAKsY,qBAAoB,KAClD,GAAAtY,KAAI,QAAmBmY,MAAQyH,EAC/BL,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAoB4f,IACzEL,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMipB,EAAM,wEACZ,GAAAjpB,KAAI,GAAkBA,KAAKsY,qBAAoB,KAC/C,GAAAtY,KAAI,QAAgBmY,MAAQ8Q,EAC5B1J,EAAEpa,YAAYnF,KAAK8X,kBAAkB,kBAAmB,GAAA9X,KAAI,QAAiBipB,IAC7E1J,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMkpB,EAAM,0EACZ,GAAAlpB,KAAI,GAAaA,KAAKsY,qBAAoB,KAC1C,GAAAtY,KAAI,QAAWmY,MAAQ+Q,EACvB,MAAMC,EAASzkB,SAASW,cAAc,QACtC8jB,EAAOhkB,YAAYT,SAAS0B,eAAe,aAC3C,MAAMgjB,EAAU1kB,SAASW,cAAc,OACvC+jB,EAAQjkB,YAAYT,SAAS0B,eAAe,MAC5C+iB,EAAOhkB,YAAYikB,GACnBD,EAAOhkB,YAAYT,SAAS0B,eAAe,OAC3CmZ,EAAEpa,YAAYnF,KAAK8X,kBAAkBqR,EAAQ,GAAAnpB,KAAI,QAAYkpB,IAC7D3J,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,WAAgB,KAApBA,MAGA,MAAM6mB,EAAM,kCACZ,GAAA7mB,KAAI,GAAqBA,KAAKkZ,2BAA2BlZ,KAAKsmB,kBAAmB,GAAAtmB,KAAI,WAA+BwW,KAAKxW,OAAM,KAC/H,GAAAA,KAAI,QAAmBmY,MAAQ0O,EAC/BtH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,gBAAiB,GAAA9X,KAAI,QAAoB6mB,IAC9EtH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM8mB,EAAM,+CACZ,GAAA9mB,KAAI,GAAcA,KAAK6Y,0BAA0B,GAAA7Y,KAAI,QAAS,GAAAA,KAAI,WAAwBwW,KAAKxW,OAAM,KACrG,GAAAA,KAAI,QAAYmY,MAAQ2O,EACxBvH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAa8mB,IAChEvH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMwf,EAAK,2CACX,GAAAxf,KAAI,GAAuBA,KAAK4Y,yBAAyB,SAAU,GAAA5Y,KAAI,WAAoBwW,KAAKxW,OAAM,KACtG,GAAAA,KAAI,QAAqBmY,MAAQqH,EACjCD,EAAEpa,YAAYnF,KAAK8X,kBAAkB,cAAe,GAAA9X,KAAI,QAAsBwf,IAC9ED,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMyf,EAAK,4CACLsH,EAAM,wCACNC,EAAM,wCACZ,GAAAhnB,KAAI,GAAmBA,KAAK4Y,yBAAyB,MAAO,GAAA5Y,KAAI,WAAgBwW,KAAKxW,OAAM,KAC3F,GAAAA,KAAI,QAAiBmY,MAAQ4O,EAC7BxH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkByf,IACzEF,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,GAAmBA,KAAK4Y,yBAAyB,MAAO,GAAA5Y,KAAI,WAAgBwW,KAAKxW,OAAM,KAC3F,GAAAA,KAAI,QAAiBmY,MAAQ6O,EAC7BzH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkByf,GAAI,IAC7EF,EAAEpa,YAAY,GAAAnF,KAAI,SAKlB,GAAAA,KAAI,QAAMkgB,OAAOX,GAGrB,OAAO,GAAAvf,KAAI,QAWfinB,YACI,OAAO,GAAAjnB,KAAI,QAGfknB,UAAUC,EAAczG,GAAqB,GACzC,GAAA1gB,KAAI,GAAUmnB,EAAK,KAChB,GAAAnnB,KAAI,SAAe0gB,IAClB,GAAA1gB,KAAI,QAAYyW,MAAQ0Q,GAE5B,IAAI,IAAInN,KAAK,GAAAha,KAAI,QACb,GAAAA,KAAI,WAAgB,KAApBA,KAAqBga,GAG7BpM,0BAAmCuF,GAK/B,OAHKA,EAAOuC,MAAQ2R,GAAqB1R,MACpCxC,EAAOyC,SAAWyR,GAAqBxR,QAKhDjI,iBAAiByF,EAA4BpT,GAEzC,IAAIonB,GAAqB/T,mBAAmBD,GACxC,MAAM,IAAInO,MAAM,8DAEpB,MAAMoiB,EAAUjU,EAAEiU,QAAQrnB,KAAIuM,GAAK0B,EAAqBkS,UAAU5T,KAClE,IAAIyB,EAAI,IAAIoZ,GAAqBpnB,EAAKqnB,GAEtC,OADArZ,EAAEiZ,UAAU7T,EAAE8T,MAAMpnB,YACbkO,EAGFuF,UAEL,MAAiC,CAC7BoC,QAASyR,GAAqBxR,QAC9BH,KAAM2R,GAAqB1R,KAC3B2R,QAAStnB,KAAKooB,wBAAwBnoB,KAAIuM,GAAKA,EAAEgH,YACjD2T,MAAO,GAAAnnB,KAAI,U,2QAjZPqpB,EAAWC,EAAkBC,GACrC,GAAIA,GAAaF,EAAI/oB,OAEjB,IADA,IAAIS,EAAIwoB,EAAYF,EAAI/oB,OAAS,EAC1BS,KACHsoB,EAAI7pB,UAAKqB,GAGjBwoB,EAAI5lB,OAAO8lB,EAAW,EAAGF,EAAI5lB,OAAO6lB,EAAW,GAAG,KAErD,YAEkBD,EAAWC,EAAkBE,GAC5C,IAAID,GAAaD,EAAYE,GAAQH,EAAI/oB,OACtCipB,EAAY,IACXA,GAAaF,EAAI/oB,QAErB,GAAAN,KAAI,WAAY,KAAhBA,KAAiB,GAAAA,KAAI,QAAWspB,EAAWC,IAC9C,YAiCuBjJ,GACpBtgB,KAAKgoB,cAAc1H,EAAM9b,SAC5B,YAMega,GACZ,MAAMK,EAAa,CACf,IAAI7V,EAAuB,eAAgB3C,EAAYQ,UAAW7G,KAAK8e,aAAatI,KAAKxW,OACzF,KACA,IAAIgJ,EAAuB,eAAgB3C,EAAYY,WAAYjH,KAAK6nB,qBAAqBrR,KAAKxW,OAClG,IAAIgJ,EAAuB,gBAAiB3C,EAAYa,YAAalH,KAAK+nB,sBAAsBvR,KAAKxW,OACrG,KACA,IAAIgJ,EAAuB,SAAU3C,EAAYc,OAAQnH,KAAKqoB,uBAAuB7R,KAAKxW,QAE9Fwe,EAAQO,UAAU1V,EAAyB,GAAArJ,KAAI,QAAU,GAAAA,KAAI,QAAU,iBAAkB6e,EAAYL,KACxG,cAoCM,GAAAxe,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,YAkBsBwW,GACnBtgB,KAAKqoB,uBAAuB/H,EAAM9b,SACrC,YAawB8b,GACrB,GAAG,GAAAtgB,KAAI,SAAa,GAAAA,KAAI,QAAgB,CAKpC,MAAMiO,EAAIC,EAAqBqS,aAAaD,EAAMzN,QAElD7S,KAAKkoB,WAAWja,KAEvB,cA6CG,MAAMsV,EAASvjB,KAAKooB,wBAEpB,GAAG7E,EAAOjjB,QAAU,EAChB,MAAO,GAEX,MAAMuK,EAAK0Y,EAAO,GAAGzY,SACrB,OAAOyY,EAAOtjB,KAAIuM,GAAKA,EAAE1B,OAAOD,EAAGG,SACtC,cA8BG,GAHG,GAAAhL,KAAI,UACH,GAAAA,KAAI,QAAmByW,MAAQ,GAAAzW,KAAI,QAAUM,OAAOuT,QAAQ,IAE7D,GAAA7T,KAAI,QAAiB,CACpB,MAAMypB,EAAYzpB,KAAK6oB,gBACvB,GAAA7oB,KAAI,QAAgByW,MAAQgT,EAAY,EAAIA,EAAU5V,QAAQ,GAAK,MAGvE,GAAG,GAAA7T,KAAI,QAAY,CACf,MAAM0pB,EAAO1pB,KAAK+oB,WAClB,GAAA/oB,KAAI,QAAWyW,MAAQiT,EAAO,EAAIA,EAAK7V,QAAQ,GAAK,QAE3D,cAGM,GAAA7T,KAAI,QACH,GAAAA,KAAI,QAAU2pB,4BAA4B3pB,MAE1Cka,QAAQuE,KAAK,qDAEpB,cAGGmF,GAA8B,GAAI,GAAI,CAAC5jB,KAAKooB,2BAC/C,cAGGlE,GAA8B,GAAI,GAAI,CAAClkB,KAAKooB,2BAC/C,cAkGGpoB,KAAK2nB,oBAAoB,GAAA3nB,KAAI,QAAmBmZ,UACnD,cAGGnZ,KAAKknB,UAAU,GAAAlnB,KAAI,QAAYyW,OAAO,IArb1B,GAAAkG,KAAO,UACP,GAAAhH,KAAO,uBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,U,o4BCcxB,MAAMgN,WAA4BvC,GAiErCpe,YAAYhJ,EAAWqnB,EAA+B,GAAIuC,GAAe,GACrEnQ,MAAMzZ,EAAKqnB,G,aA3Df,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAOI,GAAAtnB,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAoB,GAAE,KAE1B,GAAAA,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAW,GAAE,KACjB,GAAAA,KAAI,GAAgB,GAAE,KACtB,GAAAA,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAgB,KAAI,KAExB,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAkB,KAAI,KAC1B,GAAAA,KAAI,GAAa,KAAI,KACrB,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAyB,KAAI,KACjC,GAAAA,KAAI,GAAoB,KAAI,KAE5B,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAoB,KAAI,KAC5B,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAc,KAAI,KACtB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAA0B,KAAI,KAClC,GAAAA,KAAI,GAAe,KAAI,KAEvB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAA0B,KAAI,KAClC,GAAAA,KAAI,GAAuB,KAAI,KAE/B,GAAAA,KAAI,GAAmB6pB,EAAc,KACrC,GAAA7pB,KAAI,IAAgB,EAAK,KACzB,GAAAA,KAAI,GAAa,IAAG,KACpB,GAAAA,KAAI,GAAa,GAAE,KACnB,GAAAA,KAAI,GAAY,EAAC,KACjB,GAAAA,KAAI,GAAU,EAAG,KACjB,GAAAA,KAAI,GAAe,EAAG,KACtB,GAAAA,KAAI,GAAe,EAAG,KACtB,GAAAA,KAAI,GAAa0O,EAAcob,QAAO,KACtC,GAAA9pB,KAAI,GAAsB,EAAC,KAC3B,GAAAA,KAAI,GAAW,EAAG,KAElB,GAAAA,KAAI,GAAY,GAAG,KACnB,GAAAA,KAAI,GAAY,GAAG,KACnB,GAAAA,KAAI,GAAsB,EAAG,KAE7BA,KAAKymB,wBAAwBzmB,KAAK+pB,cAAcvT,KAAKxW,OACrD,GAAAA,KAAI,WAAgB,KAApBA,MAAqB,GAErB,GAAAA,KAAI,GAAoBiW,GAAcoI,aAAa,GAAAre,KAAI,WAAkBwW,KAAKxW,OAAM,KAG/E8e,eACF,GAAA9e,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,iBACV,GAAA1c,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAuBwW,KAAKxW,MAAO,MAW1Dse,yBACO,GAAAte,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBiW,GAAcoI,aAAa,GAAAre,KAAI,WAAkBwW,KAAKxW,OAAM,KAkFxFgqB,sBAAsBH,GAClB,GAAA7pB,KAAI,GAAmB6pB,EAAc,KACrC7pB,KAAK+pB,gBAGTE,mBAAmBC,GACf,GAAAlqB,KAAI,GAAgBkqB,EAAW,KAC/BlqB,KAAK+pB,gBAGTI,aAAa7e,GACT,GAAAtL,KAAI,WAAc,KAAlBA,KAAmBsL,GAAU,GAmBjC8e,aAAand,GACT,GAAAjN,KAAI,WAAc,KAAlBA,KAAmBiN,GAsBvBod,YAAYC,GACR,GAAAtqB,KAAI,GAAYsqB,EAAO,KACvBtqB,KAAK+pB,gBAGTQ,UAAU/c,GACN,GAAAxN,KAAI,GAAUwN,EAAK,KACnBxN,KAAK+pB,gBAGTS,eAAeC,GACX,GAAAzqB,KAAI,GAAeyqB,EAAU,KAC7BzqB,KAAK+pB,gBAGTW,eAAeC,GACX,GAAA3qB,KAAI,GAAe2qB,EAAU,KAC7B3qB,KAAK+pB,gBAGTa,aAAaC,GACT,GAAA7qB,KAAI,GAAa6qB,EAAQ,KACzB7qB,KAAK+pB,gBAGTe,sBAAsBC,GAClB,GAAA/qB,KAAI,GAAsB+qB,EAAiB,KAC3C/qB,KAAK+pB,gBAGTiB,WAAWC,GACP,GAAAjrB,KAAI,GAAWirB,EAAM,KACrBjrB,KAAK+pB,gBAGTmB,qBACI,OAAO,GAAAlrB,KAAI,QAGfmrB,kBACI,OAAO,GAAAnrB,KAAI,QAGforB,eACI,OAAO,GAAAprB,KAAI,QAGfgV,eACI,OAAO,GAAAhV,KAAI,QAGfqrB,cACI,OAAO,GAAArrB,KAAI,QAGfsrB,YACI,OAAO,GAAAtrB,KAAI,QAGfurB,iBACI,OAAO,GAAAvrB,KAAI,QAGfwrB,iBACI,OAAO,GAAAxrB,KAAI,QAGfyrB,eACI,OAAO,GAAAzrB,KAAI,QAGf0rB,wBACI,OAAO,GAAA1rB,KAAI,QAGf2rB,aACI,OAAO,GAAA3rB,KAAI,QAGf+pB,gBAEI,GAAA/pB,KAAI,WAAoB,KAAxBA,MAGA,GAAAA,KAAI,WAAiB,KAArBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MAGA,GAAAA,KAAI,GAAiBuc,WAAW,GAAAvc,KAAI,WAAiBwW,KAAKxW,MAAM,GAAO,GAAAA,KAAI,SAAkB,KAiHjG4rB,sBACI,IAAIC,EAAgC,GACpC,MAAMlI,EAAM,GAAA3jB,KAAI,QAChB,IAAIoM,EAAa6J,GAAc6K,aAAa/L,mBAAmB4O,GAE/D,GAAGvX,GAAe,GAAApM,KAAI,SAAa,GAAO,GAAAA,KAAI,SAAa,EAAI,CAC3D,MAAM8rB,EAAiB,EAAI,GAAA9rB,KAAI,QACzB+rB,EAAiB5gB,KAAKE,IAAIe,EAAW4C,UAAU8c,EAErD,IAAI,MAAME,KAAQhsB,KAAKisB,kBAAmB,CACtC,MAAMC,EAAKF,EAAKzb,MAAMzF,SAChBqhB,EAAKH,EAAKhG,IAAIlb,OAAOohB,EAAGlhB,MAExBohB,EAAgBF,EAAGjhB,cAAckhB,GACjCE,EAAaH,EAAGxe,SAASye,GACzBG,EAAQnhB,KAAKohB,KAAKH,EAAgBL,GAExC,IAAIS,EAASN,EACb,IAAI,IAAIvsB,EAAI,EAAGA,EAAE2sB,EAAO3sB,IAAK,CACzB,IAAIyO,EAAQoe,EAAOxe,0BACnBI,EAAM9C,SAAWqY,EACjBkI,EAAOrsB,KAAK4O,GACZoe,EAASA,EAAOjf,+BAA+B8e,EAAYN,KAKvE,OAAOF,EAGX1M,kBACI,IAAInc,EAAQ,KACRoJ,EAAa6J,GAAc6K,aAAa/L,mBAAmB,GAAA/U,KAAI,SAEnE,GAAGoM,GAAe,GAAApM,KAAI,SAAa,GAAO,GAAAA,KAAI,SAAa,EAAI,CAC3D,IAAIysB,EAAc,EAElB,MAAMX,EAAiB,EAAI,GAAA9rB,KAAI,QACzB+rB,EAAiB5gB,KAAKE,IAAIe,EAAW4C,UAAU8c,EAErD,IAAI,MAAME,KAAQhsB,KAAKisB,kBAAmB,CACtC,MAAMC,EAAKF,EAAKzb,MAAMzF,SAChBqhB,EAAKH,EAAKhG,IAAIlb,OAAOohB,EAAGlhB,MAExBohB,EAAgBF,EAAGjhB,cAAckhB,GACvCM,GAAethB,KAAKohB,KAAKH,EAAgBL,GAG7C/oB,EAAQypB,EAGZ,OAAOzpB,EAgEFiY,YACLrW,OAAOgX,WAAWC,eAAc,EAAM,GAAGkB,GAAWmB,uBAAuB0L,GAAoBhN,YAG1FzB,iBACL,GAAAnb,KAAI,WAAiB,KAArBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MAEA0Z,MAAMyB,iBAGDW,aACL,OAAO8N,GAAoB7N,WAGtBC,kBACL,MAAMsL,EAAUtnB,KAAKooB,wBACrB,OAAO,GAAApoB,KAAI,QAAYM,OAAS,GAAAN,KAAI,QAAesnB,EAAQhnB,OAAS,CAACgnB,EAAQ,IAAM,GAGvF2E,kBACI,MAAMxhB,EAASzK,KAAKgc,kBACpB,IAAI0Q,EAAkC,GAClCnc,EAA6B,KAEjC,IAAI,IAAI5Q,EAAI,EAAGA,EAAI8K,EAAOnK,OAAQX,IAAK,CACnC,MAAMsO,EAAIxD,EAAO9K,IACZ4Q,GAAStC,EAAEvB,KAAOiC,EAAcge,OAAWpc,GAAStC,EAAEvB,KAAOiC,EAAcie,aAE5Erc,EAAQtC,GACDsC,GAAWtC,EAAEvB,KAAOiC,EAAcke,YAAgB5e,EAAEvB,KAAOiC,EAAcme,MAGhFJ,EAAMltB,KAAK,CACP+Q,MAAOA,EACPyV,IAAK/X,IAGTsC,EAAQ,MAOhB,OAHGA,GACC2J,QAAQuE,KAAK,4CAEViO,EAGFzQ,UACL,IAAI,GAAAjc,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAKua,SAAS,UAAS,KAEnC,IAAIgF,EAAI7a,SAASW,cAAc,OAC/Bka,EAAEzW,UAAY,0BAGd,MAAMikB,EAAM,yDACZ,GAAA/sB,KAAI,GAAqBA,KAAKsY,qBAAoB,KAClD,GAAAtY,KAAI,QAAmBmY,MAAQ4U,EAC/BxN,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAoB+sB,IACzExN,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMgtB,EAAO,wEACb,GAAAhtB,KAAI,GAAkBA,KAAKsY,qBAAoB,KAC/C,GAAAtY,KAAI,QAAgBmY,MAAQ6U,EAC5BzN,EAAEpa,YAAYnF,KAAK8X,kBAAkB,kBAAmB,GAAA9X,KAAI,QAAiBgtB,IAC7EzN,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMitB,EAAO,0EACb,GAAAjtB,KAAI,GAAaA,KAAKsY,qBAAoB,KAC1C,GAAAtY,KAAI,QAAWmY,MAAQ8U,EACvB,MAAMC,EAAUxoB,SAASW,cAAc,QACvC6nB,EAAQ/nB,YAAYT,SAAS0B,eAAe,aAC5C,MAAM+mB,EAAWzoB,SAASW,cAAc,OACxC8nB,EAAShoB,YAAYT,SAAS0B,eAAe,MAC7C8mB,EAAQ/nB,YAAYgoB,GACpBD,EAAQ/nB,YAAYT,SAAS0B,eAAe,OAC5CmZ,EAAEpa,YAAYnF,KAAK8X,kBAAkBoV,EAAS,GAAAltB,KAAI,QAAYitB,IAC9D1N,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMotB,EAAM,uEACZ,GAAAptB,KAAI,GAAuBA,KAAKsY,qBAAoB,KACpD,GAAAtY,KAAI,QAAqBmY,MAAQiV,EACjC7N,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAsBotB,IAC7E7N,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMqtB,EAAM,8CACZ,GAAArtB,KAAI,GAAyBA,KAAKsY,qBAAoB,KACtD,GAAAtY,KAAI,QAAuBmY,MAAQkV,EACnC9N,EAAEpa,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAwBqtB,IAC9E9N,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMstB,EAAM,8FACZ,GAAAttB,KAAI,GAAoBA,KAAKsY,qBAAoB,KACjD,GAAAtY,KAAI,QAAkBmY,MAAQmV,EAC9B/N,EAAEpa,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAAmBstB,IACvE/N,EAAEpa,YAAY,GAAAnF,KAAI,SAGlB,MAAM0f,EAAK,+DACX,GAAA1f,KAAI,GAAqBA,KAAKkZ,2BAA2BlZ,KAAKsmB,kBAAmB,GAAAtmB,KAAI,WAA+BwW,KAAKxW,OAAM,KAC/H,GAAAA,KAAI,QAAmBmY,MAAQuH,EAC/BH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,gBAAiB,GAAA9X,KAAI,QAAoB0f,IAC9EH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM6mB,EAAM,8FACZ,GAAA7mB,KAAI,GAAuBA,KAAKkZ,2BAA2B,GAAAlZ,KAAI,QAAkB,GAAAA,KAAI,WAAiCwW,KAAKxW,OAAM,KACjI,GAAAA,KAAI,QAAqBmY,MAAQ0O,EACjCtH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAsB0f,IAC7EH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM8mB,EAAM,6EACZ,GAAA9mB,KAAI,GAAoBA,KAAKkZ,2BAA2B,GAAAlZ,KAAI,QAAe,GAAAA,KAAI,WAA8BwW,KAAKxW,OAAM,KACxH,GAAAA,KAAI,QAAkBmY,MAAQ2O,EAC9BvH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,eAAgB,GAAA9X,KAAI,QAAmB0f,IAC5EH,EAAEpa,YAAY,GAAAnF,KAAI,SAMlB,MAAMutB,EAAM,sEACZ,IAAIC,EAAaxtB,KAAKsY,qBACtBkV,EAAWrV,MAAQoV,EACnB,IAAIE,EAAmBztB,KAAK8X,kBAAkB,kBAAmB0V,EAAYD,GAC7EE,EAAiB5jB,UAAUC,IAAI,oCAC/ByV,EAAEpa,YAAYsoB,GACdlO,EAAEpa,YAAYqoB,GAEd,MAAM1N,EAAM,8DACZ,GAAA9f,KAAI,GAAuBA,KAAK4Y,yBAAyB3C,GAAcM,qBAAqB3N,KAAMhE,OAAO4X,sBAAsBhG,KAAK,KAAM/D,EAAwBsN,UAAS,KAC3K,GAAA/f,KAAI,QAAqBmY,MAAQ2H,EACjCP,EAAEpa,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAAsB8f,IAC1EP,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMggB,EAAM,2EACZ,GAAAhgB,KAAI,GAA0BA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAsB4pB,GAAoB3J,WAAY,GAAAjgB,KAAI,WAAoCwW,KAAKxW,MAAO,EAAG,KAAM,IAAI,KACvL,GAAAA,KAAI,QAAwBmY,MAAQ6H,EACpCT,EAAEpa,YAAYnF,KAAK8X,kBAAkB,OAAQ,GAAA9X,KAAI,QAAyBggB,IAC1ET,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM0tB,EAAM,uDACZ,GAAA1tB,KAAI,GAAgBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAY4pB,GAAoB+D,YAAa,GAAA3tB,KAAI,WAA0BwW,KAAKxW,MAAO,EAAG,KAAI,KACpJ,GAAAA,KAAI,QAAcmY,MAAQuV,EAC1BnO,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAe0tB,IACpEnO,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM4tB,EAAM,yDACZ,GAAA5tB,KAAI,GAAgBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAY4pB,GAAoB+D,YAAa,GAAA3tB,KAAI,WAA0BwW,KAAKxW,MAAO,EAAG,KAAI,KACpJ,GAAAA,KAAI,QAAcmY,MAAQyV,EAC1BrO,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAe4tB,IACpErO,EAAEpa,YAAY,GAAAnF,KAAI,SAKlB,MAAM6tB,EAAM,uEACZ,IAAIC,EAAa9tB,KAAKsY,qBACtBwV,EAAW3V,MAAQ0V,EACnB,IAAIE,EAAmB/tB,KAAK8X,kBAAkB,eAAgBgW,EAAYD,GAC1EE,EAAiBlkB,UAAUC,IAAI,oCAC/ByV,EAAEpa,YAAY4oB,GACdxO,EAAEpa,YAAY2oB,GAGd,MAAMnO,EAAK,6EACX,GAAA3f,KAAI,GAAiBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAa4pB,GAAoB7V,gBAAiB,GAAA/T,KAAI,WAA2BwW,KAAKxW,OAAM,KACnJ,GAAAA,KAAI,QAAemY,MAAQwH,EAC3BJ,EAAEpa,YAAYnF,KAAK8X,kBAAkB,iBAAkB,GAAA9X,KAAI,QAAgB2f,IAC3EJ,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM4f,EAAK,uEACX,GAAA5f,KAAI,GAAiBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAY,GAAAA,KAAI,WAA2BwW,KAAKxW,MAAO,IAAI,KAClH,GAAAA,KAAI,QAAemY,MAAQyH,EAC3BL,EAAEpa,YAAYnF,KAAK8X,kBAAkB,eAAgB,GAAA9X,KAAI,QAAgB4f,IACzEL,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM6f,EAAK,6FACX,GAAA7f,KAAI,GAAiBA,KAAKoZ,yBACtB,CACI1K,EAAcob,QACdpb,EAAcsf,SACdtf,EAAcuf,WACdvf,EAAcwf,aAChBjuB,KAAIuM,GAAKA,EAAEzM,aACb,CACI,WACA,YACA,cACA,gBAEJ,GAAAC,KAAI,WAA2BwW,KAAKxW,MACpC,GAAAA,KAAI,QAAWD,YAAW,KAC9B,GAAAC,KAAI,QAAemY,MAAQ0H,EAC3BN,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAgB6f,IACnEN,EAAEpa,YAAY,GAAAnF,KAAI,SAKlB,MAAMmuB,EAAK,2DACX,GAAAnuB,KAAI,GAAcA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAS,GAAAA,KAAI,WAAwBwW,KAAKxW,OAAQ,IAAK,KAAI,KAC/G,GAAAA,KAAI,QAAYmY,MAAQgW,EACxB5O,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAamuB,IAChE5O,EAAEpa,YAAY,GAAAnF,KAAI,SAGlB,GAAAA,KAAI,GAAqBA,KAAKiZ,wBAAwB,GAAAjZ,KAAI,QAAS,GAAAA,KAAI,WAA+BwW,KAAKxW,OAAQ,IAAK,IAAK,GAAE,KAC/H,GAAAA,KAAI,QAAmBmY,MAAQgW,EAC/B5O,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAoBmuB,GAAI,IAC3E5O,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMouB,EAAK,2HACX,GAAApuB,KAAI,GAAeA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,WAAyBwW,KAAKxW,MAAO,GAAE,KAC1G,GAAAA,KAAI,QAAamY,MAAQiW,EACzB7O,EAAEpa,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAcouB,IACnE7O,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMquB,EAAK,gJACX,GAAAruB,KAAI,GAAmBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAc,GAAAA,KAAI,WAA6BwW,KAAKxW,OAAM,KACnH,GAAAA,KAAI,QAAiBmY,MAAQkW,EAC7B9O,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkBquB,IACzE9O,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMsuB,EAAK,iJACX,GAAAtuB,KAAI,GAAmBA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAc,GAAAA,KAAI,WAA6BwW,KAAKxW,OAAM,KACnH,GAAAA,KAAI,QAAiBmY,MAAQmW,EAC7B/O,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAkBsuB,IACzE/O,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMuuB,EAAM,kEACZ,GAAAvuB,KAAI,GAA0BA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAqB,GAAAA,KAAI,WAAoCwW,KAAKxW,MAAO,GAAE,KAC3I,GAAAA,KAAI,QAAwBmY,MAAQoW,EACpChP,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAyBuuB,IAChFhP,EAAEpa,YAAY,GAAAnF,KAAI,SAGlB,GAAAA,KAAI,WAAwC,KAA5CA,MACA,GAAAA,KAAI,WAAsB,KAA1BA,MAEA,GAAAA,KAAI,QAAMkgB,OAAOX,GAGrB,OAAO,GAAAvf,KAAI,QAGfwuB,cACI,OAAO,GAAAxuB,KAAI,QAGfyuB,cACI,OAAO,GAAAzuB,KAAI,QAGf6U,wBACI,OAAO,GAAA7U,KAAI,QAGf0uB,YAAYC,GACR,GAAA3uB,KAAI,WAAa,KAAjBA,KAAkB2uB,GAStBC,YAAYC,GACR,GAAA7uB,KAAI,GAAY6uB,EAAO,KACvB,GAAA7uB,KAAI,WAAsB,KAA1BA,MAGJmgB,sBAAsBlL,GAClB,GAAAjV,KAAI,WAAuB,KAA3BA,KAA4BiV,GA4DhCrH,0BAAmCuF,GAK/B,OAHKA,EAAOuC,MAAQkU,GAAoBjU,MACnCxC,EAAOyC,SAAWgU,GAAoB/T,QAK/CjI,iBAAiByF,EAA2BpT,GAExC,IAAI2pB,GAAoBtW,mBAAmBD,GACvC,MAAM,IAAInO,MAAM,6DAEpB,MAAMoiB,EAAUjU,EAAEiU,QAAQrnB,KAAIuM,GAAK0B,EAAqBkS,UAAU5T,KAClE,IAAIzC,EAAI,IAAI6f,GAAoB3pB,EAAKqnB,GAiBrC,OAfAvd,EAAEogB,aAAazZ,OAAO6C,MAAMF,EAAE/H,UAAY,EAAM+H,EAAE/H,UAClDvB,EAAEqgB,aAAa1Z,OAAO6C,MAAMF,EAAEpG,UAAY,EAAMoG,EAAEpG,UAClDlD,EAAEsgB,YAAY3Z,OAAO6C,MAAMF,EAAEiX,SAAW,EAAMjX,EAAEiX,SAChDvgB,EAAEwgB,UAAU7Z,OAAO6C,MAAMF,EAAE7F,OAAS,EAAM6F,EAAE7F,OAC5CzD,EAAEygB,eAAe9Z,OAAO6C,MAAMF,EAAEoX,YAAc,EAAMpX,EAAEoX,YACtD1gB,EAAE2gB,eAAeha,OAAO6C,MAAMF,EAAEsX,YAAc,EAAMtX,EAAEsX,YACtD5gB,EAAE6gB,aAAala,OAAO6C,MAAMF,EAAEwX,UAAY,EAAMxX,EAAEwX,UAClD9gB,EAAE+gB,sBAAsBpa,OAAO6C,MAAMF,EAAE0X,mBAAqB,EAAM1X,EAAE0X,mBACpEhhB,EAAEihB,WAAWta,OAAO6C,MAAMF,EAAE4X,QAAU,EAAM5X,EAAE4X,QAC9ClhB,EAAE6kB,YAAYle,OAAO6C,MAAMF,EAAEwb,SAAW,EAAMxb,EAAEwb,SAChD,GAAA9kB,EAAC,WAAa,KAAdA,EAAe2G,OAAO6C,MAAMF,EAAEsb,SAAW,EAAMtb,EAAEsb,SAAS,GAC1D,GAAA5kB,EAAC,WAAuB,KAAxBA,EAAyB2G,OAAO6C,MAAMF,EAAE4B,mBAAqB,EAAM5B,EAAE4B,mBAAmB,GAExF,GAAAlL,EAAC,WAAwC,KAAzCA,GAEOA,EAGFyJ,UAEL,MAAgC,CAC5BoC,QAASgU,GAAoB/T,QAC7BH,KAAMkU,GAAoBjU,KAC1B2R,QAAStnB,KAAKooB,wBAAwBnoB,KAAIuM,GAAKA,EAAEgH,YACjDlI,SAAUtL,KAAKorB,eACfne,SAAUjN,KAAKgV,eACfsV,QAAStqB,KAAKqrB,cACd7d,MAAOxN,KAAKsrB,YACZb,WAAYzqB,KAAKurB,iBACjBZ,WAAY3qB,KAAKwrB,iBACjBX,SAAU7qB,KAAKyrB,eACfV,kBAAmB/qB,KAAK0rB,wBACxBT,OAAQjrB,KAAK2rB,aACbkD,QAAS7uB,KAAKyuB,cACdE,QAAS3uB,KAAKwuB,cACdvZ,kBAAmBjV,KAAK6U,wBACxBsS,MAAOnnB,KAAKinB,c,+sBAj1Bb,GAAAjnB,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,cAWM,GAAA9J,KAAI,WAAwC,KAA5CA,OACCA,KAAK+pB,iBACZ,YAEa3b,EAA4BxF,EAAc,mBACpD,GAAG,GAAA5I,KAAI,QAAkB,CACrB,IAAIga,EAAI,SAAS,CAAC5L,EAAMC,SAAUD,EAAME,WAAY,CAEhDqQ,SAAS,IASb3E,EAAE+E,UAAU1V,EAAyBT,EAAM,GAAIoR,IAK/Cha,KAAK+Z,kBAAkBC,GACvB,GAAAha,KAAI,QAAYR,KAAKwa,GAGzB,GAAAha,KAAI,QAAYR,KAAK4O,IACxB,YAEkBA,GACf,GAAApO,KAAI,WAAmB,KAAvBA,MAEA,MAAMoM,EAAa6J,GAAc6K,aAAa/L,mBAAmB3G,EAAM9C,UACvE,GAAGc,EAAY,CACX,MAAM0iB,EAAK1gB,EAAMtD,SACXikB,EAAS3iB,EAAW2C,QAAQ,EAC5BigB,EAAS5iB,EAAW4C,SAAS,EAC7BigB,EAAM,IAAI1iB,EAAOuiB,EAAGtiB,EAAIuiB,EAAQD,EAAGriB,EAAIuiB,EAAQF,EAAG9jB,MAClDkkB,EAAM,IAAI3iB,EAAOuiB,EAAGtiB,EAAIuiB,EAAQD,EAAGriB,EAAIuiB,EAAQF,EAAG9jB,MAClDmkB,EAAMF,EAAIjhB,0BACVohB,EAAMF,EAAIlhB,0BAChB,GAAAhO,KAAI,GAAgB,IAAI,YAAY,CAAC,CAACmvB,EAAI9gB,SAAU8gB,EAAI7gB,WAAY,CAAC8gB,EAAI/gB,SAAU+gB,EAAI9gB,YACnF,CACI+X,MAAO,UACPgJ,UAAW,YACb,KACNrvB,KAAK+Z,kBAAkB,GAAA/Z,KAAI,WAElC,YAEUoO,EAA4BxF,EAAc,gBACjD,GAAG,GAAA5I,KAAI,QAAe,CAClB,IAAIga,EAAI,SAAS,CAAC5L,EAAMC,SAAUD,EAAME,WAAY,CAEhDqQ,SAAS,EACTxV,KAAMN,EAAsB,yBAShCmR,EAAE+E,UAAU1V,EAAyBT,EAAM,GAAIoR,IAG/CA,EAAE4E,GAAG,YAAa,GAAA5e,KAAI,WAAoBwW,KAAKxW,KAAMoO,IACrD4L,EAAE4E,GAAG,aAAc,GAAA5e,KAAI,WAAoBwW,KAAKxW,OAEhDA,KAAK+Z,kBAAkBC,GACvB,GAAAha,KAAI,QAAcR,KAAKwa,GAG3B,GAAAha,KAAI,QAASR,KAAK4O,IACrB,YAgBa9C,EAAiBqV,GAAqB,GAGhD,GAFA,GAAA3gB,KAAI,GAAasL,EAAQ,KAEtBqV,EAAc,CACb,IAAIE,EAAa5K,GAAc6K,aAAajM,sBAAsB,GAAA7U,KAAI,SACnE6gB,IACI,GAAA7gB,KAAI,UACH,GAAAA,KAAI,QAAwByW,OAASoK,EAAa+I,GAAoB3J,YAAYlgB,YAEtF,GAAAC,KAAI,WAAuB,KAA3BA,KAA4B6gB,GAAY,IAIhD7gB,KAAK+pB,iBACR,YAMa9c,EAAiB0T,GAAqB,GAGhD,GAFA,GAAA3gB,KAAI,GAAaiN,EAAQ,KAEtB0T,EAAc,CACb,IAAIvU,EAAa6J,GAAc6K,aAAa/L,mBAAmB,GAAA/U,KAAI,SACnE,GAAGoM,GAAea,GAAY,EAAI,CAC9B,MAAMqiB,EAAiBriB,EAASb,EAAW2C,QACrC4f,EAAUxjB,KAAK4N,IAAI5N,KAAKiJ,IAAI,EAAIkb,EAAgB,GAAM,GAEzD,GAAAtvB,KAAI,UACH,GAAAA,KAAI,QAAcyW,OAASkY,EAAU/E,GAAoB+D,aAAa5tB,YAE1E,GAAAC,KAAI,WAAa,KAAjBA,KAAkB2uB,GAAS,IAInC3uB,KAAK+pB,iBACR,cA+FM,GAAA/pB,KAAI,UACHuvB,aAAa,GAAAvvB,KAAI,SACjB,GAAAA,KAAI,GAAiB,KAAI,OAEhC,YAEewvB,GAAyB,GACrC,GAAAxvB,KAAI,WAAiB,KAArBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MAEA,MAAMsnB,EAAUtnB,KAAKooB,wBACfvE,EAAayD,EAAQhnB,QAAU,EAEjCgnB,EX5HL,SACH9D,EACAlY,EACA2B,EACAqd,EACA9c,EACAid,EACAE,EACAE,EAEAE,EACAE,GAUA,GANIX,EAAU,IAAkB,GAAXA,IACjBA,EAAU,IAEVrd,EA/Ba,KAgCbA,EAhCa,IAkCK,GAAlBuW,EAAQljB,OACR,MAAO,GAIc,GAArByqB,IACAA,GAAqB,IAGzB,MAAM0E,EAA4B1E,EAAoB9d,EAEhDyiB,EAAWlM,EAAQ,GAAG1Y,SAASE,KAErC,IAAI2kB,EAAgBnM,EAAQvjB,KAAIuM,GAAKA,EAAE1B,OAAO4kB,KAMzCC,EAAc,GAAGhjB,OAAOgjB,EAAcA,EAAcrvB,OAAS,KAC9DqvB,EAAcnwB,KAAKmwB,EAAc,IAGrC,IAAIjG,EAzPR,SAAuBkG,GACnB,GAAqB,GAAjBA,EAAOtvB,OACP,OAAO,IAAIsO,EAEf,IAAIihB,EAAOC,EAAOC,EAAOC,EAAQ,EAEjCH,EAAQE,EAAQH,EAAO,GAAGpjB,EAC1BsjB,EAAQE,EAAQJ,EAAO,GAAGnjB,EAE1B,IAAI,MAAMmE,KAAOgf,EACbC,EAAQ1kB,KAAKiJ,IAAIyb,EAAOjf,EAAIpE,GAC5BujB,EAAQ5kB,KAAK4N,IAAIgX,EAAOnf,EAAIpE,GAE5BsjB,EAAQ3kB,KAAKiJ,IAAI0b,EAAOlf,EAAInE,GAC5BujB,EAAQ7kB,KAAK4N,IAAIiX,EAAOpf,EAAInE,GAGhC,OAAO,IAAImC,EAAKihB,EAAOG,EAAOD,EAAQF,EAAOC,EAAQE,GAwO1CC,CAAcN,GAKrBO,EAAYxG,EAAKra,gBAGjB8gB,EAAiB,GAEjBC,EAAQ,EAGR5jB,EAAIkd,EAAKva,WACT1C,EAAIid,EAAKta,YAcTihB,EAbU,IAAI9jB,EAAOC,EAAEC,EAAEijB,GAaV3iB,iCAAiCS,EAAQ,GAAI0iB,EAAY,EAAIjjB,GAAUF,iCAAiCS,EAAQ,IAAK0iB,EAAY,EAAIjjB,GAsBxJ,IAJAT,EAAI6jB,EAAK7jB,EACTC,EAAI4jB,EAAK5jB,EAGF2jB,GAAUF,EAAuB,EAAXjjB,GAAgBA,GAC7C,CAEI,IAAIqjB,EAAU,IAAI/jB,EAAOC,EAAGC,EAAGijB,GAC3Ba,EAAQD,EAAQvjB,iCAAiCS,EAAO0iB,EAAuB,EAAXjjB,GAKpEwE,EAAO,IAAIjD,EAAQ8hB,EAASC,EAAOD,EAAQxjB,QAI/CqjB,EAAK3wB,KAAKiS,GAKV,IAAI+e,EAASF,EAAQvjB,iCAAiCS,EAAQ,GAAIP,GAClET,EAAIgkB,EAAOhkB,EACXC,EAAI+jB,EAAO/jB,EACX2jB,IAMJ,IAAItsB,EAAmB,GAEnB2sB,EAAUN,EAAK7vB,OAGnB,IAAK,IAAI4R,EAAI,EAAGA,EAAIue,EAASve,IAAK,CAC9B,IAAIwe,EAAmBhgB,OAAOC,UAC1BggB,EAAoBjgB,OAAOkgB,UAE3BC,EAAgB,IAAItkB,EACpBukB,EAAiB,IAAIvkB,EAGrBwkB,EAAmB,GAEnBC,EAAU,EACd,IAAK,IAAIvjB,EAAI,EAAGA,EAAIkiB,EAAcrvB,OAAQmN,IAAK,CAI3C,IAAIwjB,EAAaxhB,EAHFkgB,EAAcliB,EAAE,GAChBkiB,EAAcliB,GAEyB0iB,EAAKje,GAAGvH,GAAIwlB,EAAKje,GAAGtH,IACpEqmB,EAAWtkB,OAAO,IAAIJ,KACxBykB,IACAD,EAAQvxB,KAAKyxB,GACTP,EAAmBP,EAAKje,GAAGvH,GAAGM,cAAcgmB,KAE5CJ,EAAcpkB,EAAIwkB,EAAWxkB,EAC7BokB,EAAcrkB,EAAIykB,EAAWzkB,EAC7BqkB,EAAc7lB,KAAOimB,EAAWjmB,KAChC0lB,EAAmBP,EAAKje,GAAGvH,GAAGM,cAAcgmB,IAE5CN,EAAoBR,EAAKje,GAAGvH,GAAGM,cAAcgmB,KAE7CH,EAAerkB,EAAIwkB,EAAWxkB,EAC9BqkB,EAAetkB,EAAIykB,EAAWzkB,EAC9BskB,EAAe9lB,KAAOimB,EAAWjmB,KACjC2lB,EAAoBR,EAAKje,GAAGvH,GAAGM,cAAcgmB,KAIzD,GAAe,GAAXD,EAEKhhB,EAAemgB,EAAKje,GAAGvH,GAAIglB,IAAmB3f,EAAemgB,EAAKje,GAAGtH,GAAI+kB,IAC1E7rB,EAAOtE,KAAK2wB,EAAKje,SAEpB,GAAe,GAAX8e,QAIJ,GAAe,GAAXA,EACT,CACI,IAAIvf,EAAO0e,EAAKje,GAChBT,EAAK9G,GAAKkmB,EACVpf,EAAK7G,GAAKkmB,EACVX,EAAKje,GAAKT,MAGd,CACI,IAAIA,EAAO0e,EAAKje,GAGhB,IAFApO,EAAOtE,KAAKiS,GAELsf,EAAQzwB,OAAS,GACxB,CACIuwB,EAAgBvgB,EAAiBugB,EAAeE,GAChD,MAAMpmB,EAAKkmB,EACXvhB,EAAuByhB,EAASF,GAEhCA,EAAgBvgB,EAAiBugB,EAAeE,GAChD,MAAMnmB,EAAKimB,EACXvhB,EAAuByhB,EAASF,GAEhC,IAAIK,EAAU,IAAI1iB,EACd7D,EACAC,EACA6G,EAAKhD,SAAS3B,QAGlBqjB,EAAK3wB,KAAK0xB,KAatB,IAAI,MAAMzf,KAAQ3N,EACdwL,EAAuB6gB,EAAM1e,GAEjC,GAAmB,GAAf0e,EAAK7vB,OACL,MAAO,GAIX,IAAI6wB,EAAuB,KAE3B,OAAQtG,GAEJ,QAIA,KAAKnc,EAAcuf,WACfkD,EAAgB,IAAI5kB,EAAOmd,EAAK7a,KAAM6a,EAAKxa,OAAQwgB,GACnD,MACJ,KAAKhhB,EAAcwf,YACfiD,EAAgB,IAAI5kB,EAAOmd,EAAKza,MAAOya,EAAKxa,OAAQwgB,GACpD,MACJ,KAAKhhB,EAAcob,QACfqH,EAAgB,IAAI5kB,EAAOmd,EAAK7a,KAAM6a,EAAK5a,IAAK4gB,GAChD,MACJ,KAAKhhB,EAAcsf,SACfmD,EAAgB,IAAI5kB,EAAOmd,EAAKza,MAAOya,EAAK5a,IAAK4gB,GASzDyB,EAAgB7gB,EAAiB6gB,EAAexB,GAGhD,IAAIyB,EAAUtgB,EAAgBqgB,EAAehB,EAAM,EAAwD3iB,GAEvG6jB,EAAW,IAAI9kB,EAKf8kB,EAFAD,EAAQzmB,GAAGM,cAAckmB,GAAiBC,EAAQxmB,GAAGK,cAAckmB,GAExDC,EAAQzmB,GAIRymB,EAAQxmB,GAGvB,IAAI0mB,EAAe,GACnB,KAAOnB,EAAK7vB,OAAS,GAEjB,GAAI8wB,EAAQzmB,GAAGM,cAAcomB,GAAYD,EAAQxmB,GAAGK,cAAcomB,GAAW,CACzE,IAAIE,EAAYH,EAAQzmB,GAAGoC,iCAAiCS,GAAQyd,GAgBpE,GAfAsG,EAAU7kB,IAAMiC,EAAcge,MAE9B2E,EAAI9xB,KAAK+xB,GAELtG,EAAS,IACLrgB,EAAK2mB,EAAUzkB,QAChBJ,IAAMiC,EAAcie,aAEvB0E,EAAI9xB,KAAKoL,IACFqgB,EAAS,IAChBmG,EAAQzmB,GAAG+B,IAAMiC,EAAcie,aAE/B0E,EAAI9xB,KAAK4xB,EAAQzmB,KAGjB2f,EAAU,EACV,IAAK,IAAI3gB,EAAK2gB,EAAY8G,EAAQ3iB,SAASxD,cAAcmmB,EAAQzmB,IAAO2f,EACpE3gB,EAAKynB,EAAQzmB,GAAGM,cAAcmmB,EAAQxmB,IACtCjB,GAAK2gB,EAAS,CAEd,IAAIkH,EAAU,IAAIjlB,EAAO6kB,EAAQzmB,GAAG6B,EAAG4kB,EAAQzmB,GAAG8B,EAAGijB,EAAU/gB,EAAc8iB,QAE7EH,EAAI9xB,KAAKgyB,GAIjB,IAAIE,EAAUN,EAAQxmB,GAAGmC,iCAAiCS,EAAOid,EAAY9b,EAAcme,KAoB3F,GAlBIrC,EAAa,IACT7f,EAAK8mB,EAAQ5kB,QACdJ,IAAMiC,EAAcke,WAEvByE,EAAI9xB,KAAKoL,IACF6f,EAAa,IACpB2G,EAAQxmB,GAAG8B,IAAMiC,EAAcke,WAE/ByE,EAAI9xB,KAAK4xB,EAAQxmB,KAKrB0mB,EAAI9xB,KAAKkyB,GAETL,EAAWD,EAAQxmB,GAEnB0E,EAAuB6gB,EAAMiB,GACV,GAAfjB,EAAK7vB,OACL,MAEJ8wB,EAAUtgB,EAAgB4gB,EAASvB,EAAMV,EAA2BjiB,OACjE,CACH,IAAI+jB,EAAYH,EAAQxmB,GAAGmC,iCAAiCS,EAAOyd,GAM/D,IAAIrgB,EAUR,GAfA2mB,EAAU7kB,IAAMiC,EAAcge,MAE9B2E,EAAI9xB,KAAK+xB,GAELtG,EAAS,IACLrgB,EAAK2mB,EAAUzkB,QAChBJ,IAAMiC,EAAcie,aAEvB0E,EAAI9xB,KAAKoL,IACHqgB,EAAS,IACfmG,EAAQxmB,GAAG8B,IAAMiC,EAAcie,aAE/B0E,EAAI9xB,KAAK4xB,EAAQxmB,KAGjB0f,EAAU,EACV,IAAK,IAAI3gB,EAAMynB,EAAQ3iB,SAASxD,cAAcmmB,EAAQxmB,IAAO0f,EACzD3gB,EAAKynB,EAAQzmB,GAAGM,cAAcmmB,EAAQxmB,IACtCjB,GAAK2gB,EAAS,CAGd,IAAIpY,EAAIkf,EAAQxmB,GAAGmC,iCAAiCS,GAAQ7D,GAG5D,IAAIgoB,EAAU,IAAIplB,EAAO2F,EAAE1F,EAAG0F,EAAEzF,EAAGijB,EAAU/gB,EAAc8iB,QAE3DH,EAAI9xB,KAAKmyB,GAIjB,IAAID,EAAUN,EAAQzmB,GAAGoC,iCAAiCS,GAAQmd,EAAYhc,EAAcme,KAqB5F,GAlBInC,EAAa,EAGb2G,EAAI9xB,KAAKkyB,EAAQ5kB,KAAK6B,EAAcke,aAC7BlC,EAAa,GAGpB2G,EAAI9xB,KAAK4xB,EAAQzmB,GAAGmC,KAAK6B,EAAcke,aAK3CyE,EAAI9xB,KAAKkyB,GAETL,EAAWD,EAAQzmB,GAGnB2E,EAAuB6gB,EAAMiB,GACV,GAAfjB,EAAK7vB,OACL,MACJ8wB,EAAUtgB,EAAgB4gB,EAASvB,EAAMV,EAA2BjiB,GAI5E,MAAM+V,EAASrV,EAAqB0jB,UAAUN,GAG9C,IAAI,IAAIrjB,KAAKsV,EACTtV,EAAE3C,SAAWA,EAEjB,OAAOiY,EWjQCsO,CACI7xB,KAAKooB,wBACL,GAAApoB,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,SAGZ,IAAI,IAAIL,EAAI,EAAGA,EAAIkkB,EAAUvjB,OAAQX,IACjC,GAAAK,KAAI,WAAc,KAAlBA,KAAmB6jB,EAAUlkB,GAAI,qBAAqBA,MAE1D,GAAAK,KAAI,WAAsB,KAA1BA,MAEGwvB,GACCxvB,KAAK8Z,uBACZ,cAGG,IAAI,MAAME,KAAK,GAAAha,KAAI,QACfA,KAAKoa,uBAAuBJ,GAEhC,GAAAha,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAc,GAAE,MACvB,cAGG,IAAI,MAAMga,KAAK,GAAAha,KAAI,QACfA,KAAKoa,uBAAuBJ,GAGhC,GAAAha,KAAI,GAAgB,GAAE,KACtB,GAAAA,KAAI,GAAW,GAAE,MACpB,cAGM,GAAAA,KAAI,SACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAEpC,GAAAA,KAAI,GAAgB,KAAI,MAC3B,cAGG,GAAAA,KAAI,WAAmB,KAAvBA,MACA,GAAAA,KAAI,WAAmB,KAAvBA,MACA,MAAMyK,EAASzK,KAAKgc,kBAKpB,GAHG,GAAAhc,KAAI,UACH,GAAAA,KAAI,QAAmByW,MAAQzW,KAAKmoB,cAAc7nB,OAAOuT,QAAQ,IAElE,GAAA7T,KAAI,QAAiB,CACpB,MAAMypB,EAAYzpB,KAAK6oB,gBACvB,GAAA7oB,KAAI,QAAgByW,MAAQgT,EAAY,EAAIA,EAAU5V,QAAQ,GAAK,MAGvE,GAAG,GAAA7T,KAAI,QAAY,CACf,MAAM0pB,EAAO1pB,KAAK+oB,WAClB,GAAA/oB,KAAI,QAAWyW,MAAQiT,EAAO,EAAIA,EAAK7V,QAAQ,GAAK,MAOxD,GAJG,GAAA7T,KAAI,UACH,GAAAA,KAAI,QAAqByW,MAAQhM,EAAOnK,OAAOuT,QAAQ,IAGxD,GAAA7T,KAAI,QAAwB,CAE3B,MACMyL,EADWjB,EAA4BC,GACjBwL,GAAcoB,kBAAkBtB,GAAoBM,eAChF,GAAArW,KAAI,QAAuByW,MAAQjL,EAA0BC,GAGjE,IAAIghB,EAAc,EAElB,GAAG,GAAAzsB,KAAI,QAAe,CAClB,MAAM6rB,EAAS7rB,KAAK4rB,sBACpB,IAAI,IAAIjsB,EAAI,EAAGA,EAAIksB,EAAOvrB,OAAQX,IAC9B,GAAAK,KAAI,WAAW,KAAfA,KAAgB6rB,EAAOlsB,GAAI,kBAAkBA,MAEjD8sB,EAAcZ,EAAOvrB,YAGrBmsB,EAAczsB,KAAKmf,kBAGpB,GAAAnf,KAAI,UACH,GAAAA,KAAI,QAAkByW,MAAQgW,EAAc,EAAIA,EAAY1sB,WAAa,QAEhF,cAyDGC,KAAK2nB,oBAAoB,GAAA3nB,KAAI,QAAmBmZ,UACnD,cAGGnZ,KAAKgqB,sBAAsB,GAAAhqB,KAAI,QAAqBmZ,UACvD,cAGGnZ,KAAKiqB,mBAAmB,GAAAjqB,KAAI,QAAkBmZ,UACjD,cAGGnZ,KAAKmqB,aAAa,GAAAnqB,KAAI,QAAe+gB,cAAgB6I,GAAoB7V,kBAC5E,cAGG/T,KAAKoqB,aAAa,GAAApqB,KAAI,QAAe+gB,gBAKxC,cAGG,MAAM+Q,EAAM,GAAA9xB,KAAI,QAAY+gB,cAC5B,GAAA/gB,KAAI,QAAmByW,MAAQqb,EAAI/xB,WACnCC,KAAKuqB,UAAU,GAAAvqB,KAAI,QAAY+gB,gBAClC,cAGG,MAAM+Q,EAAM,GAAA9xB,KAAI,QAAmB+gB,cACnC,GAAA/gB,KAAI,QAAYyW,MAAQqb,EAAI/xB,WAC5BC,KAAKuqB,UAAUuH,IAClB,cAGG9xB,KAAKwqB,eAAe,GAAAxqB,KAAI,QAAiB+gB,gBAC5C,cAGG/gB,KAAK0qB,eAAe,GAAA1qB,KAAI,QAAiB+gB,gBAC5C,cAGG,MAAMgR,EAAIrhB,OAAOshB,SAAS,GAAAhyB,KAAI,QAAeyW,OAE7C,IADewb,OAAOva,OAAOhJ,GACjB2N,SAAS0V,GACjB,MAAM,IAAI7sB,MAAM,mBAAmB6sB,gCAEvC/xB,KAAK4qB,aAAamH,IACrB,cAGG/xB,KAAK8qB,sBAAsB,GAAA9qB,KAAI,QAAwB+gB,gBAC1D,cAGG/gB,KAAKgrB,WAAW,GAAAhrB,KAAI,QAAa+gB,gBACpC,YAyQY4N,EAAgBhO,GAAuB,GAChD,GAAA3gB,KAAI,GAAY2uB,EAAO,KACpBhO,GACC,GAAA3gB,KAAI,WAAwC,KAA5CA,OACP,YAWsBiV,EAA0B0L,GAAuB,GACpE,GAAA3gB,KAAI,GAAsBiV,EAAiB,KAExC0L,GACC,GAAA3gB,KAAI,WAAwC,KAA5CA,OACP,cAGGA,KAAK0uB,YAAY,GAAA1uB,KAAI,QAAc+gB,cAAgB6I,GAAoB+D,cAC1E,cAGG3tB,KAAK4uB,YAAY,GAAA5uB,KAAI,QAAc+gB,cAAgB6I,GAAoB+D,cAC1E,cAGG,GAAA3tB,KAAI,WAAuB,KAA3BA,KAA4B,GAAAA,KAAI,QAAwB+gB,cAAgB6I,GAAoB3J,aAC/F,cAGG,IAAIiS,GAAmB,EACvB,MAAMC,EAASlc,GAAc6K,aAE1B,GAAA9gB,KAAI,UACH,GAAAA,KAAI,QAAqBqgB,UAAY,GACrC,GAAArgB,KAAI,QAAqBmF,YAAYT,SAAS0B,eAAe+rB,EAAOvpB,QAGxE,IAAI0C,EAAW6mB,EAAOnd,aAAahV,KAAK6U,yBAErCvJ,GAAYA,GAAYtL,KAAKorB,iBAC5B8G,GAAmB,EAEhB,GAAAlyB,KAAI,UACH,GAAAA,KAAI,QAAeyW,OAASnL,EAAWse,GAAoB7V,iBAAiBhU,YAChF,GAAAC,KAAI,WAAc,KAAlBA,KAAmBsL,GAAU,IAGjC,IAAIc,EAAa+lB,EAAOpd,mBAAmB,GAAA/U,KAAI,SAE/C,GAAGoM,GAAe,GAAApM,KAAI,SAAa,GAAO,GAAAA,KAAI,SAAa,EAAI,CAC3D,MAAMsvB,EAAiB,EAAI,GAAAtvB,KAAI,QACzBiN,EAAWb,EAAW2C,QAAQugB,EAEjCriB,GAAYjN,KAAKgV,iBAChBkd,GAAmB,EAEhB,GAAAlyB,KAAI,UACP,GAAAA,KAAI,QAAeyW,MAAQtL,KAAK4N,IAAIrI,OAAO+S,WAAW,GAAAzjB,KAAI,QAAeoU,KAAMnH,GAAUlN,YAEzF,GAAAC,KAAI,WAAc,KAAlBA,KAAmBiN,GAAU,IAIrC,OAAOilB,GAj6BK,GAAAvV,KAAO,SACP,GAAAhH,KAAO,sBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,SACX,GAAAb,YAAa,EAyDtB,GAAAkE,WAAa,IACb,GAAA0N,YAAc,I,stBCpFlB,MAAMyE,WAA2B3Y,GAgBpCxQ,YAAYhJ,EAAWmO,EAA2B,KAAMmZ,EAAwB,MAC5E7N,MAAMzZ,G,aAXV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAKI,GAAAD,KAAI,GAAW,KAAI,KACnB,GAAAA,KAAI,GAAU,KAAI,KAClB,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAc,KAAI,KACtB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAyB,KAAI,KAEjCA,KAAKwnB,YAAYD,GAEdnZ,GACCpO,KAAKoe,UAAUhQ,GAGvBikB,YACI,OAAO,GAAAryB,KAAI,QAGfwnB,YAAYD,GACR,GAAAvnB,KAAI,GAAYunB,EAAO,KAG3BhJ,wBAAwBC,GACjB,GAAAxe,KAAI,SAAYwe,EACfxe,KAAKmb,iBAELjB,QAAQuE,KAAK,yCAwBrBL,UAAUhQ,GACF,GAAApO,KAAI,UACJ,GAAAA,KAAI,GAAW,SAASoO,EAAMwE,aAAa,CACvC8L,WAAW,EACXC,SAAS,EACTxV,KAAMN,EAAsB,oBAAqBuF,EAAM1B,OACzD,KAEF,GAAA1M,KAAI,QAAS4e,GAAG,OAAQ,GAAA5e,KAAI,WAA6BwW,KAAKxW,OAC9D,GAAAA,KAAI,QAAS4e,GAAG,WAAY,GAAA5e,KAAI,WAAwBwW,KAAKxW,OAE7DA,KAAK+Z,kBAAkB,GAAA/Z,KAAI,UAG/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyBoO,GAG7B0Q,eACO,GAAA9e,KAAI,UACH4E,OAAO4X,sBAAsB/J,EAAwBgK,MACrD,GAAAzc,KAAI,QAAM0c,iBACV,GAAA1c,KAAI,QAAM6J,UAAU/F,OAAO,oCAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,6BACxByS,WAAW,GAAAvc,KAAI,WAAuBwW,KAAKxW,MAAO,MAgEjDib,YACLrW,OAAOgX,WAAWC,eAAc,EAAM,GAAGkB,GAAWmB,uBAAuBkU,GAAmBxV,YAGzFzB,iBACF,GAAAnb,KAAI,SACHA,KAAKoa,uBAAuB,GAAApa,KAAI,SAEpC0Z,MAAMyB,iBAQDc,UACL,IAAI,GAAAjc,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAKua,SAAS,SAAQ,KAElC,IAAIgF,EAAI7a,SAASW,cAAc,OAC/Bka,EAAEzW,UAAY,0BAEd,MAAMskB,EAAM,2CACZ,GAAAptB,KAAI,GAAyBA,KAAK4Y,yBAAyB,WAAY,GAAA5Y,KAAI,WAAsBwW,KAAKxW,OAAM,KAC5G,GAAAA,KAAI,QAAuBmY,MAAQiV,EACnC7N,EAAEpa,YAAYnF,KAAK8X,kBAAkB,cAAe,GAAA9X,KAAI,QAAwBotB,IAChF7N,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM2f,EAAK,6CACX,GAAA3f,KAAI,GAAcA,KAAK6Y,0BAA2B,GAAA7Y,KAAI,QAAU,GAAAA,KAAI,QAAQ0M,IAAM,GAAK,GAAA1M,KAAI,WAAsBwW,KAAKxW,OAAM,KAC5H,GAAAA,KAAI,QAAYmY,MAAQwH,EACxBJ,EAAEpa,YAAYnF,KAAK8X,kBAAkB,SAAU,GAAA9X,KAAI,QAAa2f,IAChEJ,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMwf,EAAK,qDACX,GAAAxf,KAAI,GAAYA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQqO,SAAW,EAAK,GAAArO,KAAI,WAA2BwW,KAAKxW,OAAQ,GAAI,GAAI,MAAO,KACnJ,GAAAA,KAAI,QAAUmY,MAAQqH,EACtBD,EAAEpa,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAWwf,IACjED,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAMyf,EAAK,sDACX,GAAAzf,KAAI,GAAYA,KAAK8Y,yBAAyB,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQsO,UAAY,EAAK,GAAAtO,KAAI,WAA4BwW,KAAKxW,OAAQ,IAAK,IAAK,MAAO,KACvJ,GAAAA,KAAI,QAAUmY,MAAQsH,EACtBF,EAAEpa,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAWyf,IAClEF,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,MAAM0f,EAAK,4EACX,GAAA1f,KAAI,GAAYA,KAAK8Y,0BAA0B,GAAA9Y,KAAI,QAAU,GAAAA,KAAI,QAAQsL,SAAW,GAAOmO,GAAkB1F,gBAAiB,GAAA/T,KAAI,WAA2BwW,KAAKxW,OAAM,KACxK,GAAAA,KAAI,QAAUmY,MAAQuH,EACtBH,EAAEpa,YAAYnF,KAAK8X,kBAAkB,iBAAkB,GAAA9X,KAAI,QAAW0f,IACtEH,EAAEpa,YAAY,GAAAnF,KAAI,SAElB,GAAAA,KAAI,QAAMkgB,OAAOX,GAGrB,OAAO,GAAAvf,KAAI,QAWf4N,0BAAmCuF,GAK/B,OAHKA,EAAOuC,MAAQ0c,GAAmBzc,MAClCxC,EAAOyC,SAAWwc,GAAmBvc,QAK9CjI,iBAA0ByF,EAA0BpT,GAEhD,IAAImyB,GAAmB9e,mBAAmBD,GACtC,MAAM,IAAInO,MAAM,4DAEpB,MAAMkJ,EAAQF,EAAqBkS,UAAU/M,EAAEjF,OAC/C,OAAO,IAAIgkB,GAAmBnyB,EAAKmO,GAG9BoF,UAEL,MAA+B,CAC3BoC,QAASwc,GAAmBvc,QAC5BH,KAAM0c,GAAmBzc,KACzBvH,MAAO,GAAApO,KAAI,QAAQwT,Y,kKApMJ8M,GACnBtgB,KAAKue,wBAAwB+B,EAAM9b,SACtC,YAE2B8b,GACxB,IAAIlS,EAAQF,EAAqBqS,aAAaD,EAAM9b,OAAOgc,aACvD,GAAAxgB,KAAI,UACJoO,EAAM9C,SAAW,GAAAtL,KAAI,QAAQsL,UACjC,GAAAtL,KAAI,WAAoB,KAAxBA,KAAyBoO,IAC5B,YAEeoQ,GACZ,MAAMK,EAAa,CACf,IAAI7V,EAAuB,eAAgB3C,EAAYQ,UAAW7G,KAAK8e,aAAatI,KAAKxW,OACzF,KACA,IAAIgJ,EAAuB,SAAU3C,EAAYc,OAAQnH,KAAKue,wBAAwB/H,KAAKxW,QAE/Fwe,EAAQO,UAAU1V,EAAyB,GAAArJ,KAAI,SAAW,GAAAA,KAAI,QAAQ0M,IAAM,GAAA1M,KAAI,QAAQ0M,IAAM,QAASmS,EAAYL,KACtH,cA8BM,GAAAxe,KAAI,UACH,GAAAA,KAAI,QAAM6J,UAAU/F,OAAO,6BAC3B,GAAA9D,KAAI,QAAM6J,UAAUC,IAAI,sCAE/B,YAEmBsE,EAA4BqS,GAAwB,EAAMC,GAAmB,GAC7F,GAAA1gB,KAAI,GAAUoO,EAAK,KAEhBqS,GAAiB,GAAAzgB,KAAI,UACpB,GAAAA,KAAI,QAAS4gB,UAAUxS,EAAMwE,cAC7B,GAAA5S,KAAI,WAAgB,KAApBA,KAAqB,GAAAA,KAAI,UAG1B0gB,IACCxG,QAAQoY,IAAIlkB,EAAM1B,KACf,GAAA1M,KAAI,UACH,GAAAA,KAAI,QAAUyW,MAAQrI,EAAMC,SAAStO,YAEtC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUyW,MAAQrI,EAAME,UAAUvO,aAG9CC,KAAK8Z,uBACR,cAGM,GAAA9Z,KAAI,UACH,GAAAA,KAAI,QAAQqO,SAAW,GAAArO,KAAI,QAAU+gB,eAEzC,GAAA/gB,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQ0M,IAAM,GAAA1M,KAAI,QAAYyW,MAE/B,GAAAzW,KAAI,SACH,GAAAA,KAAI,QAASuyB,QAAQ1pB,EAAsB,oBAAqB,GAAA7I,KAAI,QAAQ0M,OAGpF,GAAA1M,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQsO,UAAY,GAAAtO,KAAI,QAAU+gB,eAE1C,GAAA/gB,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQsL,SAAW,GAAAtL,KAAI,QAAU+gB,cAAgBtH,GAAkB1F,iBAE3E,GAAA/T,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cA+DM,GAAAA,KAAI,QACH,GAAAA,KAAI,QAAUwyB,4BAA4BxyB,MAE1Cka,QAAQuE,KAAK,mDA3NL,GAAA9B,KAAO,QACP,GAAAhH,KAAO,qBACP,GAAAE,QAAU,uCACV,GAAA+G,SAAW,Q,6/BCgCxB,MAAM6V,GAiBTxpB,YAAYypB,EAA0BzyB,EAAgB,M,aAbtD,oBAEA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBAEA,oBAII,GAAAD,KAAI,GAAQC,EAAG,KAEf,GAAAD,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAsB0yB,EAAiB,KAE3C,GAAA1yB,KAAI,GAAkB,GAAE,KACxB,GAAAA,KAAI,GAAwB,IAAIuR,IAAK,KACrC,GAAAvR,KAAI,GAAqB,EAAC,KAC1B,GAAAA,KAAI,GAA0B,EAAG,KACjC,GAAAA,KAAI,IAAqB,EAAK,KAWlC2yB,oBACI,OAAO,GAAA3yB,KAAI,QAGf4yB,sBACI,IAAIC,EAAoC,GACxC,IAAI,MAAM3yB,KAAQ,GAAAF,KAAI,QAClB6yB,EAAarzB,KAAKU,EAAKsT,WAE3B,OAAOqf,EAGXjlB,0BAA0BuF,GAKtB,OAHKA,EAAOuC,MAAQ+c,GAAc9c,MAC7BxC,EAAOyC,SAAW6c,GAAc5c,QAKzCid,sBAAsBzf,GAClB,IAAIof,GAAcnf,mBAAmBD,GACjC,MAAM,IAAInO,MAAM,6DAEjBmO,EAAE0f,UACD9c,GAAc+c,KAAK3f,EAAE0f,UAEtB1f,EAAE4f,eAAiB5f,EAAE4f,cAAc3yB,OAClC,GAAAN,KAAI,WAAgC,KAApCA,KAAqCqT,EAAE4f,eACjC5f,EAAEwQ,WAAaxQ,EAAEwQ,UAAUvjB,SACjC4Z,QAAQuE,KAAK,wDACb,GAAAze,KAAI,WAAiC,KAArCA,KAAsCqT,EAAEwQ,YAG5C7jB,KAAKkzB,qBA+EHC,oB,0CACF,IAAI9f,EAA6B,CAC7BuC,QAAS6c,GAAc5c,QACvBH,KAAM+c,GAAc9c,KACpBod,SAAU9c,GAAcmd,UACxBH,cAAejzB,KAAK4yB,sBACpB/O,UAAW7jB,KAAKqzB,wBAAwBpzB,KAAIuM,GAAKA,EAAEgH,aAGvD,MAAMwQ,EAAO,IAAIC,KACb,CAACjiB,KAAKC,UAAUoR,EAAG,KAAM,IACzB,CACIqC,KAAM,qBAIR2L,EAAWL,GAAa,cACxBI,GAAcC,EAAU2C,MAG5BsP,kBAAkBtP,G,0CACpB,MAAM3Q,EAA8BrR,KAAKuxB,YAAYvP,EAAK9a,QAC1DlJ,KAAK8yB,sBAAsBzf,MAGzB6f,mBAAmBM,GAAsB,EAAMC,EAAgB,GAAGC,EAAe,GAAGC,EAAiB,GAAGC,EAAkB,I,0CAC5H,OAAO,IAAIC,SAAQC,IAEf,GAAG,GAAA9zB,KAAI,QAAO,CACV,IAAIga,EAAI,GAAAha,KAAI,QAAM+zB,kBAClB,GAAG/Z,EAAG,CACF,IAAIga,EAAqB,GACzB,IAAI,MAAM9zB,KAAQ,GAAAF,KAAI,QAClBg0B,EAASx0B,QAAQU,EAAKob,gBAE1B,GAAG0Y,EAAS1zB,OAAQ,CAChB,IAAI2zB,EAAK,eAAeD,GACxB,MAAME,EAAWla,EAAE9Y,QAAQizB,SAC3Bna,EAAE9Y,QAAQizB,SAAW,EACrB,IAAI1c,EAAM2c,IAENpa,EAAE9Y,QAAQizB,SAAWD,EACrBla,EAAEqa,IAAI,UAAW5c,GACjBqc,GAAQ,IAIZ9Z,EAAE4E,GAAG,UAAWnH,GAChBuC,EAAEyB,UAAUwY,EAAGvY,YAAa,CACxB4Y,eAAgB,CAACb,EAAUC,GAC3Ba,mBAAoB,CAACZ,EAAWC,GAChCY,QAAShB,SAUbM,GAAQ,GAGZlvB,OAAOgX,WAAWC,eAAc,QAEhCiY,GAAQ,QAGZA,GAAQ,SAKpBW,qBACI,IAAIpS,EAAiC,GACjCC,EAAiC,CAACtiB,KAAKqzB,yBACvC9Q,EAAoC,GACxC,IAAI,MAAM5iB,KAAK,GAAAK,KAAI,QACXL,aAAayyB,GACb/P,EAAQ7iB,KAAKG,EAAE0yB,aACR1yB,aAAaomB,GACpBzD,EAAM9iB,KAAKG,EAAEgnB,uBACNhnB,aAAa0nB,IAA0B1nB,aAAaiqB,KAC3DrH,EAAS/iB,KAAKG,EAAEyoB,yBAIxBxE,GAA8BvB,EAASC,EAAOC,GAGlDmS,QAAQz0B,GACJ,GAAAD,KAAI,GAAQC,EAAG,KAanB00B,kBAAkBld,G,QACd,MAAM/X,GAAK,GAAAM,KAAA,SAAAA,KAAA,cAAwB,WAGnC,OAFA,GAAAA,KAAI,QAAsB0R,IAAIhS,EAAI+X,GAE3B,GAAAzX,KAAI,WAA2BwW,KAAKxW,KAAMN,GAuCrDk1B,yBACI,OAAO,GAAA50B,KAAI,QAuBf60B,iBAAiB30B,EAAwB+D,GAAe,GACpD,GAAAjE,KAAI,WAAkB,KAAtBA,KAAuBE,EAAM+D,GAGjC6wB,kBAAkBC,EAA2B9wB,GAAe,GACxD,IAAIjB,EAAQ,EACZ,IAAI,MAAM9C,KAAQ60B,EAAO,CACrB,MAAMC,GAAoB,GAAV/wB,GACX,EACDA,EAAQjB,EACZ,GAAAhD,KAAI,WAAkB,KAAtBA,KAAuBE,EAAM80B,GAAS,GACtChyB,IAGD+xB,EAAMz0B,QACL,GAAAN,KAAI,WAA6B,KAAjCA,MAGRi1B,oBAAoB/0B,GAEhB,IAAI+D,EAAQ,GAAAjE,KAAI,QAAgBwP,QAAQtP,GACrC+D,GAAS,EACR,GAAAjE,KAAI,QAAgByD,OAAOQ,EAAO,GAElCiW,QAAQuE,KAAK,wCAGb,GAAAze,KAAI,UACJA,KAAK4D,SACL,GAAA5D,KAAI,WAAuB,KAA3BA,OAIRk1B,gBAEI,IADA,GAAAl1B,KAAI,IAAqB,EAAI,KACvB,GAAAA,KAAI,QAAgBM,OAAS,GAC/B,GAAAN,KAAI,QAAgB,GAAGmb,iBAC3B,GAAAnb,KAAI,IAAqB,EAAK,KAG9BA,KAAK4D,SACL,GAAA5D,KAAI,WAAuB,KAA3BA,MAGJ4D,SACI,MAAMuxB,EAAe,GAAAn1B,KAAI,QAAgBC,KAAIuM,GAAKA,EAAEyP,YAC9CmZ,EAAcD,EAAal1B,KAAIuM,GAAKA,EAAE9M,KAEtC21B,EAAevjB,MAAMC,KAAK,GAAA/R,KAAI,QAAes1B,UAAUhjB,QAAO9F,IAAM4oB,EAAY/Y,SAAS7P,EAAE9M,MAEjG,IAAI,MAAM61B,KAAMF,EACZE,EAAGzxB,SAMP,IAAI,IAAIuP,EAAI,EAAGA,EAAI8hB,EAAa70B,OAAQ+S,IAAK,CACzC,MAAM1T,EAAIw1B,EAAa9hB,GACjBmiB,EAASniB,EAAE,EAAI8hB,EAAa70B,OAAS,KAAO60B,EAAa9hB,EAAE,GAEjE,IAAIoiB,EAAQ3jB,MAAMC,KAAK,GAAA/R,KAAI,QAAes1B,UAC1C,MAAMI,EAAQD,EAAMjmB,QAAQ7P,GACtBg2B,EAASF,EAAMjmB,QAAQgmB,GAG1BE,GAASriB,IAGLmiB,GAAUG,GAAU,EAInB,GAAA31B,KAAI,QAAe41B,aAAaj2B,EAAG61B,IAGnC,GAAAx1B,KAAI,QAAemF,YAAYxF,GAC/BA,EAAE+c,kBAGHgZ,EAAQ,IACP/1B,EAAEkK,UAAU/F,OAAO,oCACnBnE,EAAEkK,UAAUC,IAAI,6BAChByS,WAAW,GAAAvc,KAAI,WAAmCwW,KAAKxW,KAAML,GAAI,QAyCjF6yB,4BAA4BqD,GACxB,MAAM5S,EAAM,GAAAjjB,KAAI,QAAgBwP,QAAQqmB,GACxC,GAAG5S,GAAO,EAAG,CACT,MAAM6S,EAAW,IAAI3X,GAAsB,GAAAne,KAAI,QAAM+zB,kBAAmB8B,EAASxD,aACjFwD,EAAS1a,iBACTnb,KAAK60B,iBAAiBiB,EAAU7S,QAEhC/I,QAAQuE,KAAK,2CAIrBkL,4BAA4BkM,GACxB,MAAM5S,EAAM,GAAAjjB,KAAI,QAAgBwP,QAAQqmB,GACxC,GAAG5S,GAAO,EAAG,CACT,MAAM8S,EAAS,IAAInM,GAAoB,GAAA5pB,KAAI,QAAM+zB,kBAAmB8B,EAASzN,yBAC7EyN,EAAS1a,iBACTnb,KAAK60B,iBAAiBkB,EAAQ9S,QAE9B/I,QAAQuE,KAAK,2CAIrBuX,kCAAkCC,GAC9B,IAAI,MAAMjS,KAAQiS,EACdj2B,KAAKk2B,yBAAyBlS,GAItCkS,yBAAyBlS,ILvetB,SAA6BA,EAAgBmS,G,mCAChD,IAAIxzB,EAAS,KACTyzB,EApBD,SAAuBpS,GAC1B,GAAGA,EAAKtO,KACJ,OAAOsO,EAAKtO,KAGhB,GAAGsO,aAAgBqS,KAAM,CACrB,MAAMC,EAAQtS,EAAKpb,KAAKgV,MAAM,KAG9B,OAFU0Y,EAAMA,EAAMh2B,OAAO,IAGzB,IAAK,MAAO,OAAOqhB,GACnB,IAAK,MAAO,OAAOC,IAG3B,MAAO,GAMM2U,CAAcvS,GAE3B,OADA9J,QAAQoY,IAAI,8BAA8B8D,WACnCA,GACH,KAAKzU,GAAU,CACX,MAAMzY,QAAa8a,EAAK9a,OACxBvG,QAAekf,GAAqB3Y,GACpC,MAEJ,KAAK0Y,GAAU,CACX,MAAM4U,EAAS,IAAI,MAAc,IAAI,MAAexS,IAC9C3R,QAAgBmkB,EAAOC,aAC7B,IAAIC,GAAW,EACXrU,EAAiC,GACjCC,EAAiC,GACjCC,EAAoC,GAExC,IAAI,MAAMvd,KAAKqN,EAAS,CACpB,MAAMnJ,QAAoBlE,EAAEuf,QAAQ,IAAI,OAClCxU,QAAU8R,GAAqB3Y,IAElC6G,EAAEsS,QAAQ/hB,QAAUyP,EAAEuS,MAAMhiB,QAAUyP,EAAEwS,SAASjiB,UAChDo2B,GAAW,EACXrU,EAAQ7iB,QAAQuQ,EAAEsS,SAClBC,EAAM9iB,QAAQuQ,EAAEuS,OAChBC,EAAS/iB,QAAQuQ,EAAEwS,WAIxBmU,IACC/zB,EAAS,CACL0f,QAASA,EACTC,MAAOA,EACPC,SAAUA,IAIlB,MAGJ,QACIrI,QAAQuE,KAAK,uBAAuBuF,KAK5CmS,EAAexzB,MKybXg0B,CAAc3S,EAAM,GAAAhkB,KAAI,WAAawW,KAAKxW,OAG9Cqd,QAEI,GAAArd,KAAI,GAAiB0E,SAASoZ,eAAe,GAAA9d,KAAI,SAAoB,KAGrEA,KAAK4D,SACL,GAAA5D,KAAI,WAAuB,KAA3BA,MAGJqzB,wBACI,IAAI5oB,EAAgC,GAEpC,IAAI,MAAM9K,KAAK,GAAAK,KAAI,QACfyK,EAASA,EAAOpK,OAAOV,EAAEqc,mBAE7B,OAAOvR,G,mJAnaqBwoB,GAC5B,IAAIe,EAA+B,GAEnC,IAAI,MAAM9zB,KAAQ+yB,EAAe,CAC7B,IAAI1X,EAA4B,KAEhC,GAAG9B,GAAkBnG,mBAAmBpT,GACpCqb,EAAU9B,GAAkB2G,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,wBACnD,GAAG3B,GAAmB9e,mBAAmBpT,GAAO,CACnD,IAAI+N,EAAImkB,GAAmBhS,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,mBACrD9lB,EAAEuZ,YAAYxnB,MACdub,EAAUtN,OACP,GAAGkQ,GAAsB7K,mBAAmBpT,GAC/Cqb,EAAU4C,GAAsBiC,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,wBACvD,GAAGhO,GAAkBzS,mBAAmBpT,GAC3Cqb,EAAUwK,GAAkB3F,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,wBACnD,GAAG1M,GAAqB/T,mBAAmBpT,GAAO,CACrD,IAAI+N,EAAIoZ,GAAqBjH,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,mBACvD9lB,EAAEuZ,YAAYxnB,MACdub,EAAUtN,OACJ2b,GAAoBtW,mBAAmBpT,GAC7Cqb,EAAUqO,GAAoBxJ,UAAUlgB,EAAM,GAAAF,KAAI,QAAM+zB,oBAExD7Z,QAAQuE,KAAK,iCACbvE,QAAQuE,KAAKve,IAGdqb,GACCyY,EAASx0B,KAAK+b,GAGtBvb,KAAK80B,kBAAkBd,IAC1B,YAEgCnQ,GAC7B,IAAImQ,EAA+B,GAEnC,IAAI,MAAM9zB,KAAQ2jB,EAAW,CACzB,IAAItI,EAA4B,KAEhC,GAAGrN,EAAqBoF,mBAAmBpT,GAAO,CAC9C,MAAMkO,EAAQF,EAAqBkS,UAAUlgB,GAC7Cqb,EAAU,IAAI4C,GAAsB,GAAAne,KAAI,QAAM+zB,kBAAmB3lB,QAEjE8L,QAAQuE,KAAK,kCACbvE,QAAQuE,KAAKve,GAGdqb,GACCyY,EAASx0B,KAAK+b,GAGtBvb,KAAK80B,kBAAkBd,IAsB1B,cAkGG,MAAMvpB,EAASzK,KAAKqzB,wBACpB,GAAArzB,KAAI,GAA0ByK,EAAOnK,OACjCmK,EAAOA,EAAOnK,OAAS,GAAGgL,SAC1B,EAAG,KAEP,IAAI,MAAMmM,KAAM,GAAAzX,KAAI,QAAsB0X,SACtCD,KACP,YASyBtF,GACnB,GAAAnS,KAAI,QAAsB4R,IAAIO,IAC7B,GAAAnS,KAAI,QAAsBwX,OAAOrF,IAExC,YAEqBjS,GAClB,GAAAF,KAAI,WAAuB,KAA3BA,OACH,YAEWqpB,EAAWC,EAAkBC,GACrC,GAAIA,GAAaF,EAAI/oB,OAEjB,IADA,IAAIS,EAAIwoB,EAAYF,EAAI/oB,OAAS,EAC1BS,KACHsoB,EAAI7pB,UAAKqB,GAIjB,OADAwoB,EAAI5lB,OAAO8lB,EAAW,EAAGF,EAAI5lB,OAAO6lB,EAAW,GAAG,IAC3CD,GACV,YAEkBnpB,EAAwBoc,GACvC,IAAI2G,EAAM,GAAAjjB,KAAI,QAAgBwP,QAAQtP,GACtC,GAAG+iB,GAAO,EAAG,CAET,IAAI+R,EAAU/R,GAAO3G,EAAY,EAAI,GAAK,GAC1C0Y,EAAU7pB,KAAK4N,IAAI5N,KAAKiJ,IAAI4gB,EAAU,GAAAh1B,KAAI,QAAgBM,OAAS,GAAK,GACxE,GAAAN,KAAI,WAAY,KAAhBA,KAAiB,GAAAA,KAAI,QAAiBijB,EAAK+R,GAE3Ch1B,KAAK4D,SACL,GAAA5D,KAAI,WAAuB,KAA3BA,WAEAka,QAAQuE,KAAK,sCAEpB,cAOGze,KAAK4D,SACL,GAAA5D,KAAI,WAAuB,KAA3BA,OACH,YAEiBE,EAAwB+D,GAAe,EAAI2yB,GAAqB,GAC9E12B,EAAKyZ,oBAAoB3Z,KAAKi1B,oBAAoBze,KAAKxW,OACvDE,EAAK0Z,oBAAoB,GAAA5Z,KAAI,WAAuBwW,KAAKxW,OACzDE,EAAK2Z,kBAAkB,GAAA7Z,KAAI,WAAoBwW,KAAKxW,OACjDiE,EAAQ,GAAKA,GAAS,GAAAjE,KAAI,QAAgBM,OACzC,GAAAN,KAAI,QAAgBR,KAAKU,GAEzB,GAAAF,KAAI,QAAgByD,OAAOQ,EAAO,EAAG/D,GAGtC02B,GACC,GAAA52B,KAAI,WAA6B,KAAjCA,OAEP,YA2FiCyJ,GAC9BA,EAAII,UAAU/F,OAAO,6BACrB2F,EAAII,UAAUC,IAAI,qCACrB,YAEWnH,GAGR,IAAIqxB,EAA+B,GAEnC,IAAI,MAAM/lB,KAAKtL,EAAO0f,QAAS,CAE3B,MAAMwU,EAAI,IAAIzE,GAAmB,GAAApyB,KAAI,QAAM+zB,kBAAmB9lB,GAC9D4oB,EAAErP,YAAYxnB,MACdg0B,EAASx0B,KAAKq3B,GAGlB,IAAI,MAAMxT,KAAQ1gB,EAAO2f,MACrB,IAAI,MAAMrU,KAAKoV,EAAM,CAEjB,MAAMwT,EAAI,IAAI1Y,GAAsB,GAAAne,KAAI,QAAM+zB,kBAAmB9lB,GACjE+lB,EAASx0B,KAAKq3B,GAItB,IAAI,MAAM5oB,KAAKtL,EAAO4f,SAAU,CAC5B,MAAMsU,EAAI,IAAIxP,GAAqB,GAAArnB,KAAI,QAAM+zB,kBAAmB9lB,GAChE4oB,EAAErP,YAAYxnB,MACdg0B,EAASx0B,KAAKq3B,GAGlB72B,KAAK80B,kBAAkBd,GACvBh0B,KAAKkzB,sBA3bF,GAAAvd,KAAO,gBACP,GAAAE,QAAU,uC,m4BCwHb,IAAIihB,EAAgC,GACpC,GAAG,GAAA92B,KAAI,QAAO,CACV,MAAMyN,EAAI,GAAAzN,KAAI,QAAM0b,YACd6M,EAAK9a,EAAE+a,eACPC,EAAKhb,EAAEib,eACPC,EAAKJ,EAAGxV,IAAM0V,EAAG1V,IACjB6V,EAAKL,EAAGzV,IAAM2V,EAAG3V,IAEvBgkB,EAAS,CACL,IAAI5oB,EAAqBua,EAAG3V,IAAU8V,EAAK,EAAGH,EAAG1V,IAAU4V,EAAK,GAChE,IAAIza,EAAqBua,EAAG3V,IAAM,EAAI8V,EAAK,EAAGH,EAAG1V,IAAU4V,EAAK,GAChE,IAAIza,EAAqBua,EAAG3V,IAAM,EAAI8V,EAAK,EAAGH,EAAG1V,IAAM,EAAI4V,EAAK,GAChE,IAAIza,EAAqBua,EAAG3V,IAAU8V,EAAK,EAAGH,EAAG1V,IAAM,EAAI4V,EAAK,IAIxE,OAAOmO,G,mqBCzJR,MAAMC,GAST9tB,YAAYse,EAAuByP,GARnC,oBACA,oBACA,oBAOI,GAAAh3B,KAAI,GAAYunB,EAAO,KACvB,GAAAvnB,KAAI,GAAkB,KAAI,KAC1B,GAAAA,KAAI,GAAuBg3B,EAAkB,KAKjD3Z,QACI,GAAArd,KAAI,GAAkB0E,SAASoZ,eAAe,GAAA9d,KAAI,SAAqB,KAK3Ei3B,uBACI,MAAMC,EAAmB,GAAAl3B,KAAI,QAAU2yB,oBACjCwE,EAAWn3B,KAAKo3B,qBAAqBF,GACrCG,EAAUr3B,KAAKs3B,oBAAoBJ,GAEzC,GAAAl3B,KAAI,QAAgBmc,UAAY,GAChC,IAAIhE,EAAQzT,SAASW,cAAc,MACnC8S,EAAMhT,YAAYT,SAAS0B,eAAe,kBAC1C,GAAApG,KAAI,QAAgBmF,YAAYgT,GAGhC,IAAIof,EAAQ7yB,SAASW,cAAc,OAGnC,GAFAkyB,EAAMzuB,UAAY,cAEfquB,EAAS72B,OAAQ,CAChB,IAAImf,EAAK/a,SAASW,cAAc,MAChCoa,EAAG3W,UAAY,oBACf2W,EAAGta,YAAYT,SAAS0B,eAAe,uBACvCmxB,EAAMpyB,YAAYsa,GAElB,MAAM+X,EAAW,CACb,OACA,OACA,cACA,WACA,YACA,gBACA,GACA,IAGJ,IAAI,MAAMC,KAAKD,EAAU,CACrB,IAAIE,EAAKhzB,SAASW,cAAc,OAChCqyB,EAAG5uB,UAAY,qBACf4uB,EAAGvyB,YAAYT,SAAS0B,eAAeqxB,IACvCF,EAAMpyB,YAAYuyB,GAGtB,IAAI10B,EAAQ,EACZ,IAAI,MAAM9C,KAAQi3B,EAAU,CACxBn0B,IAEA,MAAM7C,EAAU,CACZD,EAAKwV,KAAO1S,EAAMjD,WAAa,GAC/BG,EAAKwV,KACLxV,EAAK8X,YACL9X,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGC,OAAS,IACrD13B,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGE,OAAS,IACrD33B,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGG,OAAS,IACrD,GACA,IAGEC,EAAmB,EACzB,IAAI,IAAI1kB,EAAE,EAAGA,EAAElT,EAAQG,OAAQ+S,IAAK,CAChC,IAAI2kB,EAAKtzB,SAASW,cAAc,OAChC2yB,EAAG7yB,YAAYT,SAAS0B,eAAejG,EAAQkT,MACtC,GAALA,GAAYA,GAAK0kB,IACjBC,EAAGnuB,UAAUC,IAAI,2BACjB5J,EAAKwV,MACLsiB,EAAGnuB,UAAUC,IAAI,0BACrBkuB,EAAGnuB,UAAUC,IAAI,qBACjBytB,EAAMpyB,YAAY6yB,GAItB,IAAI,IAAIr4B,EAAI,EAAGA,EAAEO,EAAKy3B,WAAWr3B,OAAQX,IAAK,CAC1C,MAAMQ,EAAU,CACZ,GACA,GACA,GACAD,EAAKy3B,WAAWh4B,GAAGi4B,OACnB13B,EAAKy3B,WAAWh4B,GAAGk4B,OACnB33B,EAAKy3B,WAAWh4B,GAAGm4B,OACnB,GACA,IAGJ,IAAI,MAAML,KAAKt3B,EAAS,CACpB,IAAI63B,EAAKtzB,SAASW,cAAc,OAChC2yB,EAAG7yB,YAAYT,SAAS0B,eAAeqxB,IACvCO,EAAGlvB,UAAY,4CACfyuB,EAAMpyB,YAAY6yB,MAMlC,GAAGX,EAAQY,MAAM33B,OAAQ,CACrB,IAAIof,EAAKhb,SAASW,cAAc,MAChCqa,EAAG5W,UAAY,oBACf4W,EAAGva,YAAYT,SAAS0B,eAAe,gBACvCmxB,EAAMpyB,YAAYua,GAElB,MAAM8X,EAAW,CACb,OACA,OACA,cACA,WACA,YACA,gBACA,UACA,YAKJ,IAAI,MAAMC,KAAKD,EAAU,CACrB,IAAIE,EAAKhzB,SAASW,cAAc,OAChCqyB,EAAG5uB,UAAY,qBACf4uB,EAAGvyB,YAAYT,SAAS0B,eAAeqxB,IACvCF,EAAMpyB,YAAYuyB,GAGtB,IAAI10B,EAAQ,EACZ,IAAI,MAAM9C,KAAQm3B,EAAQY,MAAO,CAC7Bj1B,IAEA,MAAM7C,EAAU,CACZD,EAAKwV,KAAO1S,EAAMjD,WAAa,GAC/BG,EAAKwV,KACLxV,EAAK8X,YACL9X,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGC,OAAS,IACrD13B,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGE,OAAS,IACrD33B,EAAKy3B,WAAWr3B,OAASJ,EAAKy3B,WAAW,GAAGG,OAAS,IACrD53B,EAAKg4B,aACLh4B,EAAKi4B,eAGHJ,EAAmB,EACzB,IAAI,IAAI1kB,EAAE,EAAGA,EAAElT,EAAQG,OAAQ+S,IAAK,CAChC,IAAI2kB,EAAKtzB,SAASW,cAAc,OAChC2yB,EAAG7yB,YAAYT,SAAS0B,eAAejG,EAAQkT,MACtC,GAALA,GAAYA,GAAK0kB,IACjBC,EAAGnuB,UAAUC,IAAI,2BACjB5J,EAAKwV,MACLsiB,EAAGnuB,UAAUC,IAAI,0BACrBkuB,EAAGnuB,UAAUC,IAAI,qBACjBytB,EAAMpyB,YAAY6yB,GAItB,IAAI,IAAIr4B,EAAI,EAAGA,EAAEO,EAAKy3B,WAAWr3B,OAAQX,IAAK,CAC1C,MAAMQ,EAAU,CACZ,GACA,GACA,GACAD,EAAKy3B,WAAWh4B,GAAGi4B,OACnB13B,EAAKy3B,WAAWh4B,GAAGk4B,OACnB33B,EAAKy3B,WAAWh4B,GAAGm4B,OACnB,GACA,IAGJ,IAAI,MAAML,KAAKt3B,EAAS,CACpB,IAAI63B,EAAKtzB,SAASW,cAAc,OAChC2yB,EAAG7yB,YAAYT,SAAS0B,eAAeqxB,IACvCO,EAAGlvB,UAAY,4CACfyuB,EAAMpyB,YAAY6yB,MAQlC,GAFA,GAAAh4B,KAAI,QAAgBmF,YAAYoyB,IAE5BJ,EAAS72B,SAAW+2B,EAAQY,MAAM33B,OAAO,CACzC,IAAI03B,EAAKtzB,SAASW,cAAc,OAChC2yB,EAAG7yB,YAAYT,SAAS0B,eAAe,gCACvC,GAAApG,KAAI,QAAgBmF,YAAY6yB,IAOxCpqB,iCAAiCQ,GAC7B,MAA8B,CAC1BwpB,OAAQxpB,EAAMuF,mBACdkkB,OAAQzpB,EAAM0F,oBACdgkB,OAAQ1pB,EAAMwF,oBAOtBwjB,qBAAqBF,GACjB,IAAIC,EAA8B,GAElC,IAAI,MAAMj3B,KAAQg3B,EAAkB,CAChC,IAAIle,EAAwB,KAE5B,IAAI9Y,EAAK4b,aACL,GAAG5b,aAAgBkyB,GAAoB,CACnC,MAAMhkB,EAAQlO,EAAKmyB,YACnBrZ,EAAO,CACHtD,KAAM0c,GAAmBzV,KACzB3E,YAAc5J,GAASA,EAAM1B,IAAO0B,EAAM1B,IAAM,oBAChDirB,WAAY,CAACvpB,EAAQ2oB,GAAYqB,0BAA0BhqB,GAAS,CAChEwpB,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZK,cAAe,GACfD,aAAc,SAGf,GAAGh4B,aAAgBmnB,GAAsB,CAC5C,MAAMC,EAAUpnB,EAAKkoB,wBACf1b,EAAMxM,EAAK+mB,YACjBjO,EAAO,CACHtD,KAAM2R,GAAqB1K,KAC3B3E,YAAa,GAAc,mBAC3B2f,WAAYrQ,EAAQrnB,KAAIuM,GAAKuqB,GAAYqB,0BAA0B5rB,KACnE2rB,cAAe,GACfD,aAAc,IAKxBlf,GACEme,EAAS33B,KAAKwZ,GAGtB,OAAOme,EAMXG,oBAAoBJ,GAChB,IAAIG,EAAyB,CACzBY,MAAO,GACPvtB,eAAgB,EAChB2tB,eAAgB,EAChBC,aAAc,GAElB,MAAMhM,EAAQ,GAAAtsB,KAAI,QAAUqzB,wBAC5B,IAAIkF,EAAmB,EACnBC,EAAgB,EAChBC,EAAyB,EACzBC,EAAmB,EACnBC,EAAgB,EAEpB,GAAGrM,EAAMhsB,OAAQ,CAEb,MAAMyJ,EAAIkM,GAAcoB,kBAAkBtB,GAAoBM,eACxDuiB,EAAeztB,KAAK4N,IAAIhP,GAAQ,EAAK,IAE3C,IAAI8uB,EAAa,KAEbC,EAAgBxM,EAAM,GACG,GAA1BwM,EAAcxtB,WACbwtB,EAAgB,IAAI5qB,EAAqBoe,EAAM,GAAGje,SAAUie,EAAM,GAAGhe,UAAW,GAEhFoqB,EAAmBluB,EADI,CAACsuB,EAAexM,EAAM,KAE7CiM,EAAmBG,EAAiBE,EACpCC,EAAaC,GAIjB,IAAIC,EAAyB,CACzBrjB,KAAMyI,GAAsBxB,KAC5B3E,YAAa,uBACb2f,WAAY,CAACZ,GAAYqB,0BAA0BU,IACnDX,cAAe,IACfD,aAAc,KAGlBb,EAAQY,MAAMz4B,KAAKu5B,GAEnB,IAAI,MAAM74B,KAAQg3B,EAAkB,CAChC,IAAI7T,EAAOnjB,EAAK8b,kBAEZkc,EAAe,IAChB7U,EAAK/iB,QAAUu4B,IAGdX,EAAe,IAAM1sB,EADIhB,EADF,CAACquB,EAAYxV,EAAK,KAEuBuV,IAGpE,IAAI5f,EAAwB,KAC5B,GAAG9Y,EAAK4b,aACJ,GAAG5b,aAAgBie,GAAuB,CACtC,MAAM6a,EAAO94B,EAAK8e,oBAClByZ,GAA0BO,EAC1B,MAAMC,EAAc/4B,EAAKif,kBACzBnG,EAAO,CACHtD,KAAMyI,GAAsBxB,KAC5B3E,YAAa,mBAAqBihB,EAAc,qBAAuB,IACvEtB,WAAYtU,EAAKpjB,KAAIuM,GAAKuqB,GAAYqB,0BAA0B5rB,KAChE2rB,cAAea,EAAO,EAAI,IAAMxtB,EAA0BwtB,GAAQ,IAClEd,aAAcA,GAElBb,EAAQiB,cAAgBW,OACrB,GAAG/4B,aAAgB0pB,GAAqB,CAC3C,IAAItC,EAAUpnB,EAAKkoB,wBACnB,IAAI,IAAIna,KAAKqZ,EACTrZ,EAAE3C,SAAWpL,EAAKkrB,eAEtB,MACM8N,EAAgB,IAAM1tB,EADNhB,EAA4B6Y,GACkBuV,GACpE5f,EAAO,CACHtD,KAAMkU,GAAoBjN,KAC1B3E,YAAa,0BACb2f,WAAYrQ,EAAQrnB,KAAIuM,GAAKuqB,GAAYqB,0BAA0B5rB,KACnE2rB,cAAee,EACfhB,aAAcA,GAElBb,EAAQiB,cAAgBp4B,EAAKif,kBAIlCkE,EAAK/iB,SACJu4B,EAAaxV,EAAKA,EAAK/iB,OAAS,IAEjC0Y,GACHqe,EAAQY,MAAMz4B,KAAKwZ,GAGvB,IAAImgB,EAAY,IACZC,EAAaP,EACbQ,EAAuC,CACvCzB,OAAQ,IACRC,OAAQ,IACRC,OAAQ,KAETsB,GAAqC,GAAvBA,EAAW9tB,WACxB8tB,EAAa,IAAIlrB,EAAqB2qB,EAAWxqB,SAAUwqB,EAAWvqB,UAAW,GACjF+qB,EAAiBtC,GAAYqB,0BAA0BgB,GAEvDT,EAAgBnuB,EADI,CAACquB,EAAYO,IAEjCZ,EAAgBG,EAAcC,EAC9BO,EAAY,IAAM3tB,EAA0BgtB,IAGhD,IAAIc,EAA0B,CAC1B5jB,KAAMyI,GAAsBxB,KAC5B3E,YAAa,mBACb2f,WAAY,CAAC0B,GACblB,cAAegB,EACfjB,aAAc,KAElBb,EAAQY,MAAMz4B,KAAK85B,GAEnBjC,EAAQ3sB,eAAiBF,EAA4B8hB,GAASoM,EAAmBC,EACjF,MAAMY,EAAyBlC,EAAQ3sB,eAAekuB,EACtDvB,EAAQgB,eAAiBkB,EAAyBhB,EAAmBC,EAAgBC,EAGrF,IAAIe,EAAkC,CAClC9jB,KAAM,GACNsC,YAAa,GACb2f,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,YACdC,cAXe3sB,EAA0B6rB,EAAQgB,iBAarDhB,EAAQY,MAAMz4B,KAAKg6B,GAEnB,IAAIC,EAAuC,CACvC/jB,KAAM,GACNsC,YAAa,GACb2f,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,YACdC,cAAe,IAAId,EAAQ3sB,eAAiB,KAAMmJ,QAAQ,QAE9DwjB,EAAQY,MAAMz4B,KAAKi6B,GAEnB,IAAIC,EAAqC,CACrChkB,KAAM,GACNsC,YAAa,GACb2f,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,UACdC,cAAed,EAAQiB,aAAe,EAAIjB,EAAQiB,aAAav4B,WAAa,KAEhFs3B,EAAQY,MAAMz4B,KAAKk6B,GAGvB,OAAOrC,G,44BCxXP,GAAAr3B,KAAI,GAA0B0E,SAASoZ,eAAe,GAAA9d,KAAI,SAA2B,KACrF,GAAAA,KAAI,QAAwBmc,UAAY,GAExC,MAAMsD,EAAK,gDACX,GAAAzf,KAAI,GAAuBA,KAAKsY,qBAAoB,KACpD,GAAAtY,KAAI,QAAqBmY,MAAQsH,EACjC,GAAAzf,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAsByf,IACvG,GAAAzf,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAM0f,EAAK,kDACX,GAAA1f,KAAI,GAAsBA,KAAKsY,qBAAoB,KACnD,GAAAtY,KAAI,QAAoBmY,MAAQuH,EAChC,GAAA1f,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAqB0f,IACrG,GAAA1f,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAM2f,EAAK,2CACX,GAAA3f,KAAI,GAAsBA,KAAKsY,qBAAoB,KACnD,GAAAtY,KAAI,QAAoBmY,MAAQwH,EAChC,GAAA3f,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAqB2f,IACrG,GAAA3f,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAM4f,EAAK,uDACX,GAAA5f,KAAI,GAAoBA,KAAKsY,qBAAoB,KACjD,GAAAtY,KAAI,QAAkBmY,MAAQyH,EAC9B,GAAA5f,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAAmB4f,IACjG,GAAA5f,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,U,4tBC9F7C,MAAM25B,WAAuB/hB,GAqBhC3O,YAAY2wB,GACRlgB,MAAM,c,aArBV,oBACA,oBAGA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAWI,GAAA1Z,KAAI,GAAyB45B,EAAoB,KAEjD,GAAA55B,KAAI,GAAyB,KAAI,KACjC,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAA2B,KAAI,KACnC,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAkC,KAAI,KAC1C,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAoC,KAAI,KAE5C,GAAAA,KAAI,GAA0B,KAAI,KAElCiW,GAAc4jB,iBAAiB,GAAA75B,KAAI,WAA0BwW,KAAKxW,OAgHtEsW,WAAW6b,EAAmC2H,GAA0B,GACjEA,GACC7jB,GAAcK,WAAW6b,GAAQ,GAAM,GAE3C,GAAAnyB,KAAI,WAAqB,KAAzBA,KAA0BmyB,GAEvB,GAAAnyB,KAAI,UACH,GAAAA,KAAI,QAAiCyW,MAAQtL,KAAK4N,IAAI4gB,GAAeI,yBAA0B5H,EAAO5d,cAAcxU,YACrH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAiCyW,MAAQtL,KAAK4N,IAAI4gB,GAAeK,yBAA0B7H,EAAO3d,cAAczU,YACrH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAkCyW,MAAQtL,KAAK4N,IAAI4gB,GAAeM,0BAA2B9H,EAAO1d,eAAe1U,YACxH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAgCyW,MAAQtL,KAAK4N,IAAI4gB,GAAeO,wBAAyB/H,EAAOzd,aAAa3U,YAClH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAiCyW,MAAQtL,KAAK4N,IAAI4gB,GAAeQ,yBAA0BhI,EAAOxd,cAAc5U,YAkD5Hsd,QACI,GAAArd,KAAI,WAAS,KAAbA,O,mLA9KG,GAAAA,KAAI,SACHiW,GAAcG,kBAAkBL,GAAoBM,cAAe,GAAArW,KAAI,QAAmB+gB,eAAe,GAAM,IACtH,cAGM,GAAA/gB,KAAI,SACHiW,GAAcC,mBAAmBJ,GAAqBK,UAAW,GAAAnW,KAAI,QAAuBmZ,SAAS,GAAM,IAClH,cAGM,GAAAnZ,KAAI,UACH,GAAAA,KAAI,QAAuBmZ,QAAUlD,GAAcqB,mBAAmBxB,GAAqBK,YAE5F,GAAAnW,KAAI,UACH,GAAAA,KAAI,QAAmByW,MAAQR,GAAcoB,kBAAkBtB,GAAoBM,eAAetW,YAEtGC,KAAKsW,WAAWL,GAAc6K,cAAc,IAC/C,cAIG,GAAA9gB,KAAI,GAA0B0E,SAASoZ,eAAe,GAAA9d,KAAI,SAAuB,KACjF,GAAAA,KAAI,QAAwBmc,UAAY,GAExC,MAAM0D,EAAK,gDACX,GAAA7f,KAAI,GAAyBA,KAAKkZ,2BAA2BjD,GAAcqB,mBAAmBxB,GAAqBK,WAAY,GAAAnW,KAAI,WAA0BwW,KAAKxW,OAAM,KACxK,GAAAA,KAAI,QAAuBmY,MAAQ0H,EACnC,GAAA7f,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,aAAc,GAAA9X,KAAI,QAAwB6f,IACzG,GAAA7f,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAMwf,EAAK,mEACX,GAAAxf,KAAI,GAAqBA,KAAK8Y,yBAAyB7C,GAAcoB,kBAAkBtB,GAAoBM,eAAgB,GAAArW,KAAI,WAA0BwW,KAAKxW,MAAO,IAAI,KACzK,GAAAA,KAAI,QAAmBmY,MAAQqH,EAC/B,GAAAxf,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,eAAgB,GAAA9X,KAAI,QAAoBwf,IACvG,GAAAxf,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAMo6B,EAAK,8CACX,IAAIC,EAAYr6B,KAAKsY,qBACrB+hB,EAAUliB,MAAQiiB,EAClB,IAAIE,EAAkBt6B,KAAK8X,kBAAkB,iBAAkBuiB,EAAWD,GAC1EE,EAAgBzwB,UAAUC,IAAI,oCAC9B,GAAA9J,KAAI,QAAwBmF,YAAYm1B,GACxC,GAAAt6B,KAAI,QAAwBmF,YAAYk1B,GAExC,IAAIlI,EAASlc,GAAc6K,aAC3B,MAAMiG,EAAM,kFACNwT,EAAetkB,GAAc0B,eAAe1X,KAAIuM,GAAKA,EAAE5D,OAC7D,GAAA5I,KAAI,GAA2BA,KAAKoZ,yBAAyBmhB,EAAcA,EAAc,GAAAv6B,KAAI,WAAyBwW,KAAKxW,OAAM,KACjI,GAAAA,KAAI,QAAyBmY,MAAQ4O,EACrC,GAAA/mB,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,UAAW,GAAA9X,KAAI,QAA0B+mB,IACxG,GAAA/mB,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,GAAAA,KAAI,WAAqB,KAAzBA,KAA0BmyB,GAE1B,MAAMnL,EAAM,qCACZ,GAAAhnB,KAAI,GAAmCA,KAAK8Y,yBAAyBqZ,EAAO5d,aAAc,GAAAvU,KAAI,WAAsCwW,KAAKxW,MAAO25B,GAAeI,0BAAyB,KACxL,GAAA/5B,KAAI,QAAiCmY,MAAQ6O,EAC7C,GAAAhnB,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAkCgnB,IAClH,GAAAhnB,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAMw6B,EAAM,qCACZ,GAAAx6B,KAAI,GAAmCA,KAAK8Y,yBAAyBqZ,EAAO3d,aAAc,GAAAxU,KAAI,WAAsCwW,KAAKxW,MAAO25B,GAAeK,0BAAyB,KACxL,GAAAh6B,KAAI,QAAiCmY,MAAQqiB,EAC7C,GAAAx6B,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAkCw6B,IACjH,GAAAx6B,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAMy6B,EAAM,sCACZ,GAAAz6B,KAAI,GAAoCA,KAAK8Y,yBAAyBqZ,EAAO1d,cAAe,GAAAzU,KAAI,WAAuCwW,KAAKxW,MAAO25B,GAAeM,2BAA0B,KAC5L,GAAAj6B,KAAI,QAAkCmY,MAAQsiB,EAC9C,GAAAz6B,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAmCy6B,IACnH,GAAAz6B,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAM06B,EAAM,+BACZ,GAAA16B,KAAI,GAAkCA,KAAK8Y,yBAAyBqZ,EAAOzd,YAAa,GAAA1U,KAAI,WAAqCwW,KAAKxW,MAAO25B,GAAeO,yBAAwB,KACpL,GAAAl6B,KAAI,QAAgCmY,MAAQuiB,EAC5C,GAAA16B,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,WAAY,GAAA9X,KAAI,QAAiC06B,IAChH,GAAA16B,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,SAE5C,MAAM26B,EAAM,gCACZ,GAAA36B,KAAI,GAAmCA,KAAK8Y,yBAAyBqZ,EAAOxd,aAAc,GAAA3U,KAAI,WAAsCwW,KAAKxW,MAAO25B,GAAeQ,0BAAyB,KACxL,GAAAn6B,KAAI,QAAiCmY,MAAQwiB,EAC7C,GAAA36B,KAAI,QAAwBmF,YAAYnF,KAAK8X,kBAAkB,YAAa,GAAA9X,KAAI,QAAkC26B,IAClH,GAAA36B,KAAI,QAAwBmF,YAAY,GAAAnF,KAAI,UAC/C,YAEoBmyB,EAAoClc,GAAcM,sBACnE,GAAG,GAAAvW,KAAI,QAA0B,CAC7B,IAAI46B,GAAyB,EAG7B,MAAMC,EAAiB5kB,GAAc0B,eAAerF,QAAO9F,GAAKA,EAAE5D,MAAQupB,EAAOvpB,OAC9EiyB,EAAev6B,SAEds6B,EADqBC,EAAevoB,QAAO9F,GAAKA,EAAEG,OAAOwlB,KAC3B7xB,OAAS,GAK3C,GAAAN,KAAI,QAAyByW,MAAQmkB,EAAiBzI,EAAOvpB,KAAOqN,GAAcM,qBAAqB3N,OAE9G,cA2BG,MAAM6N,EAAQ,GAAAzW,KAAI,QAAyByW,MAErC8jB,EAAetkB,GAAc0B,eAAe1X,KAAIuM,GAAKA,EAAE5D,OAC7D,IAAIupB,EAASlc,GAAcM,qBAAqBzJ,OAEhD,GAAGytB,EAAale,SAAS5F,GAAQ,CAC7B,MAAMsa,EAAU9a,GAAc0B,eAAerF,QAAO9F,GAAKA,EAAE5D,MAAQ6N,IAChEsa,EAAQzwB,OAAS,IAChB6xB,EAASpB,EAAQ,GAAGjkB,QAI5B9M,KAAKsW,WAAW6b,IAEnB,cAGG,IAAIA,EAASlc,GAAc6K,aAC3BqR,EAAO5d,aAAe,GAAAvU,KAAI,QAAiC+gB,cAC3D/gB,KAAKsW,WAAW6b,IACnB,cAGG,IAAIA,EAASlc,GAAc6K,aAC3BqR,EAAO3d,aAAe,GAAAxU,KAAI,QAAiC+gB,cAC3D/gB,KAAKsW,WAAW6b,IACnB,cAGG,IAAIA,EAASlc,GAAc6K,aAC3BqR,EAAO1d,cAAgB,GAAAzU,KAAI,QAAkC+gB,cAC7D/gB,KAAKsW,WAAW6b,IACnB,cAGG,IAAIA,EAASlc,GAAc6K,aAC3BqR,EAAOzd,YAAc,GAAA1U,KAAI,QAAgC+gB,cACzD/gB,KAAKsW,WAAW6b,IACnB,cAGG,IAAIA,EAASlc,GAAc6K,aAC3BqR,EAAOxd,aAAe,GAAA3U,KAAI,QAAiC+gB,cAC3D/gB,KAAKsW,WAAW6b,IApMb,GAAA4H,yBAAkC,EAClC,GAAAC,yBAAkC,EAClC,GAAAC,0BAAmC,EACnC,GAAAC,wBAAiC,EACjC,GAAAC,yBAAkC,E,cCbzC,GAAU,GAEd,GAAQv0B,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,2SCAlDuU,QAAQoY,IAAI,+CAGZrc,GAAc6kB,OAGd,MAIMC,GACKjvB,EAJA,KAGLivB,GAEMjvB,EAJA,OAmCZ,SAASkvB,GAAgB1a,GAIrBA,EAAM2a,iBA/BVr2B,OAAO4X,sBAAyB0e,IAC5B,IAAI3F,EAAuB7wB,SAASoZ,eAAeod,GAChD3F,IACCA,EAAGpc,SAAU,IAIrBvU,OAAOu2B,eAAiB,IAAI1I,GAAc/f,EAAqB+J,MAC/D7X,OAAOgX,WAAa,ILhCb,MAaH3S,YAAYmyB,EAAyBpe,EAA0BuK,G,aAZ/D,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAGI,GAAAvnB,KAAI,GAAYunB,EAAO,KACvB,GAAAvnB,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAe,KAAI,KACvB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAqBo7B,EAAgB,KACzC,GAAAp7B,KAAI,GAAsBgd,EAAiB,KAE3C,GAAAhd,KAAI,QAAU20B,kBAAkB30B,KAAKq7B,YAAY7kB,KAAKxW,OACtDA,KAAKse,yBAGTA,yBACO,GAAAte,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBiW,GAAcoI,aAAare,KAAKq7B,YAAY7kB,KAAKxW,OAAM,KAGnF6b,cAAcyf,EAAcC,EAAkB,I,MACvCD,GACC,GAAAt7B,KAAI,QAAcuE,MAAMid,QAAU,OAClC,GAAAxhB,KAAI,QAAeuE,MAAMid,QAAU,QAEhC+Z,IACkC,QAAjC,EAAA72B,SAASoZ,eAAeyd,UAAS,SAAE7e,oBAEvC,GAAA1c,KAAI,QAAcuE,MAAMid,QAAU,QAClC,GAAAxhB,KAAI,QAAeuE,MAAMid,QAAU,OACnCxhB,KAAKqd,SAIbme,kBACIx7B,KAAK6b,cAAiD,QAAnC,GAAA7b,KAAI,QAAcuE,MAAMid,SAG/CuS,kBACI,OAAO,GAAA/zB,KAAI,QAGfy7B,aAAaC,EAA+BC,EAAK,IAC1C,GAAA37B,KAAI,SACH,GAAAA,KAAI,QAAM47B,QAAQF,EAAS9oB,aAAc+oB,GAIjDE,QAAQC,GACD,GAAA97B,KAAI,SACH,GAAAA,KAAI,QAAMyb,UAAUqgB,EAAcpgB,aAI1CqgB,YAAYxgB,GACL,GAAAvb,KAAI,SACHub,EAAQtB,MAAM,GAAAja,KAAI,SAI1Bg8B,aAAahI,GACT,IAAI,MAAM6C,KAAK7C,EACXh0B,KAAK+7B,YAAYlF,GAGzBoF,gBAAgB3b,GAMR,MAAMvS,EAAIG,EAAqBqS,aAAaD,EAAMzN,QAClD9E,EAAEzC,SAAW,GAAAtL,KAAI,QAAU40B,yBAC3B,MAAM3mB,EAAI,IAAIkQ,GAAsB,GAAAne,KAAI,QAAO+N,GAC/C,GAAA/N,KAAI,QAAU60B,iBAAiB5mB,GAIvCiuB,uBACI,GAAG,GAAAl8B,KAAI,QAAO,CACV,MAAMyN,EAAI,GAAAzN,KAAI,QAAM0b,YACd6M,EAAK9a,EAAE+a,eACPC,EAAKhb,EAAEib,eACPC,EAAKJ,EAAGxV,IAAM0V,EAAG1V,IACjB6V,EAAKL,EAAGzV,IAAM2V,EAAG3V,IAEjB7E,EAAI,IAAImkB,GAAmB,GAAApyB,KAAI,QAAO,IAAIkO,EAC5Cua,EAAG3V,IAAM8V,EAAK,EACdH,EAAG1V,IAAM4V,EAAK,EACd,GAAA3oB,KAAI,QAAU40B,2BAElB3mB,EAAEuZ,YAAY,GAAAxnB,KAAI,SAClB,GAAAA,KAAI,QAAU60B,iBAAiB5mB,IAIvCkuB,0BACI,GAAG,GAAAn8B,KAAI,QAAO,CACV,MAAMyN,EAAI,GAAAzN,KAAI,QAAM0b,YACd6M,EAAK9a,EAAE+a,eACPC,EAAKhb,EAAEib,eACPC,EAAKJ,EAAGxV,IAAM0V,EAAG1V,IACjB6V,EAAKL,EAAGzV,IAAM2V,EAAG3V,IAEjB7E,EAAI,IAAIkQ,GAAsB,GAAAne,KAAI,QAAO,IAAIkO,EAC/Cua,EAAG3V,IAAM8V,EAAK,EACdH,EAAG1V,IAAM4V,EAAK,EACd,GAAA3oB,KAAI,QAAU40B,2BAElB,GAAA50B,KAAI,QAAU60B,iBAAiB5mB,IAIvCmuB,sBACI,GAAG,GAAAp8B,KAAI,QAAO,CACV,MAAMyN,EAAI,GAAAzN,KAAI,QAAM0b,YACd6M,EAAK9a,EAAE+a,eACPC,EAAKhb,EAAEib,eACPC,EAAKJ,EAAGxV,IAAM0V,EAAG1V,IACjB6V,EAAKL,EAAGzV,IAAM2V,EAAG3V,IAEjB7E,EAAI,IAAI8X,GACV,GAAA/lB,KAAI,QACJ,IAAIkO,EACAua,EAAG3V,IAAM8V,EAAK,EACdH,EAAG1V,IAAM4V,EAAK,EACd,GAAA3oB,KAAI,QAAU40B,0BAElB,IAAI1mB,EACAua,EAAG3V,IAAM8V,EAAK,EACdH,EAAG1V,IAAM,EAAI4V,EAAK,EAClB,GAAA3oB,KAAI,QAAU40B,2BAGtB,GAAA50B,KAAI,QAAU60B,iBAAiB5mB,IAyBvCouB,yBACI,MAAMvF,EAAS,GAAA92B,KAAI,WAA2B,KAA/BA,MAEf,GAAG,GAAAA,KAAI,SAAS82B,EAAOx2B,OAAQ,CAC3B,MAAM2N,EAAI,IAAIoZ,GAAqB,GAAArnB,KAAI,QAAO82B,GAC9C7oB,EAAEuZ,YAAY,GAAAxnB,KAAI,SAClB,GAAAA,KAAI,QAAU60B,iBAAiB5mB,IAIvCquB,wBACI,MAAMxF,EAAS,GAAA92B,KAAI,WAA2B,KAA/BA,MAEf,GAAG,GAAAA,KAAI,SAAS82B,EAAOx2B,OAAQ,CAC3B,MAAM2N,EAAI,IAAI2b,GAAoB,GAAA5pB,KAAI,QAAO82B,GAC7C7oB,EAAEkc,aAAa,GAAAnqB,KAAI,QAAU40B,0BAC7B,GAAA50B,KAAI,QAAU60B,iBAAiB5mB,IAIvCotB,cACI,GAAG,GAAAr7B,KAAI,QAAQ,CACX,MACMu8B,EADOtmB,GAAcqB,mBAAmBxB,GAAqBK,WACxC,GAAAnW,KAAI,QAAUqzB,wBAAwBpzB,KAAIuM,GAAKA,EAAEoG,eAAgB,GAC5F,GAAA5S,KAAI,QAAOomB,WAAWmW,IAI9BC,iBAAiBlB,GAEV,GAAAt7B,KAAI,UAEC,GAAAA,KAAI,SACJ,GAAAA,KAAI,QAAMy8B,aAGVnB,GAAQ,GAAAt7B,KAAI,SACZ,GAAAA,KAAI,QAAmB8D,SACvB,GAAA9D,KAAI,GAAqB,KAAI,MACtB,GAAAA,KAAI,UACX,GAAAA,KAAI,GAAqB,iBAAgB,KACzC,GAAAA,KAAI,QAAmBia,MAAM,GAAAja,KAAI,WAGjCs7B,GAAQ,GAAAt7B,KAAI,SACZ,GAAAA,KAAI,QAAoB8D,SACxB,GAAA9D,KAAI,GAAsB,KAAI,MACvB,GAAAA,KAAI,UACX,GAAAA,KAAI,GAAsB,iBAAiB,GAAAA,KAAI,SAAa,KAC5D,GAAAA,KAAI,QAAoBia,MAAM,GAAAja,KAAI,WAKjDqd,QAIC,GAHM,GAAArd,KAAI,GAAgB0E,SAASoZ,eAAe,GAAA9d,KAAI,SAAmB,KACnE,GAAAA,KAAI,GAAiB0E,SAASoZ,eAAe,GAAA9d,KAAI,SAAoB,KAEvE,GAAAA,KAAI,QAuCP,GAAAA,KAAI,QAAM08B,qBAvCI,CACd,MAAMC,EAAa,YAAY,qFAAsF,CACpHC,YAAa,2JACbC,QAAS,GACTn9B,GAAI,qBACJo9B,SAAU,IACVC,YAAa,EAEDC,YAAa,iGAEpBC,EAAkB,YAAY,qFAAsF,CACzHL,YAAa,2JACbC,QAAS,GACTn9B,GAAI,sBACJo9B,SAAU,IACVC,YAAa,EAEbC,YAAa,iGAGL,GAAAh9B,KAAI,GAAe,CACfk9B,OAAQP,EACRQ,UAAWF,GACd,KAEV,GAAAj9B,KAAI,GAAQ,MAAM,GAAAA,KAAI,QAAoB,CAC7Bo9B,iBAAiB,EACjBC,OAAQ,CACJV,GAEJF,aAAa,IACf,KACFz8B,KAAKw8B,kBAAiB,GACtB,GAAAx8B,KAAI,QAAM4e,GAAG,WAAY5e,KAAKi8B,gBAAgBzlB,KAAKxW,OAGnDA,KAAKy7B,aAAa,IAAIvtB,GAAsB,WAAY,aAAc,IAMtE,GAAAlO,KAAI,SACJ,GAAAA,KAAI,GAAS,WAAW,GAAI,CAACqmB,MAAO,WAAWpM,MAAM,GAAAja,KAAI,SAAM,OKnPzC0S,EAAqB4qB,IAAK5qB,EAAqB5L,KAAMlC,OAAOu2B,gBAC9Fv2B,OAAO24B,aAAe,IAAIxG,GAAYnyB,OAAOu2B,eAAgBzoB,EAAqB8qB,OAClF54B,OAAO64B,kBAAoB,IH7CpB,cAA+B7lB,GAclC3O,YAAYse,EAAuB0Q,EAAmByF,GAClDhkB,MAAM,Y,aAdV,oBACA,oBACA,oBAEA,oBAEA,oBACA,oBACA,oBACA,oBAEA,oBAKI,GAAA1Z,KAAI,GAAYunB,EAAO,KACvB,GAAAvnB,KAAI,GAAUi4B,EAAK,KAEnB,GAAAj4B,KAAI,GAA6B09B,EAAkB,KACnD,GAAA19B,KAAI,GAA0B,KAAI,KAElC,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAoB,KAAI,KAE5BA,KAAKse,yBAGTA,yBACO,GAAAte,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBiW,GAAcoI,aAAare,KAAK29B,kBAAkBnnB,KAAKxW,OAAM,KAGzF29B,oBACI,MAAMlzB,EAAS,GAAAzK,KAAI,QAAUqzB,wBACvBgE,EAAU,GAAAr3B,KAAI,QAAQs3B,oBAAoB,GAAAt3B,KAAI,QAAU2yB,qBAMxDiL,EAAUvG,EAAQ3sB,eAAiB,IAMtC,GAAA1K,KAAI,UACH,GAAAA,KAAI,QAAqByW,MAAQhM,EAAOnK,OAAOuT,QAAQ,IAExD,GAAA7T,KAAI,UACH,GAAAA,KAAI,QAAoByW,MAAQ,GAAG,EAAU5C,QAAQ,QAEtD,GAAA7T,KAAI,UACH,GAAAA,KAAI,QAAoByW,MAAQjL,EAA0B6rB,EAAQgB,iBAEnE,GAAAr4B,KAAI,UACH,GAAAA,KAAI,QAAkByW,MAAQ4gB,EAAQiB,aAAe,EAAIjB,EAAQiB,aAAav4B,WAAa,KAiCnGsd,QACI,GAAArd,KAAI,WAAS,KAAbA,MAGAA,KAAK29B,sBGtDmC/4B,OAAOu2B,eAAgBv2B,OAAO24B,aAAc7qB,EAAqBmrB,OACjHj5B,OAAOk5B,gBAAkB,IAAInE,GAAejnB,EAAqBqN,SACjEnb,OAAOm5B,YAAc,IAAIhhB,GlB7Bc,OACM,CACzC,ekBiDJ,IAAIihB,GAAoB,EAIvB,SAASC,GAAiB3d,GACd5b,SAASoZ,eAAepL,EAAqBwrB,UACnD35B,MAAMid,QAAU,OACnBwc,KAMH,SAASG,GAAiB7d,GACvB,IAAIiV,EAAK7wB,SAASoZ,eAAepL,EAAqBwrB,UACtDF,KACGA,IAAqB,IACpBzI,EAAGhxB,MAAMid,QAAU,QAM3B,SAAS4c,GAAgB9d,GACrBA,EAAM2a,iBAEN,IAAI1F,EAAK7wB,SAASoZ,eAAepL,EAAqBwrB,UACtDF,KACGA,IAAqB,IACpBzI,EAAGhxB,MAAMid,QAAU,QAEvB,MAAM6c,EXjGC,CAAC1c,GAAUC,IWkGlB,IAAI,MAAMoC,KAAQ1D,EAAMge,aAAavJ,MACjB,oBAAb/Q,EAAKtO,KACJ9Q,OAAOu2B,eAAe7H,kBAAkBtP,EAAKua,aACtCF,EAAUhiB,SAAS2H,EAAKtO,OAC/B9Q,OAAOu2B,eAAejF,yBAAyBlS,EAAKua,aA2FhE75B,SAASqZ,iBAAiB,oBApF1B,W,2CvBoBO,WAEH,IAAI,MAAMygB,KAAan4B,EAAa,CAChC,MAAMo4B,EAAU/tB,OAAO8tB,GACvB,IAAKjrB,MAAMkrB,GAAU,CAEjB,MAAM9+B,EAAI2G,EAAoBm4B,GAC3B9+B,GACC,SAAYA,IAIxB,auB9BA++B,GA9DJ,SAAqBpD,GACjB,MAAMqD,EAAYj6B,SAASoZ,eAAepL,EAAqBksB,QACzDC,EAASn6B,SAASoZ,eAAepL,EAAqBosB,KAC5DH,EAAUp6B,MAAMid,QAA0B,OAC1Cqd,EAAOt6B,MAAMid,QAA0B,OA6DvCud,GAEAn6B,OAAOu2B,eAAe9d,QACtBzY,OAAOgX,WAAWyB,QAClBzY,OAAO64B,kBAAkBpgB,QACzBzY,OAAOk5B,gBAAgBzgB,QACvBzY,OAAO24B,aAAalgB,QACpBzY,OAAOm5B,YAAY1gB,QAEnBzY,OAAOu2B,eAAezG,QAAQ9vB,OAAOgX,YACrChX,OAAOu2B,eAAexG,kBAAkB/vB,OAAO64B,kBAAkBE,kBAAkBnnB,KAAK5R,OAAO64B,oBAE/F,IAAIoB,EAASn6B,SAASoZ,eAAepL,EAAqBosB,KAC1DD,EAAOG,OAASZ,GAChBS,EAAOI,WAAajE,GACpB6D,EAAOK,YAAcjB,GACrBY,EAAOM,YAAchB,GAGrBiB,UAAUC,YAAYC,oBAA2B5D,GAAa,mCAC1D92B,OAAOgX,WAAW6f,aAAa,IAAIvtB,EAAqBwtB,EAASjxB,OAAO4D,SAAUqtB,EAASjxB,OAAO6D,uBA2D7C,GAC7D1J,OAAOmZ,iBAAiB,eArDxB,SAA6BuC,GAEzB1b,OAAOgX,WAAW4gB,kBAAiB,GAEnC53B,OAAOgX,WAAWC,eAAc,GAEhC,MAAM5b,EAAMyE,SAASoZ,eAAepL,EAAqB4qB,KAKnDiC,EAAW,GAEjB,IACIC,EAAKD,EAGLC,EAFDzE,GAAkC96B,EAAIw/B,cACxB1E,GAAkC96B,EAAIw/B,aACtCF,EAERA,GAAYt/B,EAAIw/B,YAAc1E,IAGvC,IACI2E,EAAKH,EAGLG,EAFD3E,GAAmC96B,EAAI0/B,eACzB5E,GAAmC96B,EAAI0/B,cACvCJ,EAERA,GAAYt/B,EAAI0/B,aAAe5E,IAGxCn2B,OAAOu2B,eAAejI,oBAAmB,EAlBhCqM,GASAA,GAS8CC,EAAIE,GAG3D96B,OAAO24B,aAAatG,0BAoBxBryB,OAAOmZ,iBAAiB,cAdxB,SAA4BuC,GAExB1b,OAAOgX,WAAW4gB,kBAAiB,GAEnC,MAAMv8B,EAAMyE,SAASoZ,eAAepL,EAAqB4qB,KACzDr9B,EAAIsE,MAAMq7B,MAAQ,OAClB3/B,EAAIsE,MAAMs7B,OAAS,OACnBj7B,OAAOgX,WAAWyB,Y","sources":["webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css","webpack://neuron-planner/./src/css/brief.css","webpack://neuron-planner/./src/css/common.css","webpack://neuron-planner/./src/css/help.css","webpack://neuron-planner/./src/css/index.css","webpack://neuron-planner/./src/css/map.css","webpack://neuron-planner/./src/css/plan.css","webpack://neuron-planner/./src/css/responsive.css","webpack://neuron-planner/./src/css/stats_options.css","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/api.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css?b9a3","webpack://neuron-planner/./src/js/interface_fontawesome.ts","webpack://neuron-planner/./src/js/interface_leaflet.ts","webpack://neuron-planner/./src/js/neuron_tools_common.ts","webpack://neuron-planner/./src/js/interface_proj4.ts","webpack://neuron-planner/./src/js/neuron_tools_survey.ts","webpack://neuron-planner/./src/js/neuron_interfaces.ts","webpack://neuron-planner/./src/js/neuron_options.ts","webpack://neuron-planner/./src/js/neuron_dom_factory.ts","webpack://neuron-planner/./src/js/neuron_feature_base.ts","webpack://neuron-planner/./src/js/neuron_help.ts","webpack://neuron-planner/./src/js/neuron_feature_waypoint.ts","webpack://neuron-planner/./src/js/neuron_tools_files.ts","webpack://neuron-planner/./src/js/neuron_tools_kml.ts","webpack://neuron-planner/./src/js/neuron_feature_line.ts","webpack://neuron-planner/./src/js/neuron_feature_polygon.ts","webpack://neuron-planner/./src/js/neuron_feature_survey.ts","webpack://neuron-planner/./src/js/neuron_feature_point.ts","webpack://neuron-planner/./src/js/neuron_planner.ts","webpack://neuron-planner/./src/js/neuron_map.ts","webpack://neuron-planner/./src/js/neuron_brief.ts","webpack://neuron-planner/./src/js/neuron_statistics.ts","webpack://neuron-planner/./src/js/neuron_settings.ts","webpack://neuron-planner/./src/css/index.css?f7ea","webpack://neuron-planner/./src/js/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"images/layers.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"images/layers-2x.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"images/marker-icon.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/leaflet/dist/leaflet.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers.png);\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers-2x.png);\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(images/marker-icon.png);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".brief-table {\\r\\n    display: grid;\\r\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\r\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\r\\n    font-size: x-small;\\r\\n}\\r\\n\\r\\n.brief-table-title {\\r\\n    grid-column: 1 / 9;\\r\\n}\\r\\n\\r\\n.brief-table-entry {\\r\\n    text-align: left;\\r\\n    margin-left: 1em;\\r\\n    margin-right: 1em;\\r\\n    /* display: grid;\\r\\n    grid-template-columns: auto auto auto auto auto auto; */\\r\\n}\\r\\n\\r\\n.brief-table-entry-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n/* .brief-table-entry-center {\\r\\n    text-align: center;\\r\\n} */\\r\\n\\r\\n.brief-table-entry-bold {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.brief-table-header {\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/brief.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,oFAAoF;IACpF,8DAA8D;IAC9D,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB;2DACuD;AAC3D;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;GAEG;;AAEH;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB\",\"sourcesContent\":[\".brief-table {\\r\\n    display: grid;\\r\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\r\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\r\\n    font-size: x-small;\\r\\n}\\r\\n\\r\\n.brief-table-title {\\r\\n    grid-column: 1 / 9;\\r\\n}\\r\\n\\r\\n.brief-table-entry {\\r\\n    text-align: left;\\r\\n    margin-left: 1em;\\r\\n    margin-right: 1em;\\r\\n    /* display: grid;\\r\\n    grid-template-columns: auto auto auto auto auto auto; */\\r\\n}\\r\\n\\r\\n.brief-table-entry-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n/* .brief-table-entry-center {\\r\\n    text-align: center;\\r\\n} */\\r\\n\\r\\n.brief-table-entry-bold {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.brief-table-header {\\r\\n    font-weight: bold;\\r\\n    text-align: center;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* html {\\r\\n    height: 100%;\\r\\n} */\\r\\n\\r\\n.fp-user-buttons-frame {\\r\\n    display: flex;\\r\\n    flex: 0 1 1;\\r\\n    flex-direction: row;\\r\\n    background-color: var(--theme-bg-border);\\r\\n    padding: 0.1em;\\r\\n}\\r\\n\\r\\n.fp-user-buttons {\\r\\n    flex: 1 0 0;\\r\\n    margin: 0.1em;\\r\\n    padding: 0.5em;\\r\\n    border-radius: 0;\\r\\n}\\r\\n\\r\\n/* ========================== */\\r\\n/*          Main View         */\\r\\n/* ========================== */\\r\\n\\r\\n#fp-main {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex: 1 0 0;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#fp-map {\\r\\n    flex: 1 0 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.fp-map-sub {\\r\\n    flex: 1 0 0;\\r\\n}\\r\\n\\r\\n#fp-map-help {\\r\\n    display: none;\\r\\n    overflow: scroll;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n#fp-summary {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    width: 24em;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-left: 2px solid black;\\r\\n}\\r\\n\\r\\n#fp-advanced {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n/* Main container */\\r\\n/* https://codepen.io/CesarVMB/pen/kPOrQb */\\r\\n.tab-container {\\r\\n    /* width: 100%;*/\\r\\n    min-height: 0;\\r\\n    min-width: 0;\\r\\n    flex: 1 1 0;\\r\\n    display: grid;\\r\\n    /* grid-template-rows: auto auto auto; */\\r\\n    grid-template-columns: auto min-content;\\r\\n    background-color: var(--theme-bg-border);\\r\\n    position: relative; /* This is needed for overlays, not for tab-container functions */\\r\\n}\\r\\n\\r\\n/* Hide driving checkboxes */\\r\\n.tab-container > input {\\r\\n\\t/* height: 2.5em; */\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n/* Tabs */\\r\\n.tab-container > label {\\r\\n\\tbackground: var(--theme-shadow);\\r\\n\\t/* color: var(--theme-primary); */\\r\\n    /* border-style: solid; */\\r\\n    /* border-left: solid 2px var(--theme-bg-border);\\r\\n    border-right: solid 2px var(--theme-bg-border);\\r\\n    border-top: solid 2px var(--theme-bg-border); */\\r\\n\\tcursor: pointer;\\r\\n\\t/* height: 2.5em; */\\r\\n\\t/* line-height: 2.5em; */\\r\\n\\tmargin-top: 0.25em;\\r\\n\\t/* margin-right: .5em; */\\r\\n    margin-left: 0;\\r\\n\\tmargin-bottom: 0.25em;\\r\\n\\tpadding: 0.5em;\\r\\n\\ttext-align: center;\\r\\n    font-weight: bold;\\r\\n    display: block;\\r\\n\\t/* height: 2.5em; */\\r\\n    writing-mode: vertical-rl;\\r\\n    text-orientation: upright;\\r\\n}\\r\\n\\r\\n/* Hover for the tabs */\\r\\n.tab-container > input:hover + label {\\r\\n\\tbackground: var(--theme-bg);\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.tab-container > input:hover + label:before {\\r\\n    content : \\\"\\\";\\r\\n    position: absolute;\\r\\n    top    : 20%;\\r\\n    left    : 0px;\\r\\n    width  : 0.4em;\\r\\n    height   : 60%;\\r\\n    border-left: 0.2em solid var(--theme-highlight);\\r\\n    border-left-style: inset;\\r\\n}\\r\\n\\r\\n/* Selected Tab */\\r\\n.tab-container > input:checked + label {\\r\\n\\tbackground: var(--theme-bg);\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.tab-container > input:checked + label:before {\\r\\n    content : \\\"\\\";\\r\\n    position: absolute;\\r\\n    top    : 20%;\\r\\n    left    : 0px;\\r\\n    width  : 0.4em;\\r\\n    height   : 60%;\\r\\n    border-left: 0.2em solid var(--theme-primary);\\r\\n    border-left-style: inset;\\r\\n}\\r\\n\\r\\n/* Main content internal area */\\r\\n.tab-content {\\r\\n\\tbackground: var(--theme-bg);\\r\\n\\t/* height: 100%; */\\r\\n\\t/* width: 100%; */\\r\\n    display: block;\\r\\n    grid-row: span 2/1;\\r\\n    grid-column: 1;\\r\\n    overflow: auto;\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\n/* All tab items */\\r\\n.tab-content > div {\\r\\n\\tdisplay: none;\\r\\n\\tpadding: 1em;\\r\\n}\\r\\n\\r\\n/* Shown content page */\\r\\n/* XXX: Add and remove tab IDs here */\\r\\n.tab-container input#tab-mission:checked ~ .tab-content #tab-item-mission,\\r\\n/* .tab-container input#tab-stats:checked ~ .tab-content #tab-item-stats, */\\r\\n.tab-container input#tab-options:checked ~ .tab-content #tab-item-options {\\r\\n    display: block;\\r\\n    /* flex: auto; */\\r\\n}\\r\\n\\r\\n/* ========================== */\\r\\n/*       Drawing Toolbar      */\\r\\n/* ========================== */\\r\\n/*\\r\\n#fp-draw {\\r\\n    display: flex;\\r\\n    flex: 1 0 0;\\r\\n    flex-direction: row;\\r\\n    background-color: black;\\r\\n    padding: 0.1em;\\r\\n}\\r\\n\\r\\n.fp-draw-buttons {\\r\\n    flex: 1 0 0;\\r\\n    margin: 0.1em;\\r\\n    border-radius: 0;\\r\\n}\\r\\n*/\\r\\n\\r\\n/* ========================== */\\r\\n/*     Management Toolbar     */\\r\\n/* ========================== */\\r\\n/*\\r\\n#fp-manage {\\r\\n    display: flex;\\r\\n    flex: auto;\\r\\n    flex-direction: row;\\r\\n    padding: 0.1em;\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.fp-manage-buttons {\\r\\n    flex: 1 0 0;\\r\\n    border-radius: 0;\\r\\n}\\r\\n*/\\r\\n\\r\\n.fp-long-name {\\r\\n    margin-left: 0.5em;\\r\\n}\\r\\n\\r\\n#print-section {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\nbody{counter-reset: section}\\r\\nh2{counter-reset: sub-section}\\r\\nh3{counter-reset: composite}\\r\\nh4{counter-reset: detail}\\r\\n\\r\\nh2:before{\\r\\n  counter-increment: section;\\r\\n  content: counter(section) \\\". \\\";\\r\\n}\\r\\nh3:before{\\r\\n  counter-increment: sub-section;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\r\\n}\\r\\nh4:before{\\r\\n  counter-increment: composite;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\r\\n}\\r\\nh5:before{\\r\\n  counter-increment: detail;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/common.css\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;;AAEH;IACI,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,wCAAwC;IACxC,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,cAAc;IACd,gBAAgB;AACpB;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;;AAE/B;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA,mBAAmB;AACnB,2CAA2C;AAC3C;IACI,gBAAgB;IAChB,aAAa;IACb,YAAY;IACZ,WAAW;IACX,aAAa;IACb,wCAAwC;IACxC,uCAAuC;IACvC,wCAAwC;IACxC,kBAAkB,EAAE,iEAAiE;AACzF;;AAEA,4BAA4B;AAC5B;CACC,mBAAmB;CACnB,aAAa;AACd;;AAEA,SAAS;AACT;CACC,+BAA+B;CAC/B,iCAAiC;IAC9B,yBAAyB;IACzB;;mDAE+C;CAClD,eAAe;CACf,mBAAmB;CACnB,wBAAwB;CACxB,kBAAkB;CAClB,wBAAwB;IACrB,cAAc;CACjB,qBAAqB;CACrB,cAAc;CACd,kBAAkB;IACf,iBAAiB;IACjB,cAAc;CACjB,mBAAmB;IAChB,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA,uBAAuB;AACvB;CACC,2BAA2B;IACxB,kBAAkB;AACtB;;;AAGA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,cAAc;IACd,cAAc;IACd,+CAA+C;IAC/C,wBAAwB;AAC5B;;AAEA,iBAAiB;AACjB;CACC,2BAA2B;IACxB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,cAAc;IACd,cAAc;IACd,6CAA6C;IAC7C,wBAAwB;AAC5B;;AAEA,+BAA+B;AAC/B;CACC,2BAA2B;CAC3B,kBAAkB;CAClB,iBAAiB;IACd,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,cAAc;IACd,uBAAuB;AAC3B;;AAEA,kBAAkB;AAClB;CACC,aAAa;CACb,YAAY;AACb;;AAEA,uBAAuB;AACvB,qCAAqC;AACrC;;;IAGI,cAAc;IACd,gBAAgB;AACpB;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;;CAcC;;AAED,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;CAaC;;AAED;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA,KAAK,sBAAsB;AAC3B,GAAG,0BAA0B;AAC7B,GAAG,wBAAwB;AAC3B,GAAG,qBAAqB;;AAExB;EACE,0BAA0B;EAC1B,8BAA8B;AAChC;AACA;EACE,8BAA8B;EAC9B,uDAAuD;AACzD;AACA;EACE,4BAA4B;EAC5B,8EAA8E;AAChF;AACA;EACE,yBAAyB;EACzB,kGAAkG;AACpG\",\"sourcesContent\":[\"/* html {\\r\\n    height: 100%;\\r\\n} */\\r\\n\\r\\n.fp-user-buttons-frame {\\r\\n    display: flex;\\r\\n    flex: 0 1 1;\\r\\n    flex-direction: row;\\r\\n    background-color: var(--theme-bg-border);\\r\\n    padding: 0.1em;\\r\\n}\\r\\n\\r\\n.fp-user-buttons {\\r\\n    flex: 1 0 0;\\r\\n    margin: 0.1em;\\r\\n    padding: 0.5em;\\r\\n    border-radius: 0;\\r\\n}\\r\\n\\r\\n/* ========================== */\\r\\n/*          Main View         */\\r\\n/* ========================== */\\r\\n\\r\\n#fp-main {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex: 1 0 0;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#fp-map {\\r\\n    flex: 1 0 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.fp-map-sub {\\r\\n    flex: 1 0 0;\\r\\n}\\r\\n\\r\\n#fp-map-help {\\r\\n    display: none;\\r\\n    overflow: scroll;\\r\\n    padding: 1em;\\r\\n}\\r\\n\\r\\n#fp-summary {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    width: 24em;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    border-left: 2px solid black;\\r\\n}\\r\\n\\r\\n#fp-advanced {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n/* Main container */\\r\\n/* https://codepen.io/CesarVMB/pen/kPOrQb */\\r\\n.tab-container {\\r\\n    /* width: 100%;*/\\r\\n    min-height: 0;\\r\\n    min-width: 0;\\r\\n    flex: 1 1 0;\\r\\n    display: grid;\\r\\n    /* grid-template-rows: auto auto auto; */\\r\\n    grid-template-columns: auto min-content;\\r\\n    background-color: var(--theme-bg-border);\\r\\n    position: relative; /* This is needed for overlays, not for tab-container functions */\\r\\n}\\r\\n\\r\\n/* Hide driving checkboxes */\\r\\n.tab-container > input {\\r\\n\\t/* height: 2.5em; */\\r\\n\\tdisplay: none;\\r\\n}\\r\\n\\r\\n/* Tabs */\\r\\n.tab-container > label {\\r\\n\\tbackground: var(--theme-shadow);\\r\\n\\t/* color: var(--theme-primary); */\\r\\n    /* border-style: solid; */\\r\\n    /* border-left: solid 2px var(--theme-bg-border);\\r\\n    border-right: solid 2px var(--theme-bg-border);\\r\\n    border-top: solid 2px var(--theme-bg-border); */\\r\\n\\tcursor: pointer;\\r\\n\\t/* height: 2.5em; */\\r\\n\\t/* line-height: 2.5em; */\\r\\n\\tmargin-top: 0.25em;\\r\\n\\t/* margin-right: .5em; */\\r\\n    margin-left: 0;\\r\\n\\tmargin-bottom: 0.25em;\\r\\n\\tpadding: 0.5em;\\r\\n\\ttext-align: center;\\r\\n    font-weight: bold;\\r\\n    display: block;\\r\\n\\t/* height: 2.5em; */\\r\\n    writing-mode: vertical-rl;\\r\\n    text-orientation: upright;\\r\\n}\\r\\n\\r\\n/* Hover for the tabs */\\r\\n.tab-container > input:hover + label {\\r\\n\\tbackground: var(--theme-bg);\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n\\r\\n.tab-container > input:hover + label:before {\\r\\n    content : \\\"\\\";\\r\\n    position: absolute;\\r\\n    top    : 20%;\\r\\n    left    : 0px;\\r\\n    width  : 0.4em;\\r\\n    height   : 60%;\\r\\n    border-left: 0.2em solid var(--theme-highlight);\\r\\n    border-left-style: inset;\\r\\n}\\r\\n\\r\\n/* Selected Tab */\\r\\n.tab-container > input:checked + label {\\r\\n\\tbackground: var(--theme-bg);\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.tab-container > input:checked + label:before {\\r\\n    content : \\\"\\\";\\r\\n    position: absolute;\\r\\n    top    : 20%;\\r\\n    left    : 0px;\\r\\n    width  : 0.4em;\\r\\n    height   : 60%;\\r\\n    border-left: 0.2em solid var(--theme-primary);\\r\\n    border-left-style: inset;\\r\\n}\\r\\n\\r\\n/* Main content internal area */\\r\\n.tab-content {\\r\\n\\tbackground: var(--theme-bg);\\r\\n\\t/* height: 100%; */\\r\\n\\t/* width: 100%; */\\r\\n    display: block;\\r\\n    grid-row: span 2/1;\\r\\n    grid-column: 1;\\r\\n    overflow: auto;\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\n/* All tab items */\\r\\n.tab-content > div {\\r\\n\\tdisplay: none;\\r\\n\\tpadding: 1em;\\r\\n}\\r\\n\\r\\n/* Shown content page */\\r\\n/* XXX: Add and remove tab IDs here */\\r\\n.tab-container input#tab-mission:checked ~ .tab-content #tab-item-mission,\\r\\n/* .tab-container input#tab-stats:checked ~ .tab-content #tab-item-stats, */\\r\\n.tab-container input#tab-options:checked ~ .tab-content #tab-item-options {\\r\\n    display: block;\\r\\n    /* flex: auto; */\\r\\n}\\r\\n\\r\\n/* ========================== */\\r\\n/*       Drawing Toolbar      */\\r\\n/* ========================== */\\r\\n/*\\r\\n#fp-draw {\\r\\n    display: flex;\\r\\n    flex: 1 0 0;\\r\\n    flex-direction: row;\\r\\n    background-color: black;\\r\\n    padding: 0.1em;\\r\\n}\\r\\n\\r\\n.fp-draw-buttons {\\r\\n    flex: 1 0 0;\\r\\n    margin: 0.1em;\\r\\n    border-radius: 0;\\r\\n}\\r\\n*/\\r\\n\\r\\n/* ========================== */\\r\\n/*     Management Toolbar     */\\r\\n/* ========================== */\\r\\n/*\\r\\n#fp-manage {\\r\\n    display: flex;\\r\\n    flex: auto;\\r\\n    flex-direction: row;\\r\\n    padding: 0.1em;\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.fp-manage-buttons {\\r\\n    flex: 1 0 0;\\r\\n    border-radius: 0;\\r\\n}\\r\\n*/\\r\\n\\r\\n.fp-long-name {\\r\\n    margin-left: 0.5em;\\r\\n}\\r\\n\\r\\n#print-section {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\nbody{counter-reset: section}\\r\\nh2{counter-reset: sub-section}\\r\\nh3{counter-reset: composite}\\r\\nh4{counter-reset: detail}\\r\\n\\r\\nh2:before{\\r\\n  counter-increment: section;\\r\\n  content: counter(section) \\\". \\\";\\r\\n}\\r\\nh3:before{\\r\\n  counter-increment: sub-section;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\r\\n}\\r\\nh4:before{\\r\\n  counter-increment: composite;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\r\\n}\\r\\nh5:before{\\r\\n  counter-increment: detail;\\r\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".help-highlight {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n}\\r\\n\\r\\n/* .help-highlight > .tab-container {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n} */\\r\\n\\r\\n.help-highlight ~ .tab-content {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/help.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,mDAAmD;AACvD;;AAEA;;GAEG;;AAEH;IACI,mDAAmD;AACvD\",\"sourcesContent\":[\".help-highlight {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n}\\r\\n\\r\\n/* .help-highlight > .tab-container {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n} */\\r\\n\\r\\n.help-highlight ~ .tab-content {\\r\\n    background-color: var(--theme-highlight) !important;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../node_modules/css-loader/dist/cjs.js!./common.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../node_modules/css-loader/dist/cjs.js!./map.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../node_modules/css-loader/dist/cjs.js!./stats_options.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../node_modules/css-loader/dist/cjs.js!./plan.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_4___ from \"-!../../node_modules/css-loader/dist/cjs.js!./brief.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_5___ from \"-!../../node_modules/css-loader/dist/cjs.js!./help.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_6___ from \"-!../../node_modules/css-loader/dist/cjs.js!./responsive.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_4___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_5___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_6___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* // import \\\"../css/theme.css\\\";  //XXX: Loaded by minimal script in head */\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/index.css\"],\"names\":[],\"mappings\":\"AAAA,2EAA2E\",\"sourcesContent\":[\"/* // import \\\"../css/theme.css\\\";  //XXX: Loaded by minimal script in head */\\r\\n@import \\\"./common.css\\\";\\r\\n@import \\\"./map.css\\\";\\r\\n@import \\\"./stats_options.css\\\";\\r\\n@import \\\"./plan.css\\\";\\r\\n@import \\\"./brief.css\\\";\\r\\n@import \\\"./help.css\\\";\\r\\n@import \\\"./responsive.css\\\";\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".neuron-marker-popup {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-title {\\r\\n    flex: auto;\\r\\n    justify-content: center;\\r\\n    display: flex;\\r\\n\\r\\n    font-weight: bold;\\r\\n    text-decoration: underline;\\r\\n    padding: 0.5em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item {\\r\\n    flex: auto;\\r\\n    padding: 0.5em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item:hover {\\r\\n    background-color: var(--theme-popup);\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-icon {\\r\\n    margin-left: 0.2em;\\r\\n    margin-right: 0.2em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item-text {\\r\\n    margin-left: 0.2em;\\r\\n    margin-right: 0.2em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-break {\\r\\n    width: 100%;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/map.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,iBAAiB;IACjB,0BAA0B;IAC1B,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,oCAAoC;IACpC,0BAA0B;IAC1B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\".neuron-marker-popup {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-title {\\r\\n    flex: auto;\\r\\n    justify-content: center;\\r\\n    display: flex;\\r\\n\\r\\n    font-weight: bold;\\r\\n    text-decoration: underline;\\r\\n    padding: 0.5em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item {\\r\\n    flex: auto;\\r\\n    padding: 0.5em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item:hover {\\r\\n    background-color: var(--theme-popup);\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-icon {\\r\\n    margin-left: 0.2em;\\r\\n    margin-right: 0.2em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-item-text {\\r\\n    margin-left: 0.2em;\\r\\n    margin-right: 0.2em;\\r\\n}\\r\\n\\r\\n.neuron-marker-popup-break {\\r\\n    width: 100%;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#fp-mission {\\r\\n    flex: auto;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#fp-plan-container {\\r\\n    flex: auto;\\r\\n    overflow: scroll;\\r\\n    padding-top: 0.25em;\\r\\n    padding-bottom: 0.25em;\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\n#fp-plan {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n#fp-plan-title {\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\r\\n}\\r\\n\\r\\n#mission-features-dragdrop {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: var(--theme-highlight-thick);\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n/*\\r\\n#mission-features-dragdrop-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    max-width: 100%;\\r\\n    max-height: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    font-size: larger;\\r\\n    color: var(--theme-text-light);\\r\\n} */\\r\\n\\r\\n.mission-features-dragdrop-content {\\r\\n    /* flex: auto; */\\r\\n    font-size:x-large;\\r\\n    color: var(--theme-text-light);\\r\\n    padding: 1em;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mission-features-dragdrop-content-large {\\r\\n    font-size:xx-large;\\r\\n}\\r\\n\\r\\n.mission-feature {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    background-color: var(--theme-bg);\\r\\n    border: 2px solid var(--theme-bg-border);\\r\\n    border-radius: 0.5em;\\r\\n    margin-top: 0.25em;\\r\\n    margin-bottom: 0.25em;\\r\\n    /* margin-left: 0.5em;\\r\\n    margin-right: 0.5em; */\\r\\n    scroll-margin: 0.25em;\\r\\n    padding: 0.5em;\\r\\n    box-shadow: 0px 2px 2px var(--theme-shadow);\\r\\n}\\r\\n\\r\\n.mission-feature-highlight {\\r\\n    background-color: var(--theme-highlight);\\r\\n    transition: 250ms linear all;\\r\\n}\\r\\n\\r\\n.mission-feature-highlight-remove {\\r\\n    background-color: inherit;\\r\\n    transition: 250ms linear all;\\r\\n}\\r\\n\\r\\n.mission-feature-hidden {\\r\\n    background: var(--theme-shadow);\\r\\n}\\r\\n\\r\\n.mission-feature-title {\\r\\n    flex: auto;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.mission-feature-title-button-container {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.mission-feature-title-button,\\r\\n.mission-feature-title-button-small {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    margin-left: 0.1em;\\r\\n    margin-right: 0.1em;\\r\\n}\\r\\n\\r\\n\\r\\n.mission-feature-title-button-small {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.mission-feature-title-text {\\r\\n    font-weight: bold;\\r\\n    flex: auto;\\r\\n}\\r\\n.mission-feature-content {\\r\\n    flex: auto;\\r\\n    display: grid;\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: 50% 50%;\\r\\n    /* overflow: scroll; */\\r\\n}\\r\\n\\r\\n.mission-feature-content-label, .mission-feature-content-value {\\r\\n    display: block;\\r\\n    margin-top: 0.2em;\\r\\n}\\r\\n\\r\\n.mission-feature-content-value-center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mission-feature-content-subtitle {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.mission-feature-content-value-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.neuron-marker-poi {\\r\\n    filter: hue-rotate(0deg);\\r\\n}\\r\\n\\r\\n/* .neuron-marker-poi-container {\\r\\n} */\\r\\n\\r\\n.neuron-marker-poi-txt {\\r\\n    background-color: white;\\r\\n    border: black solid 2px;\\r\\n    border-radius: 0.7ex;\\r\\n    padding: 0.5ex;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n.neuron-marker-poi-img {\\r\\n    height: 3em !important;\\r\\n    width: 3em !important;\\r\\n}\\r\\n\\r\\n.neuron-marker-corner {\\r\\n    filter: hue-rotate(145deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-waypoint {\\r\\n    filter: hue-rotate(180deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-line-start {\\r\\n    filter: hue-rotate(80deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-line-end {\\r\\n    filter: hue-rotate(0deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-photo {\\r\\n    filter: hue-rotate(280deg);\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/plan.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,MAAM;IACN,OAAO;IACP,8CAA8C;IAC9C,UAAU;IACV,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;;;;;;;;;;;;GAYG;;AAEH;IACI,gBAAgB;IAChB,iBAAiB;IACjB,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iCAAiC;IACjC,wCAAwC;IACxC,oBAAoB;IACpB,kBAAkB;IAClB,qBAAqB;IACrB;0BACsB;IACtB,qBAAqB;IACrB,cAAc;IACd,2CAA2C;AAC/C;;AAEA;IACI,wCAAwC;IACxC,4BAA4B;AAChC;;AAEA;IACI,yBAAyB;IACzB,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;AACA;IACI,UAAU;IACV,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;GACG;;AAEH;IACI,uBAAuB;IACvB,uBAAuB;IACvB,oBAAoB;IACpB,cAAc;IACd,mBAAmB;AACvB;AACA;IACI,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,0BAA0B;AAC9B\",\"sourcesContent\":[\"#fp-mission {\\r\\n    flex: auto;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n#fp-plan-container {\\r\\n    flex: auto;\\r\\n    overflow: scroll;\\r\\n    padding-top: 0.25em;\\r\\n    padding-bottom: 0.25em;\\r\\n    scroll-behavior: smooth;\\r\\n}\\r\\n\\r\\n#fp-plan {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n#fp-plan-title {\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\r\\n}\\r\\n\\r\\n#mission-features-dragdrop {\\r\\n    display: none;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    background-color: var(--theme-highlight-thick);\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\\r\\n/*\\r\\n#mission-features-dragdrop-content {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    max-width: 100%;\\r\\n    max-height: 100%;\\r\\n    padding: 0;\\r\\n    margin: 0;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    font-size: larger;\\r\\n    color: var(--theme-text-light);\\r\\n} */\\r\\n\\r\\n.mission-features-dragdrop-content {\\r\\n    /* flex: auto; */\\r\\n    font-size:x-large;\\r\\n    color: var(--theme-text-light);\\r\\n    padding: 1em;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mission-features-dragdrop-content-large {\\r\\n    font-size:xx-large;\\r\\n}\\r\\n\\r\\n.mission-feature {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    background-color: var(--theme-bg);\\r\\n    border: 2px solid var(--theme-bg-border);\\r\\n    border-radius: 0.5em;\\r\\n    margin-top: 0.25em;\\r\\n    margin-bottom: 0.25em;\\r\\n    /* margin-left: 0.5em;\\r\\n    margin-right: 0.5em; */\\r\\n    scroll-margin: 0.25em;\\r\\n    padding: 0.5em;\\r\\n    box-shadow: 0px 2px 2px var(--theme-shadow);\\r\\n}\\r\\n\\r\\n.mission-feature-highlight {\\r\\n    background-color: var(--theme-highlight);\\r\\n    transition: 250ms linear all;\\r\\n}\\r\\n\\r\\n.mission-feature-highlight-remove {\\r\\n    background-color: inherit;\\r\\n    transition: 250ms linear all;\\r\\n}\\r\\n\\r\\n.mission-feature-hidden {\\r\\n    background: var(--theme-shadow);\\r\\n}\\r\\n\\r\\n.mission-feature-title {\\r\\n    flex: auto;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n    justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.mission-feature-title-button-container {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.mission-feature-title-button,\\r\\n.mission-feature-title-button-small {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    margin-left: 0.1em;\\r\\n    margin-right: 0.1em;\\r\\n}\\r\\n\\r\\n\\r\\n.mission-feature-title-button-small {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.mission-feature-title-text {\\r\\n    font-weight: bold;\\r\\n    flex: auto;\\r\\n}\\r\\n.mission-feature-content {\\r\\n    flex: auto;\\r\\n    display: grid;\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: 50% 50%;\\r\\n    /* overflow: scroll; */\\r\\n}\\r\\n\\r\\n.mission-feature-content-label, .mission-feature-content-value {\\r\\n    display: block;\\r\\n    margin-top: 0.2em;\\r\\n}\\r\\n\\r\\n.mission-feature-content-value-center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.mission-feature-content-subtitle {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.mission-feature-content-value-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.neuron-marker-poi {\\r\\n    filter: hue-rotate(0deg);\\r\\n}\\r\\n\\r\\n/* .neuron-marker-poi-container {\\r\\n} */\\r\\n\\r\\n.neuron-marker-poi-txt {\\r\\n    background-color: white;\\r\\n    border: black solid 2px;\\r\\n    border-radius: 0.7ex;\\r\\n    padding: 0.5ex;\\r\\n    white-space: nowrap;\\r\\n}\\r\\n.neuron-marker-poi-img {\\r\\n    height: 3em !important;\\r\\n    width: 3em !important;\\r\\n}\\r\\n\\r\\n.neuron-marker-corner {\\r\\n    filter: hue-rotate(145deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-waypoint {\\r\\n    filter: hue-rotate(180deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-line-start {\\r\\n    filter: hue-rotate(80deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-line-end {\\r\\n    filter: hue-rotate(0deg);\\r\\n}\\r\\n\\r\\n.neuron-marker-photo {\\r\\n    filter: hue-rotate(280deg);\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\n/* Prefer portrait mode for very small screen sizes */\\r\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\r\\n    #fp-main {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n\\r\\n    #fp-map {\\r\\n        max-height: 50%;\\r\\n    }\\r\\n\\r\\n    #fp-summary {\\r\\n        height: 50%;\\r\\n        width: 100%;\\r\\n        border-left: 0px;\\r\\n        border-top: 2px solid black;\\r\\n    }\\r\\n\\r\\n    .tab-container {\\r\\n        grid-template-columns: auto auto;\\r\\n        grid-template-rows: min-content auto;\\r\\n    }\\r\\n\\r\\n    .tab-content {\\r\\n        grid-column: span 2;\\r\\n        grid-row: 2;\\r\\n    }\\r\\n\\r\\n    .tab-container > label {\\r\\n        /* height: 2.5em; */\\r\\n        margin-top: 0;\\r\\n        margin-right: .25em;\\r\\n        margin-left: .25em;\\r\\n        margin-bottom: 0;\\r\\n        writing-mode: horizontal-tb;\\r\\n        /* text-orientation: mixed; */\\r\\n    }\\r\\n\\r\\n    .tab-container > input:hover + label:before {\\r\\n        top    : auto;\\r\\n        left    : 20%;\\r\\n        bottom  : 0;\\r\\n        height  : 0.4em;\\r\\n        width   : 60%;\\r\\n        border-bottom: 0.2em solid var(--theme-highlight);\\r\\n        border-bottom-style: inset;\\r\\n        border-left-style: none;\\r\\n    }\\r\\n\\r\\n    .tab-container > input:checked + label:before {\\r\\n        top    : auto;\\r\\n        left    : 20%;\\r\\n        bottom  : 0;\\r\\n        height  : 0.4em;\\r\\n        width   : 60%;\\r\\n        border-bottom: 0.2em solid var(--theme-primary);\\r\\n        border-bottom-style: inset;\\r\\n        border-left-style: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 50em) {\\r\\n    .fp-long-name {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (max-height: 40em) or (max-width: 50em) {\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    #fp-summary > * {\\r\\n        font-size: x-small;\\r\\n        /* width: 25em; */\\r\\n    }\\r\\n\\r\\n    .mission-features-dragdrop-content {\\r\\n        /* flex: auto; */\\r\\n        font-size:medium;\\r\\n        padding: 0.25em;\\r\\n    }\\r\\n\\r\\n    .mission-features-dragdrop-content-large {\\r\\n        font-size:large;\\r\\n    }\\r\\n\\r\\n    /* .mission-feature-content-value {\\r\\n        font-size: x-small;\\r\\n    }\\r\\n\\r\\n    .fp-stats-content-value {\\r\\n        font-size: x-small;\\r\\n    } */\\r\\n\\r\\n    .mission-feature-title-button {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .mission-feature-title-button-small {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\r\\n    #fp-summary {\\r\\n        height: 100%;\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\r\\n    #fp-map {\\r\\n        max-height: 100%;\\r\\n    }\\r\\n\\r\\n    #fp-summary {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media print {\\r\\n    @page {\\r\\n        size: A4;\\r\\n        margin: 10mm;\\r\\n    }\\r\\n\\r\\n    /* body > * {\\r\\n        display: none;\\r\\n    } */\\r\\n    html {\\r\\n        /* height: auto; */\\r\\n        /*\\r\\n        Manually set our height and width\\r\\n        to make sure that we can scale the map\\r\\n        properly for display later.\\r\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\r\\n        */\\r\\n        width: 190mm;   /* 210 */\\r\\n        height: 276mm;   /* 297 */\\r\\n    }\\r\\n\\r\\n    body {\\r\\n        height: auto;\\r\\n        width: auto;\\r\\n    }\\r\\n\\r\\n    #app {\\r\\n        height: auto;\\r\\n        width: auto;\\r\\n        display: block;\\r\\n        overflow-x: auto;\\r\\n    }\\r\\n\\r\\n    #fp-main {\\r\\n        overflow: initial;\\r\\n    }\\r\\n    #fp-manage {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-summary {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-draw {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-map {\\r\\n        width: calc(190mm);\\r\\n        height: calc(277mm/2);\\r\\n    }\\r\\n    #fp-map-interactive {\\r\\n        display: block;\\r\\n    }\\r\\n    #fp-map-help {\\r\\n        display: none;\\r\\n    }\\r\\n    #print-section {\\r\\n        display: block;\\r\\n    }\\r\\n\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/responsive.css\"],\"names\":[],\"mappings\":\";AACA,qDAAqD;AACrD;IACI;QACI,sBAAsB;IAC1B;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,WAAW;QACX,WAAW;QACX,gBAAgB;QAChB,2BAA2B;IAC/B;;IAEA;QACI,gCAAgC;QAChC,oCAAoC;IACxC;;IAEA;QACI,mBAAmB;QACnB,WAAW;IACf;;IAEA;QACI,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,kBAAkB;QAClB,gBAAgB;QAChB,2BAA2B;QAC3B,6BAA6B;IACjC;;IAEA;QACI,aAAa;QACb,aAAa;QACb,WAAW;QACX,eAAe;QACf,aAAa;QACb,iDAAiD;QACjD,0BAA0B;QAC1B,uBAAuB;IAC3B;;IAEA;QACI,aAAa;QACb,aAAa;QACb,WAAW;QACX,eAAe;QACf,aAAa;QACb,+CAA+C;QAC/C,0BAA0B;QAC1B,uBAAuB;IAC3B;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,kBAAkB;QAClB,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;IACnB;;IAEA;QACI,eAAe;IACnB;;IAEA;;;;;;OAMG;;IAEH;QACI,aAAa;IACjB;;IAEA;QACI,cAAc;IAClB;AACJ;;AAEA;IACI;QACI,YAAY;QACZ,WAAW;IACf;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,QAAQ;QACR,YAAY;IAChB;;IAEA;;OAEG;IACH;QACI,kBAAkB;QAClB;;;;;SAKC;QACD,YAAY,IAAI,QAAQ;QACxB,aAAa,IAAI,QAAQ;IAC7B;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,YAAY;QACZ,WAAW;QACX,cAAc;QACd,gBAAgB;IACpB;;IAEA;QACI,iBAAiB;IACrB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,kBAAkB;QAClB,qBAAqB;IACzB;IACA;QACI,cAAc;IAClB;IACA;QACI,aAAa;IACjB;IACA;QACI,cAAc;IAClB;;IAEA;QACI,aAAa;IACjB;AACJ\",\"sourcesContent\":[\"\\r\\n/* Prefer portrait mode for very small screen sizes */\\r\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\r\\n    #fp-main {\\r\\n        flex-direction: column;\\r\\n    }\\r\\n\\r\\n    #fp-map {\\r\\n        max-height: 50%;\\r\\n    }\\r\\n\\r\\n    #fp-summary {\\r\\n        height: 50%;\\r\\n        width: 100%;\\r\\n        border-left: 0px;\\r\\n        border-top: 2px solid black;\\r\\n    }\\r\\n\\r\\n    .tab-container {\\r\\n        grid-template-columns: auto auto;\\r\\n        grid-template-rows: min-content auto;\\r\\n    }\\r\\n\\r\\n    .tab-content {\\r\\n        grid-column: span 2;\\r\\n        grid-row: 2;\\r\\n    }\\r\\n\\r\\n    .tab-container > label {\\r\\n        /* height: 2.5em; */\\r\\n        margin-top: 0;\\r\\n        margin-right: .25em;\\r\\n        margin-left: .25em;\\r\\n        margin-bottom: 0;\\r\\n        writing-mode: horizontal-tb;\\r\\n        /* text-orientation: mixed; */\\r\\n    }\\r\\n\\r\\n    .tab-container > input:hover + label:before {\\r\\n        top    : auto;\\r\\n        left    : 20%;\\r\\n        bottom  : 0;\\r\\n        height  : 0.4em;\\r\\n        width   : 60%;\\r\\n        border-bottom: 0.2em solid var(--theme-highlight);\\r\\n        border-bottom-style: inset;\\r\\n        border-left-style: none;\\r\\n    }\\r\\n\\r\\n    .tab-container > input:checked + label:before {\\r\\n        top    : auto;\\r\\n        left    : 20%;\\r\\n        bottom  : 0;\\r\\n        height  : 0.4em;\\r\\n        width   : 60%;\\r\\n        border-bottom: 0.2em solid var(--theme-primary);\\r\\n        border-bottom-style: inset;\\r\\n        border-left-style: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 50em) {\\r\\n    .fp-long-name {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media (max-height: 40em) or (max-width: 50em) {\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    #fp-summary > * {\\r\\n        font-size: x-small;\\r\\n        /* width: 25em; */\\r\\n    }\\r\\n\\r\\n    .mission-features-dragdrop-content {\\r\\n        /* flex: auto; */\\r\\n        font-size:medium;\\r\\n        padding: 0.25em;\\r\\n    }\\r\\n\\r\\n    .mission-features-dragdrop-content-large {\\r\\n        font-size:large;\\r\\n    }\\r\\n\\r\\n    /* .mission-feature-content-value {\\r\\n        font-size: x-small;\\r\\n    }\\r\\n\\r\\n    .fp-stats-content-value {\\r\\n        font-size: x-small;\\r\\n    } */\\r\\n\\r\\n    .mission-feature-title-button {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .mission-feature-title-button-small {\\r\\n        display: block;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\r\\n    #fp-summary {\\r\\n        height: 100%;\\r\\n        width: 100%;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\r\\n    #fp-map {\\r\\n        max-height: 100%;\\r\\n    }\\r\\n\\r\\n    #fp-summary {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\\r\\n@media print {\\r\\n    @page {\\r\\n        size: A4;\\r\\n        margin: 10mm;\\r\\n    }\\r\\n\\r\\n    /* body > * {\\r\\n        display: none;\\r\\n    } */\\r\\n    html {\\r\\n        /* height: auto; */\\r\\n        /*\\r\\n        Manually set our height and width\\r\\n        to make sure that we can scale the map\\r\\n        properly for display later.\\r\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\r\\n        */\\r\\n        width: 190mm;   /* 210 */\\r\\n        height: 276mm;   /* 297 */\\r\\n    }\\r\\n\\r\\n    body {\\r\\n        height: auto;\\r\\n        width: auto;\\r\\n    }\\r\\n\\r\\n    #app {\\r\\n        height: auto;\\r\\n        width: auto;\\r\\n        display: block;\\r\\n        overflow-x: auto;\\r\\n    }\\r\\n\\r\\n    #fp-main {\\r\\n        overflow: initial;\\r\\n    }\\r\\n    #fp-manage {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-summary {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-draw {\\r\\n        display: none;\\r\\n    }\\r\\n    #fp-map {\\r\\n        width: calc(190mm);\\r\\n        height: calc(277mm/2);\\r\\n    }\\r\\n    #fp-map-interactive {\\r\\n        display: block;\\r\\n    }\\r\\n    #fp-map-help {\\r\\n        display: none;\\r\\n    }\\r\\n    #print-section {\\r\\n        display: block;\\r\\n    }\\r\\n\\r\\n    .leaflet-control-attribution {\\r\\n        display: none;\\r\\n    }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* #fp-stats {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 0.5em;\\r\\n    border-bottom: 2px solid black;\\r\\n} */\\r\\n\\r\\n/* #fp-stats {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.fp-stats-title {\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n    display: flex;\\r\\n    padding: 0.2em;\\r\\n}\\r\\n\\r\\n.fp-stats-title-button {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    margin-left: 0.5em;\\r\\n}\\r\\n\\r\\n.fp-stats-title-label {\\r\\n    flex: auto;\\r\\n} */\\r\\n\\r\\n#fp-options {\\r\\n    flex: auto;\\r\\n    display: grid;\\r\\n    /* width: 100%; */\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: auto auto;\\r\\n    /* padding: 0.5em; */\\r\\n    overflow: auto;\\r\\n    /* line-height: 2.5em; */\\r\\n}\\r\\n\\r\\n#fp-options > *{\\r\\n    margin-bottom: 0.5em;\\r\\n}\\r\\n\\r\\n#fp-stats {\\r\\n    /* height: 10em; */\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    flex-shrink: 0;\\r\\n    display: grid;\\r\\n    /* width: 100%; */\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: min-content auto;\\r\\n    border-bottom: 0.4em solid var(--theme-bg-border);\\r\\n    /* grid-template-rows: auto auto; */\\r\\n    padding: 0.5em;\\r\\n    /* overflow: auto; */\\r\\n    line-height: 1em;\\r\\n}\\r\\n\\r\\n.fp-stats-options-label, .fp-stats-options-value,\\r\\n.fp-stats-content-label, .fp-stats-content-value {\\r\\n    display: block;\\r\\n    margin-top: 0.2em;\\r\\n}\\r\\n\\r\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n/* .fp-stats-option-label {\\r\\n    flex: auto;\\r\\n}\\r\\n\\r\\n.fp-stats-option-value {\\r\\n    flex: auto;\\r\\n    max-width: 5em;\\r\\n} */\\r\\n\\r\\n.fp-stats-option-content-subtitle {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/stats_options.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;GAOG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;;AAEH;IACI,UAAU;IACV,aAAa;IACb,iBAAiB;IACjB,4BAA4B;IAC5B,8BAA8B;IAC9B,6BAA6B;IAC7B,oBAAoB;IACpB,cAAc;IACd,wBAAwB;AAC5B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,cAAc;IACd,aAAa;IACb,iBAAiB;IACjB,4BAA4B;IAC5B,uCAAuC;IACvC,iDAAiD;IACjD,mCAAmC;IACnC,cAAc;IACd,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;;;;;;GAOG;;AAEH;IACI,iBAAiB;AACrB\",\"sourcesContent\":[\"/* #fp-stats {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    padding: 0.5em;\\r\\n    border-bottom: 2px solid black;\\r\\n} */\\r\\n\\r\\n/* #fp-stats {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.fp-stats-title {\\r\\n    text-align: center;\\r\\n    font-weight: bold;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n    display: flex;\\r\\n    padding: 0.2em;\\r\\n}\\r\\n\\r\\n.fp-stats-title-button {\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    margin-left: 0.5em;\\r\\n}\\r\\n\\r\\n.fp-stats-title-label {\\r\\n    flex: auto;\\r\\n} */\\r\\n\\r\\n#fp-options {\\r\\n    flex: auto;\\r\\n    display: grid;\\r\\n    /* width: 100%; */\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: auto auto;\\r\\n    /* padding: 0.5em; */\\r\\n    overflow: auto;\\r\\n    /* line-height: 2.5em; */\\r\\n}\\r\\n\\r\\n#fp-options > *{\\r\\n    margin-bottom: 0.5em;\\r\\n}\\r\\n\\r\\n#fp-stats {\\r\\n    /* height: 10em; */\\r\\n    flex: auto;\\r\\n    flex-grow: 0;\\r\\n    flex-shrink: 0;\\r\\n    display: grid;\\r\\n    /* width: 100%; */\\r\\n    /* flex-direction: column; */\\r\\n    grid-template-columns: min-content auto;\\r\\n    border-bottom: 0.4em solid var(--theme-bg-border);\\r\\n    /* grid-template-rows: auto auto; */\\r\\n    padding: 0.5em;\\r\\n    /* overflow: auto; */\\r\\n    line-height: 1em;\\r\\n}\\r\\n\\r\\n.fp-stats-options-label, .fp-stats-options-value,\\r\\n.fp-stats-content-label, .fp-stats-content-value {\\r\\n    display: block;\\r\\n    margin-top: 0.2em;\\r\\n}\\r\\n\\r\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n/* .fp-stats-option-label {\\r\\n    flex: auto;\\r\\n}\\r\\n\\r\\n.fp-stats-option-value {\\r\\n    flex: auto;\\r\\n    max-width: 5em;\\r\\n} */\\r\\n\\r\\n.fp-stats-option-content-subtitle {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { icon, dom, library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faBars, faClose, faRuler, faDrawPolygon, faEye, faEyeSlash, faFile, faFileExport, faFileImport, faFolderOpen, faLocationCrosshairs, faLocationDot, faMinimize, faMinus, faPlus, faQuestionCircle, faSave, faTrash, faUpload, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n/* Listing of common icons to use in the application\r\n */\r\nexport enum NeuronIcons {\r\n    LOAD_PLAN,\r\n    SAVE_PLAN,\r\n    CLEAR_PLAN,\r\n    UPLOAD_PLAN,\r\n    CREATE_BRIEF,\r\n    PLAN_LIST,\r\n    HELP,\r\n    MINIMIZE,\r\n    EXPAND,\r\n    ADD,\r\n    ARROW_UP,\r\n    ARROW_DOWN,\r\n    ARROW_LEFT,\r\n    ARROW_RIGHT,\r\n    DELETE,\r\n    IDENTIFY,\r\n    REVEAL,\r\n    HIDE,\r\n    FIT_ZOOM,\r\n    POINT,\r\n    POLYGON,\r\n    RULER,\r\n    IMPORT_FILE,\r\n    EXPORT_FILE,\r\n}\r\n/** Returns the corresponding FA icon from the NeuronIcon lookup\r\n * @param  {NeuronIcons} neuron_icon Icon to get from the library\r\n */\r\nfunction _neuron_get_icon_fa(neuron_icon:NeuronIcons) {\r\n    let i = null;\r\n\r\n    switch(neuron_icon) {\r\n        case NeuronIcons.LOAD_PLAN: {\r\n            i = faFolderOpen;\r\n            break\r\n        }\r\n        case NeuronIcons.SAVE_PLAN: {\r\n            i = faSave;\r\n            break;\r\n        }\r\n        case NeuronIcons.CLEAR_PLAN: {\r\n            i = faTrash;\r\n            break;\r\n        }\r\n        case NeuronIcons.UPLOAD_PLAN: {\r\n            i = faUpload;\r\n            break;\r\n        }\r\n        case NeuronIcons.CREATE_BRIEF: {\r\n            i = faFile;\r\n            break;\r\n        }\r\n        case NeuronIcons.PLAN_LIST: {\r\n            i = faBars;\r\n            break;\r\n        }\r\n        case NeuronIcons.HELP: {\r\n            i = faQuestionCircle;\r\n            break;\r\n        }\r\n        case NeuronIcons.ARROW_UP: {\r\n            i = faArrowUp;\r\n            break;\r\n        }\r\n        case NeuronIcons.ARROW_DOWN: {\r\n            i = faArrowDown;\r\n            break;\r\n        }\r\n        case NeuronIcons.ARROW_LEFT: {\r\n            i = faArrowLeft;\r\n            break;\r\n        }\r\n        case NeuronIcons.ARROW_RIGHT: {\r\n            i = faArrowRight;\r\n            break;\r\n        }\r\n        case NeuronIcons.DELETE: {\r\n            i = faClose;\r\n            break;\r\n        }\r\n        case NeuronIcons.IDENTIFY: {\r\n            i = faLocationCrosshairs;\r\n            break;\r\n        }\r\n        case NeuronIcons.REVEAL: {\r\n            i = faEye;\r\n            break;\r\n        }\r\n        case NeuronIcons.HIDE: {\r\n            i = faEyeSlash;\r\n            break;\r\n        }\r\n        case NeuronIcons.MINIMIZE: {\r\n            i = faMinus;\r\n            break;\r\n        }\r\n        case NeuronIcons.EXPAND: {\r\n            i = faPlus;\r\n            break;\r\n        }\r\n        case NeuronIcons.FIT_ZOOM: {\r\n            i = faMinimize;\r\n            break;\r\n        }\r\n        case NeuronIcons.POINT: {\r\n            i = faLocationDot;\r\n            break;\r\n        }\r\n        case NeuronIcons.POLYGON: {\r\n            i = faDrawPolygon;\r\n            break;\r\n        }\r\n        case NeuronIcons.RULER: {\r\n            i = faRuler;\r\n            break;\r\n        }\r\n        case NeuronIcons.IMPORT_FILE: {\r\n            i = faFileImport;\r\n            break;\r\n        }\r\n        case NeuronIcons.EXPORT_FILE: {\r\n            i = faFileExport;\r\n            break;\r\n        }\r\n        default: {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return i;\r\n}\r\n/** Skims the DOM and loads any hard-linked FA icons\r\n */\r\nexport function neuron_load_dom_icons() {\r\n    //Handle the DOM conversions for hard-coded icons\r\n    for(const icon_name in NeuronIcons) {\r\n        const icon_id = Number(icon_name);\r\n        if (!isNaN(icon_id)) {\r\n            //XXX: Slight abuse of the enum, but it gets results!\r\n            const i = _neuron_get_icon_fa(icon_id);\r\n            if(i)\r\n                library.add(i);\r\n        }\r\n    }\r\n\r\n    dom.i2svg();\r\n}\r\n/** Returns the FA icon for use or adding to the document.\r\n * @param  {NeuronIcons} neuron_icon Icon to retrieve from the library\r\n * @param  {boolean} is_small Modifier to retrieve a small-scale icon\r\n */\r\nexport function neuron_get_icon(neuron_icon:NeuronIcons, is_small:boolean = false) {\r\n    let i = _neuron_get_icon_fa(neuron_icon);\r\n    let opts = {\r\n        transform: {\r\n          size: is_small ? 10 : 16,     // small is fa-2xs\r\n        }\r\n    }\r\n    return i ? icon(i, opts).node : new HTMLCollection();\r\n}\r\n","import * as L from \"leaflet\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\r\n// @ts-ignore\r\n//import * as ContextMenu from \"leaflet-contextmenu\";\r\n// import 'leaflet-contextmenu/dist/leaflet.contextmenu.css';\\\r\n// @ts-ignore\r\n// import * as FileLoader from 'leaflet-filelayer'\r\n\r\n// delete L.Icon.Default.prototype._getIconUrl;\r\n//XXX: Fix the image paths loaded by leaflet\r\n\r\nconst default_icon_options = {\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n}\r\nL.Icon.Default.mergeOptions(default_icon_options);\r\n\r\nexport function get_neuron_map_icon_html(class_name:string, name?:string) {\r\n    return  `<div class=\"${class_name}-container\"><img class=\"${class_name}-img\" src=\"img/icons/poi-marker.png\"/>` +\r\n            `<span class=\"${class_name}-txt\">${name}</span><div>`;\r\n}\r\n\r\nexport function get_neuron_map_marker(class_name:string, name?:string) {\r\n    if(!name) {\r\n        return new L.Icon({\r\n            ...L.Icon.Default.prototype.options,\r\n            className: class_name\r\n        });\r\n    }\r\n\r\n    return new L.DivIcon({\r\n        className: class_name,\r\n        html: get_neuron_map_icon_html(class_name, name),\r\n    });\r\n}\r\n\r\n//require('leaflet/dist/images/layers.png')\r\n//require('leaflet/dist/images/layers-2x.png')\r\n\r\n//const cm = ContextMenu;\r\n// const fl = FileLoader;\r\n\r\nexport { L };\r\n\r\nexport class LeafletContextMenuItem {\r\n    text:string = \"\";\r\n    icon:NeuronIcons;\r\n    callback: (contextTarget:L.Marker) => void;\r\n\r\n    /** Creates a LeafletContextMenuItem object for use when creating consistent popup context menus\r\n     * @param  {string=} text Text to display on on the context menu item\r\n     * @param  {NeuronIcons} icon Icon to display next to the context menu item\r\n     * @param  {(contextTarget:L.Marker)=>null} callback Callback to run when the context menu item is clicked\r\n     */\r\n    constructor(text:string = \"\", icon:NeuronIcons = null, callback:(contextTarget:L.Marker) => void = null) {\r\n        this.text = text;\r\n        this.icon = icon;\r\n\r\n        if(callback)\r\n            this.callback = callback;\r\n    }\r\n}\r\n\r\n/** Creates a consistent popup context menu for a leaflet marker\r\n * @param  {string} popup_title Title to put at the top of the popup\r\n * @param  {LeafletContextMenuItem[]} context_items List of context menu items to load in\r\n * @param  {L.Marker} marker_context Marker context to use when calling the context menu item callbacks (passed as argument)\r\n */\r\nexport function create_popup_context_dom(popup_title:string = \"Marker\", context_items:LeafletContextMenuItem[] = [], marker_context:L.Marker = null) {\r\n    let dom = document.createElement(\"div\");\r\n    dom.className = 'neuron-marker-popup';\r\n\r\n    let t = document.createElement(\"div\");\r\n    t.className = 'neuron-marker-popup-title';\r\n    t.appendChild(document.createTextNode(popup_title));\r\n    dom.appendChild(t);\r\n\r\n    for(const i of context_items) {\r\n        if(i) {\r\n            let d = document.createElement(\"div\");\r\n            d.className = 'neuron-marker-popup-item';\r\n\r\n            if(i.icon) {\r\n                for(let ic of neuron_get_icon(i.icon)) {\r\n                    ic.classList.add('neuron-marker-popup-icon');\r\n                    d.appendChild(ic);\r\n                }\r\n                // let o = document.createElement('i');\r\n                // o.className = `fas ${i.icon} neuron-marker-popup-icon`;\r\n                // o.appendChild(document.createTextNode(i.text));\r\n                // d.appendChild(o);\r\n            }\r\n\r\n            let s = document.createElement('span');\r\n            s.className = 'neuron-marker-popup-item-text';\r\n            s.appendChild(document.createTextNode(i.text));\r\n            d.appendChild(s);\r\n\r\n            if(i.callback) {\r\n                d.onclick = function() {\r\n                    return i.callback(marker_context);\r\n                };\r\n            }\r\n\r\n            dom.appendChild(d);\r\n        } else {\r\n            let d = document.createElement(\"hr\");\r\n            d.className = 'neuron-marker-popup-break';\r\n            dom.appendChild(d);\r\n        }\r\n    }\r\n\r\n    return dom;\r\n}\r\n","//TODO: Document\r\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\r\n\r\n//TODO: Document\r\nexport function zero_pad(num:number, places:number) {\r\n    return String(num).padStart(places, '0');\r\n}\r\n\r\n//TODO: Document\r\nlet lastId = 0;\r\nexport function NeuronUID(prefix='nuid-') {\r\n    lastId++;\r\n    return `${prefix}${lastId}`;\r\n}\r\n\r\n//TODO: Document\r\nexport function flight_distance_from_coords(coords:NeuronInterfacePoint[]) {\r\n    //XXX:  Total distance calculated with the haversine method\r\n    //      This is a shortcut and is probably ok for small distances\r\n    //      but we should definitely look at a proper earth model to\r\n    //      do it properly in the future\r\n\r\n    let total_distance = 0.0;\r\n    for (var i = 0; i < coords.length - 1; i++) {\r\n        const p1 = coords[i];\r\n        const p2 = coords[i+1];\r\n        const u1 = p1.to_UTM();\r\n        const u2 = p2.to_UTM(u1.zone);\r\n        const d = u1.GetDistance2D(u2);\r\n        //Do some sneaky stuff to support altitude as well\r\n        const alt_d = Math.pow(Math.abs(p1.altitude - p2.altitude), 2);\r\n        total_distance += Math.sqrt(Math.pow(d,2) + alt_d);\r\n    }\r\n\r\n    return total_distance;\r\n}\r\n\r\n//TODO: Document\r\nexport function flight_time_from_duration(duration:number) {\r\n    const t_h = Math.floor(duration / 3600);\r\n    const t_m = Math.floor(duration % 3600 / 60);\r\n    const t_s = Math.floor(duration % 3600 % 60);\r\n\r\n    return `${zero_pad(t_h,2)}:${zero_pad(t_m,2)}:${zero_pad(t_s,2)}`;\r\n}\r\n\r\n//TODO: Document\r\nexport function mm_to_px(mm:number) {\r\n    const default_dpi = 96;\r\n    return (mm / 25.4) * window.devicePixelRatio * default_dpi;\r\n}","import proj4 from 'proj4';\r\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\r\nimport { zero_pad } from \"./neuron_tools_common\";\r\n\r\n/** Get a EPSG code from a given UTM zone number.\r\n * @param  {number} zone UTM zone.\r\n * @param  {boolean} is_south Defines if the zone is north or south of the equator.\r\n */\r\nfunction EPSG_code_from_utm_zone(zone:number, is_south:boolean) {\r\n    const zf = Math.floor(zone);\r\n    if (zf <= 0 || zf > 60)\r\n        throw new Error(`Zone out of range (${zone}|${zf})`);\r\n\r\n    return `EPSG:326${zero_pad(zf, 2)}${is_south ? 'S' : 'N'}`;\r\n}\r\n\r\n//Predefine all of our zones\r\n// https://epsg.io/32600\r\nfor(let i = 1; i <= 60; i++) {\r\n    let projection = `+proj=utm +zone=${i}`;\r\n    proj4.defs(EPSG_code_from_utm_zone(i, false), projection);\r\n    proj4.defs(EPSG_code_from_utm_zone(i, true), projection + \" +south\");\r\n}\r\n\r\n/** Determines if a given UTM number or latitude is for a southerly location.\r\n * @param  {number} latitude_or_zone Latitude or UTM zone number to check.\r\n */\r\nfunction get_UTM_is_south(latitude_or_zone:number) {\r\n    return (latitude_or_zone < 0);\r\n}\r\n\r\n/** Get the UTM Zone number for a given combination of latitudes and longitudes.\r\n * @param  {number} latitude Latitude of the location to determine.\r\n * @param  {number} longitude Longitude of the location to determine.\r\n */\r\nfunction get_UTM_zone(latitude:number, longitude:number) {\r\n    let zone = Math.floor((longitude - -186.0) / 6.0);\r\n    if (get_UTM_is_south(latitude))\r\n        zone *= -1;\r\n\r\n    return zone;\r\n}\r\n\r\nexport class UTMPos {\r\n    x:number;\r\n    y:number;\r\n    zone:number;\r\n    tag:string;\r\n\r\n    /** Creates a UTMPos object that defines a location in the coordinate frame of a specific UTM zone.\r\n     * @param  {number} x Coordinate location in the x-axis of the UTM zone.\r\n     * @param  {number} y Coordinate location in the y-axis of the UTM zone.\r\n     * @param  {number} zone UTM zone to use as the reference origin.\r\n     * @param  {string} tag Additional tag metadata information to identify this position.\r\n     */\r\n    constructor(x:number=0.0, y:number=0.0, zone:number=0.0, tag:string=\"\") {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.zone = zone;\r\n        this.tag = tag;\r\n    }\r\n    /** Compares this UTMPos object with another object to assess if they represent the same location and same UTM zone.\r\n     * @param  {UTMPos} other The other UTM object to compare with in the assessment.\r\n     * @param  {boolean} match_tag Additional flag to consider if the tag metadata should also be matched. Tag data will be ignored if this is false.\r\n     */\r\n    equals(other:UTMPos, match_tag:boolean = false) {\r\n        return (this.x == other.x) && (this.y == other.y) && (this.zone == other.zone) && (!match_tag || (this.tag == other.tag));\r\n    }\r\n\r\n    /** Create a deep copy of this UTMPos object.\r\n     * @param  {string} tag Additional tag metadata information to identify the new position\r\n     */\r\n    copy(tag:string=null) {\r\n        return new UTMPos(this.x, this.y, this.zone, tag ? tag : this.tag);\r\n    }\r\n\r\n    /** Get a new UTMPos object that represents a position of relative bearing and distance from this UTMPos.\r\n     * @param  {number} bearing The bearing from north from this UTMPos to the new location.\r\n     * @param  {number} distance The distance from this UTMPos to the new location.\r\n     * @param  {string} tag Additional tag metadata information to identify the new position.\r\n     */\r\n     relative_point_from_dist_bearing(bearing:number, distance:number, tag:string = \"\") {\r\n        let degN = 90 - bearing;\r\n        // if (degN < 0)\r\n        //     degN += 360;\r\n\r\n        const deg2rad = Math.PI/180.0;\r\n\r\n        return new UTMPos(\r\n            this.x + distance * Math.cos(degN * deg2rad),\r\n            this.y + distance * Math.sin(degN * deg2rad),\r\n            this.zone,\r\n            tag\r\n        );\r\n    }\r\n\r\n    /** Get a new UTMPos object that represents a position of relative bearing and distance from this UTMPos.\r\n     * @param  {number} angle The bearing from x-axis in radians from this UTMPos to the new location.\r\n     * @param  {number} distance The distance from this UTMPos to the new location.\r\n     * @param  {string} tag Additional tag metadata information to identify the new position.\r\n     */\r\n    relative_point_from_dist_angle(angle:number, distance:number, tag:string = \"\") {\r\n        return new UTMPos(\r\n            this.x + distance * Math.cos(angle),\r\n            this.y + distance * Math.sin(angle),\r\n            this.zone,\r\n            tag\r\n        );\r\n    }\r\n\r\n    /** Get the 2D distance between this UTMPos and another location.\r\n     * @param  {UTMPos} b The other location to measure distance to.\r\n     */\r\n    GetDistance2D(b:UTMPos) {\r\n        return Math.sqrt(Math.pow(Math.abs(this.x - b.x), 2) + Math.pow(Math.abs(this.y - b.y), 2));\r\n    }\r\n\r\n    /** Get the 2D angle of the line that forms between this UTMPos and another location, relative to x-axis and measured anti-clockwise in radians.\r\n     * @param  {UTMPos} b The other location to measure distance to.\r\n     */\r\n     GetAngle(b:UTMPos) {\r\n        return Math.atan2(b.y - this.y, b.x - this.x);\r\n    }\r\n    /** Calculates the area of a polygon defined by the list of polygons as provided\r\n     * @param  {UTMPos[]} vertices corner points of the polygon as defined in this area\r\n     */\r\n    static AreaOfPolygon(vertices:UTMPos[]) {\r\n        var total = 0;\r\n\r\n        for (var i = 0, l = vertices.length; i < l; i++) {\r\n          var addX = vertices[i].x;\r\n          var addY = vertices[i == vertices.length - 1 ? 0 : i + 1].y;\r\n          var subX = vertices[i == vertices.length - 1 ? 0 : i + 1].x;\r\n          var subY = vertices[i].y;\r\n\r\n          total += (addX * addY * 0.5);\r\n          total -= (subX * subY * 0.5);\r\n        }\r\n\r\n        return Math.abs(total);\r\n    }\r\n\r\n    /** Convert this UTMPos data into a new NeuronInterfacePoint that represents the same location. Tag metadata will also be included if it exists.\r\n     */\r\n    to_NeuronInterfacePoint() {\r\n        let p = proj4(\r\n            EPSG_code_from_utm_zone(\r\n                Math.abs(this.zone),\r\n                get_UTM_is_south(this.zone)),\r\n            NeuronInterfacePoint.projection_code(),\r\n            [this.x, this.y]\r\n        );\r\n\r\n        //p given as [lng, lat]\r\n        return new NeuronInterfacePoint(p[1], p[0], 0.0, 0.0, this.tag);\r\n    }\r\n\r\n    /** Converts NeuronInterfacePoint data into a new UTMPos that represents the same location. Tag metadata will also be included if it exists.\r\n     * @param  {NeuronInterfacePoint} point Point to create the transformation from\r\n     * @param  {number=null} zone Zone override to use during the projection\r\n     * @param  {string=\"\"} tag Additional tag information for this point\r\n     */\r\n    static from_NeuronInterfacePoint(point:NeuronInterfacePoint, zone:number = null) {\r\n        if (!zone)\r\n            zone = get_UTM_zone(point.latitude, point.longitude);\r\n\r\n        let p = proj4(\r\n            NeuronInterfacePoint.projection_code(),\r\n            EPSG_code_from_utm_zone(\r\n                Math.abs(zone),\r\n                get_UTM_is_south(zone)),\r\n            [point.longitude, point.latitude]\r\n        );\r\n\r\n        //p given as [x, y]\r\n        return new UTMPos(p[0], p[1], zone, point.tag);\r\n    }\r\n}\r\n\r\nexport class UTMLine {\r\n    // start of line\r\n    p1:UTMPos;\r\n    // end of line\r\n    p2:UTMPos;\r\n    // used as a base for grid along line (initial setout)\r\n    base_pnt:UTMPos;\r\n\r\n    /** Creates a UTMLine which is a representation of a line that connects two locations in a UTM zone. Includes an identifier for determining which point is the starting location.\r\n     * @param  {UTMPos} p1 The first location of the line.\r\n     * @param  {UTMPos} p2 The second location of the line.\r\n     * @param  {UTMPos} base_pnt Determines the starting point of the line\r\n     */\r\n    constructor(p1:UTMPos, p2:UTMPos, base_pnt:UTMPos) {\r\n        this.p1 = p1;\r\n        this.p2 = p2;\r\n        this.base_pnt = base_pnt;\r\n    }\r\n}\r\n","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\r\nimport { UTMPos, UTMLine } from \"./interface_proj4\";\r\n\r\n//TODO: Document\r\nexport enum StartPosition {\r\n    // Home = 0,\r\n    BottomLeft = 1,\r\n    TopLeft = 2,\r\n    BottomRight = 3,\r\n    TopRight = 4,\r\n    // Point = 5\r\n}\r\n\r\n//TODO: Document\r\nexport class Rect {\r\n    Top:number;\r\n    Bottom:number;\r\n    Left:number;\r\n    Right:number;\r\n\r\n    constructor(Left:number=0.0, Top:number=0.0, Width:number=0.0, Height:number=0.0)\r\n    {\r\n        this.Left = Left;\r\n        this.Top = Top;\r\n        this.Right = Left + Width;\r\n        this.Bottom = Top + Height;\r\n    }\r\n\r\n    Width() {\r\n        return this.Right - this.Left;\r\n    }\r\n\r\n    Height() {\r\n        return this.Bottom - this.Top;\r\n    }\r\n\r\n\r\n    MidWidth() {\r\n        return ((this.Right - this.Left) / 2) + this.Left;\r\n    }\r\n\r\n    MidHeight() {\r\n        return ((this.Top - this.Bottom) / 2) + this.Bottom;\r\n    }\r\n\r\n    diag_distance()\r\n    {\r\n        // Pythagoras\r\n        return Math.sqrt(Math.pow(this.Width(), 2) + Math.pow(this.Height(), 2));\r\n    }\r\n\r\n}\r\n\r\n//TODO: Document\r\nfunction remove_item_from_array(array:any[], item:any) {\r\n    const index = array.indexOf(item);\r\n    if (index > -1)\r\n        array.splice(index, 1);\r\n}\r\n\r\n/** Add an angle while normalizing output in the range 0...360\r\n * @param  {number} angle Initial angle in degrees\r\n * @param  {number} degrees Additional degrees to add to add onto the angle\r\n */\r\nfunction AddAngle(angle:number, degrees:number) {\r\n    angle += degrees;\r\n    angle = angle % 360;\r\n\r\n    if (angle < 0)\r\n        angle += 360;\r\n\r\n    return angle;\r\n}\r\n\r\n//TODO: Document\r\nfunction FindLineIntersection(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\r\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\r\n    //  AB & CD are parallel\r\n    if (denom == 0)\r\n        return new UTMPos();\r\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\r\n    let r = numerator / denom;\r\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\r\n    let s = numerator2 / denom;\r\n    if ((r < 0 || r > 1) || (s < 0 || s > 1))\r\n        return new UTMPos();\r\n    // Find intersection point\r\n    return new UTMPos(\r\n        start1.x + (r * (end1.x - start1.x)),\r\n        start1.y + (r * (end1.y - start1.y)),\r\n        start1.zone\r\n    );\r\n}\r\n\r\n//TODO: Document\r\nfunction getPolyMinMax(utmpos:UTMPos[]) {\r\n    if (utmpos.length == 0)\r\n        return new Rect();\r\n\r\n    let min_x, min_y, max_x, max_y = 0.0;\r\n\r\n    min_x = max_x = utmpos[0].x;\r\n    min_y = max_y = utmpos[0].y;\r\n\r\n    for(const pnt of utmpos) {\r\n        min_x = Math.min(min_x, pnt.x);\r\n        max_x = Math.max(max_x, pnt.x);\r\n\r\n        min_y = Math.min(min_y, pnt.y);\r\n        max_y = Math.max(max_y, pnt.y);\r\n    }\r\n\r\n    return new Rect(min_x, max_y, max_x - min_x, min_y - max_y);\r\n}\r\n\r\n//TODO: Document\r\nfunction PointInPolygon(p:UTMPos, poly:UTMPos[]) {\r\n    let p1 = new UTMPos()\r\n    let p2 = new UTMPos();\r\n    let inside = false;\r\n\r\n    if (poly.length < 3)\r\n    {\r\n        return inside;\r\n    }\r\n    let oldPoint = poly[poly.length - 1].copy();\r\n\r\n    for (let i = 0; i < poly.length; i++)\r\n    {\r\n\r\n        let newPoint = poly[i].copy();\r\n\r\n        if (newPoint.y > oldPoint.y)\r\n        {\r\n            p1 = oldPoint;\r\n            p2 = newPoint;\r\n        }\r\n        else\r\n        {\r\n            p1 = newPoint;\r\n            p2 = oldPoint;\r\n        }\r\n\r\n        if ((newPoint.y < p.y) == (p.y <= oldPoint.y)\r\n            && (p.x - p1.x) * (p2.y - p1.y)\r\n            < (p2.x - p1.x) * (p.y - p1.y))\r\n        {\r\n            inside = !inside;\r\n        }\r\n        oldPoint = newPoint;\r\n    }\r\n    return inside;\r\n}\r\n\r\n//TODO: Document\r\nfunction FindLineIntersectionExtension(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\r\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\r\n    //  AB & CD are parallel\r\n    if (denom == 0)\r\n        return new UTMPos();\r\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\r\n    let r = numerator / denom;\r\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\r\n    let s = numerator2 / denom;\r\n    if ((r < 0 || r > 1) || (s < 0 || s > 1)) {\r\n        // line intersection is outside our lines.\r\n    }\r\n\r\n    // Find intersection point\r\n    let result = new UTMPos(\r\n        start1.x + (r * (end1.x - start1.x)),\r\n        start1.y + (r * (end1.y - start1.y)),\r\n        start1.zone\r\n    );\r\n\r\n    return result;\r\n}\r\n\r\n//TODO: Document\r\nfunction findClosestPoint(start:UTMPos, list:UTMPos[]) {\r\n    let answer = new UTMPos();\r\n    let current_best = Number.MAX_VALUE;\r\n\r\n    for(const pnt of list) {\r\n        const dist1 = start.GetDistance2D(pnt);\r\n\r\n        if (dist1 < current_best) {\r\n            answer = pnt;\r\n            current_best = dist1;\r\n        }\r\n    }\r\n\r\n    return answer;\r\n}\r\n\r\n//TODO: Document\r\nfunction findClosestLine(start:UTMPos, list:UTMLine[], min_distance:number, angle:number):UTMLine {\r\n    if (min_distance != 0) {\r\n        // By now, just add 5.000 km to our lines so they are long enough to allow intersection\r\n        let METERS_TO_EXTEND = 5000;\r\n        let perpendicularOrientation = AddAngle(angle, 90);\r\n\r\n        // Calculation of a perpendicular line to the grid lines containing the \"start\" point\r\n        /*\r\n        *  --------------------------------------|------------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        *  -------------------------------------start---------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        *  --------------------------------------|------------------------------------------\r\n        */\r\n        let start_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, -METERS_TO_EXTEND);\r\n        let stop_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, METERS_TO_EXTEND);\r\n\r\n        // Store one intersection point per grid line\r\n        let intersectedPoints:Map<UTMPos,UTMLine> = new Map();\r\n        // lets order distances from every intersected point per line with the \"start\" point\r\n        let ordered_min_to_max:Map<number,UTMPos> = new Map();\r\n\r\n        for(const line of list) {\r\n            // Calculate intersection point\r\n            let p = FindLineIntersectionExtension(line.p1, line.p2, start_perpendicular_line, stop_perpendicular_line);\r\n\r\n            // Store it\r\n            intersectedPoints.set(p, line);\r\n\r\n            // Calculate distances between intersect point and \"start\" (i.e. line and start)\r\n            let distance_p = start.GetDistance2D(p);\r\n\r\n            if (!ordered_min_to_max.has(distance_p))\r\n                ordered_min_to_max.set(distance_p, p);\r\n        }\r\n\r\n        // Acquire keys and sort them.\r\n        let ordered_keys = Array.from(ordered_min_to_max.keys());\r\n        ordered_keys.sort(function(a, b) {\r\n            return a - b;\r\n        });\r\n\r\n        // Lets select a line that is the closest to \"start\" point but \"min_distance\" away at least.\r\n        // If we have only one line, return that line whatever the minDistance says\r\n        let key = Number.MAX_VALUE;\r\n        let i = 0;\r\n        while (key == Number.MAX_VALUE && i < ordered_keys.length) {\r\n            if (ordered_keys[i] >= min_distance)\r\n                key = ordered_keys[i];\r\n            i++;\r\n        }\r\n\r\n        // If no line is selected (because all of them are closer than minDistance, then get the farthest one\r\n        if (key == Number.MAX_VALUE)\r\n            key = ordered_keys[ordered_keys.length - 1];\r\n\r\n        let filtered_map = Array.from(intersectedPoints.entries()).filter(a => a[0].GetDistance2D(start) >= key);\r\n        let filtered_lines = filtered_map.map(a => a[1]);\r\n\r\n        return findClosestLine(start, filtered_lines, 0, angle);\r\n    } else {\r\n        let answer = list[0];\r\n        let shortest = Number.MAX_VALUE;\r\n\r\n        for(const line of list) {\r\n            let ans1 = start.GetDistance2D(line.p1);\r\n            let ans2 = start.GetDistance2D(line.p2);\r\n            let shorter_pnt = ans1 < ans2 ? line.p1 : line.p2;\r\n\r\n            if (shortest > start.GetDistance2D(shorter_pnt)) {\r\n                answer = line;\r\n                shortest = start.GetDistance2D(shorter_pnt);\r\n            }\r\n        }\r\n\r\n        return answer;\r\n    }\r\n}\r\n\r\n//TODO: Document\r\nexport enum GridPointTags {\r\n    START = \"S\",\r\n    END = \"E\",\r\n    MIDDLE = \"M\",\r\n    MIDDLE_START= \"MS\",\r\n    MIDDLE_END = \"ME\",\r\n}\r\n\r\nconst min_distance = 0.5;\r\n/** Creates listing of points that form a survey grid of a provided area\r\n * @param  {NeuronInterfacePoint[]} polygon List of points that define the survey polygon\r\n * @param  {number} altitude altitude to map to the final points\r\n * @param  {number} distance distance between lines\r\n * @param  {number} spacing Additional spacing between polygon and turns?  TODO: Figure out what this is meant to do?\r\n * @param  {number} angle angle of the survey pattern to follow (lane angle)\r\n * @param  {number} overshoot1 overshoot distance at the first \"end\" of the survey pattern\r\n * @param  {number} overshoot2 overshoot distance at the second \"end\" of the survey pattern\r\n * @param  {StartPosition} startpos selector for where the starting position should be\r\n * @param  {number} minLaneSeparation minimum lane separation/skip parameter (causes the lanes to alternate)\r\n * @param  {number} leadin additional lead-in to assist with mission planning for planes (allows more time for the plane to complete the turn before entering the survey stretch)\r\n */\r\nexport function CreateGrid(\r\n    polygon:NeuronInterfacePoint[],\r\n    altitude:number,\r\n    distance:number,\r\n    spacing:number,\r\n    angle:number,\r\n    overshoot1:number,\r\n    overshoot2:number,\r\n    startpos:StartPosition,\r\n    // shutter:boolean,\r\n    minLaneSeparation:number,\r\n    leadin:number,\r\n    // HomeLocation:NeuronInterfacePoint\r\n    ) {\r\n\r\n    if (spacing < 0.1 && spacing != 0)\r\n        spacing = 0.1;\r\n\r\n    if (distance < min_distance)\r\n        distance = min_distance;\r\n\r\n    if (polygon.length == 0)\r\n        return [];\r\n\r\n\r\n    // Make a non round number in case of corner cases\r\n    if (minLaneSeparation != 0)\r\n        minLaneSeparation += 0.5;\r\n\r\n    // Lane Separation in meters\r\n    const minLaneSeparationINMeters = minLaneSeparation * distance;\r\n\r\n    const utm_zone = polygon[0].to_UTM().zone;\r\n    // utm position list\r\n    let utm_positions = polygon.map(x => x.to_UTM(utm_zone));\r\n    // utm zone distance calcs will be done in\r\n    // let utm_positions = utmpos.ToList(NeuronInterfacePoint.ToUTM(utm_zone, polygon), utm_zone);\r\n    // let utm_positions = polygon;\r\n\r\n    // close the loop if its not already\r\n    if (!utm_positions[0].equals(utm_positions[utm_positions.length - 1]))\r\n        utm_positions.push(utm_positions[0]); // make a full loop\r\n\r\n    // get min/max of coverage area\r\n    let area = getPolyMinMax(utm_positions);\r\n\r\n    // get initial grid\r\n\r\n    // used to determine the size of the outer grid area\r\n    let diag_dist = area.diag_distance();\r\n\r\n    // somewhere to store out generated lines\r\n    let grid:UTMLine[] = [];\r\n    // number of lines we need\r\n    let lines = 0;\r\n\r\n    // get start point middle\r\n    let x = area.MidWidth();\r\n    let y = area.MidHeight();\r\n    let start_p = new UTMPos(x,y,utm_zone);\r\n\r\n    // //UTMLine(new utmpos(x, y, utm_zone), \"Base\");\r\n\r\n    // // get left extent\r\n    // let xb1 = x;\r\n    // let yb1 = y;\r\n    // // to the left\r\n    // new_pos(ref xb1, ref yb1, angle - 90, diag_dist / 2 + distance);\r\n    // // backwards\r\n    // new_pos(ref xb1, ref yb1, angle + 180, diag_dist / 2 + distance);\r\n\r\n    // utmpos left = new utmpos(xb1, yb1, utm_zone);\r\n    let left = start_p.relative_point_from_dist_bearing(angle - 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\r\n\r\n    ////UTMLine(left, \"left\");\r\n\r\n    // get right extent\r\n    // // double xb2 = x;\r\n    // // double yb2 = y;\r\n    // // // to the right\r\n    // // new_pos(ref xb2, ref yb2, angle + 90, diag_dist / 2 + distance);\r\n    // // // backwards\r\n    // // new_pos(ref xb2, ref yb2, angle + 180, diag_dist / 2 + distance);\r\n\r\n    // // utmpos right = new utmpos(xb2, yb2, utm_zone);\r\n    // let right = start_p.relative_point_from_dist_bearing(angle + 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\r\n\r\n    ////UTMLine(right, \"right\");\r\n\r\n    // set start point to left hand side\r\n    x = left.x;\r\n    y = left.y;\r\n\r\n    // draw the outer grid, this is a grid that cover the entire area of the rectangle plus more.\r\n    while (lines < ((diag_dist + distance * 2) / distance))\r\n    {\r\n        // copy the start point to generate the end point\r\n        let l_start = new UTMPos(x, y, utm_zone);\r\n        let l_end = l_start.relative_point_from_dist_bearing(angle, diag_dist + distance * 2);\r\n        // let nx = x;\r\n        // let ny = y;\r\n        // new_pos(ref nx, ref ny, angle, diag_dist + distance * 2);\r\n\r\n        let line = new UTMLine(l_start, l_end, l_start.copy());\r\n        // line.p1 = new utmpos(x, y, utm_zone);\r\n        // line.p2 = new utmpos(nx, ny, utm_zone);\r\n        // line.base_pnt = new utmpos(x, y, utm_zone);\r\n        grid.push(line);\r\n\r\n        // //UTMLine(line);\r\n\r\n        // new_pos(ref x, ref y, angle + 90, distance);\r\n        let l_next = l_start.relative_point_from_dist_bearing(angle + 90, distance);\r\n        x = l_next.x;\r\n        y = l_next.y;\r\n        lines++;\r\n    }\r\n\r\n    // find intersections with our polygon\r\n\r\n    // store lines that dont have any intersections\r\n    let remove:UTMLine[] = [];\r\n\r\n    let grid_no = grid.length;\r\n\r\n    // cycle through our grid\r\n    for (let a = 0; a < grid_no; a++) {\r\n        let closest_distance = Number.MAX_VALUE;\r\n        let farthest_distance = Number.MIN_VALUE;\r\n\r\n        let closest_point = new UTMPos();\r\n        let farthest_point = new UTMPos();\r\n\r\n        // somewhere to store our intersections\r\n        let matches:UTMPos[] = [];\r\n\r\n        let crosses = 0;\r\n        for (let b = 1; b < utm_positions.length; b++) {\r\n            const utm_p1 = utm_positions[b-1];\r\n            const utm_p2 = utm_positions[b];\r\n\r\n            let new_utmpos = FindLineIntersection(utm_p1, utm_p2, grid[a].p1, grid[a].p2);\r\n            if (!(new_utmpos.equals(new UTMPos()))) {\r\n                crosses++;\r\n                matches.push(new_utmpos);\r\n                if (closest_distance > grid[a].p1.GetDistance2D(new_utmpos))\r\n                {\r\n                    closest_point.y = new_utmpos.y;\r\n                    closest_point.x = new_utmpos.x;\r\n                    closest_point.zone = new_utmpos.zone;\r\n                    closest_distance = grid[a].p1.GetDistance2D(new_utmpos);\r\n                }\r\n                if (farthest_distance < grid[a].p1.GetDistance2D(new_utmpos))\r\n                {\r\n                    farthest_point.y = new_utmpos.y;\r\n                    farthest_point.x = new_utmpos.x;\r\n                    farthest_point.zone = new_utmpos.zone;\r\n                    farthest_distance = grid[a].p1.GetDistance2D(new_utmpos);\r\n                }\r\n            }\r\n        }\r\n        if (crosses == 0) // outside our polygon\r\n        {\r\n            if (!PointInPolygon(grid[a].p1, utm_positions) && !PointInPolygon(grid[a].p2, utm_positions))\r\n                remove.push(grid[a]);\r\n        }\r\n        else if (crosses == 1) // bad - shouldn't happen\r\n        {\r\n\r\n        }\r\n        else if (crosses == 2) // simple start and finish\r\n        {\r\n            let line = grid[a];\r\n            line.p1 = closest_point;\r\n            line.p2 = farthest_point;\r\n            grid[a] = line;\r\n        }\r\n        else // multiple intersections\r\n        {\r\n            let line = grid[a];\r\n            remove.push(line);\r\n\r\n            while (matches.length > 1)\r\n            {\r\n                closest_point = findClosestPoint(closest_point, matches);\r\n                const p1 = closest_point;\r\n                remove_item_from_array(matches, closest_point);\r\n\r\n                closest_point = findClosestPoint(closest_point, matches);\r\n                const p2 = closest_point;\r\n                remove_item_from_array(matches, closest_point);\r\n\r\n                let newline = new UTMLine(\r\n                    p1,\r\n                    p2,\r\n                    line.base_pnt.copy()\r\n                );\r\n\r\n                grid.push(newline);\r\n            }\r\n        }\r\n    }\r\n\r\n    // let grid_debug = [...grid];\r\n    // let debug_points = [];\r\n    // for(const line of grid_debug) {\r\n    //     debug_points.push(line.p1);\r\n    //     debug_points.push(line.p2);\r\n    // }\r\n\r\n    // cleanup and keep only lines that pass though our polygon\r\n    for(const line of remove)\r\n        remove_item_from_array(grid, line);\r\n\r\n    if (grid.length == 0)\r\n        return [];\r\n        // return NeuronInterfacePoint.from_UTMs(debug_points);\r\n\r\n    // pick start position based on initial point rectangle\r\n    let start_pos_utm:UTMPos = null;\r\n\r\n    switch (startpos)\r\n    {\r\n        default:\r\n        // case StartPosition.Home:\r\n        //     start_pos_utm = HomeLocation.to_UTM(utm_zone);\r\n        //     break;\r\n        case StartPosition.BottomLeft:\r\n            start_pos_utm = new UTMPos(area.Left, area.Bottom, utm_zone);\r\n            break;\r\n        case StartPosition.BottomRight:\r\n            start_pos_utm = new UTMPos(area.Right, area.Bottom, utm_zone);\r\n            break;\r\n        case StartPosition.TopLeft:\r\n            start_pos_utm = new UTMPos(area.Left, area.Top, utm_zone);\r\n            break;\r\n        case StartPosition.TopRight:\r\n            start_pos_utm = new UTMPos(area.Right, area.Top, utm_zone);\r\n            break;\r\n        // case StartPosition.Point:\r\n        //     start_pos_utm = new UTMPos();\r\n        //     start_pos_utm.zone = utm_zone;\r\n        //     break;\r\n    }\r\n\r\n    // find the closes polygon point based from our startpos selection\r\n    start_pos_utm = findClosestPoint(start_pos_utm, utm_positions);\r\n\r\n    // find closest line point to startpos\r\n    let closest = findClosestLine(start_pos_utm, grid, 0 /*Lane separation does not apply to starting point*/, angle);\r\n\r\n    let last_pnt = new UTMPos();\r\n\r\n    // get the closes point from the line we picked\r\n    if (closest.p1.GetDistance2D(start_pos_utm) < closest.p2.GetDistance2D(start_pos_utm))\r\n    {\r\n        last_pnt = closest.p1;\r\n    }\r\n    else\r\n    {\r\n        last_pnt = closest.p2;\r\n    }\r\n\r\n    let ans:UTMPos[] = [];\r\n    while (grid.length > 0) {\r\n        // for each line, check which end of the line is the next closest\r\n        if (closest.p1.GetDistance2D(last_pnt) < closest.p2.GetDistance2D(last_pnt)) {\r\n            let new_start = closest.p1.relative_point_from_dist_bearing(angle, -leadin);\r\n            new_start.tag = GridPointTags.START;\r\n            //UTMLine(new_start, \"S\");\r\n            ans.push(new_start);\r\n\r\n            if (leadin < 0) {\r\n                var p2 = new_start.copy();\r\n                p2.tag = GridPointTags.MIDDLE_START;\r\n                //UTMLine(p2, \"SM\");\r\n                ans.push(p2);\r\n            } else if (leadin > 0) {\r\n                closest.p1.tag = GridPointTags.MIDDLE_START;\r\n                //UTMLine(closest.p1, \"SM\");\r\n                ans.push(closest.p1);\r\n            }\r\n\r\n            if (spacing > 0) {\r\n                for (let d = (spacing - ((closest.base_pnt.GetDistance2D(closest.p1)) % spacing));\r\n                    d < (closest.p1.GetDistance2D(closest.p2));\r\n                    d += spacing) {\r\n                    // new_pos(ref ax, ref ay, angle, d);\r\n                    let utmpos1 = new UTMPos(closest.p1.x, closest.p1.y, utm_zone, GridPointTags.MIDDLE);\r\n                    //UTMLine(utmpos1, \"M\");\r\n                    ans.push(utmpos1);\r\n                }\r\n            }\r\n\r\n            let new_end = closest.p2.relative_point_from_dist_bearing(angle, overshoot1, GridPointTags.END);\r\n\r\n            if (overshoot1 < 0) {\r\n                var p2 = new_end.copy()\r\n                p2.tag = GridPointTags.MIDDLE_END;\r\n                //UTMLine(p2, \"ME\");\r\n                ans.push(p2);\r\n            } else if (overshoot1 > 0) {\r\n                closest.p2.tag = GridPointTags.MIDDLE_END;\r\n                //UTMLine(closest.p2, \"ME\");\r\n                ans.push(closest.p2);\r\n            }\r\n\r\n            // new_end.tag = GridPointTags.END;\r\n            //UTMLine(new_end, \"E\");\r\n            ans.push(new_end);\r\n\r\n            last_pnt = closest.p2;\r\n\r\n            remove_item_from_array(grid, closest);\r\n            if (grid.length == 0)\r\n                break;\r\n\r\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\r\n        } else {\r\n            let new_start = closest.p2.relative_point_from_dist_bearing(angle, leadin);\r\n            new_start.tag = GridPointTags.START;\r\n            //UTMLine(new_start, \"S\");\r\n            ans.push(new_start);\r\n\r\n            if (leadin < 0) {\r\n                var p2 = new_start.copy()\r\n                p2.tag = GridPointTags.MIDDLE_START;\r\n                //UTMLine(p2, \"SM\");\r\n                ans.push(p2);\r\n            } else if(leadin > 0) {\r\n                closest.p2.tag = GridPointTags.MIDDLE_START;\r\n                //UTMLine(closest.p2, \"SM\");\r\n                ans.push(closest.p2);\r\n            }\r\n\r\n            if (spacing > 0) {\r\n                for (let d = ((closest.base_pnt.GetDistance2D(closest.p2)) % spacing);\r\n                    d < (closest.p1.GetDistance2D(closest.p2));\r\n                    d += spacing) {\r\n                    // let ax = closest.p2.x;\r\n                    // let ay = closest.p2.y;\r\n                    let a = closest.p2.relative_point_from_dist_bearing(angle, -d);\r\n\r\n                    // new_pos(ref ax, ref ay, angle, -d);\r\n                    var utmpos2 = new UTMPos(a.x, a.y, utm_zone, GridPointTags.MIDDLE);\r\n                    //UTMLine(utmpos2, \"M\");\r\n                    ans.push(utmpos2);\r\n                }\r\n            }\r\n\r\n            let new_end = closest.p1.relative_point_from_dist_bearing(angle, -overshoot2, GridPointTags.END);\r\n            // utmpos new_end = new_pos(closest.p1, angle, -overshoot2);\r\n\r\n            if (overshoot2 < 0) {\r\n                // var p2 = new_end.copy(\"ME\");\r\n                //UTMLine(p2, \"ME\");\r\n                ans.push(new_end.copy(GridPointTags.MIDDLE_END));\r\n            } else if (overshoot2 > 0) {\r\n                // closest.p1.tag = \"ME\";\r\n                //UTMLine(closest.p1, \"ME\");\r\n                ans.push(closest.p1.copy(GridPointTags.MIDDLE_END));\r\n            }\r\n\r\n            // new_end.tag = \"E\";\r\n            //UTMLine(new_end, \"E\");\r\n            ans.push(new_end);\r\n\r\n            last_pnt = closest.p1;\r\n\r\n            // grid.Remove(closest);\r\n            remove_item_from_array(grid, closest);\r\n            if (grid.length == 0)\r\n                break;\r\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\r\n        }\r\n    }\r\n\r\n    const points = NeuronInterfacePoint.from_UTMs(ans);\r\n\r\n    // set the altitude on all points\r\n    for(let p of points)\r\n        p.altitude = altitude;\r\n\r\n    return points;\r\n}\r\n","import { L } from \"./interface_leaflet\";\r\nimport { Rect } from \"./neuron_tools_survey\";\r\nimport { UTMPos } from \"./interface_proj4\";\r\n\r\n//TODO: Document\r\nexport enum InterfaceSummaryTabName {\r\n    PLAN = 'tab-mission',\r\n    OPTIONS = 'tab-options',\r\n}\r\n\r\n//TODO: Document\r\nexport enum InterfaceAppElements {\r\n    LOADER = 'loader',\r\n    APP = 'app',\r\n    PLAN = 'fp-mission',\r\n    STATS = 'fp-stats',\r\n    OPTIONS = 'fp-options',\r\n    MAP = 'fp-map-interactive',\r\n    DRAGDROP = 'mission-features-dragdrop',\r\n    HELP = 'fp-map-help',\r\n    BRIEF = 'print-section',\r\n\r\n}\r\n\r\n//Explicit sets of IDs that match DOM elements for the help page interaction\r\nexport const app_element_prefix_help = 'help';\r\nexport const app_elements_ignore_help_subs = [\r\n    'fp-mission',\r\n];\r\n\r\n//TODO: Document\r\nexport interface NeuronInterfacePointData {\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude:number;\r\n    heading:number;\r\n    tag:string;\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronInterfacePoint {\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude:number;\r\n    heading:number;\r\n    tag:string;\r\n\r\n    static _altitude_ratio = 0.3048;\r\n\r\n    constructor(latitude:number=0.0, longitude:number=0.0, altitude:number=0.0, heading:number=0.0, tag:string=\"\") {\r\n        this.latitude = latitude;\r\n        this.longitude = longitude;\r\n        this.altitude = altitude;\r\n        this.heading = heading;\r\n        this.tag = tag;\r\n    }\r\n\r\n    static projection_code() {\r\n        return 'WGS84';\r\n    }\r\n\r\n    equals(other:NeuronInterfacePoint) {\r\n        return this.latitude == other.latitude &&\r\n               this.longitude == other.longitude &&\r\n               this.altitude == other.altitude &&\r\n               this.heading == other.heading;\r\n    }\r\n\r\n    to_leaflet() {\r\n        return L.latLng([this.latitude, this.longitude]);\r\n    }\r\n\r\n    static from_leaflet(latlng:L.LatLng) {\r\n        return new NeuronInterfacePoint(latlng.lat, latlng.lng);\r\n    }\r\n\r\n    to_UTM(zone:number = null) {\r\n        return UTMPos.from_NeuronInterfacePoint(this, zone);\r\n    }\r\n\r\n    static from_UTM(utm:UTMPos) {\r\n        return utm.to_NeuronInterfacePoint();\r\n    }\r\n\r\n    static from_UTMs(positions:UTMPos[]) {\r\n        return positions.map(p => p.to_NeuronInterfacePoint());\r\n    }\r\n\r\n    static isObjectOfDataType(object: any): object is NeuronInterfacePointData {\r\n        let is_valid =\r\n            Number.isFinite(object.latitude) &&\r\n            Number.isFinite(object.longitude) &&\r\n            Number.isFinite(object.altitude) &&\r\n            ((object.tag !== undefined) || (object.tag !== null)) ;\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static from_json(j:NeuronInterfacePointData) {\r\n        if(!NeuronInterfacePoint.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronInterfacePoint`);\r\n\r\n        return new NeuronInterfacePoint(\r\n            Number.isNaN(j.latitude) ? 0.0 : j.latitude,\r\n            Number.isNaN(j.longitude) ? 0.0 : j.longitude,\r\n            Number.isNaN(j.altitude) ? 0.0 : j.altitude,\r\n            Number.isNaN(j.heading) ? 0.0 : j.heading,\r\n            j.tag ? j.tag.toString() : \"\"\r\n        );\r\n    }\r\n\r\n    to_json() {\r\n        return <NeuronInterfacePointData>{\r\n            latitude: this.latitude,\r\n            longitude: this.longitude,\r\n            altitude:this.altitude,\r\n            heading:this.heading,\r\n            tag:this.tag,\r\n        }\r\n    }\r\n\r\n    #value_as_DMS(dd:number, is_lng:boolean) {\r\n        const dir = dd < 0 ? (is_lng ? \"W\" : \"S\") : is_lng ? \"E\" : \"N\";\r\n        const deg = 0 | (dd < 0 ? (dd = -dd) : dd);\r\n        const min = 0 | (((dd += 1e-9) % 1) * 60);\r\n        const sec = (0 | (((dd * 60) % 1) * 6000)) / 100;\r\n\r\n        return `${deg.toFixed(0)}° ${min.toFixed(0)}' ${sec.toFixed(2)}\" ${dir}`;\r\n    }\r\n\r\n    toString(use_imperial:boolean = true, use_decimal:boolean = false) {\r\n        return `[${this.toStringLatitude(use_decimal)}, ${this.toStringLatitude(use_decimal)}, ${this.toStringAltitude(use_imperial)}]`;\r\n     }\r\n\r\n     toStringLatitude(use_decimal:boolean = false) {\r\n        return use_decimal ? this.latitude.toFixed(8) + '°' : this.#value_as_DMS(this.latitude, false);\r\n     }\r\n\r\n     toStringLongitude(use_decimal:boolean = false) {\r\n        return use_decimal ? this.longitude.toFixed(8) + '°' : this.#value_as_DMS(this.longitude, true);\r\n     }\r\n\r\n     toStringAltitude(use_imperial:boolean = true) {\r\n        return use_imperial ? (this.altitude / NeuronInterfacePoint._altitude_ratio ).toFixed(2) + \"'\" : this.altitude.toFixed(2) + 'm';\r\n     }\r\n}\r\n\r\nexport interface NeuronCameraSpecificationsData {\r\n    name:string;\r\n    focal_length:number;    //mm\r\n    sensor_width:number;    //mm\r\n    sensor_height:number;   //mm\r\n    image_width:number;     //px\r\n    image_height:number;    //px\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronCameraSpecifications {\r\n    static TYPE = \"NeuronCameraSpecifications\";\r\n    static VERSION = 'c5a01d00-d4fa-11ec-95ac-1b0aaa4d0e1e';\r\n\r\n    name:string;\r\n    focal_length:number;    //mm\r\n    sensor_width:number;    //mm\r\n    sensor_height:number;   //mm\r\n    image_width:number;     //px\r\n    image_height:number;    //px\r\n\r\n    constructor(name:string=\"Custom\", focal_length:number = 0.0, sensor_width:number = 0.0, sensor_height:number = 0.0, image_width:number = 0, image_height:number = 0) {\r\n        this.name = name;\r\n        this.focal_length = focal_length;\r\n        this.sensor_width = sensor_width;\r\n        this.sensor_height = sensor_height;\r\n        this.image_width = image_width;\r\n        this.image_height = image_height;\r\n    }\r\n\r\n    copy() {\r\n        return new NeuronCameraSpecifications(\r\n            this.name,\r\n            this.focal_length,\r\n            this.sensor_width,\r\n            this.sensor_height,\r\n            this.image_width,\r\n            this.image_height\r\n        );\r\n    }\r\n\r\n    equals(other:NeuronCameraSpecifications) {\r\n        return (this.name == other.name) &&\r\n               (this.focal_length == other.focal_length) &&\r\n               (this.sensor_width == other.sensor_width) &&\r\n               (this.sensor_height == other.sensor_height) &&\r\n               (this.image_width == other.image_width) &&\r\n               (this.image_height == other.image_height);\r\n    }\r\n\r\n    is_valid() {\r\n        return (this.focal_length > 0) &&\r\n               (this.sensor_width > 0) &&\r\n               (this.sensor_height > 0) &&\r\n               (this.image_width > 0) &&\r\n               (this.image_height > 0);\r\n    }\r\n\r\n    get_ground_resolution(distance:number) {\r\n        let res:number = null;\r\n\r\n        if(this.is_valid() && distance > 0) {\r\n            //XXX: Assume square pixels\r\n            const projection = this.get_projected_size(distance);\r\n            if(projection) {\r\n                res = projection.Width() / this.image_width;\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    get_distance(ground_resolution:number) {\r\n        let res:number = null;\r\n\r\n        if(this.is_valid() && ground_resolution > 0) {\r\n            //XXX: Assume square pixels\r\n            const ground_span = this.image_width * ground_resolution;\r\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\r\n\r\n            //Calculate from half the ground span for half the AoV\r\n            res = (ground_span / 2) / Math.tan(fov2_w);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    get_projection(distance:number) {\r\n        let proj:Rect = null;\r\n\r\n        if(this.is_valid() && distance > 0) {\r\n            //Calculate the half field of views\r\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\r\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\r\n\r\n            //Calculate the half distances\r\n            const h2 = Math.tan(fov2_h) * distance;\r\n            const w2 = Math.tan(fov2_w) * distance;\r\n\r\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\r\n        }\r\n\r\n        return proj;\r\n    }\r\n\r\n    get_projected_size(distance:number) {\r\n        let proj:Rect = null;\r\n\r\n        if(this.is_valid() && distance > 0) {\r\n            //Calculate the half field of views\r\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\r\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\r\n\r\n            //Calculate the half distances\r\n            const h2 = Math.tan(fov2_h) * distance;\r\n            const w2 = Math.tan(fov2_w) * distance;\r\n\r\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\r\n        }\r\n\r\n        return proj;\r\n    }\r\n\r\n\r\n\r\n    static isObjectOfDataType(object: any): object is NeuronCameraSpecificationsData {\r\n        let is_valid =\r\n            (object.type == NeuronCameraSpecifications.TYPE) &&\r\n            (object.version == NeuronCameraSpecifications.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n\r\n    static from_json(j:NeuronCameraSpecificationsData) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronCameraSpecifications.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronCameraSpecifications`);\r\n\r\n        return new NeuronCameraSpecifications(\r\n            j.name,\r\n            j.focal_length,\r\n            j.sensor_width,\r\n            j.sensor_height,\r\n            j.image_width,\r\n            j.image_height\r\n        );\r\n    }\r\n\r\n    to_json() {\r\n        return <NeuronCameraSpecificationsData>{\r\n            version: NeuronCameraSpecifications.VERSION,\r\n            type: NeuronCameraSpecifications.TYPE,\r\n            name: this.name,\r\n            focal_length: this.focal_length,\r\n            sensor_width: this.sensor_width,\r\n            sensor_height: this.sensor_height,\r\n            image_width: this.image_width,\r\n            image_height: this.image_height,\r\n        }\r\n    }\r\n}\r\n","import { NeuronCameraSpecifications } from \"./neuron_interfaces\";\r\nimport { NeuronUID } from \"./neuron_tools_common\";\r\n\r\n//TODO: Document\r\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\r\nexport enum NeuronOptionsBoolean {\r\n    SHOW_PATH,\r\n}\r\n\r\n//TODO: Document\r\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\r\nexport enum NeuronOptionsNumber {\r\n    MISSION_SPEED,\r\n    CAMERA_FOCAL_LENGTH,\r\n    CAMERA_IMAGE_WIDTH,\r\n    CAMERA_IMAGE_HEIGHT,\r\n    CAMERA_SENSOR_WIDTH,\r\n    CAMERA_SENSOR_HEIGHT,\r\n}\r\n\r\n//TODO: Document\r\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\r\nexport enum NeuronOptionsString {\r\n    CAMERA_NAME,\r\n}\r\n\r\n//TODO: Document\r\nexport interface NeuronOptionsData {\r\n    SHOW_PATH:boolean,\r\n    MISSION_SPEED:number,\r\n    CAMERA_FOCAL_LENGTH:number,\r\n    CAMERA_IMAGE_WIDTH:number,\r\n    CAMERA_IMAGE_HEIGHT:number,\r\n    CAMERA_SENSOR_WIDTH:number,\r\n    CAMERA_SENSOR_HEIGHT:number,\r\n    CAMERA_NAME:string,\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronOptions {\r\n    //XXX: Keys must be unique!\r\n    static camera_preset_custom = new NeuronCameraSpecifications(\"Custom\", 16, 23.50, 15.60, 6000, 4000);\r\n    static camera_presets:NeuronCameraSpecifications[]= [\r\n        NeuronOptions.camera_preset_custom,\r\n        new NeuronCameraSpecifications(\"A6000\", 20, 23.50, 15.60, 6000, 4000),\r\n    ];\r\n\r\n    //XXX: Keep in sync with NeuronStatisticsOptionKeys\r\n    static #stat_options_boolean:Map<NeuronOptionsBoolean,boolean> = new Map();\r\n    static #stat_options_number:Map<NeuronOptionsNumber,number> = new Map();\r\n    static #stat_options_string:Map<NeuronOptionsString,string> = new Map();\r\n\r\n    static #dom_callback:()=>void = null;\r\n    static #general_callbacks:Map<string,()=>void> = new Map();\r\n\r\n    static init() {\r\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, true, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, 5.0, false, false);\r\n        this.set_camera(NeuronOptions.camera_preset_custom, false, false)\r\n    }\r\n\r\n    static set_dom_callback(callback:()=>void) {\r\n        this.#dom_callback = callback;\r\n    }\r\n\r\n    static add_callback(callback:()=>void) {\r\n        const id = NeuronUID('option');\r\n        this.#general_callbacks.set(id, callback);\r\n        return this.#remove_callback.bind(this, id);\r\n    }\r\n\r\n    static #remove_callback(id:string) {\r\n        if(this.#general_callbacks.has(id)) {\r\n            this.#general_callbacks.delete(id);\r\n        }\r\n    }\r\n\r\n    static #handle_callbacks(trigger_callbacks:boolean, trigger_dom:boolean) {\r\n        if(trigger_callbacks) {\r\n            for(const cb of this.#general_callbacks.values())\r\n                cb();\r\n        }\r\n\r\n        if(trigger_dom && this.#dom_callback)\r\n            this.#dom_callback();\r\n    }\r\n\r\n    static set_option_boolean(key:NeuronOptionsBoolean, value:boolean, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\r\n        this.#stat_options_boolean.set(key, value);\r\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\r\n    }\r\n\r\n    static set_option_number(key:NeuronOptionsNumber, value:number, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\r\n        this.#stat_options_number.set(key, value);\r\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\r\n    }\r\n\r\n    static set_option_string(key:NeuronOptionsString, value:string, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\r\n        this.#stat_options_string.set(key, value);\r\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\r\n    }\r\n\r\n    static set_camera(value:NeuronCameraSpecifications, trigger_callbacks:boolean = false, trigger_dom:boolean = true) {\r\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, value.name, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, value.focal_length, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, value.image_width, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, value.image_height, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, value.sensor_width, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, value.sensor_height, false, false);\r\n\r\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\r\n    };\r\n\r\n    static get_option_boolean(key:NeuronOptionsBoolean) {\r\n        return this.#stat_options_boolean.get(key);\r\n    }\r\n\r\n    static get_option_number(key:NeuronOptionsNumber) {\r\n        return this.#stat_options_number.get(key);\r\n    }\r\n\r\n    static get_option_string(key:NeuronOptionsString) {\r\n        return this.#stat_options_string.get(key);\r\n    }\r\n\r\n    static get_camera() {\r\n        return new NeuronCameraSpecifications(\r\n            this.get_option_string(NeuronOptionsString.CAMERA_NAME),\r\n            this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\r\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\r\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\r\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\r\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT)\r\n        );\r\n    }\r\n\r\n    static as_json() {\r\n        return <NeuronOptionsData>{\r\n            SHOW_PATH: this.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH),\r\n            MISSION_SPEED: this.get_option_number(NeuronOptionsNumber.MISSION_SPEED),\r\n            CAMERA_FOCAL_LENGTH: this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\r\n            CAMERA_SENSOR_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\r\n            CAMERA_SENSOR_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\r\n            CAMERA_IMAGE_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\r\n            CAMERA_IMAGE_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT),\r\n            CAMERA_NAME: this.get_option_string(NeuronOptionsString.CAMERA_NAME),\r\n        };\r\n    }\r\n\r\n    static load(j:NeuronOptionsData) {\r\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, Boolean(j.SHOW_PATH), false, false);\r\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, Number.isNaN(j.MISSION_SPEED) ? 0 : j.MISSION_SPEED, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, Number.isNaN(j.CAMERA_FOCAL_LENGTH) ? 0 : j.CAMERA_FOCAL_LENGTH, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, Number.isNaN(j.CAMERA_IMAGE_WIDTH) ? 0 : j.CAMERA_IMAGE_WIDTH, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, Number.isNaN(j.CAMERA_IMAGE_HEIGHT) ? 0 : j.CAMERA_IMAGE_HEIGHT, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, Number.isNaN(j.CAMERA_SENSOR_WIDTH) ? 0 : j.CAMERA_SENSOR_WIDTH, false, false);\r\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, Number.isNaN(j.CAMERA_SENSOR_HEIGHT) ? 0 : j.CAMERA_SENSOR_HEIGHT, false, false);\r\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, j.CAMERA_NAME.toString(), false, false);\r\n\r\n        this.#handle_callbacks(true, true);\r\n    };\r\n}\r\n","import { NeuronUID } from \"./neuron_tools_common\";\r\n\r\nexport class NeuronDOMFactory {\r\n    #prefix:string;\r\n\r\n\r\n    /** Creates a DOM factory that can be used to generate consistent style elements\r\n     * @param  {string} css_prefix A CSS prefix to give any classes generated by this factory\r\n     */\r\n    constructor (css_prefix:string) {\r\n        this.#prefix = css_prefix;\r\n    }\r\n    /** Creates a HTML label that is linked to a specific input/other DOM element\r\n     * @param  {string} text Label text to show\r\n     * @param  {(HTMLInputElement|HTMLSelectElement|HTMLButtonElement|HTMLOutputElement)} input Input/other HTML element to link this label to\r\n     * @param  {string} description Mouse-over description for this label item\r\n     * @param  {boolean} hide_label Sets the visibility to hidden for this label if true (useful for building grid layouts with only one label but many inputs)\r\n     */\r\n    _create_dom_label(text:string|HTMLElement, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement|HTMLOutputElement), description:string = null, hide_label:boolean=false) {\r\n        if (!input.id)\r\n            input.id = NeuronUID();\r\n\r\n        let l = document.createElement(\"label\");\r\n        l.className = `${this.#prefix}-content-label`;\r\n        l.htmlFor = input.id;\r\n        if(description)\r\n            l.title = description;\r\n        if(hide_label)\r\n            l.style.visibility = 'hidden';\r\n\r\n        l.appendChild(text instanceof HTMLElement ? text : document.createTextNode(text));\r\n\r\n        return l;\r\n    }\r\n\r\n    /** Creates a HTML output element\r\n     * @param  {string} value Value string to set for this element\r\n     */\r\n    _create_dom_output(value:string=null) {\r\n        let dom = document.createElement(\"output\");\r\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\r\n        if(value != null)\r\n            dom.value = value;\r\n        return dom;\r\n    }\r\n\r\n    /**Creates a HTML file loader element\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     * @param  {string} accepts Classifier to force the user to select specific file types\r\n     */\r\n    _create_dom_input_file(on_change:(event:Event) => void, accepts:string = null) {\r\n        let dom = document.createElement(\"input\");\r\n        dom.type = \"file\";\r\n        if(accepts != null)\r\n            dom.accept = accepts;\r\n        dom.className = `${this.#prefix}-content-value`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n\r\n\r\n    /**Creates a HTML button element\r\n     * @param  {string} text Label string to set for this element\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     */\r\n    _create_dom_input_button(text:string, on_change:(event:Event) => void) {\r\n        let dom = document.createElement(\"button\");\r\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-center`;\r\n        dom.onclick = on_change;\r\n        dom.appendChild(document.createTextNode(text));\r\n        return dom;\r\n    }\r\n\r\n    /**Creates a HTML textbox element\r\n     * @param  {string} value Label string to set for this element\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     */\r\n    _create_dom_input_textbox(value:string, on_change:(event:Event) => void) {\r\n        let dom = document.createElement(\"input\");\r\n        dom.type = \"text\";\r\n        dom.value = value.toString();\r\n        dom.className = `${this.#prefix}-content-value`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n\r\n    /**Creates a HTML number scroll element\r\n     * @param  {number} value Value to set for this element\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     * @param  {number} min Minimum value that can be input for this element. Set to null for no minimum.\r\n     * @param  {number} max Maximum value that can be input for this element Set to null for no maximum.\r\n     * @param  {number} step Step value for scrolling/toggling for this element. Set to null for default.\r\n     */\r\n    _create_dom_input_number(value:number, on_change:(event:Event) => void, min:number = null, max:number = null, step:number=null) {\r\n        let dom = document.createElement(\"input\");\r\n        dom.type = \"number\";\r\n        if(min != null)\r\n            dom.min = min.toString();\r\n        if(max != null)\r\n            dom.max = max.toString();\r\n        if(step != null)\r\n            dom.step = step.toString();\r\n        dom.value = value.toString();\r\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n\r\n\r\n    /**Creates a HTML slider element\r\n     * @param  {number} value Value to set for this element\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     * @param  {number} min Minimum value that can be input for this element. Set to null for no minimum.\r\n     * @param  {number} max Maximum value that can be input for this element Set to null for no maximum.\r\n     * @param  {number} step Step value for scrolling/toggling for this element. Set to null for default.\r\n     */\r\n    _create_dom_input_range(value:number, on_change:(event:Event) => void, min:number, max:number, step:number=null) {\r\n        let dom = document.createElement(\"input\");\r\n        dom.type = \"range\";\r\n        dom.min = min.toString();\r\n        dom.max = max.toString();\r\n        if(step == null)\r\n            step = (max - min) / 100;\r\n        dom.step = step.toString();\r\n        dom.value = value.toString();\r\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n\r\n    /**Creates a HTML checkbox element\r\n     * @param  {boolean} checked Initial checked status of the checkbox\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\r\n     */\r\n    _create_dom_input_checkbox(checked:boolean, on_change:(event:Event) => void) {\r\n        let dom = document.createElement(\"input\");\r\n        dom.type = \"checkbox\";\r\n        dom.checked = checked;\r\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n\r\n    /**Creates a HTML dropdown selector element.\r\n     * @param  {string[]} options List of option values for the dropdown list to be used internally.\r\n     * @param  {string[]} labels List of labels for the dropdown list to be shown to the user.\r\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user.\r\n     * @param  {string} selected_option Initial option to be selected. Set to null to be unselected by default.\r\n     */\r\n    _create_dom_input_select(options:string[], labels:string[], on_change:(event:Event) => void, selected_option:string=null) {\r\n        let dom = document.createElement(\"select\");\r\n\r\n        if(options.length != labels.length)\r\n            throw new Error(`Options list does not match labels list (${options.length} != ${labels.length})`);\r\n\r\n        //Create and append the options\r\n        for (let i = 0; i < options.length; i++) {\r\n            let option = document.createElement(\"option\");\r\n            option.value = options[i];\r\n            option.text = labels[i];\r\n            if(selected_option && selected_option==options[i])\r\n                option.selected = true;\r\n            dom.appendChild(option);\r\n        }\r\n        dom.className = `${this.#prefix}-content-value`;\r\n        dom.onchange = on_change;\r\n        return dom;\r\n    }\r\n}\r\n","import { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\r\nimport { L } from \"./interface_leaflet\";\r\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint} from \"./neuron_interfaces\";\r\nimport { NeuronUID } from \"./neuron_tools_common\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeatureBaseData {\r\n    version:string,\r\n    type:string\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeatureBase extends NeuronDOMFactory {\r\n    //XXX: Override this in any inherited classes\r\n    static NAME = \"[BASE FEATURE]\";\r\n    static TYPE = \"NeuronFeatureBase\";\r\n    static VERSION = '5caf31f0-d243-11ec-bbb3-df25a4f645e3';\r\n    static HELP_KEY = 'base';\r\n    static IS_FLYABLE = false;\r\n\r\n    #visible:boolean;\r\n    #map:L.Map;\r\n    #features:L.Layer[];\r\n    #hidden_features:L.Layer[];\r\n    #on_remove:(feature:NeuronFeatureBase)=>void;\r\n    #on_change:(feature:NeuronFeatureBase)=>void;\r\n    #on_move:(feature:NeuronFeatureBase, direction:number)=>void;\r\n\r\n    #dom:HTMLDivElement;\r\n    #dom_buttons_visibility:HTMLButtonElement[];\r\n\r\n    static _altitude_ratio = 0.3048;   //ft -> m: `Alt = [DOM Value] * Ratio\r\n    static _distance_ratio = 0.001;   //km -> m: `Alt = [DOM Value] * Ratio\r\n    static _area_ratio = 0.000001;   //km2 -> m2: `Alt = [DOM Value] * Ratio\r\n\r\n    //Add two sets of icons, one for each size button\r\n    static _button_sizes = [\r\n        'mission-feature-title-button',\r\n        'mission-feature-title-button-small'\r\n    ];\r\n\r\n    constructor(map:L.Map) {\r\n        super('mission-feature');\r\n\r\n        this.#visible = true;\r\n        this.#features = [];\r\n        this.#hidden_features = [];\r\n        this.#map = map;\r\n        this.#dom_buttons_visibility = [];\r\n        this.#dom = null;\r\n        this.set_remove_callback(null);\r\n        this.set_change_callback(null);\r\n        this.set_move_callback(null);\r\n    }\r\n\r\n    _trigger_on_changed() {\r\n        if(this.#on_change)\r\n            this.#on_change(this);\r\n    }\r\n\r\n    _add_layer_to_map(m:L.Layer) {\r\n        if(this.#map) {\r\n            if(this.#visible) {\r\n                m.addTo(this.#map);\r\n\r\n                // //XXX: Forbidden work to change the hue of the marker (must be done after adding to map)\r\n                // //@ts-ignore\r\n                // if(icon_adj && m._icon) {\r\n                //     //@ts-ignore\r\n                //     m._icon.classList.add(icon_adj);\r\n                // }\r\n\r\n                this.#features.push(m);\r\n            } else {\r\n                this.#hidden_features.push(m);\r\n            }\r\n            // m.on('remove', this._feature_removed.bind(this));\r\n        } else {\r\n            console.error('Error: no map reference set');\r\n        }\r\n    }\r\n\r\n    _remove_layer_from_map(m:L.Layer) {\r\n        let index_visible = this.#features.indexOf(m);\r\n        if(index_visible !== -1) {\r\n            this.#features.splice(index_visible, 1);\r\n            m.remove();\r\n        }\r\n\r\n        let index_hidden = this.#hidden_features.indexOf(m);\r\n        if(index_hidden !== -1) {\r\n            this.#features.splice(index_hidden, 1);\r\n            //XXX: These already do not exist on the map, so no need to remove!\r\n        }\r\n    }\r\n\r\n    #update_visibility_dom() {\r\n        if(this.#dom) {\r\n            if(this.#visible) {\r\n                this.#dom.classList.remove('mission-feature-hidden');\r\n            } else {\r\n                this.#dom.classList.add('mission-feature-hidden');\r\n            }\r\n        }\r\n    }\r\n\r\n    #update_visibility_icons() {\r\n        for(let but of this.#dom_buttons_visibility) {\r\n            const is_small = this.#use_small_icon(but.className);\r\n            but.innerHTML = '';\r\n            const icons = neuron_get_icon(this.#visible ? NeuronIcons.HIDE : NeuronIcons.REVEAL, is_small);\r\n            for(const i of icons)\r\n                but.appendChild(i);\r\n        }\r\n    }\r\n\r\n    #use_small_icon(button_class:string) {\r\n        return  button_class.includes('small');\r\n    }\r\n\r\n    #remove_mission_feature_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    _get_dom(text:string=\"Mission Feature\") {\r\n        this.#dom = document.createElement(\"div\");\r\n        this.#dom.id = `mission-item-${NeuronUID()}`;\r\n        this.#dom.className = 'mission-feature';\r\n\r\n        let title = document.createElement(\"div\");\r\n        title.className = 'mission-feature-title';\r\n\r\n        let t = document.createElement(\"div\");\r\n        t.className = 'mission-feature-title-text';\r\n        t.appendChild(document.createTextNode(text));\r\n        title.appendChild(t);\r\n\r\n        let d = document.createElement(\"div\");\r\n        d.className = 'mission-feature-title-button-container';\r\n\r\n        this.#dom_buttons_visibility = [];\r\n        for(const button_class of NeuronFeatureBase._button_sizes) {\r\n            const is_small = this.#use_small_icon(button_class);\r\n\r\n            let b0 = document.createElement(\"button\");\r\n            b0.className = button_class;\r\n            b0.title = \"Zoom to feature\";\r\n            b0.onclick = this.zoom_to_feature.bind(this);\r\n            for(const i of neuron_get_icon(NeuronIcons.IDENTIFY, is_small))\r\n                b0.appendChild(i);\r\n            // let b0i = document.createElement(\"i\");\r\n            // b0i.className = 'fas fa-location-crosshairs' + is_small;\r\n            // b0.appendChild(b0i);\r\n            d.appendChild(b0);\r\n\r\n            let bv = document.createElement(\"button\");\r\n            bv.className = button_class;\r\n            bv.title = \"Toggle feature visibility\";\r\n            bv.onclick = this.toggle_visibility.bind(this);\r\n            d.appendChild(bv);\r\n            this.#dom_buttons_visibility.push(bv);\r\n\r\n            let b1 = document.createElement(\"button\");\r\n            b1.className = button_class;\r\n            b1.title = \"Move up\";\r\n            b1.onclick = this.#request_move.bind(this, -1);\r\n            // let b1i = document.createElement(\"i\");\r\n            // b1i.className = 'fas fa-arrow-up' + is_small;\r\n            // b1.appendChild(b1i);\r\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_UP, is_small))\r\n                b1.appendChild(i);\r\n            d.appendChild(b1);\r\n\r\n            let b2 = document.createElement(\"button\");\r\n            b2.className = button_class;\r\n            b2.title = \"Move down\";\r\n            b2.onclick = this.#request_move.bind(this, 1);\r\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_DOWN, is_small))\r\n                b2.appendChild(i);\r\n            d.appendChild(b2);\r\n\r\n            let b4 = document.createElement(\"button\");\r\n            b4.className = button_class;\r\n            b4.title = \"Help\";\r\n            b4.onclick = this.show_help.bind(this);\r\n            for(const i of neuron_get_icon(NeuronIcons.HELP, is_small))\r\n                b4.appendChild(i);\r\n            d.appendChild(b4);\r\n\r\n            let b3 = document.createElement(\"button\");\r\n            b3.className = button_class;\r\n            b3.title = \"Remove\";\r\n            b3.onclick = this.remove_feature.bind(this);\r\n            for(const i of neuron_get_icon(NeuronIcons.DELETE, is_small))\r\n                b3.appendChild(i);\r\n            d.appendChild(b3);\r\n        }\r\n        title.appendChild(d);\r\n\r\n        this.#update_visibility_icons();\r\n        this.#update_visibility_dom();\r\n\r\n        this.#dom.appendChild(title);\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    // _create_dom_labelled_input(text:string, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement), label_first:boolean=true, hide_label:boolean=false) {\r\n    //     let dom = document.createElement(\"div\");\r\n    //     dom.className = 'mission-feature-content-item';\r\n\r\n    //     if (!input.id)\r\n    //         input.id = NeuronUID();\r\n\r\n    //     let l = document.createElement(\"label\");\r\n    //     l.className = 'mission-feature-content-label';\r\n    //     l.htmlFor = input.id;\r\n    //     l.appendChild(document.createTextNode(text));\r\n    //     if(hide_label)\r\n    //         l.style.visibility = 'hidden';\r\n\r\n    //     if(label_first) {\r\n    //         dom.appendChild(l);\r\n    //         dom.appendChild(input);\r\n    //     } else {\r\n    //         dom.appendChild(input);\r\n    //         dom.appendChild(l);\r\n    //     }\r\n    //     return dom;\r\n    // }\r\n\r\n    #request_move(direction:number = 0) {\r\n        if(this.#on_move && direction != 0) {\r\n            if(this.#dom) {\r\n                this.#dom.classList.remove('mission-feature-highlight-remove');\r\n                this.#dom.classList.add('mission-feature-highlight');\r\n                setTimeout(this.#remove_mission_feature_highlight.bind(this), 1000);\r\n\r\n                // this.#dom.classList.add('mission-feature-moved');\r\n                // setTimeout(this.#remove_mission_feature_moved.bind(this), 300);\r\n            }\r\n\r\n            this.#on_move(this, direction);\r\n\r\n            if(this.#dom) {\r\n                window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n                this.#dom.scrollIntoView();\r\n            }\r\n        }\r\n    }\r\n\r\n    // #remove_mission_feature_moved() {\r\n    //     if(this.#dom) {\r\n    //         this.#dom.classList.remove('mission-feature-moved');\r\n    //         // dom.classList.remove('mission-feature-moved-down');\r\n    //         this.#dom.scrollIntoView();\r\n    //     }\r\n    // }\r\n\r\n    set_remove_callback(on_remove:(feature:NeuronFeatureBase)=>void) {\r\n        this.#on_remove = on_remove;\r\n    }\r\n\r\n    set_change_callback(on_change:(feature:NeuronFeatureBase)=>void) {\r\n        this.#on_change = on_change;\r\n    }\r\n\r\n    set_move_callback(on_move:()=>void) {\r\n        this.#on_move = on_move;\r\n    }\r\n\r\n    get_features() {\r\n        return this.#features;\r\n    }\r\n\r\n    toggle_visibility() {\r\n        this.#visible = !this.#visible;\r\n        if(this.#visible) {\r\n            //Show layers\r\n            this.#features = [].concat(this.#hidden_features);\r\n            this.#hidden_features = [];\r\n\r\n            for(let feature of this.#features)\r\n                feature.addTo(this.#map);\r\n        } else {\r\n            //Hide layers\r\n            this.#hidden_features = [].concat(this.#features);\r\n            this.#features = [];\r\n\r\n            for(let feature of this.#hidden_features)\r\n                feature.remove();\r\n        }\r\n\r\n        this.#update_visibility_icons();\r\n        this.#update_visibility_dom();\r\n    }\r\n\r\n    zoom_to_feature() {\r\n        const group = L.featureGroup(this.#features);\r\n        this.#map.fitBounds(group.getBounds(), {\r\n            padding: [20, 20]\r\n        });\r\n\r\n        window.neuron_map.show_map_help(false);\r\n    }\r\n\r\n\r\n    show_help() {\r\n        //XXX: Implement this per inherited feature\r\n        //XXX: Explicitly do use \"base\" key for the base feature\r\n        window.neuron_map.show_map_help(true);\r\n    }\r\n\r\n    remove_feature() {\r\n        //XXX: Implement this per inherited feature\r\n        if(this.#on_remove)\r\n            this.#on_remove(this);\r\n    }\r\n\r\n    is_flyable() {\r\n        return NeuronFeatureBase.IS_FLYABLE;\r\n    }\r\n\r\n    get_path_coords() {\r\n        //XXX: Implement this per inherited feature\r\n        const coords:NeuronInterfacePoint[] = [];\r\n        return coords;\r\n    }\r\n\r\n    get_dom() {\r\n        //XXX: Implement this per inherited feature\r\n        return this._get_dom();\r\n    }\r\n\r\n    static isObjectOfDataType(object: any): object is NeuronFeatureBaseData {\r\n        let is_valid =\r\n            (object.type == NeuronFeatureBase.TYPE) &&\r\n            (object.version == NeuronFeatureBase.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static from_json(j:NeuronFeatureBaseData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeatureBase.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeatureBase`);\r\n\r\n        return new NeuronFeatureBase(map);\r\n    }\r\n\r\n    to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeatureBaseData>{\r\n            version: NeuronFeatureBase.VERSION,\r\n            type: NeuronFeatureBase.TYPE\r\n        }\r\n    }\r\n}\r\n","//TODO: Document\r\nexport class NeuronHelp {\r\n    static HELP_PREFIX_MISSION = 'help-fp-mission';\r\n\r\n    #help_element_name:string;\r\n    #help_element_ignore_subs:string[];\r\n\r\n    #controller :AbortController;\r\n\r\n    static key_hover_start:string = \"mouseenter\";\r\n    static key_hover_end:string = \"mouseleave\";\r\n\r\n    static class_highlight:string = \"help-highlight\";\r\n\r\n    constructor(help_element_name:string, ignore_sub_keys:string[] = []) {\r\n        this.#help_element_name = help_element_name;\r\n        this.#controller = new AbortController();\r\n        this.#help_element_ignore_subs = ignore_sub_keys;\r\n    }\r\n\r\n    #add_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\r\n        // console.log('mouse entered');\r\n        target_element.classList.add(NeuronHelp.class_highlight);\r\n    }\r\n\r\n    #remove_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\r\n        target_element.classList.remove(NeuronHelp.class_highlight);\r\n        // console.log('mouse exit');\r\n    }\r\n\r\n    #configure_linked_element_callbacks(trigger_element:HTMLElement) {\r\n        if(trigger_element.id) {\r\n            const target_element_ids = trigger_element.id.split(this.#help_element_name + '-');\r\n            const target_element_id = target_element_ids.length > 1 ? target_element_ids[1] : null;\r\n            let target_element = target_element_id ? document.getElementById(target_element_id) : null;\r\n\r\n            if(target_element) {\r\n                // console.log(`Adding help hover display for ${trigger_element.id} -> ${target_element_id}`)\r\n\r\n                trigger_element.addEventListener(NeuronHelp.key_hover_start, this.#add_hover.bind(this, trigger_element, target_element));\r\n                trigger_element.addEventListener(NeuronHelp.key_hover_end, this.#remove_hover.bind(this, trigger_element, target_element));\r\n            } else {\r\n                throw new Error(\"Unable to identify target element with ID: \" + target_element_id);\r\n            }\r\n        } else {\r\n            throw new Error(\"Unable to link element without ID!\");\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        // this.#undo_listeners();\r\n        this.#controller.abort();\r\n    }\r\n\r\n    reset() {\r\n        this.stop();\r\n\r\n        //Go through all the elements we can find and add in our hover callbacks\r\n        const section_elements = Array.from(document.querySelectorAll(\"section\"));\r\n        //Filter to any elements that have out key plus some extra stuff that could be the ID we need\r\n        let help_elements = section_elements.filter(\r\n            x => x.id.includes(this.#help_element_name) && (x.id.length > this.#help_element_name.length)\r\n        );\r\n\r\n        //Iteratively filter to remove any unwanted sub-IDs\r\n        for(const i of this.#help_element_ignore_subs)\r\n            help_elements = help_elements.filter(x => !x.id.includes(`${this.#help_element_name}-${i}-`))\r\n\r\n        //Add the hover function to remaining elements\r\n        for(let e of help_elements)\r\n            this.#configure_linked_element_callbacks(e);\r\n    }\r\n}\r\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\r\nimport { NeuronHelp } from \"./neuron_help\";\r\nimport { NeuronOptions, NeuronOptionsString } from \"./neuron_options\";\r\nimport { NeuronIcons } from \"./interface_fontawesome\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeaturePointData {\r\n    version:string,\r\n    type:string,\r\n    point:NeuronInterfacePointData,\r\n    wait_duration:number,\r\n    capture_image:boolean,\r\n    ground_resolution:number,\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeatureWaypoint extends NeuronFeatureBase {\r\n    static override NAME = \"Waypoint\";\r\n    static override TYPE = \"NeuronFeatureWaypoint\";\r\n    static override VERSION = '1066fce0-dd80-11ec-b085-f96e36263ede';\r\n    static override HELP_KEY = 'waypoint';\r\n    static override IS_FLYABLE = true;\r\n\r\n    #marker:L.Marker;\r\n    #point:NeuronInterfacePoint;\r\n    #dom:HTMLDivElement;\r\n    #dom_lat:HTMLInputElement;\r\n    #dom_lon:HTMLInputElement;\r\n    #dom_alt:HTMLInputElement;\r\n    #dom_hdg:HTMLInputElement;\r\n    #dom_wait:HTMLInputElement;\r\n    #dom_capture:HTMLInputElement;\r\n    #dom_ground_resolution:HTMLInputElement;\r\n    #dom_current_camera:HTMLButtonElement;\r\n\r\n    #wait_duration:number;\r\n    #capture_image:boolean;\r\n    #ground_resolution:number;\r\n\r\n    #unsub_option_cb:()=>void;\r\n\r\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\r\n\r\n    constructor(map:L.Map, point:NeuronInterfacePoint=null) {\r\n        super(map);\r\n\r\n        this.#marker = null;\r\n        this.#point = null;\r\n        this.#dom = null;\r\n        this.#dom_lat = null;\r\n        this.#dom_lon = null;\r\n        this.#dom_alt = null;\r\n        this.#dom_hdg = null;\r\n        this.#dom_wait = null;\r\n        this.#dom_capture = null;\r\n        this.#dom_ground_resolution = null;\r\n\r\n        this.#wait_duration = 0;\r\n        this.#capture_image = false;\r\n        this.#ground_resolution = 0;\r\n        this.#dom_current_camera;\r\n\r\n        if(point)\r\n            this.set_point(point);\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\r\n    }\r\n\r\n    set_options_subscriber() {\r\n        if(this.#unsub_option_cb)\r\n            this.#unsub_option_cb();\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\r\n    }\r\n\r\n    #options_changed() {\r\n        if(this.#dom_current_camera) {\r\n            this.#dom_current_camera.innerText = '';\r\n            this.#dom_current_camera.appendChild(document.createTextNode(NeuronOptions.get_option_string(NeuronOptionsString.CAMERA_NAME)));\r\n        }\r\n\r\n        //Give preference to update altitude from current ground resolution if we're capturing an image\r\n        if(this.#capture_image) {\r\n            this.set_ground_resolution(this.#ground_resolution);\r\n        } else {\r\n            this.#internal_set_point(this.#point, false, false, true);  //Only use this to trigger calcs, don't update other marker details\r\n        }\r\n    }\r\n\r\n    remove_point_by_context(context:L.Marker) {\r\n        if(this.#marker == context) {\r\n            this.remove_feature();\r\n        } else {\r\n            console.warn(\"Call to remove unknown marker context\");\r\n        }\r\n    }\r\n\r\n    #remove_point_by_event(event:L.LeafletEvent) {\r\n        this.remove_point_by_context(event.target);\r\n    }\r\n\r\n    #update_position_from_event(event:L.LeafletEvent) {\r\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\r\n        if (this.#point)\r\n            point.altitude = this.#point.altitude;\r\n        this.#internal_set_point(point);\r\n    }\r\n\r\n    set_point(point:NeuronInterfacePoint) {\r\n        if(!this.#marker) {\r\n            this.#marker = L.marker(point.to_leaflet(),{\r\n                draggable: true,\r\n                autoPan: true,\r\n                icon: get_neuron_map_marker('neuron-marker-waypoint')\r\n            })\r\n\r\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\r\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\r\n\r\n            const menu_items = [\r\n                new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\r\n                null,\r\n                new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\r\n            ]\r\n            this.#marker.bindPopup(create_popup_context_dom(\"Waypoint\", menu_items, this.#marker));\r\n\r\n            this._add_layer_to_map(this.#marker);\r\n        }\r\n\r\n        this.#internal_set_point(point);\r\n    }\r\n\r\n    show_on_plan() {\r\n        if(this.#dom) {\r\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n            this.#dom.scrollIntoView();\r\n            this.#dom.classList.remove('mission-feature-highlight-remove');\r\n            this.#dom.classList.add('mission-feature-highlight');\r\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    #remove_dom_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true, update_calcs:boolean=true) {\r\n        this.#point = point;\r\n\r\n        if(update_marker && this.#marker)\r\n            this.#marker.setLatLng(point.to_leaflet());\r\n\r\n        if(update_dom) {\r\n            if(this.#dom_lat)\r\n                this.#dom_lat.value = point.latitude.toString();\r\n\r\n            if(this.#dom_lon)\r\n                this.#dom_lon.value = point.longitude.toString();\r\n\r\n            if(this.#dom_alt)\r\n                this.#dom_alt.value = (point.altitude / NeuronFeatureBase._altitude_ratio).toString();\r\n\r\n            if(this.#dom_hdg)\r\n                this.#dom_hdg.value = point.heading.toString();\r\n        }\r\n\r\n        if(update_calcs) {\r\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#point.altitude);\r\n            if(resolution) {\r\n                if(this.#dom_ground_resolution)\r\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureWaypoint._gsd_ratio).toString();\r\n\r\n                this.#set_ground_resolution(resolution, false, false);\r\n            }\r\n        }\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    get_wait_duration() {\r\n        return this.#wait_duration;\r\n    }\r\n\r\n    set_wait_duration(wait_duration:number) {\r\n        this.#wait_duration = wait_duration;\r\n\r\n        if(this.#dom_wait)\r\n            this.#dom_wait.value = this.#wait_duration.toString();\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    get_image_count() {\r\n        return this.#capture_image ? 1 : 0;\r\n    }\r\n\r\n    get_capture_image() {\r\n        return this.#capture_image;\r\n    }\r\n\r\n    set_capture_image(capture_image:boolean) {\r\n        this.#capture_image = capture_image;\r\n\r\n        if(this.#dom_capture)\r\n            this.#dom_capture.checked = this.#capture_image;\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    #update_latitude_from_dom() {\r\n        if(this.#point && this.#dom_lat)\r\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\r\n\r\n        this.#internal_set_point(this.#point, true, false, true);\r\n    }\r\n\r\n    #update_longitude_from_dom() {\r\n        if(this.#point && this.#dom_lon)\r\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\r\n\r\n        this.#internal_set_point(this.#point, true, false, true);\r\n    }\r\n\r\n    #update_altitude_from_dom() {\r\n        if(this.#point && this.#dom_alt)\r\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\r\n\r\n        this.#internal_set_point(this.#point, true, false, true);\r\n    }\r\n\r\n    #update_heading_from_dom() {\r\n        if(this.#point && this.#dom_hdg)\r\n            this.#point.heading = this.#dom_hdg.valueAsNumber;\r\n\r\n        this.#internal_set_point(this.#point, true, false);\r\n    }\r\n\r\n    #update_wait_duration_from_dom() {\r\n        this.#wait_duration = this.#dom_wait.valueAsNumber;\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    #update_capture_image_from_dom() {\r\n        this.#capture_image = this.#dom_capture.checked;\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    #update_ground_resolution_from_dom() {\r\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureWaypoint._gsd_ratio);\r\n    }\r\n\r\n    override show_help() {\r\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureWaypoint.HELP_KEY}`);\r\n    }\r\n\r\n    override remove_feature() {\r\n        if(this.#marker)\r\n            this._remove_layer_from_map(this.#marker);\r\n\r\n        super.remove_feature();\r\n    }\r\n\r\n    override get_path_coords() {\r\n        return this.#point ? [this.#point] : [];\r\n    }\r\n\r\n    override is_flyable() {\r\n        return NeuronFeatureWaypoint.IS_FLYABLE;\r\n    }\r\n\r\n    override get_dom() {\r\n        if(!this.#dom) {\r\n            this.#dom = this._get_dom(\"Waypoint\");\r\n\r\n            let c = document.createElement(\"div\");\r\n            c.className = 'mission-feature-content';\r\n\r\n            const t0 = \"Latitude location for the waypoint in decimal degrees\";\r\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\r\n            this.#dom_lat.title = t0;\r\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\r\n            c.appendChild(this.#dom_lat);\r\n\r\n            const t1 = \"Longitude location for the waypoint in decimal degrees\";\r\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\r\n            this.#dom_lon.title = t1;\r\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\r\n            c.appendChild(this.#dom_lon);\r\n\r\n            const t2 = \"Altitude for the waypoint in feet relative to take-off location ground level\";\r\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\r\n            this.#dom_alt.title = t2;\r\n            c.appendChild(this._create_dom_label(\"Altitude (ft):\", this.#dom_alt, t2));\r\n            c.appendChild(this.#dom_alt);\r\n\r\n            const t3 = \"Heading for the waypoint in degrees relative to North\";\r\n            this.#dom_hdg = this._create_dom_input_number((this.#point ? this.#point.heading : 0.0), this.#update_heading_from_dom.bind(this), -180, 180);\r\n            this.#dom_hdg.title = t3;\r\n            c.appendChild(this._create_dom_label(\"Heading:\", this.#dom_hdg, t3));\r\n            c.appendChild(this.#dom_hdg);\r\n\r\n            const t4 = \"Duration in seconds for the aircraft to hold position at the waypoint\";\r\n            this.#dom_wait = this._create_dom_input_number(this.#wait_duration, this.#update_wait_duration_from_dom.bind(this), 0);\r\n            this.#dom_wait.title = t4;\r\n            c.appendChild(this._create_dom_label(\"Wait:\", this.#dom_wait, t4));\r\n            c.appendChild(this.#dom_wait);\r\n\r\n            const t5 = \"Capture an image when the aircraft arrives at the waypoint\";\r\n            this.#dom_capture = this._create_dom_input_checkbox(this.#capture_image, this.#update_capture_image_from_dom.bind(this));\r\n            this.#dom_capture.title = t5;\r\n            c.appendChild(this._create_dom_label(\"Capture:\", this.#dom_capture, t5));\r\n            c.appendChild(this.#dom_capture);\r\n\r\n            const t20 = \"Camera for the mission as configured in the mission options\";\r\n            this.#dom_current_camera = this._create_dom_input_button(NeuronOptions.camera_preset_custom.name, window.neuron_set_panel_view.bind(null, InterfaceSummaryTabName.OPTIONS));\r\n            this.#dom_current_camera.title = t20;\r\n            c.appendChild(this._create_dom_label(\"Camera:\", this.#dom_current_camera, t20));\r\n            c.appendChild(this.#dom_current_camera);\r\n\r\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\r\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureWaypoint._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\r\n            this.#dom_ground_resolution.title = t18;\r\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\r\n            c.appendChild(this.#dom_ground_resolution);\r\n\r\n            this.#dom.append(c);\r\n        }\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    set_ground_resolution(ground_resolution:number) {\r\n        this.#set_ground_resolution(ground_resolution);\r\n    }\r\n\r\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true, trigger_callbacks:boolean = true) {\r\n        this.#ground_resolution = ground_resolution;\r\n\r\n        if(update_calcs) {\r\n            let altitude = NeuronOptions.get_camera().get_distance(this.get_ground_resolution());\r\n\r\n            if( altitude && altitude != this.#point.altitude) {\r\n                this.#point.altitude = altitude;\r\n                this.#internal_set_point(this.#point, true, true, false);\r\n            }\r\n        }\r\n\r\n        if(trigger_callbacks)\r\n            this._trigger_on_changed();\r\n    };\r\n\r\n\r\n    get_ground_resolution() {\r\n        return this.#ground_resolution;\r\n    };\r\n\r\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\r\n        let is_valid =\r\n            (object.type == NeuronFeatureWaypoint.TYPE) &&\r\n            (object.version == NeuronFeatureWaypoint.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeatureWaypoint.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\r\n\r\n        const point = NeuronInterfacePoint.from_json(j.point);\r\n        const p = new NeuronFeatureWaypoint(map, point);\r\n        p.set_wait_duration(Number.isNaN(j.wait_duration) ? 0.0 : j.wait_duration);\r\n        p.set_capture_image(Boolean(j.capture_image));\r\n        p.set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution); //Also triggers update of calculations\r\n        return p;\r\n    }\r\n\r\n    override to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeaturePointData>{\r\n            version: NeuronFeatureWaypoint.VERSION,\r\n            type: NeuronFeatureWaypoint.TYPE,\r\n            point: this.#point.to_json(),\r\n            wait_duration: this.#wait_duration,\r\n            capture_image: this.#capture_image,\r\n            ground_resolution: this.#ground_resolution,\r\n        }\r\n    }\r\n}\r\n","/** Generates a generic file name based on the current time and date\r\n * @param  {string} ext file extension to give the file\r\n */\r\nexport function get_filename(ext:string) {\r\n    return `neuron-planner${Date.now()}.${ext}`;\r\n}\r\n\r\n/** Initiates a file download for a given data blob\r\n * @param  {string} filename Filename preset of the downloaded file\r\n * @param  {Blob} data File data to be downloaded\r\n */\r\nexport async function download_file(filename:string, data:Blob) {\r\n    var element = document.createElement('a');\r\n    const burl = URL.createObjectURL(data);\r\n    element.setAttribute('href', burl);\r\n    element.setAttribute('download', filename);\r\n\r\n    element.style.display = 'none';\r\n    document.body.appendChild(element);\r\n\r\n    element.click();\r\n\r\n    document.body.removeChild(element);\r\n}","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\r\nimport { download_file, get_filename } from \"./neuron_tools_files\"\r\nimport * as zip from \"@zip.js/zip.js\";\r\n\r\n//TODO: Document\r\nconst type_kml = \"application/vnd.google-earth.kml+xml\";\r\nconst type_kmz = \"application/vnd.google-earth.kmz\";\r\n\r\n//TODO: Document\r\nexport function get_supported_kmx_types() {\r\n    return [type_kml, type_kmz];\r\n}\r\n\r\n//TODO: Document\r\nexport interface NeuronKMLData {\r\n    markers:NeuronInterfacePoint[];\r\n    paths:NeuronInterfacePoint[][];\r\n    polygons:NeuronInterfacePoint[][];\r\n}\r\n\r\n//TODO: Document\r\nexport function get_file_type(file:Blob|File) {\r\n    if(file.type) {\r\n        return file.type;\r\n    }\r\n\r\n    if(file instanceof File) {\r\n        const parts = file.name.split('.');\r\n        const t = parts[parts.length-1];\r\n\r\n        switch(t) {\r\n            case \"kml\": return type_kml;\r\n            case \"kmz\": return type_kmz;\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\n//TODO: Document\r\nexport async function kmx_load_file(file:Blob|File, cb_file_loaded:(result:NeuronKMLData)=>void) {\r\n    let result = null;\r\n    let f_type = get_file_type(file);\r\n    console.log(`Loaded file identified as \"${f_type}\" type`);\r\n    switch(f_type) {\r\n        case type_kml: {\r\n            const text = await file.text();\r\n            result = await kml_extract_features(text);\r\n            break;\r\n        }\r\n        case type_kmz: {\r\n            const reader = new zip.ZipReader(new zip.BlobReader(file));\r\n            const entries = await reader.getEntries();\r\n            let got_data = false;\r\n            let markers:NeuronInterfacePoint[] = [];\r\n            let paths:NeuronInterfacePoint[][] = [];\r\n            let polygons:NeuronInterfacePoint[][] = [];\r\n\r\n            for(const e of entries) {\r\n                const text:string = await e.getData(new zip.TextWriter());\r\n                const r = await kml_extract_features(text);\r\n\r\n                if(r.markers.length || r.paths.length || r.polygons.length) {\r\n                    got_data = true;\r\n                    markers.push(...r.markers);\r\n                    paths.push(...r.paths);\r\n                    polygons.push(...r.polygons);\r\n                }\r\n            }\r\n\r\n            if(got_data) {\r\n                result = {\r\n                    markers: markers,\r\n                    paths: paths,\r\n                    polygons: polygons,\r\n                }\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        default: {\r\n            console.warn(`File not supported: ${file}`);\r\n        }\r\n    }\r\n\r\n    // console.log(result);\r\n    cb_file_loaded(result);\r\n}\r\n\r\n//TODO: Document\r\nexport async function kml_extract_features(kml_plain_text:string) {\r\n    //XXX: Only supports google marks/placemarks and polygons\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(kml_plain_text, \"text/xml\");\r\n    let ret:NeuronKMLData = null;\r\n\r\n    if (xmlDoc.documentElement.nodeName == \"kml\") {\r\n        let markers:NeuronInterfacePoint[] = [];\r\n        let paths:NeuronInterfacePoint[][] = [];\r\n        let polygons:NeuronInterfacePoint[][] = [];\r\n\r\n        for (const item of xmlDoc.getElementsByTagName('Placemark')) {\r\n            let placeMarkName = \"Unknown\";\r\n            try{\r\n                placeMarkName = item.getElementsByTagName('name')[0].childNodes[0].nodeValue.trim();\r\n            }\r\n            catch {}\r\n            let kml_polygons = Array.from(item.getElementsByTagName('Polygon'));\r\n            let kml_markers = Array.from(item.getElementsByTagName('Point'));\r\n            let kml_paths = Array.from(item.getElementsByTagName('LineString'));\r\n\r\n            for(const multi of item.getElementsByTagName('MultiGeometry')) {\r\n                kml_polygons = kml_polygons.concat(Array.from(multi.getElementsByTagName('Polygon')));\r\n                kml_markers = kml_markers.concat(Array.from(multi.getElementsByTagName('Point')));\r\n                kml_paths = kml_paths.concat(Array.from(multi.getElementsByTagName('LineString')));\r\n            }\r\n\r\n            /** MARKER PARSE **/\r\n            for (const [ind, marker] of kml_markers.entries()) {\r\n                let point = \"\";\r\n                try {\r\n                    point = marker.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\r\n                } catch(e) {\r\n                    console.warn(\"Unable to extract marker #\" + (ind + 1).toString());\r\n                    if (e instanceof TypeError) {\r\n                        //Do nothing?\r\n                    } else {\r\n                        console.warn(e);\r\n                    }\r\n                }\r\n\r\n                if (point.length) {\r\n                    let p = point_from_coord(point.split(\",\"));\r\n                    p.tag = placeMarkName;\r\n                    markers.push(p);\r\n                }\r\n            }\r\n\r\n            /** PATH PARSE **/\r\n            for (const [ind, path] of kml_paths.entries()) {\r\n                let coords = \"\";\r\n\r\n                try {\r\n                    coords = path.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\r\n                } catch(e) {\r\n                    console.warn(\"Unable to extract path #\" + (ind + 1).toString());\r\n                    if (e instanceof TypeError) {\r\n                        //Do nothing?\r\n                    } else {\r\n                        console.warn(e);\r\n                    }\r\n                }\r\n\r\n                if(coords.length) {\r\n                    let kml_points = coords.split(\" \");\r\n\r\n                    let points:NeuronInterfacePoint[] = [];\r\n                    for (const point of kml_points) {\r\n                        points.push(point_from_coord(point.split(\",\")));\r\n                    }\r\n\r\n                    paths.push(points);\r\n                }\r\n            }\r\n\r\n            /** POLYGONS PARSE **/\r\n            for (const [ind, polygon] of kml_polygons.entries()) {\r\n                let coords = \"\";\r\n\r\n                try {\r\n                    coords = polygon.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\r\n                } catch(e) {\r\n                    console.warn(\"Unable to extract polygon #\" + (ind + 1).toString());\r\n                    if (e instanceof TypeError) {\r\n                        //Do nothing?\r\n                    } else {\r\n                        console.warn(e);\r\n                    }\r\n                }\r\n\r\n                if(coords.length) {\r\n\r\n                    let kml_points = coords.split(\" \");\r\n\r\n                    let points:NeuronInterfacePoint[] = [];\r\n                    for (const point of kml_points) {\r\n                        points.push(point_from_coord(point.split(\",\")));\r\n                    }\r\n\r\n                    polygons.push(points);\r\n                }\r\n            }\r\n        }\r\n\r\n        ret = { markers: markers, paths: paths, polygons: polygons };\r\n    } else {\r\n        console.error(\"Error while parsing KML string\");\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\n//TODO: Document\r\nfunction point_from_coord(coords:string[]) {\r\n\r\n    let lat = coords.length >= 2 ? Number.parseFloat(coords[1]) : 0.0;\r\n    let lon = coords.length >= 1 ? Number.parseFloat(coords[0]) : 0.0;\r\n    let alt = coords.length >= 3 ? Number.parseFloat(coords[2]) : 0.0;\r\n\r\n    return new NeuronInterfacePoint(\r\n        Number.isNaN(lat) ? 0.0 : lat,\r\n        Number.isNaN(lon) ? 0.0 : lon,\r\n        Number.isNaN(alt) ? 0.0 : alt,\r\n    );\r\n}\r\n\r\n//TODO: Document\r\nexport async function kml_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\r\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\r\n    const file = new Blob(\r\n        [textXML],\r\n        {\r\n            type: type_kml\r\n        }\r\n    );\r\n    download_file(get_filename('kml'), file);\r\n}\r\n\r\n//TODO: Document\r\nexport async function kmz_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\r\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\r\n    const kmz = await get_kmz_from_kml_data(textXML);\r\n    download_file(get_filename('kmz'), kmz);\r\n}\r\n\r\n//TODO: Document\r\nasync function get_kmz_from_kml_data(data:string) {\r\n    // use a BlobWriter to store with a ZipWriter the zip into a Blob object\r\n    const blobWriter = new zip.BlobWriter(type_kmz);\r\n    const writer = new zip.ZipWriter(blobWriter);\r\n\r\n    // use a TextReader to read the String to add\r\n    await writer.add(\"doc.kml\", new zip.TextReader(data));\r\n\r\n    // close the ZipReader\r\n    await writer.close();\r\n\r\n    // get the zip file as a Blob\r\n    return blobWriter.getData();\r\n}\r\n\r\n//TODO: Document\r\nexport async function kml_data_from_neuron_data(markers:NeuronInterfacePoint[], paths:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\r\n    let xmlDocument = document.implementation.createDocument(\"\", \"\", null);\r\n    const kmlNode = xmlDocument.createElement('kml');\r\n    kmlNode.setAttribute('xmlns', 'http://www.opengis.net/kml/2.2');\r\n    const documentNode = xmlDocument.createElement('Document');\r\n    kmlNode.appendChild(documentNode);\r\n    xmlDocument.appendChild(kmlNode);\r\n\r\n    //Markers\r\n    for(let i=0; i<markers.length; i++) {\r\n        documentNode.appendChild(\r\n            kml_create_point_node(xmlDocument, markers[i].tag ? markers[i].tag : `Marker #${i+1}`, markers[i].latitude, markers[i].longitude)\r\n        );\r\n    }\r\n\r\n    //Paths\r\n    for(let i=0; i<paths.length; i++) {\r\n        if(paths[i].length)\r\n            documentNode.appendChild(kml_create_path_node(xmlDocument, (i == 0) ? \"flight-path\" : `paths-${i+1}`, paths[i]));\r\n    }\r\n\r\n    //Polygons\r\n    for(let i=0; i<polygons.length; i++) {\r\n        if(polygons[i].length)\r\n            documentNode.appendChild(kml_create_polygon_node(xmlDocument, `polygon-${i+1}`, polygons[i]));\r\n    }\r\n\r\n    return kml_document_to_string(xmlDocument);\r\n}\r\n\r\n//TODO: Document\r\nexport function kml_document_to_string(xmlDocument: XMLDocument) {\r\n    let textXML = new XMLSerializer().serializeToString(xmlDocument);\r\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + textXML;\r\n}\r\n\r\n//TODO: Document\r\nfunction kml_create_point_node(xmlDocument: XMLDocument, name:string, lat:number, lng:number) {\r\n    const placemarkNode = xmlDocument.createElement('Placemark');\r\n    const nameNode = xmlDocument.createElement('name');\r\n    nameNode.innerHTML = name;\r\n    const descriptionNode = xmlDocument.createElement('description');\r\n    const pointNode = xmlDocument.createElement('Point');\r\n    const coordinatesNode = xmlDocument.createElement('coordinates');\r\n    coordinatesNode.innerHTML = `${lng},${lat}`;\r\n    placemarkNode.appendChild(nameNode);\r\n    placemarkNode.appendChild(descriptionNode);\r\n    placemarkNode.appendChild(pointNode);\r\n    pointNode.appendChild(coordinatesNode);\r\n    return placemarkNode;\r\n}\r\n\r\n//TODO: Document\r\nfunction kml_create_path_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\r\n    const placemarkNode = xmlDocument.createElement('Placemark');\r\n    const nameNode = xmlDocument.createElement('name');\r\n    nameNode.innerHTML = name;\r\n    const descriptionNode = xmlDocument.createElement('description');\r\n    const lineStringNode = xmlDocument.createElement('LineString');\r\n    const coordinatesNode = xmlDocument.createElement('coordinates');\r\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\r\n    coordinatesNode.innerHTML = plist.join(' ');\r\n    placemarkNode.appendChild(nameNode);\r\n    placemarkNode.appendChild(descriptionNode);\r\n    placemarkNode.appendChild(lineStringNode);\r\n    lineStringNode.appendChild(coordinatesNode);\r\n    return placemarkNode;\r\n}\r\n\r\n//TODO: Document\r\nfunction kml_create_polygon_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\r\n    const placemarkNode = xmlDocument.createElement('Placemark');\r\n    const nameNode = xmlDocument.createElement('name');\r\n    nameNode.innerHTML = name;\r\n    const descriptionNode = xmlDocument.createElement('description');\r\n    const polygonNode = xmlDocument.createElement('Polygon');\r\n    const boundaryNode = xmlDocument.createElement('outerBoundaryIs');\r\n    const ringNode = xmlDocument.createElement('LinearRing');\r\n    const coordinatesNode = xmlDocument.createElement('coordinates');\r\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\r\n    coordinatesNode.innerHTML = plist.join(' ');\r\n    placemarkNode.appendChild(nameNode);\r\n    placemarkNode.appendChild(descriptionNode);\r\n    placemarkNode.appendChild(polygonNode);\r\n    polygonNode.appendChild(boundaryNode);\r\n    boundaryNode.appendChild(ringNode);\r\n    ringNode.appendChild(coordinatesNode);\r\n    return placemarkNode;\r\n}\r\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\r\nimport { kml_download_from_neuron_data, kmz_download_from_neuron_data } from \"./neuron_tools_kml\";\r\nimport { NeuronHelp } from \"./neuron_help\";\r\nimport { NeuronIcons } from \"./interface_fontawesome\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeatureLineData {\r\n    version:string;\r\n    type:string;\r\n    start:NeuronInterfacePointData;\r\n    end:NeuronInterfacePointData;\r\n    label:string;\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeatureLine extends NeuronFeatureBase {\r\n    static override NAME = \"Line\";\r\n    static override TYPE = \"NeuronFeatureLine\";\r\n    static override VERSION = 'bd03b410-ed17-11ec-ada3-676515aa426a';\r\n    static override HELP_KEY = 'line';\r\n\r\n    #show_ends:boolean\r\n\r\n    #label:string;\r\n    #start:L.Marker;\r\n    #end:L.Marker;\r\n    #line:L.Polyline;\r\n    #on_change_internal:()=>void;\r\n    #dom:HTMLDivElement;\r\n    #dom_length:HTMLOutputElement;\r\n    #dom_bearing:HTMLOutputElement;\r\n    #dom_show_ends:HTMLInputElement;\r\n    #dom_label:HTMLInputElement;\r\n    #dom_export_kml:HTMLButtonElement;\r\n    #dom_export_kmz:HTMLButtonElement;\r\n\r\n    constructor(map:L.Map, start:NeuronInterfacePoint=null, end:NeuronInterfacePoint=null) {\r\n        super(map);\r\n        this.#on_change_internal = null;\r\n        this.#dom = null;\r\n        this.#dom_length = null;\r\n        this.#dom_export_kml = null;\r\n        this.#dom_export_kmz = null;\r\n        this.#label = \"\";\r\n        this.#line = null;\r\n        this.#show_ends = true;\r\n        this.set_start(start);\r\n        this.set_end(end);\r\n        //XXX: update_line() called by start and end\r\n    }\r\n\r\n    #generate_popup(context:L.Marker) {\r\n        const menu_items = [\r\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\r\n            null,\r\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_feature.bind(this)),\r\n        ]\r\n        context.bindPopup(create_popup_context_dom(this.#label ? this.#label : \"Line End\", menu_items, context));\r\n    }\r\n\r\n    set_start(point:NeuronInterfacePoint) {\r\n        if(this.#start) {\r\n            //Update the existing polygon\r\n            // console.log(this.#polygon);\r\n            this.#start.setLatLng(point.to_leaflet());\r\n        } else {\r\n            let m = L.marker(point.to_leaflet(), {\r\n                draggable: true,\r\n                autoPan: true,\r\n                icon: get_neuron_map_marker('neuron-marker-line-start')\r\n            })\r\n\r\n            m.on(\"drag\", this.update_line.bind(this));\r\n            m.on(\"dblclick\", this.#remove_by_event.bind(this));\r\n            this.#generate_popup(m);\r\n\r\n            this.#start = m;\r\n            if(this.#show_ends)\r\n                this._add_layer_to_map(m);\r\n        }\r\n\r\n        this.update_line();\r\n    }\r\n\r\n    set_end(point:NeuronInterfacePoint) {\r\n        if(this.#end) {\r\n            //Update the existing polygon\r\n            // console.log(this.#polygon);\r\n            this.#end.setLatLng(point.to_leaflet());\r\n        } else {\r\n            let m = L.marker(point.to_leaflet(), {\r\n                draggable: true,\r\n                autoPan: true,\r\n                icon: get_neuron_map_marker('neuron-marker-line-end')\r\n            })\r\n\r\n            m.on(\"drag\", this.update_line.bind(this));\r\n            m.on(\"dblclick\", this.#remove_by_event.bind(this));\r\n            this.#generate_popup(m);\r\n\r\n            this.#end = m;\r\n            if(this.#show_ends)\r\n                this._add_layer_to_map(m);\r\n        }\r\n\r\n        this.update_line();\r\n    }\r\n\r\n    update_line() {\r\n        if((this.#start != null) && (this.#end != null)) {\r\n            //Add or update the line\r\n            if(this.#line) {\r\n                this.#line.setLatLngs([this.#start.getLatLng(), this.#end.getLatLng()]);\r\n            } else {\r\n                this.#line = L.polyline([this.#start.getLatLng(), this.#end.getLatLng()], {color: 'violet'});\r\n                // this.#line.on(\"click\", this.#add_point_at_mouseevent.bind(this));\r\n                if(this.#show_ends)\r\n                    this._add_layer_to_map(this.#line);\r\n            }\r\n        } else {\r\n            //Remove the line\r\n            this._remove_layer_from_map(this.#line);\r\n            this.#line = null;\r\n        }\r\n\r\n        this.#try_update_dom();\r\n    }\r\n\r\n    corners_visible() {\r\n        return this.#show_ends;\r\n    }\r\n\r\n    update_show_ends(show_ends:boolean) {\r\n        this.#show_ends = show_ends;\r\n\r\n        if(this.#show_ends) {\r\n            //Show layers\r\n            this._add_layer_to_map(this.#start);\r\n            this._add_layer_to_map(this.#end);\r\n        } else {\r\n            //Hide layers\r\n            this._remove_layer_from_map(this.#start);\r\n            this._remove_layer_from_map(this.#end);\r\n        }\r\n    }\r\n\r\n    _set_on_change_internal(on_change:()=>void=null) {\r\n        this.#on_change_internal = on_change;\r\n    }\r\n\r\n    get_line() {\r\n        return this.#line;\r\n    }\r\n\r\n    show_on_plan() {\r\n        if(this.#dom) {\r\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n            this.#dom.scrollIntoView();\r\n            this.#dom.classList.remove('mission-feature-highlight-remove');\r\n            this.#dom.classList.add('mission-feature-highlight');\r\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    #remove_dom_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    #remove_by_event(event:L.LeafletEvent) {\r\n        this.remove_feature();\r\n    }\r\n\r\n    #try_update_dom() {\r\n        if(this.#dom_length) {\r\n            let dist = 0;\r\n            if(this.#start && this.#end) {\r\n                let p1 = NeuronInterfacePoint.from_leaflet(this.#start.getLatLng());\r\n                let p2 = NeuronInterfacePoint.from_leaflet(this.#end.getLatLng());\r\n                let u1 = p1.to_UTM();\r\n                let u2 = p2.to_UTM(u1.zone);\r\n                dist = u1.GetDistance2D(u2) * NeuronFeatureLine._distance_ratio;\r\n            }\r\n            this.#dom_length.value = dist.toFixed(3);\r\n        }\r\n\r\n        if(this.#dom_bearing) {\r\n            let bearing = 0;\r\n            if(this.#start && this.#end) {\r\n                let p1 = NeuronInterfacePoint.from_leaflet(this.#start.getLatLng());\r\n                let p2 = NeuronInterfacePoint.from_leaflet(this.#end.getLatLng());\r\n                let u1 = p1.to_UTM();\r\n                let u2 = p2.to_UTM(u1.zone);\r\n                let angle = u1.GetAngle(u2);\r\n                bearing = ((Math.PI/2 - angle)*180/Math.PI) % 360;\r\n                if(bearing < 0)\r\n                    bearing += 360\r\n            }\r\n            this.#dom_bearing.value = bearing.toFixed(2);\r\n        }\r\n    }\r\n\r\n    get_ends_as_points() {\r\n        let ends:NeuronInterfacePoint[] = [];\r\n        if (this.#start && this.#end) {\r\n            ends.push(NeuronInterfacePoint.from_leaflet(this.#start.getLatLng()));\r\n            ends.push(NeuronInterfacePoint.from_leaflet(this.#end.getLatLng()));\r\n        }\r\n        return ends;\r\n    }\r\n\r\n    #export_as_kml() {\r\n        kml_download_from_neuron_data([], [this.get_ends_as_points()], []);\r\n    }\r\n\r\n    #export_as_kmz() {\r\n        kmz_download_from_neuron_data([], [this.get_ends_as_points()], []);\r\n    }\r\n\r\n    override show_help() {\r\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureLine.HELP_KEY}`);\r\n    }\r\n\r\n    override remove_feature() {\r\n        if(this.#start) {\r\n            this._remove_layer_from_map(this.#start);\r\n            this.#start = null;\r\n        }\r\n\r\n        if(this.#end) {\r\n            this._remove_layer_from_map(this.#end);\r\n            this.#end = null;\r\n        }\r\n\r\n        if(this.#line) {\r\n            this._remove_layer_from_map(this.#line);\r\n            this.#line = null;\r\n        }\r\n\r\n        super.remove_feature();\r\n    }\r\n\r\n    //override get_path_coords() {} //XXX: No paths provided by this feature, use base return\r\n\r\n    override get_dom() {\r\n        if(!this.#dom) {\r\n            this.#dom = this._get_dom(\"Line\");\r\n\r\n            let c = document.createElement(\"div\");\r\n            c.className = 'mission-feature-content';\r\n\r\n            //Output items\r\n            const t4 = \"Length of the line from start to end in kilometers\";\r\n            this.#dom_length = this._create_dom_output();\r\n            this.#dom_length.title = t4;\r\n            c.appendChild(this._create_dom_label(\"Length:\", this.#dom_length, t4));\r\n            c.appendChild(this.#dom_length);\r\n\r\n            const t5 = \"Angle from North in degrees that the line makes from start to end\";\r\n            this.#dom_bearing = this._create_dom_output();\r\n            this.#dom_bearing.title = t5;\r\n            c.appendChild(this._create_dom_label(\"Bearing:\", this.#dom_bearing, t5));\r\n            c.appendChild(this.#dom_bearing);\r\n\r\n            this.#try_update_dom();\r\n\r\n            //Input Items\r\n            const t21 = \"Show the corners of the polygon\";\r\n            this.#dom_show_ends = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\r\n            this.#dom_show_ends.title = t21;\r\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_ends, t21));\r\n            c.appendChild(this.#dom_show_ends);\r\n\r\n            const t22 = \"Text label for identification of the polygon\";\r\n            this.#dom_label = this._create_dom_input_textbox(this.#label, this.#update_label_from_dom.bind(this));\r\n            this.#dom_label.title = t22;\r\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t22));\r\n            c.appendChild(this.#dom_label);\r\n\r\n            const t1 = \"Export this line to a drawing document\";\r\n            const t11 = \"Export this line to a KML document\";\r\n            const t12 = \"Export this line to a KMZ document\";\r\n            this.#dom_export_kml = this._create_dom_input_button(\"KML\", this.#export_as_kml.bind(this));\r\n            this.#dom_export_kml.title = t11;\r\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kml, t1));\r\n            c.appendChild(this.#dom_export_kml);\r\n\r\n            this.#dom_export_kmz = this._create_dom_input_button(\"KMZ\", this.#export_as_kmz.bind(this));\r\n            this.#dom_export_kmz.title = t12;\r\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kmz, t1, true));\r\n            c.appendChild(this.#dom_export_kmz);\r\n\r\n            // c.appendChild(this._create_dom_labelled_input(\"\", this.#dom_export_shape.bind(this)));\r\n\r\n\r\n            this.#dom.append(c);\r\n        }\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    #update_show_corners_from_dom() {\r\n        this.update_show_ends(this.#dom_show_ends.checked);\r\n    }\r\n\r\n    #update_label_from_dom() {\r\n        this.set_label(this.#dom_label.value, false);\r\n    }\r\n\r\n    get_label() {\r\n        return this.#label;\r\n    }\r\n\r\n    set_label(label:string, update_dom:boolean = true) {\r\n        this.#label = label;\r\n        if(this.#dom_label && update_dom)\r\n            this.#dom_label.value = label;\r\n\r\n        if(this.#start)\r\n            this.#generate_popup(this.#start);\r\n        if(this.#end)\r\n            this.#generate_popup(this.#end);\r\n    }\r\n\r\n    static override isObjectOfDataType(object: any): object is NeuronFeatureLineData {\r\n        let is_valid =\r\n            (object.type == NeuronFeatureLine.TYPE) &&\r\n            (object.version == NeuronFeatureLine.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static from_json(j:NeuronFeatureLineData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeatureLine.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeatureLine`);\r\n\r\n        let p = new NeuronFeatureLine(map, NeuronInterfacePoint.from_json(j.start), NeuronInterfacePoint.from_json(j.end));\r\n        p.set_label(j.label.toString());\r\n        return p;\r\n    }\r\n\r\n    override to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeatureLineData>{\r\n            version: NeuronFeatureLine.VERSION,\r\n            type: NeuronFeatureLine.TYPE,\r\n            start: this.#start ? NeuronInterfacePoint.from_leaflet(this.#start.getLatLng()) : new NeuronInterfacePoint(),\r\n            end: this.#end ? NeuronInterfacePoint.from_leaflet(this.#end.getLatLng()) : new NeuronInterfacePoint(),\r\n            label: this.#label,\r\n        }\r\n    }\r\n}\r\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\r\nimport { kml_download_from_neuron_data, kmz_download_from_neuron_data } from \"./neuron_tools_kml\";\r\nimport { NeuronPlanner } from \"./neuron_planner\";\r\nimport { NeuronHelp } from \"./neuron_help\";\r\nimport { NeuronIcons } from \"./interface_fontawesome\";\r\nimport { UTMPos } from \"./interface_proj4\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeaturePolygonData {\r\n    version:string;\r\n    type:string;\r\n    corners:NeuronInterfacePointData[];\r\n    label:string;\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeaturePolygon extends NeuronFeatureBase {\r\n    static override NAME = \"Polygon\";\r\n    static override TYPE = \"NeuronFeaturePolygon\";\r\n    static override VERSION = 'f0e9c050-e135-11ec-8ea0-c3c316816bb1';\r\n    static override HELP_KEY = 'polygon';\r\n\r\n    #show_corners:boolean\r\n\r\n    #label:string;\r\n    #corners:L.Marker[];\r\n    #polygon:L.Polygon;\r\n    #planner:NeuronPlanner;\r\n    #selected_corner:number;\r\n    #on_change_internal:()=>void;\r\n    #dom:HTMLDivElement;\r\n    #dom_corner_count:HTMLOutputElement;\r\n    #dom_perimeter:HTMLOutputElement;\r\n    #dom_area:HTMLOutputElement;\r\n    #dom_show_corners:HTMLInputElement;\r\n    #dom_label:HTMLInputElement;\r\n    #dom_convert_survey:HTMLButtonElement;\r\n    #dom_export_kml:HTMLButtonElement;\r\n    #dom_export_kmz:HTMLButtonElement;\r\n\r\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], planner:NeuronPlanner = null) {\r\n        super(map);\r\n        this.#on_change_internal = null;\r\n        this.#dom = null;\r\n        this.#dom_perimeter = null;\r\n        this.#dom_area = null;\r\n        this.#dom_corner_count = null;\r\n        this.#dom_convert_survey = null;\r\n        this.#dom_export_kml = null;\r\n        this.#dom_export_kmz = null;\r\n        this.#label = \"\";\r\n\r\n        this.set_planner(planner);\r\n\r\n        this.#show_corners = corners.length < 20;\r\n        this.#selected_corner = 0;\r\n        this.#corners = [];\r\n        if(corners.length) {\r\n            if(corners.length == 1)\r\n                console.warn(\"Insufficient number of corners to define polygon! May be removed immediately\");\r\n\r\n            this.add_corners(corners);\r\n            //XXX: This also calls update_polygon();\r\n        } else {\r\n            this.update_polygon();\r\n        }\r\n    }\r\n\r\n    corners_visible() {\r\n        return this.#show_corners;\r\n    }\r\n\r\n    update_show_corners(show_corners:boolean) {\r\n        this.#show_corners = show_corners;\r\n\r\n        if(this.#show_corners) {\r\n            //Show layers\r\n            for(let feature of this.#corners)\r\n                this._add_layer_to_map(feature);\r\n        } else {\r\n            //Hide layers\r\n            for(let feature of this.#corners)\r\n                this._remove_layer_from_map(feature);\r\n        }\r\n    }\r\n\r\n    set_planner(planner:NeuronPlanner) {\r\n        this.#planner = planner;\r\n    }\r\n\r\n    _set_on_change_internal(on_change:()=>void=null) {\r\n        this.#on_change_internal = on_change;\r\n    }\r\n\r\n    #array_move(arr:any[], old_index:number, new_index:number) {\r\n        if (new_index >= arr.length) {\r\n            var k = new_index - arr.length + 1;\r\n            while (k--) {\r\n                arr.push(undefined);\r\n            }\r\n        }\r\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n        // return arr; // for testing\r\n    }\r\n\r\n    #array_move_cyclic(arr:any[], old_index:number, diff:number) {\r\n        let new_index = (old_index + diff) % arr.length;\r\n        if(new_index < 0) {\r\n            new_index += arr.length;\r\n        }\r\n        this.#array_move(this.#corners, old_index, new_index);\r\n    }\r\n\r\n    move_corner_forwards(corner:L.Marker) {\r\n        const ind = this.#corners.indexOf(corner);\r\n\r\n        if(ind >= 0) {\r\n            this.#array_move_cyclic(this.#corners, ind, -1);\r\n            this.update_polygon();          //Redraw\r\n        } else {\r\n            console.warn(\"Provided corner is not part of this polygon!\");\r\n        }\r\n    }\r\n\r\n    move_corner_backwards(corner:L.Marker) {\r\n        const ind = this.#corners.indexOf(corner);\r\n        if(ind >= 0) {\r\n            this.#array_move_cyclic(this.#corners, ind, 1);\r\n            this.update_polygon();          //Redraw\r\n        } else {\r\n            console.warn(\"Provided corner is not part of this polygon!\");\r\n        }\r\n    }\r\n\r\n    select_corner(corner:L.Marker) {\r\n        const ind = this.#corners.indexOf(corner);\r\n\r\n        if(ind >= 0) {\r\n            this.#selected_corner = ind;\r\n        } else {\r\n            console.warn(\"Provided corner is not part of this polygon!\");\r\n        }\r\n    }\r\n\r\n    #select_corner_by_event(event:L.LeafletEvent) {\r\n        this.select_corner(event.target);\r\n    }\r\n\r\n    get_polygon() {\r\n        return this.#polygon;\r\n    }\r\n\r\n    #generate_popup(context:L.Marker) {\r\n        const menu_items = [\r\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\r\n            null,\r\n            new LeafletContextMenuItem(\"Move forward\", NeuronIcons.ARROW_LEFT, this.move_corner_forwards.bind(this)),\r\n            new LeafletContextMenuItem(\"Move backward\", NeuronIcons.ARROW_RIGHT, this.move_corner_backwards.bind(this)),\r\n            null,\r\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_corner.bind(this)),\r\n        ]\r\n        context.bindPopup(create_popup_context_dom(this.#label ? this.#label : \"Polygon Corner\", menu_items, context));\r\n    }\r\n\r\n    add_corner(corner:NeuronInterfacePoint, update_polygon=true) {\r\n        if(this.#selected_corner < 0 || this.#selected_corner >= this.#corners.length)\r\n            this.#selected_corner = Math.min(this.#corners.length - 1, 0)\r\n\r\n        let m = L.marker([corner.latitude, corner.longitude], {\r\n            draggable: true,\r\n            autoPan: true,\r\n            icon: get_neuron_map_marker('neuron-marker-corner')\r\n        })\r\n\r\n        m.on(\"drag\", this.update_polygon.bind(this));\r\n        m.on(\"click\", this.#select_corner_by_event.bind(this));\r\n        m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\r\n        this.#generate_popup(m);\r\n\r\n        this.#corners.splice(this.#selected_corner, 0, m);\r\n        if(this.#show_corners)\r\n            this._add_layer_to_map(m);\r\n\r\n        if(update_polygon)\r\n            this.update_polygon();\r\n    }\r\n\r\n    show_on_plan() {\r\n        if(this.#dom) {\r\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n            this.#dom.scrollIntoView();\r\n            this.#dom.classList.remove('mission-feature-highlight-remove');\r\n            this.#dom.classList.add('mission-feature-highlight');\r\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    #remove_dom_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    add_corners(corners:NeuronInterfacePoint[]=[]) {\r\n        for(const c of corners)\r\n            this.add_corner(c, false);\r\n\r\n        //Do this manually at the end\r\n        this.update_polygon();\r\n    }\r\n\r\n    get_corners() {\r\n        return this.#corners;\r\n    }\r\n\r\n    get_corners_as_points() {\r\n        return this.#corners.map(p => NeuronInterfacePoint.from_leaflet(p.getLatLng()));\r\n    }\r\n\r\n    #remove_point_by_event(event:L.LeafletEvent) {\r\n        this.remove_point_by_corner(event.target);\r\n    }\r\n\r\n    remove_point_by_corner(corner:L.Marker) {\r\n        const ind = this.#corners.indexOf(corner);\r\n        if(ind >= 0) {\r\n            this._remove_layer_from_map(corner); //Remove from map\r\n            this.#corners.splice(ind, 1);   //Remove from list\r\n            this.update_polygon();          //Redraw\r\n        } else {\r\n            console.warn(\"Provided corner is not part of this polygon!\");\r\n        }\r\n    }\r\n\r\n    #add_point_at_mouseevent(event:L.LeafletMouseEvent) {\r\n        if(this.#polygon && this.#show_corners) {\r\n            // const c = this.#polygon.getCenter();\r\n            // const dx = b._northEast.lng - b._southWest.lng;\r\n            // const dy = b._northEast.lat - b._southWest.lat;\r\n            // const p = new NeuronMapPoint(b._southWest.lat + dy / 2, b._southWest.lng + dx / 2);\r\n            const p = NeuronInterfacePoint.from_leaflet(event.latlng);\r\n\r\n            this.add_corner(p);\r\n        }\r\n    }\r\n\r\n    add_point_at_location() {\r\n        if(this.#polygon) {\r\n            const b = this.#polygon.getBounds();\r\n            const ne = b.getNorthEast();\r\n            const sw = b.getSouthWest();\r\n            const dx = ne.lng - sw.lng;\r\n            const dy = ne.lat - sw.lat;\r\n            const p = new NeuronInterfacePoint(sw.lat + dy / 2, sw.lng + dx / 2);\r\n\r\n            this.add_corner(p);\r\n        }\r\n    }\r\n\r\n    update_polygon() {\r\n        if(this.#corners.length > 1) {\r\n            let corners = [];\r\n\r\n            for(const c of this.#corners) {\r\n                corners.push(c.getLatLng());\r\n            }\r\n\r\n            if(this.#polygon) {\r\n                //Update the existing polygon\r\n                // console.log(this.#polygon);\r\n                this.#polygon.setLatLngs(corners);\r\n            } else{\r\n                //Create a new polygon\r\n                this.#polygon = L.polygon(corners, {color: 'red'});\r\n                this.#polygon.on(\"click\", this.#add_point_at_mouseevent.bind(this));\r\n                this._add_layer_to_map(this.#polygon);\r\n            }\r\n        } else {\r\n            this.remove_feature();\r\n        }\r\n\r\n        if(this.#on_change_internal)\r\n            this.#on_change_internal();\r\n        this._trigger_on_changed();\r\n\r\n        this.#try_update_dom();\r\n    }\r\n\r\n    #get_corners_as_utm() {\r\n        const points = this.get_corners_as_points();\r\n\r\n        if(points.length <= 2)\r\n            return []\r\n\r\n        const u1 = points[0].to_UTM();\r\n        return points.map(x => x.to_UTM(u1.zone));\r\n    }\r\n\r\n    get_perimeter() {\r\n        const utm_points = this.#get_corners_as_utm();\r\n\r\n        if(utm_points.length <= 1)\r\n            return 0;\r\n\r\n        let length = 0;\r\n        for(let i = 0; i < utm_points.length; i++) {\r\n            const p1 = utm_points[i];\r\n            const p2 = i < (utm_points.length - 1) ? utm_points[i+1] : utm_points[0];\r\n            length += p1.GetDistance2D(p2);\r\n        }\r\n\r\n        return length * NeuronFeaturePolygon._distance_ratio;\r\n    }\r\n\r\n    get_area() {\r\n        const utm_points = this.#get_corners_as_utm();\r\n        if(utm_points.length <= 2)\r\n            return 0;\r\n\r\n        return UTMPos.AreaOfPolygon(utm_points) * NeuronFeaturePolygon._area_ratio;\r\n    }\r\n\r\n    #try_update_dom() {\r\n        if(this.#dom_corner_count)\r\n            this.#dom_corner_count.value = this.#corners.length.toFixed(0);\r\n\r\n        if(this.#dom_perimeter) {\r\n            const perimeter = this.get_perimeter();\r\n            this.#dom_perimeter.value = perimeter > 0 ? perimeter.toFixed(3) : \"---\";\r\n        }\r\n\r\n        if(this.#dom_area) {\r\n            const area = this.get_area();\r\n            this.#dom_area.value = area > 0 ? area.toFixed(3) : \"---\";\r\n        }\r\n    }\r\n\r\n    #convert_to_survey() {\r\n        if(this.#planner) {\r\n            this.#planner.replace_polygon_with_survey(this);\r\n        } else {\r\n            console.warn(\"Planner not set, cannot convert polygon feature!\");\r\n        }\r\n    }\r\n\r\n    #export_as_kml() {\r\n        kml_download_from_neuron_data([], [], [this.get_corners_as_points()]);\r\n    }\r\n\r\n    #export_as_kmz() {\r\n        kmz_download_from_neuron_data([], [], [this.get_corners_as_points()]);\r\n    }\r\n\r\n    override show_help() {\r\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePolygon.HELP_KEY}`);\r\n    }\r\n\r\n    override remove_feature() {\r\n        for(const c of this.#corners) {\r\n            this._remove_layer_from_map(c);\r\n        }\r\n        this.#corners = [];\r\n\r\n        if(this.#polygon) {\r\n            this._remove_layer_from_map(this.#polygon);\r\n            this.#polygon = null;\r\n        }\r\n\r\n        super.remove_feature();\r\n    }\r\n\r\n    //override get_path_coords() {} //XXX: No paths provided by this feature, use base return\r\n\r\n    override get_dom() {\r\n        if(!this.#dom) {\r\n            this.#dom = this._get_dom(\"Polygon\");\r\n\r\n            let c = document.createElement(\"div\");\r\n            c.className = 'mission-feature-content';\r\n\r\n            //Output items\r\n            const t4 = \"Number of corners that define this polygon's boundaries\";\r\n            this.#dom_corner_count = this._create_dom_output();\r\n            this.#dom_corner_count.title = t4;\r\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t4));\r\n            c.appendChild(this.#dom_corner_count);\r\n\r\n            const t41 = \"Perimeter of this polygon as defined by it's boundaries in kilometers\";\r\n            this.#dom_perimeter = this._create_dom_output();\r\n            this.#dom_perimeter.title = t41;\r\n            c.appendChild(this._create_dom_label(\"Perimeter (km):\", this.#dom_perimeter, t41));\r\n            c.appendChild(this.#dom_perimeter);\r\n\r\n            const t42 = \"Area of this polygon as defined by it's boundaries in square kilometers\";\r\n            this.#dom_area = this._create_dom_output();\r\n            this.#dom_area.title = t42;\r\n            const t42_ld = document.createElement(\"span\");\r\n            t42_ld.appendChild(document.createTextNode(\"Area (km\"));\r\n            const t42_lds = document.createElement(\"sup\");\r\n            t42_lds.appendChild(document.createTextNode(\"2\"));\r\n            t42_ld.appendChild(t42_lds);\r\n            t42_ld.appendChild(document.createTextNode(\"):\"));\r\n            c.appendChild(this._create_dom_label(t42_ld, this.#dom_area, t42));\r\n            c.appendChild(this.#dom_area);\r\n\r\n            this.#try_update_dom();\r\n\r\n            //Input Items\r\n            const t21 = \"Show the corners of the polygon\";\r\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\r\n            this.#dom_show_corners.title = t21;\r\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t21));\r\n            c.appendChild(this.#dom_show_corners);\r\n\r\n            const t22 = \"Text label for identification of the polygon\";\r\n            this.#dom_label = this._create_dom_input_textbox(this.#label, this.#update_label_from_dom.bind(this));\r\n            this.#dom_label.title = t22;\r\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t22));\r\n            c.appendChild(this.#dom_label);\r\n\r\n            const t0 = \"Convert this polygon to a survey feature\";\r\n            this.#dom_convert_survey = this._create_dom_input_button(\"Survey\", this.#convert_to_survey.bind(this));\r\n            this.#dom_convert_survey.title = t0;\r\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_survey, t0));\r\n            c.appendChild(this.#dom_convert_survey);\r\n\r\n            const t1 = \"Export this polygon to a drawing document\";\r\n            const t11 = \"Export this polygon to a KML document\";\r\n            const t12 = \"Export this polygon to a KMZ document\";\r\n            this.#dom_export_kml = this._create_dom_input_button(\"KML\", this.#export_as_kml.bind(this));\r\n            this.#dom_export_kml.title = t11;\r\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kml, t1));\r\n            c.appendChild(this.#dom_export_kml);\r\n\r\n            this.#dom_export_kmz = this._create_dom_input_button(\"KMZ\", this.#export_as_kmz.bind(this));\r\n            this.#dom_export_kmz.title = t12;\r\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kmz, t1, true));\r\n            c.appendChild(this.#dom_export_kmz);\r\n\r\n            // c.appendChild(this._create_dom_labelled_input(\"\", this.#dom_export_shape.bind(this)));\r\n\r\n\r\n            this.#dom.append(c);\r\n        }\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    #update_show_corners_from_dom() {\r\n        this.update_show_corners(this.#dom_show_corners.checked);\r\n    }\r\n\r\n    #update_label_from_dom() {\r\n        this.set_label(this.#dom_label.value, false);\r\n    }\r\n\r\n    get_label() {\r\n        return this.#label;\r\n    }\r\n\r\n    set_label(label:string, update_dom:boolean = true) {\r\n        this.#label = label;\r\n        if(this.#dom_label && update_dom)\r\n            this.#dom_label.value = label;\r\n\r\n        for(let m of this.#corners)\r\n            this.#generate_popup(m);\r\n    }\r\n\r\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePolygonData {\r\n        let is_valid =\r\n            (object.type == NeuronFeaturePolygon.TYPE) &&\r\n            (object.version == NeuronFeaturePolygon.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static from_json(j:NeuronFeaturePolygonData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeaturePolygon.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeaturePolygon`);\r\n\r\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\r\n        let p = new NeuronFeaturePolygon(map, corners);\r\n        p.set_label(j.label.toString());\r\n        return p;\r\n    }\r\n\r\n    override to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeaturePolygonData>{\r\n            version: NeuronFeaturePolygon.VERSION,\r\n            type: NeuronFeaturePolygon.TYPE,\r\n            corners: this.get_corners_as_points().map(x => x.to_json()),\r\n            label: this.#label,\r\n        }\r\n    }\r\n}\r\n","import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { CreateGrid, GridPointTags, StartPosition } from \"./neuron_tools_survey\"\r\nimport { L, create_popup_context_dom, get_neuron_map_marker } from \"./interface_leaflet\";\r\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\r\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\r\nimport { NeuronHelp } from \"./neuron_help\";\r\nimport { UTMPos } from \"./interface_proj4\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeatureSurveyData {\r\n    version:string,\r\n    type:string,\r\n    corners:NeuronInterfacePointData[],\r\n    altitude:number,\r\n    distance:number,\r\n    spacing:number,\r\n    angle:number,\r\n    overshoot1:number,\r\n    overshoot2:number,\r\n    startpos:number,\r\n    minLaneSeparation:number,\r\n    leadin:number,\r\n    sidelap:number,\r\n    overlap:number,\r\n    ground_resolution:number,\r\n    label:string\r\n}\r\n\r\n//TODO: Document\r\nexport interface NeuronFeatureSurveyLane {\r\n    start:NeuronInterfacePoint,\r\n    end:NeuronInterfacePoint\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeatureSurvey extends NeuronFeaturePolygon {\r\n    static override NAME = \"Survey\";\r\n    static override TYPE = \"NeuronFeatureSurvey\";\r\n    static override VERSION = '70bb75e0-d5a0-11ec-aaa0-9f86362bde1a';\r\n    static override HELP_KEY = 'survey';\r\n    static override IS_FLYABLE = true;\r\n\r\n    #waypoints:NeuronInterfacePoint[];\r\n    #mappoints:L.Marker[];\r\n    #photos:NeuronInterfacePoint[];\r\n    #photopoints:L.Marker[];\r\n    #photobounds:L.Rectangle;\r\n\r\n    #altitude:number;\r\n    #distance:number;\r\n    #spacing:number;\r\n    #angle:number;\r\n    #overshoot1:number;\r\n    #overshoot2:number;\r\n    #startpos:StartPosition;\r\n    #minLaneSeparation:number;\r\n    #leadin:number;\r\n\r\n    #sidelap:number;\r\n    #overlap:number;\r\n    #ground_resolution:number;\r\n\r\n    #show_waypoints:boolean;\r\n    #show_photos:boolean;\r\n\r\n    #dom:HTMLDivElement;\r\n    #dom_corner_count:HTMLOutputElement;\r\n    #dom_perimeter:HTMLOutputElement;\r\n    #dom_area:HTMLOutputElement;\r\n    #dom_waypoint_count:HTMLOutputElement;\r\n    #dom_segment_duration:HTMLOutputElement;\r\n    #dom_photo_count:HTMLOutputElement;\r\n    //Display parameters\r\n    #dom_show_photos:HTMLInputElement;\r\n    #dom_show_waypoints:HTMLInputElement;\r\n    #dom_show_corners:HTMLInputElement;\r\n    //Survey parameters\r\n    #dom_altitude:HTMLInputElement;\r\n    #dom_distance:HTMLInputElement;\r\n    #dom_spacing:HTMLInputElement;\r\n    #dom_angle:HTMLInputElement;\r\n    #dom_angle_slider:HTMLInputElement;\r\n    #dom_overshoot1:HTMLInputElement;\r\n    #dom_overshoot2:HTMLInputElement;\r\n    #dom_startpos:HTMLSelectElement;\r\n    #dom_minLaneSeparation:HTMLInputElement;\r\n    #dom_leadin:HTMLInputElement;\r\n    //Capture parameters\r\n    #dom_sidelap:HTMLInputElement;\r\n    #dom_overlap:HTMLInputElement;\r\n    #dom_ground_resolution:HTMLInputElement;\r\n    #dom_current_camera:HTMLButtonElement;\r\n\r\n    #update_timer:NodeJS.Timeout;\r\n    #update_interval:number;\r\n    #unsub_option_cb:()=>void;\r\n\r\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\r\n    static _xlap_ratio = 0.01;   //Sidelap = [DOM Value] * Ratio\r\n\r\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], show_waypoints=false) {\r\n        super(map, corners);\r\n        this.#update_timer = null;\r\n        this.#update_interval = 50; //ms\r\n\r\n        this.#waypoints = [];\r\n        this.#photos = [];\r\n        this.#photopoints = [];\r\n        this.#mappoints = [];\r\n        this.#photobounds = null;\r\n\r\n        this.#dom = null;\r\n        this.#dom_corner_count = null;\r\n        this.#dom_perimeter = null;\r\n        this.#dom_area = null;\r\n        this.#dom_waypoint_count = null;\r\n        this.#dom_segment_duration = null;\r\n        this.#dom_photo_count = null;\r\n\r\n        this.#dom_show_corners = null;\r\n        this.#dom_show_waypoints = null;\r\n        this.#dom_show_photos = null;\r\n        this.#dom_altitude = null;\r\n        this.#dom_distance = null;\r\n        this.#dom_spacing = null;\r\n        this.#dom_angle = null;\r\n        this.#dom_angle_slider = null;\r\n        this.#dom_overshoot1 = null;\r\n        this.#dom_overshoot2 = null;\r\n        this.#dom_startpos = null;\r\n        this.#dom_minLaneSeparation = null;\r\n        this.#dom_leadin = null;\r\n\r\n        this.#dom_sidelap = null;\r\n        this.#dom_overlap = null;\r\n        this.#dom_ground_resolution = null;\r\n        this.#dom_current_camera = null;\r\n\r\n        this.#show_waypoints = show_waypoints;\r\n        this.#show_photos = false;\r\n        this.#altitude = 100;\r\n        this.#distance = 50;\r\n        this.#spacing = 0;\r\n        this.#angle = 0.0;\r\n        this.#overshoot1 = 0.0;\r\n        this.#overshoot2 = 0.0;\r\n        this.#startpos = StartPosition.TopLeft;\r\n        this.#minLaneSeparation = 0;\r\n        this.#leadin = 0.0;\r\n\r\n        this.#sidelap = 0.7;\r\n        this.#overlap = 0.7;\r\n        this.#ground_resolution = 0.0;\r\n\r\n        this._set_on_change_internal(this.update_survey.bind(this));\r\n        this.#_update_survey(false);\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\r\n    }\r\n\r\n    override show_on_plan() {\r\n        if(this.#dom) {\r\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n            this.#dom.scrollIntoView();\r\n            this.#dom.classList.remove('mission-feature-highlight-remove');\r\n            this.#dom.classList.add('mission-feature-highlight');\r\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    #remove_dom_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    set_options_subscriber() {\r\n        if(this.#unsub_option_cb)\r\n            this.#unsub_option_cb();\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\r\n    }\r\n\r\n    #options_changed() {\r\n        //Update our variables, and then the survey if there was a change\r\n        if(this.#calculate_and_update_capture_variables())\r\n            this.update_survey();\r\n    }\r\n\r\n    #add_waypoint(point:NeuronInterfacePoint, name:string = \"Survey Waypoint\") {\r\n        if(this.#show_waypoints) {\r\n            let m = L.marker([point.latitude, point.longitude], {\r\n                // draggable: true,\r\n                autoPan: true,\r\n            })\r\n\r\n            // const menu_items = [\r\n            //     new LeafletContextMenuItem(\"Move forward\", \"fa-arrow-left\", this.move_corner_forwards.bind(this)),\r\n            //     new LeafletContextMenuItem(\"Move backward\", \"fa-arrow-right\", this.move_corner_backwards.bind(this)),\r\n            //     null,\r\n            //     new LeafletContextMenuItem(\"Remove\", \"fa-trash\", this.remove_point_by_corner.bind(this)),\r\n            // ]\r\n            m.bindPopup(create_popup_context_dom(name, [], m));\r\n\r\n            // m.on(\"drag\", this.update_polygon.bind(this));\r\n            // m.on(\"click\", this.#select_corner_by_event.bind(this));\r\n            // m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\r\n            this._add_layer_to_map(m);\r\n            this.#mappoints.push(m);\r\n        }\r\n\r\n        this.#waypoints.push(point);\r\n    }\r\n\r\n    #show_photo_bounds(point:NeuronInterfacePoint) {\r\n        this.#clean_photobounds();\r\n\r\n        const projection = NeuronOptions.get_camera().get_projected_size(point.altitude);\r\n        if(projection) {\r\n            const uc = point.to_UTM();\r\n            const x_step = projection.Width()/2;\r\n            const y_step = projection.Height()/2;\r\n            const utl = new UTMPos(uc.x - x_step, uc.y + y_step, uc.zone);\r\n            const ubr = new UTMPos(uc.x + x_step, uc.y - y_step, uc.zone);\r\n            const ptl = utl.to_NeuronInterfacePoint();\r\n            const pbr = ubr.to_NeuronInterfacePoint();\r\n            this.#photobounds = new L.Rectangle([[ptl.latitude, ptl.longitude], [pbr.latitude, pbr.longitude]],\r\n                {\r\n                    color: '#20AA20',\r\n                    fillColor: '#20AA20'\r\n                });\r\n            this._add_layer_to_map(this.#photobounds);\r\n        }\r\n    }\r\n\r\n    #add_photo(point:NeuronInterfacePoint, name:string = \"Survey Photo\") {\r\n        if(this.#show_photos) {\r\n            let m = L.marker([point.latitude, point.longitude], {\r\n                // draggable: true,\r\n                autoPan: true,\r\n                icon: get_neuron_map_marker('neuron-marker-photo')\r\n            })\r\n\r\n            // const menu_items = [\r\n            //     new LeafletContextMenuItem(\"Move forward\", \"fa-arrow-left\", this.move_corner_forwards.bind(this)),\r\n            //     new LeafletContextMenuItem(\"Move backward\", \"fa-arrow-right\", this.move_corner_backwards.bind(this)),\r\n            //     null,\r\n            //     new LeafletContextMenuItem(\"Remove\", \"fa-trash\", this.remove_point_by_corner.bind(this)),\r\n            // ]\r\n            m.bindPopup(create_popup_context_dom(name, [], m));\r\n\r\n            // m.on(\"drag\", this.update_polygon.bind(this));\r\n            m.on(\"popupopen\", this.#show_photo_bounds.bind(this, point));\r\n            m.on(\"popupclose\", this.#clean_photobounds.bind(this));\r\n            // m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\r\n            this._add_layer_to_map(m);\r\n            this.#photopoints.push(m);\r\n        }\r\n\r\n        this.#photos.push(point);\r\n    }\r\n\r\n    update_show_waypoints(show_waypoints:boolean) {\r\n        this.#show_waypoints = show_waypoints;\r\n        this.update_survey();\r\n    }\r\n\r\n    update_show_photos(show_photos:boolean) {\r\n        this.#show_photos = show_photos;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_altitude(altitude:number) {\r\n        this.#set_altitude(altitude, true);\r\n    }\r\n\r\n    #set_altitude(altitude:number, update_calcs:boolean=true) {\r\n        this.#altitude = altitude;\r\n\r\n        if(update_calcs) {\r\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#altitude);\r\n            if(resolution) {\r\n                if(this.#dom_ground_resolution)\r\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureSurvey._gsd_ratio).toString();\r\n\r\n                this.#set_ground_resolution(resolution, false);\r\n            }\r\n        }\r\n\r\n        this.update_survey();\r\n    }\r\n\r\n    set_distance(distance:number) {\r\n        this.#set_distance(distance);\r\n    }\r\n\r\n    #set_distance(distance:number, update_calcs:boolean=true) {\r\n        this.#distance = distance;\r\n\r\n        if(update_calcs) {\r\n            let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\r\n            if(projection && (distance >= 0)) {\r\n                const sidelap_factor = distance/projection.Width();\r\n                const sidelap = Math.max(Math.min(1 - sidelap_factor, 1.0), 0.0);\r\n\r\n                if(this.#dom_ground_resolution)\r\n                    this.#dom_sidelap.value = (sidelap / NeuronFeatureSurvey._xlap_ratio).toString();\r\n\r\n                this.#set_sidelap(sidelap, false);\r\n            }\r\n        }\r\n\r\n        this.update_survey();\r\n    }\r\n\r\n    set_spacing(spacing:number) {\r\n        this.#spacing = spacing;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_angle(angle:number) {\r\n        this.#angle = angle;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_overshoot1(overshoot1:number) {\r\n        this.#overshoot1 = overshoot1;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_overshoot2(overshoot2:number) {\r\n        this.#overshoot2 = overshoot2;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_startpos(startpos:StartPosition) {\r\n        this.#startpos = startpos;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_minLaneSeparation(minLaneSeparation:number) {\r\n        this.#minLaneSeparation = minLaneSeparation;\r\n        this.update_survey();\r\n    }\r\n\r\n    set_leadin(leadin:number) {\r\n        this.#leadin = leadin;\r\n        this.update_survey();\r\n    }\r\n\r\n    get_show_waypoints() {\r\n        return this.#show_waypoints;\r\n    }\r\n\r\n    get_show_photos() {\r\n        return this.#show_photos;\r\n    }\r\n\r\n    get_altitude() {\r\n        return this.#altitude;\r\n    }\r\n\r\n    get_distance() {\r\n        return this.#distance;\r\n    }\r\n\r\n    get_spacing() {\r\n        return this.#spacing;\r\n    }\r\n\r\n    get_angle() {\r\n        return this.#angle;\r\n    }\r\n\r\n    get_overshoot1() {\r\n        return this.#overshoot1;\r\n    }\r\n\r\n    get_overshoot2() {\r\n        return this.#overshoot2;\r\n    }\r\n\r\n    get_startpos() {\r\n        return this.#startpos;\r\n    }\r\n\r\n    get_minLaneSeparation() {\r\n        return this.#minLaneSeparation;\r\n    }\r\n\r\n    get_leadin() {\r\n        return this.#leadin;\r\n    }\r\n\r\n    update_survey() {\r\n        //Clear any queued updates\r\n        this.#clear_update_timer();\r\n\r\n        //Force clear the survey survey immediately for display\r\n        this.#clean_waypoints();\r\n        this.#clean_photopoints();\r\n        this.#clean_photobounds();\r\n\r\n        //Update survey with slight delay for processing\r\n        this.#update_timer = setTimeout(this.#_update_survey.bind(this, true), this.#update_interval);\r\n    }\r\n\r\n    #clear_update_timer() {\r\n        if(this.#update_timer) {\r\n            clearTimeout(this.#update_timer);\r\n            this.#update_timer = null;\r\n        }\r\n    }\r\n\r\n    #_update_survey(fire_on_change:boolean = true) {\r\n        this.#clean_waypoints();\r\n        this.#clean_photopoints();\r\n        this.#clean_photobounds();\r\n\r\n        const corners = this.get_corners_as_points();\r\n        const waypoints = (corners.length <= 2) ?\r\n            //There's only a line, so go end-to-end\r\n            corners :\r\n            //There is an actual polygon, so do a survey grid\r\n            CreateGrid(\r\n                this.get_corners_as_points(),\r\n                this.#altitude,\r\n                this.#distance,\r\n                this.#spacing,\r\n                this.#angle,\r\n                this.#overshoot1,\r\n                this.#overshoot2,\r\n                this.#startpos,\r\n                this.#minLaneSeparation,\r\n                this.#leadin\r\n            );\r\n\r\n        for(let i = 0; i < waypoints.length; i++)\r\n            this.#add_waypoint(waypoints[i], `Survey Waypoint (#${i})`);\r\n\r\n        this.#try_update_dom_stats();\r\n\r\n        if(fire_on_change)\r\n            this._trigger_on_changed();\r\n    }\r\n\r\n    #clean_waypoints() {\r\n        for(const m of this.#mappoints) {\r\n            this._remove_layer_from_map(m);\r\n        }\r\n        this.#mappoints = [];\r\n        this.#waypoints = [];\r\n    }\r\n\r\n    #clean_photopoints() {\r\n        for(const m of this.#photopoints) {\r\n            this._remove_layer_from_map(m);\r\n        }\r\n\r\n        this.#photopoints = [];\r\n        this.#photos = [];\r\n    }\r\n\r\n    #clean_photobounds() {\r\n        if(this.#photobounds)\r\n            this._remove_layer_from_map(this.#photobounds);\r\n\r\n        this.#photobounds = null;\r\n    }\r\n\r\n    #try_update_dom_stats() {\r\n        this.#clean_photopoints();\r\n        this.#clean_photobounds();\r\n        const coords = this.get_path_coords();\r\n\r\n        if(this.#dom_corner_count)\r\n            this.#dom_corner_count.value = this.get_corners().length.toFixed(0);\r\n\r\n        if(this.#dom_perimeter) {\r\n            const perimeter = this.get_perimeter();\r\n            this.#dom_perimeter.value = perimeter > 0 ? perimeter.toFixed(3) : \"---\";\r\n        }\r\n\r\n        if(this.#dom_area) {\r\n            const area = this.get_area();\r\n            this.#dom_area.value = area > 0 ? area.toFixed(3) : \"---\";\r\n        }\r\n\r\n        if(this.#dom_waypoint_count)\r\n            this.#dom_waypoint_count.value = coords.length.toFixed(0);\r\n\r\n\r\n        if(this.#dom_segment_duration) {\r\n\r\n            const distance = flight_distance_from_coords(coords);\r\n            const duration = distance / NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\r\n            this.#dom_segment_duration.value = flight_time_from_duration(duration);\r\n        }\r\n\r\n        let photo_count = 0;\r\n\r\n        if(this.#show_photos) {\r\n            const photos = this.get_image_locations();\r\n            for(let i = 0; i < photos.length; i++)\r\n                this.#add_photo(photos[i], `Survey Photo (#${i})`);\r\n\r\n            photo_count = photos.length;\r\n        } else {\r\n            //Use shorthand calc if we don't need to get the full listing\r\n            photo_count = this.get_image_count();\r\n        }\r\n\r\n        if(this.#dom_photo_count) {\r\n            this.#dom_photo_count.value = photo_count > 0 ? photo_count.toString() : \"---\";\r\n        }\r\n    }\r\n\r\n    get_image_locations() {\r\n        let photos:NeuronInterfacePoint[] = [];\r\n        const alt = this.#altitude;\r\n        let projection = NeuronOptions.get_camera().get_projected_size(alt);\r\n\r\n        if(projection && (this.#overlap >= 0) && (this.#overlap <= 1)) {\r\n            const overlap_factor = 1 - this.#overlap;\r\n            const photo_distance = Math.abs(projection.Height())*overlap_factor;\r\n\r\n            for(const lane of this.get_lane_coords()) {\r\n                const ps = lane.start.to_UTM();\r\n                const pe = lane.end.to_UTM(ps.zone);\r\n\r\n                const lane_distance = ps.GetDistance2D(pe);\r\n                const lane_angle = ps.GetAngle(pe);\r\n                const steps = Math.ceil(lane_distance / photo_distance);\r\n\r\n                let p_last = ps;\r\n                for(let i = 0; i<steps; i++) {\r\n                    let point = p_last.to_NeuronInterfacePoint();\r\n                    point.altitude = alt;\r\n                    photos.push(point);\r\n                    p_last = p_last.relative_point_from_dist_angle(lane_angle, photo_distance);\r\n                }\r\n            }\r\n        }\r\n\r\n        return photos;\r\n    }\r\n\r\n    get_image_count() {\r\n        let count = null;\r\n        let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\r\n\r\n        if(projection && (this.#overlap >= 0) && (this.#overlap <= 1)) {\r\n            let photo_count = 0;\r\n\r\n            const overlap_factor = 1 - this.#overlap;\r\n            const photo_distance = Math.abs(projection.Height())*overlap_factor;\r\n\r\n            for(const lane of this.get_lane_coords()) {\r\n                const ps = lane.start.to_UTM();\r\n                const pe = lane.end.to_UTM(ps.zone);\r\n\r\n                const lane_distance = ps.GetDistance2D(pe);\r\n                photo_count += Math.ceil(lane_distance / photo_distance);\r\n            }\r\n\r\n            count = photo_count;\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    #update_show_corners_from_dom() {\r\n        this.update_show_corners(this.#dom_show_corners.checked);\r\n    }\r\n\r\n    #update_show_waypoints_from_dom() {\r\n        this.update_show_waypoints(this.#dom_show_waypoints.checked);\r\n    }\r\n\r\n    #update_show_photos_from_dom() {\r\n        this.update_show_photos(this.#dom_show_photos.checked);\r\n    }\r\n\r\n    #update_altitude_from_dom() {\r\n        this.set_altitude(this.#dom_altitude.valueAsNumber * NeuronFeatureSurvey._altitude_ratio);\r\n    }\r\n\r\n    #update_distance_from_dom() {\r\n        this.set_distance(this.#dom_distance.valueAsNumber);\r\n    }\r\n\r\n    #update_spacing_from_dom() {\r\n        this.set_spacing(this.#dom_spacing.valueAsNumber);\r\n    }\r\n\r\n    #update_angle_from_dom() {\r\n        const val = this.#dom_angle.valueAsNumber;\r\n        this.#dom_angle_slider.value = val.toString();\r\n        this.set_angle(this.#dom_angle.valueAsNumber);\r\n    }\r\n\r\n    #update_angle_slider_from_dom() {\r\n        const val = this.#dom_angle_slider.valueAsNumber;\r\n        this.#dom_angle.value = val.toString();\r\n        this.set_angle(val);\r\n    }\r\n\r\n    #update_overshoot1_from_dom() {\r\n        this.set_overshoot1(this.#dom_overshoot1.valueAsNumber);\r\n    }\r\n\r\n    #update_overshoot2_from_dom() {\r\n        this.set_overshoot2(this.#dom_overshoot2.valueAsNumber);\r\n    }\r\n\r\n    #update_startpos_from_dom() {\r\n        const v = Number.parseInt(this.#dom_startpos.value);\r\n        const values = Object.values(StartPosition);\r\n        if (!values.includes(v))\r\n            throw new Error(`Selected value (${v}) is not a StartingPosition`);\r\n\r\n        this.set_startpos(v);\r\n    }\r\n\r\n    #update_minLaneSeparation_from_dom() {\r\n        this.set_minLaneSeparation(this.#dom_minLaneSeparation.valueAsNumber);\r\n    }\r\n\r\n    #update_leadin_from_dom() {\r\n        this.set_leadin(this.#dom_leadin.valueAsNumber);\r\n    }\r\n\r\n    override show_help() {\r\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureSurvey.HELP_KEY}`);\r\n    }\r\n\r\n    override remove_feature() {\r\n        this.#clean_waypoints();\r\n        this.#clean_photopoints();\r\n        this.#clean_photobounds();\r\n\r\n        super.remove_feature();\r\n    }\r\n\r\n    override is_flyable() {\r\n        return NeuronFeatureSurvey.IS_FLYABLE;\r\n    }\r\n\r\n    override get_path_coords() {\r\n        const corners = this.get_corners_as_points();\r\n        return this.#waypoints.length ? this.#waypoints : (corners.length ? [corners[0]] : []);\r\n    }\r\n\r\n    get_lane_coords() {\r\n        const coords = this.get_path_coords();\r\n        let lanes:NeuronFeatureSurveyLane[] = [];\r\n        let start:NeuronInterfacePoint = null;\r\n\r\n        for(let i = 0; i < coords.length; i++) {\r\n            const p = coords[i];\r\n            if((!start && p.tag == GridPointTags.START) || (start && p.tag == GridPointTags.MIDDLE_START)) {\r\n                //If we found a new start, or we are adjusting to a new middle start\r\n                start = p;\r\n            } else if (start && ((p.tag == GridPointTags.MIDDLE_END) || (p.tag == GridPointTags.END))) {\r\n                //If we have a valid start and we have found a valid end\r\n                //Add our finished lane\r\n                lanes.push({\r\n                    start: start,\r\n                    end: p\r\n                })\r\n                //And reset\r\n                start = null;\r\n            }\r\n        }\r\n\r\n        if(start)\r\n            console.warn(\"Unable to determine all lanes correctly!\");\r\n\r\n        return lanes;\r\n    }\r\n\r\n    override get_dom() {\r\n        if(!this.#dom) {\r\n            this.#dom = this._get_dom(\"Survey\");\r\n\r\n            let c = document.createElement(\"div\");\r\n            c.className = 'mission-feature-content';\r\n\r\n            //Output fields\r\n            const t00 = \"Number of corners that define this survey's boundaries\";\r\n            this.#dom_corner_count = this._create_dom_output();\r\n            this.#dom_corner_count.title = t00;\r\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t00));\r\n            c.appendChild(this.#dom_corner_count);\r\n\r\n            const t001 = \"Perimeter of this polygon as defined by it's boundaries in kilometers\";\r\n            this.#dom_perimeter = this._create_dom_output();\r\n            this.#dom_perimeter.title = t001;\r\n            c.appendChild(this._create_dom_label(\"Perimeter (km):\", this.#dom_perimeter, t001));\r\n            c.appendChild(this.#dom_perimeter);\r\n\r\n            const t002 = \"Area of this polygon as defined by it's boundaries in square kilometers\";\r\n            this.#dom_area = this._create_dom_output();\r\n            this.#dom_area.title = t002;\r\n            const t002_ld = document.createElement(\"span\");\r\n            t002_ld.appendChild(document.createTextNode(\"Area (km\"));\r\n            const t002_lds = document.createElement(\"sup\");\r\n            t002_lds.appendChild(document.createTextNode(\"2\"));\r\n            t002_ld.appendChild(t002_lds);\r\n            t002_ld.appendChild(document.createTextNode(\"):\"));\r\n            c.appendChild(this._create_dom_label(t002_ld, this.#dom_area, t002));\r\n            c.appendChild(this.#dom_area);\r\n\r\n            const t01 = \"Number of waypoints that have been calculated to perform this survey\";\r\n            this.#dom_waypoint_count = this._create_dom_output();\r\n            this.#dom_waypoint_count.title = t01;\r\n            c.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_waypoint_count, t01));\r\n            c.appendChild(this.#dom_waypoint_count);\r\n\r\n            const t03 = \"Estimated flight time of the survey feature\";\r\n            this.#dom_segment_duration = this._create_dom_output();\r\n            this.#dom_segment_duration.title = t03;\r\n            c.appendChild(this._create_dom_label(\"Duration:\", this.#dom_segment_duration, t03));\r\n            c.appendChild(this.#dom_segment_duration);\r\n\r\n            const t02 = \"Number of images that will be captured by the camera on the aircraft to perform this survey\";\r\n            this.#dom_photo_count = this._create_dom_output();\r\n            this.#dom_photo_count.title = t02;\r\n            c.appendChild(this._create_dom_label(\"Images:\", this.#dom_photo_count, t02));\r\n            c.appendChild(this.#dom_photo_count);\r\n\r\n            //Input fields\r\n            const t2 = \"Show the corners of the polygon that defines the survey area\";\r\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\r\n            this.#dom_show_corners.title = t2;\r\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t2));\r\n            c.appendChild(this.#dom_show_corners);\r\n\r\n            const t21 = \"Show the waypoints that have been calculated at the end of each lane to perform this survey\";\r\n            this.#dom_show_waypoints = this._create_dom_input_checkbox(this.#show_waypoints, this.#update_show_waypoints_from_dom.bind(this));\r\n            this.#dom_show_waypoints.title = t21;\r\n            c.appendChild(this._create_dom_label(\"Show ends:\", this.#dom_show_waypoints, t2));\r\n            c.appendChild(this.#dom_show_waypoints);\r\n\r\n            const t22 = \"Show the locations of the photos that will be taken throughout this survey\";\r\n            this.#dom_show_photos = this._create_dom_input_checkbox(this.#show_photos, this.#update_show_photos_from_dom.bind(this));\r\n            this.#dom_show_photos.title = t22;\r\n            c.appendChild(this._create_dom_label(\"Show photos:\", this.#dom_show_photos, t2));\r\n            c.appendChild(this.#dom_show_photos);\r\n\r\n\r\n            //=====================================\r\n            //Capture calculations\r\n            //=====================================\r\n            const tb2 = \"Image capture configuration and calculations for survey parameters.\";\r\n            let dom_break2 = this._create_dom_output();\r\n            dom_break2.title = tb2;\r\n            let dom_break_label2 = this._create_dom_label(\"Capture Config.\", dom_break2, tb2)\r\n            dom_break_label2.classList.add('mission-feature-content-subtitle');\r\n            c.appendChild(dom_break_label2);\r\n            c.appendChild(dom_break2);\r\n\r\n            const t20 = \"Camera for the mission as configured in the mission options\";\r\n            this.#dom_current_camera = this._create_dom_input_button(NeuronOptions.camera_preset_custom.name, window.neuron_set_panel_view.bind(null, InterfaceSummaryTabName.OPTIONS));\r\n            this.#dom_current_camera.title = t20;\r\n            c.appendChild(this._create_dom_label(\"Camera:\", this.#dom_current_camera, t20));\r\n            c.appendChild(this.#dom_current_camera);\r\n\r\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\r\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureSurvey._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\r\n            this.#dom_ground_resolution.title = t18;\r\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\r\n            c.appendChild(this.#dom_ground_resolution);\r\n\r\n            const t17 = \"Image vertical overlap between lanes as a percentage\";\r\n            this.#dom_overlap = this._create_dom_input_number(this.#overlap / NeuronFeatureSurvey._xlap_ratio, this.#update_overlap_from_dom.bind(this), 0, 100);\r\n            this.#dom_overlap.title = t17;\r\n            c.appendChild(this._create_dom_label(\"Overlap:\", this.#dom_overlap, t17));\r\n            c.appendChild(this.#dom_overlap);\r\n\r\n            const t19 = \"Image horizontal overlap between lanes as a percentage\";\r\n            this.#dom_sidelap = this._create_dom_input_number(this.#sidelap / NeuronFeatureSurvey._xlap_ratio, this.#update_sidelap_from_dom.bind(this), 0, 100);\r\n            this.#dom_sidelap.title = t19;\r\n            c.appendChild(this._create_dom_label(\"Sidelap:\", this.#dom_sidelap, t19));\r\n            c.appendChild(this.#dom_sidelap);\r\n\r\n            //=====================================\r\n            //Flight calculations\r\n            //=====================================\r\n            const tb1 = \"Flight path parameter configuration and calculations for the survey.\";\r\n            let dom_break1 = this._create_dom_output();\r\n            dom_break1.title = tb1;\r\n            let dom_break_label1 = this._create_dom_label(\"Path Config.\", dom_break1, tb1)\r\n            dom_break_label1.classList.add('mission-feature-content-subtitle');\r\n            c.appendChild(dom_break_label1);\r\n            c.appendChild(dom_break1);\r\n\r\n\r\n            const t3 = \"Altitude for the survey in feet relative to take-off location ground level\";\r\n            this.#dom_altitude = this._create_dom_input_number(this.#altitude / NeuronFeatureSurvey._altitude_ratio, this.#update_altitude_from_dom.bind(this));\r\n            this.#dom_altitude.title = t3;\r\n            c.appendChild(this._create_dom_label(\"Altitude (ft):\", this.#dom_altitude, t3));\r\n            c.appendChild(this.#dom_altitude);\r\n\r\n            const t4 = \"Spacing between the individual lanes of the survey pattern in meters\";\r\n            this.#dom_distance = this._create_dom_input_number(this.#distance, this.#update_distance_from_dom.bind(this), 0.5);\r\n            this.#dom_distance.title = t4;\r\n            c.appendChild(this._create_dom_label(\"Spacing (m):\", this.#dom_distance, t4));\r\n            c.appendChild(this.#dom_distance);\r\n\r\n            const t5 = \"Entry location on the survey pattern relative to the most Northwestern point of the survey\";\r\n            this.#dom_startpos = this._create_dom_input_select(\r\n                [\r\n                    StartPosition.TopLeft,\r\n                    StartPosition.TopRight,\r\n                    StartPosition.BottomLeft,\r\n                    StartPosition.BottomRight\r\n                ].map(x => x.toString()),\r\n                [\r\n                    \"Top left\",\r\n                    \"Top right\",\r\n                    \"Bottom left\",\r\n                    \"Bottom right\"\r\n                ],\r\n                this.#update_startpos_from_dom.bind(this),\r\n                this.#startpos.toString());\r\n            this.#dom_startpos.title = t5;\r\n            c.appendChild(this._create_dom_label(\"Entry:\", this.#dom_startpos, t5));\r\n            c.appendChild(this.#dom_startpos);\r\n\r\n            // this.#dom_spacing = this._create_dom_input_number(this.#spacing, this.#update_spacing_from_dom.bind(this), 0);\r\n            // c.appendChild(this._create_dom_labelled_input(\"Spacing:\", this.#dom_spacing));\r\n\r\n            const t6 = \"Angle of the survey pattern in degrees relative to North\";\r\n            this.#dom_angle = this._create_dom_input_number(this.#angle, this.#update_angle_from_dom.bind(this), -180, 180);\r\n            this.#dom_angle.title = t6;\r\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle, t6));\r\n            c.appendChild(this.#dom_angle);\r\n\r\n            //XXX: Same title as dom_angle\r\n            this.#dom_angle_slider = this._create_dom_input_range(this.#angle, this.#update_angle_slider_from_dom.bind(this), -180, 180, 5);\r\n            this.#dom_angle_slider.title = t6;\r\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle_slider, t6, true));\r\n            c.appendChild(this.#dom_angle_slider);\r\n\r\n            const t7 = \"Lane start waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary\";\r\n            this.#dom_leadin = this._create_dom_input_number(this.#leadin, this.#update_leadin_from_dom.bind(this), 0);\r\n            this.#dom_leadin.title = t7;\r\n            c.appendChild(this._create_dom_label(\"Lead-in:\", this.#dom_leadin, t7));\r\n            c.appendChild(this.#dom_leadin);\r\n\r\n            const t9 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for odd-numbered lanes\";\r\n            this.#dom_overshoot2 = this._create_dom_input_number(this.#overshoot2, this.#update_overshoot2_from_dom.bind(this));\r\n            this.#dom_overshoot2.title = t9;\r\n            c.appendChild(this._create_dom_label(\"Run-out A:\", this.#dom_overshoot2, t9));\r\n            c.appendChild(this.#dom_overshoot2);\r\n\r\n            const t8 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for even-numbered lanes\";\r\n            this.#dom_overshoot1 = this._create_dom_input_number(this.#overshoot1, this.#update_overshoot1_from_dom.bind(this));\r\n            this.#dom_overshoot1.title = t8;\r\n            c.appendChild(this._create_dom_label(\"Run-out B:\", this.#dom_overshoot1, t8));\r\n            c.appendChild(this.#dom_overshoot1);\r\n\r\n            const t10 = \"Number of lanes to skip between each run across the survey area\";\r\n            this.#dom_minLaneSeparation = this._create_dom_input_number(this.#minLaneSeparation, this.#update_minLaneSeparation_from_dom.bind(this), 0);\r\n            this.#dom_minLaneSeparation.title = t10;\r\n            c.appendChild(this._create_dom_label(\"Lane Skip:\", this.#dom_minLaneSeparation, t10));\r\n            c.appendChild(this.#dom_minLaneSeparation);\r\n\r\n            //Try go back now and calculate other values if relevant\r\n            this.#calculate_and_update_capture_variables();\r\n            this.#try_update_dom_stats();\r\n\r\n            this.#dom.append(c);\r\n        }\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    get_sidelap() {\r\n        return this.#sidelap;\r\n    };\r\n\r\n    get_overlap() {\r\n        return this.#overlap;\r\n    }\r\n\r\n    get_ground_resolution() {\r\n        return this.#ground_resolution;\r\n    };\r\n\r\n    set_sidelap(sidelap:number) {\r\n        this.#set_sidelap(sidelap);\r\n    }\r\n\r\n    #set_sidelap(sidelap:number, update_calcs:boolean = true) {\r\n        this.#sidelap = sidelap;\r\n        if(update_calcs)\r\n            this.#calculate_and_update_capture_variables();\r\n    };\r\n\r\n    set_overlap(overlap:number) {\r\n        this.#overlap = overlap;\r\n        this.#try_update_dom_stats();\r\n    }\r\n\r\n    set_ground_resolution(ground_resolution:number) {\r\n        this.#set_ground_resolution(ground_resolution);\r\n    }\r\n\r\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true) {\r\n        this.#ground_resolution = ground_resolution;\r\n\r\n        if(update_calcs)\r\n            this.#calculate_and_update_capture_variables();\r\n    };\r\n\r\n    #update_sidelap_from_dom() {\r\n        this.set_sidelap(this.#dom_sidelap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\r\n    }\r\n\r\n    #update_overlap_from_dom() {\r\n        this.set_overlap(this.#dom_overlap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\r\n    }\r\n\r\n    #update_ground_resolution_from_dom() {\r\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureSurvey._gsd_ratio)\r\n    }\r\n\r\n    #calculate_and_update_capture_variables() {\r\n        let settings_changed = false;\r\n        const camera = NeuronOptions.get_camera();\r\n\r\n        if(this.#dom_current_camera) {\r\n            this.#dom_current_camera.innerText = '';\r\n            this.#dom_current_camera.appendChild(document.createTextNode(camera.name));\r\n        }\r\n\r\n        let altitude = camera.get_distance(this.get_ground_resolution());\r\n\r\n        if(altitude && altitude != this.get_altitude()) {\r\n            settings_changed = true;\r\n\r\n            if(this.#dom_altitude)\r\n                this.#dom_altitude.value = (altitude / NeuronFeatureSurvey._altitude_ratio).toString();\r\n            this.#set_altitude(altitude, false);\r\n        }\r\n\r\n        let projection = camera.get_projected_size(this.#altitude);\r\n\r\n        if(projection && (this.#sidelap >= 0) && (this.#sidelap <= 1)) {\r\n            const sidelap_factor = 1 - this.#sidelap;\r\n            const distance = projection.Width()*sidelap_factor;\r\n\r\n            if(distance != this.get_distance()) {\r\n                settings_changed = true;\r\n\r\n                if(this.#dom_distance)\r\n                this.#dom_distance.value = Math.max(Number.parseFloat(this.#dom_distance.min), distance).toString();\r\n\r\n                this.#set_distance(distance, false);\r\n            }\r\n        }\r\n\r\n        return settings_changed;\r\n    }\r\n\r\n    static override isObjectOfDataType(object: any): object is NeuronFeatureSurveyData {\r\n        let is_valid =\r\n            (object.type == NeuronFeatureSurvey.TYPE) &&\r\n            (object.version == NeuronFeatureSurvey.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static from_json(j:NeuronFeatureSurveyData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeatureSurvey.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeatureSurvey`);\r\n\r\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\r\n        let s = new NeuronFeatureSurvey(map, corners);\r\n\r\n        s.set_altitude(Number.isNaN(j.altitude) ? 0.0 : j.altitude);\r\n        s.set_distance(Number.isNaN(j.distance) ? 0.0 : j.distance);\r\n        s.set_spacing(Number.isNaN(j.spacing) ? 0.0 : j.spacing);\r\n        s.set_angle(Number.isNaN(j.angle) ? 0.0 : j.angle);\r\n        s.set_overshoot1(Number.isNaN(j.overshoot1) ? 0.0 : j.overshoot1);\r\n        s.set_overshoot2(Number.isNaN(j.overshoot2) ? 0.0 : j.overshoot2);\r\n        s.set_startpos(Number.isNaN(j.startpos) ? 0.0 : j.startpos);\r\n        s.set_minLaneSeparation(Number.isNaN(j.minLaneSeparation) ? 0.0 : j.minLaneSeparation);\r\n        s.set_leadin(Number.isNaN(j.leadin) ? 0.0 : j.leadin);\r\n        s.set_overlap(Number.isNaN(j.overlap) ? 0.0 : j.overlap);\r\n        s.#set_sidelap(Number.isNaN(j.sidelap) ? 0.0 : j.sidelap, false);\r\n        s.#set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution, false);\r\n\r\n        s.#calculate_and_update_capture_variables();\r\n\r\n        return s;\r\n    }\r\n\r\n    override to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeatureSurveyData>{\r\n            version: NeuronFeatureSurvey.VERSION,\r\n            type: NeuronFeatureSurvey.TYPE,\r\n            corners: this.get_corners_as_points().map(x => x.to_json()),\r\n            altitude: this.get_altitude(),\r\n            distance: this.get_distance(),\r\n            spacing: this.get_spacing(),\r\n            angle: this.get_angle(),\r\n            overshoot1: this.get_overshoot1(),\r\n            overshoot2: this.get_overshoot2(),\r\n            startpos: this.get_startpos(),\r\n            minLaneSeparation: this.get_minLaneSeparation(),\r\n            leadin: this.get_leadin(),\r\n            overlap: this.get_overlap(),\r\n            sidelap: this.get_sidelap(),\r\n            ground_resolution: this.get_ground_resolution(),\r\n            label: this.get_label(),\r\n        }\r\n    }\r\n}\r\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\r\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\r\nimport { NeuronHelp } from \"./neuron_help\";\r\nimport { NeuronPlanner } from \"./neuron_planner\";\r\nimport { NeuronIcons } from \"./interface_fontawesome\";\r\n\r\n//TODO: Document\r\nexport interface NeuronFeaturePointData {\r\n    version:string,\r\n    type:string,\r\n    point:NeuronInterfacePointData\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronFeaturePoint extends NeuronFeatureBase {\r\n    static override NAME = \"Point\";\r\n    static override TYPE = \"NeuronFeaturePoint\";\r\n    static override VERSION = 'cd512a90-dd55-11ec-8a8a-23c90341eb99';\r\n    static override HELP_KEY = 'point';\r\n\r\n    #planner:NeuronPlanner;\r\n    #marker:L.Marker;\r\n    #point:NeuronInterfacePoint;\r\n    #dom:HTMLDivElement;\r\n    #dom_label:HTMLInputElement;\r\n    #dom_lat:HTMLInputElement;\r\n    #dom_lon:HTMLInputElement;\r\n    #dom_alt:HTMLInputElement;\r\n    #dom_convert_waypoint:HTMLButtonElement;\r\n\r\n    constructor(map:L.Map, point:NeuronInterfacePoint=null, planner:NeuronPlanner = null) {\r\n        super(map);\r\n\r\n        this.#marker = null;\r\n        this.#point = null;\r\n        this.#dom = null;\r\n        this.#dom_label = null;\r\n        this.#dom_lat = null;\r\n        this.#dom_lon = null;\r\n        this.#dom_alt = null;\r\n        this.#dom_convert_waypoint = null;\r\n\r\n        this.set_planner(planner);\r\n\r\n        if(point)\r\n            this.set_point(point);\r\n    }\r\n\r\n    get_point() {\r\n        return this.#point;\r\n    }\r\n\r\n    set_planner(planner:NeuronPlanner) {\r\n        this.#planner = planner;\r\n    }\r\n\r\n    remove_point_by_context(context:L.Marker) {\r\n        if(this.#marker == context) {\r\n            this.remove_feature();\r\n        } else {\r\n            console.warn(\"Call to remove unknown marker context\");\r\n        }\r\n    }\r\n\r\n    #remove_point_by_event(event:L.LeafletEvent) {\r\n        this.remove_point_by_context(event.target);\r\n    }\r\n\r\n    #update_position_from_event(event:L.LeafletEvent) {\r\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\r\n        if (this.#point)\r\n            point.altitude = this.#point.altitude;\r\n        this.#internal_set_point(point);\r\n    }\r\n\r\n    #generate_popup(context:L.Marker) {\r\n        const menu_items = [\r\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\r\n            null,\r\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\r\n        ]\r\n        context.bindPopup(create_popup_context_dom(this.#point && this.#point.tag ? this.#point.tag : \"Point\", menu_items, context));\r\n    }\r\n\r\n    set_point(point:NeuronInterfacePoint) {\r\n        if(!this.#marker) {\r\n            this.#marker = L.marker(point.to_leaflet(),{\r\n                draggable: true,\r\n                autoPan: true,\r\n                icon: get_neuron_map_marker('neuron-marker-poi', point.tag)\r\n            })\r\n\r\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\r\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\r\n\r\n            this._add_layer_to_map(this.#marker);\r\n        }\r\n\r\n        this.#internal_set_point(point);\r\n    }\r\n\r\n    show_on_plan() {\r\n        if(this.#dom) {\r\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\r\n            this.#dom.scrollIntoView();\r\n            this.#dom.classList.remove('mission-feature-highlight-remove');\r\n            this.#dom.classList.add('mission-feature-highlight');\r\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\r\n        }\r\n    }\r\n\r\n    #remove_dom_highlight() {\r\n        if(this.#dom) {\r\n            this.#dom.classList.remove('mission-feature-highlight');\r\n            this.#dom.classList.add('mission-feature-highlight-remove');\r\n        }\r\n    }\r\n\r\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true) {\r\n        this.#point = point;\r\n\r\n        if(update_marker && this.#marker) {\r\n            this.#marker.setLatLng(point.to_leaflet());\r\n            this.#generate_popup(this.#marker);\r\n        }\r\n\r\n        if(update_dom) {\r\n            console.log(point.tag)\r\n            if(this.#dom_lat)\r\n                this.#dom_lat.value = point.latitude.toString();\r\n\r\n            if(this.#dom_lon)\r\n                this.#dom_lon.value = point.longitude.toString();\r\n        }\r\n\r\n        this._trigger_on_changed();\r\n    }\r\n\r\n    #update_latitude_from_dom() {\r\n        if(this.#point)\r\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\r\n\r\n        this.#internal_set_point(this.#point, true, false);\r\n    }\r\n\r\n    #update_tag_from_dom() {\r\n        if(this.#point) {\r\n            this.#point.tag = this.#dom_label.value;\r\n\r\n            if(this.#marker)\r\n                this.#marker.setIcon(get_neuron_map_marker('neuron-marker-poi', this.#point.tag));\r\n        }\r\n\r\n        this.#internal_set_point(this.#point, true, false);\r\n    }\r\n\r\n    #update_longitude_from_dom() {\r\n        if(this.#point)\r\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\r\n\r\n        this.#internal_set_point(this.#point, true, false);\r\n    }\r\n\r\n    #update_altitude_from_dom() {\r\n        if(this.#point)\r\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\r\n\r\n        this.#internal_set_point(this.#point, true, false);\r\n    }\r\n\r\n\r\n    override show_help() {\r\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePoint.HELP_KEY}`);\r\n    }\r\n\r\n    override remove_feature() {\r\n        if(this.#marker)\r\n            this._remove_layer_from_map(this.#marker);\r\n\r\n        super.remove_feature();\r\n    }\r\n\r\n    //XXX: No paths provided by this feature, use base return\r\n    // override get_path_coords():NeuronInterfacePoint[] {\r\n    //     return [];\r\n    // }\r\n\r\n    override get_dom() {\r\n        if(!this.#dom) {\r\n            this.#dom = this._get_dom(\"Point\");\r\n\r\n            let c = document.createElement(\"div\");\r\n            c.className = 'mission-feature-content';\r\n\r\n            const t01 = \"Convert this point to a waypoint feature\";\r\n            this.#dom_convert_waypoint = this._create_dom_input_button(\"Waypoint\", this.#convert_to_waypoint.bind(this));\r\n            this.#dom_convert_waypoint.title = t01;\r\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_waypoint, t01));\r\n            c.appendChild(this.#dom_convert_waypoint);\r\n\r\n            const t3 = \"Text label for identification of the point\";\r\n            this.#dom_label = this._create_dom_input_textbox((this.#point ? this.#point.tag : \"\"), this.#update_tag_from_dom.bind(this));\r\n            this.#dom_label.title = t3;\r\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t3));\r\n            c.appendChild(this.#dom_label);\r\n\r\n            const t0 = \"Latitude location for the point in decimal degrees\";\r\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\r\n            this.#dom_lat.title = t0;\r\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\r\n            c.appendChild(this.#dom_lat);\r\n\r\n            const t1 = \"Longitude location for the point in decimal degrees\";\r\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\r\n            this.#dom_lon.title = t1;\r\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\r\n            c.appendChild(this.#dom_lon);\r\n\r\n            const t2 = \"Altitude for the point in feet relative to take-off location ground level\";\r\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\r\n            this.#dom_alt.title = t2;\r\n            c.appendChild(this._create_dom_label(\"Altitude (ft):\", this.#dom_alt, t2));\r\n            c.appendChild(this.#dom_alt);\r\n\r\n            this.#dom.append(c);\r\n        }\r\n\r\n        return this.#dom;\r\n    }\r\n\r\n    #convert_to_waypoint() {\r\n        if(this.#planner) {\r\n            this.#planner.replace_point_with_waypoint(this);\r\n        } else {\r\n            console.warn(\"Planner not set, cannot convert point feature!\");\r\n        }\r\n    }\r\n\r\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\r\n        let is_valid =\r\n            (object.type == NeuronFeaturePoint.TYPE) &&\r\n            (object.version == NeuronFeaturePoint.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\r\n        //XXX: Implement this per inherited feature\r\n        if(!NeuronFeaturePoint.isObjectOfDataType(j))\r\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\r\n\r\n        const point = NeuronInterfacePoint.from_json(j.point);\r\n        return new NeuronFeaturePoint(map, point);\r\n    }\r\n\r\n    override to_json() {\r\n        //XXX: Implement this per inherited feature\r\n        return <NeuronFeaturePointData>{\r\n            version: NeuronFeaturePoint.VERSION,\r\n            type: NeuronFeaturePoint.TYPE,\r\n            point: this.#point.to_json()\r\n        }\r\n    }\r\n}\r\n","import { NeuronFeatureBase, NeuronFeatureBaseData } from \"./neuron_feature_base\";\r\nimport { NeuronFeatureWaypoint, NeuronFeaturePointData } from \"./neuron_feature_waypoint\";\r\nimport { NeuronFeatureLine, NeuronFeatureLineData } from \"./neuron_feature_line\";\r\nimport { NeuronFeaturePolygon, NeuronFeaturePolygonData } from \"./neuron_feature_polygon\";\r\nimport { NeuronFeatureSurvey, NeuronFeatureSurveyData } from \"./neuron_feature_survey\";\r\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\r\nimport { NeuronMap } from \"./neuron_map\";\r\nimport { kml_download_from_neuron_data, kmx_load_file, NeuronKMLData } from \"./neuron_tools_kml\";\r\nimport { download_file, get_filename } from \"./neuron_tools_files\"\r\nimport { L } from \"./interface_leaflet\"\r\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\r\nimport { NeuronOptions, NeuronOptionsData } from \"./neuron_options\";\r\n\r\n//TODO: Document\r\nexport type MissionFeatureData = (\r\n    NeuronFeatureBaseData |\r\n    NeuronFeaturePointData |\r\n    NeuronFeatureLineData |\r\n    NeuronFeaturePolygonData |\r\n    NeuronFeatureSurveyData\r\n);\r\n\r\n//TODO: Document\r\nexport type MissionFeature = (\r\n    NeuronFeatureBase |\r\n    NeuronFeaturePoint |\r\n    NeuronFeatureWaypoint |\r\n    NeuronFeatureLine |\r\n    NeuronFeaturePolygon |\r\n    NeuronFeatureSurvey\r\n);\r\n\r\n//TODO: Document\r\nexport interface NeuronPlannerMissionData {\r\n    version:string;\r\n    type:string;\r\n    settings:NeuronOptionsData;\r\n    mission_items:MissionFeatureData[],\r\n    waypoints: NeuronInterfacePointData[];\r\n}\r\n\r\n//TODO: Document\r\nexport interface MissionBrief {\r\n    type:string,\r\n    description:string,\r\n    components:string[],\r\n    time_transit:string,\r\n    time_duration:string\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronPlanner {\r\n    static TYPE = 'NeuronPlanner';\r\n    static VERSION = '48a24a80-d243-11ec-918e-9fd28348efc7';\r\n\r\n    #map:NeuronMap;\r\n\r\n    #plan_element:HTMLElement;\r\n    #mission_items:MissionFeature[];\r\n    #on_change_callbacks:Map<number,()=>void>;\r\n    #last_callback_id:number;\r\n    #clearing_mission:boolean;\r\n\r\n    #last_mission_altitude:number;\r\n\r\n    #plan_element_name:string;\r\n    // #unsub_option_cb:()=>void;\r\n\r\n    constructor(plan_element_name:string, map:NeuronMap = null) {\r\n        this.#map = map;\r\n\r\n        this.#plan_element = null;\r\n        this.#plan_element_name = plan_element_name;\r\n\r\n        this.#mission_items = [];\r\n        this.#on_change_callbacks = new Map();\r\n        this.#last_callback_id = 0;\r\n        this.#last_mission_altitude = 0.0;\r\n        this.#clearing_mission = false;\r\n        // this.#unsub_option_cb = null;\r\n    }\r\n\r\n    // set_options_subscriber() {\r\n    //     if(this.#unsub_option_cb)\r\n    //         this.#unsub_option_cb();\r\n\r\n    //     this.#unsub_option_cb = NeuronOptions.add_callback(this.#run_on_mission_change.bind(this));\r\n    // }\r\n\r\n    get_mission_items() {\r\n        return this.#mission_items;\r\n    }\r\n\r\n    get_mission_as_json() {\r\n        let mission_data:MissionFeatureData[] = [];\r\n        for(const item of this.#mission_items)\r\n            mission_data.push(item.to_json());\r\n\r\n        return mission_data;\r\n    }\r\n\r\n    static isObjectOfDataType(object: any): object is NeuronPlannerMissionData {\r\n        let is_valid =\r\n            (object.type == NeuronPlanner.TYPE) &&\r\n            (object.version == NeuronPlanner.VERSION);\r\n\r\n        return is_valid;\r\n    }\r\n\r\n    set_mission_from_json(j:NeuronPlannerMissionData) {\r\n        if(!NeuronPlanner.isObjectOfDataType(j))\r\n            throw new Error(\"Invalid version during import of NeuronPlannerMissionData\");\r\n\r\n        if(j.settings)\r\n            NeuronOptions.load(j.settings);\r\n\r\n        if(j.mission_items && j.mission_items.length) {\r\n            this.#add_mission_features_from_json(j.mission_items);\r\n        } else if(j.waypoints && j.waypoints.length) {\r\n            console.warn(\"No mission items found, importing waypoints instead!\");\r\n            this.#add_waypoint_features_from_json(j.waypoints);\r\n        }\r\n\r\n        this.fit_mission_on_map();\r\n    }\r\n\r\n    #add_mission_features_from_json(mission_items:MissionFeatureData[]) {\r\n        let features:NeuronFeatureBase[] = [];\r\n\r\n        for(const item of mission_items) {\r\n            let feature:NeuronFeatureBase = null;\r\n\r\n            if(NeuronFeatureBase.isObjectOfDataType(item)) {\r\n                feature = NeuronFeatureBase.from_json(item, this.#map.get_leaflet_map());\r\n            } else if(NeuronFeaturePoint.isObjectOfDataType(item)) {\r\n                let p = NeuronFeaturePoint.from_json(item, this.#map.get_leaflet_map());\r\n                p.set_planner(this);\r\n                feature = p;\r\n            } else if(NeuronFeatureWaypoint.isObjectOfDataType(item)) {\r\n                feature = NeuronFeatureWaypoint.from_json(item, this.#map.get_leaflet_map());\r\n            } else if(NeuronFeatureLine.isObjectOfDataType(item)) {\r\n                feature = NeuronFeatureLine.from_json(item, this.#map.get_leaflet_map());\r\n            } else if(NeuronFeaturePolygon.isObjectOfDataType(item)) {\r\n                let p = NeuronFeaturePolygon.from_json(item, this.#map.get_leaflet_map());\r\n                p.set_planner(this);\r\n                feature = p;\r\n            } else if(NeuronFeatureSurvey.isObjectOfDataType(item)) {\r\n                feature = NeuronFeatureSurvey.from_json(item, this.#map.get_leaflet_map());\r\n            } else {\r\n                console.warn(\"Unable to import mission item\");\r\n                console.warn(item);\r\n            }\r\n\r\n            if(feature)\r\n                features.push(feature);\r\n        }\r\n\r\n        this.add_mission_items(features);\r\n    }\r\n\r\n    #add_waypoint_features_from_json(waypoints:NeuronInterfacePointData[]) {\r\n        let features:NeuronFeatureBase[] = [];\r\n\r\n        for(const item of waypoints) {\r\n            let feature:NeuronFeatureBase = null;\r\n\r\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\r\n                const point = NeuronInterfacePoint.from_json(item);\r\n                feature = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), point);\r\n            } else {\r\n                console.warn(\"Unable to import waypoint item\");\r\n                console.warn(item);\r\n            }\r\n\r\n            if(feature)\r\n                features.push(feature);\r\n        }\r\n\r\n        this.add_mission_items(features);\r\n    }\r\n\r\n    #add_point_features_from_json(points:NeuronInterfacePointData[]) {\r\n        let features:NeuronFeatureBase[] = [];\r\n\r\n        for(const item of points) {\r\n            let feature:NeuronFeatureBase = null;\r\n\r\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\r\n                const point = NeuronInterfacePoint.from_json(item);\r\n                feature = new NeuronFeaturePoint(this.#map.get_leaflet_map(), point);\r\n            } else {\r\n                console.warn(\"Unable to import waypoint item\");\r\n                console.warn(item);\r\n            }\r\n\r\n            if(feature)\r\n                features.push(feature);\r\n        }\r\n\r\n        this.add_mission_items(features);\r\n    }\r\n\r\n    async save_mission_file() {\r\n        let j:NeuronPlannerMissionData = {\r\n            version: NeuronPlanner.VERSION,\r\n            type: NeuronPlanner.TYPE,\r\n            settings: NeuronOptions.as_json(),\r\n            mission_items: this.get_mission_as_json(),\r\n            waypoints: this.get_mission_as_points().map(x => x.to_json())\r\n        }\r\n\r\n        const file = new Blob(\r\n            [JSON.stringify(j, null, 4)],\r\n            {\r\n                type: 'application/json'\r\n            }\r\n        );\r\n\r\n        const filename = get_filename('json');\r\n        await download_file(filename, file);\r\n    }\r\n\r\n    async load_mission_file(file:Blob) {\r\n        const j = <NeuronPlannerMissionData>JSON.parse(await file.text());\r\n        this.set_mission_from_json(j);\r\n    }\r\n\r\n    async fit_mission_on_map(allow_animate:boolean=true, pad_left:number=50,pad_top:number=50,pad_right:number=50,pad_bottom:number=50) {\r\n        return new Promise(resolve => {\r\n            //Try to fit all the features on screen\r\n            if(this.#map) {\r\n                let m = this.#map.get_leaflet_map();\r\n                if(m) {\r\n                    let features:L.Layer[] = [];\r\n                    for(const item of this.#mission_items)\r\n                        features.push(...item.get_features());\r\n\r\n                    if(features.length) {\r\n                        let fg = L.featureGroup(features);\r\n                        const old_snap = m.options.zoomSnap;\r\n                        m.options.zoomSnap = 0;\r\n                        let cb = (ev:L.LayerEvent) => {\r\n                            // console.log(`Zoom ended at ${m.getZoom()}, disabling thing~`);\r\n                            m.options.zoomSnap = old_snap;\r\n                            m.off('moveend', cb);\r\n                            resolve(true);\r\n                        }\r\n                        //XXX:  we use moveend here because the map always moves to\r\n                        //      fit bounds, but it doesn't always zoom to fit bounds\r\n                        m.on('moveend', cb);\r\n                        m.fitBounds(fg.getBounds(), {\r\n                            paddingTopLeft: [pad_left, pad_top],\r\n                            paddingBottomRight: [pad_right, pad_bottom],\r\n                            animate: allow_animate,\r\n                            // duration: 0.001\r\n                        });\r\n\r\n                        // } else {\r\n                        //     console.log(\"Zoom not needed!\");\r\n                        //     resolve(true);\r\n                        // }\r\n                    } else {\r\n                        // console.log(\"No objects to zoom too!\");\r\n                        resolve(true);\r\n                    }\r\n\r\n                    window.neuron_map.show_map_help(false);\r\n                } else {\r\n                    resolve(false);\r\n                }\r\n            } else {\r\n                resolve(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    export_mission_kml() {\r\n        let markers:NeuronInterfacePoint[] = [];\r\n        let paths:NeuronInterfacePoint[][] = [this.get_mission_as_points()];\r\n        let polygons:NeuronInterfacePoint[][] = [];\r\n        for(const i of this.#mission_items) {\r\n            if((i instanceof NeuronFeaturePoint)) {\r\n                markers.push(i.get_point());\r\n            } else if((i instanceof NeuronFeatureLine)) {\r\n                paths.push(i.get_ends_as_points());\r\n            } else if((i instanceof NeuronFeaturePolygon) || (i instanceof NeuronFeatureSurvey)) {\r\n                polygons.push(i.get_corners_as_points());\r\n            }\r\n        }\r\n\r\n        kml_download_from_neuron_data(markers, paths, polygons);\r\n    }\r\n\r\n    set_map(map:NeuronMap) {\r\n        this.#map = map;\r\n    }\r\n\r\n    #run_on_mission_change() {\r\n        const coords = this.get_mission_as_points();\r\n        this.#last_mission_altitude = coords.length ?\r\n            coords[coords.length - 1].altitude :\r\n            0.0;\r\n\r\n        for(const cb of this.#on_change_callbacks.values())\r\n            cb();\r\n    }\r\n\r\n    on_mission_change(cb:()=>void): ()=>void {\r\n        const id = this.#last_callback_id++;\r\n        this.#on_change_callbacks.set(id, cb);\r\n\r\n        return this.#remove_on_mission_change.bind(this, id);\r\n    }\r\n\r\n    #remove_on_mission_change(key:number) {\r\n        if(this.#on_change_callbacks.has(key)) {\r\n            this.#on_change_callbacks.delete(key);\r\n        }\r\n    }\r\n\r\n    #mission_item_changed(item:NeuronFeatureBase) {\r\n        this.#run_on_mission_change();\r\n    }\r\n\r\n    #array_move(arr:any[], old_index:number, new_index:number) {\r\n        if (new_index >= arr.length) {\r\n            var k = new_index - arr.length + 1;\r\n            while (k--) {\r\n                arr.push(undefined);\r\n            }\r\n        }\r\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\r\n        return arr; // for testing\r\n    };\r\n\r\n    #move_mission_item(item:NeuronFeatureBase, direction:number) {\r\n        let ind = this.#mission_items.indexOf(item);\r\n        if(ind >= 0) {\r\n            //Move index and clamp to array size\r\n            let new_ind = ind + (direction > 0 ? 1 : -1)\r\n            new_ind = Math.max(Math.min(new_ind, (this.#mission_items.length - 1)), 0);\r\n            this.#array_move(this.#mission_items, ind, new_ind);\r\n\r\n            this.update();\r\n            this.#run_on_mission_change();\r\n        } else {\r\n            console.warn(\"Unknown mission item, cannot move\");\r\n        }\r\n    }\r\n\r\n    get_last_item_altitude() {\r\n        return this.#last_mission_altitude;\r\n    }\r\n\r\n    #on_add_mission_item_updates() {\r\n        this.update();\r\n        this.#run_on_mission_change();\r\n    }\r\n\r\n    #add_mission_item(item:NeuronFeatureBase, index:number = -1, run_update:boolean = true) {\r\n        item.set_remove_callback(this.remove_mission_item.bind(this));\r\n        item.set_change_callback(this.#mission_item_changed.bind(this));\r\n        item.set_move_callback(this.#move_mission_item.bind(this));\r\n        if(index < 0 || index >= this.#mission_items.length) {\r\n            this.#mission_items.push(item);\r\n        } else {\r\n            this.#mission_items.splice(index, 0, item);\r\n        }\r\n\r\n        if(run_update) {\r\n            this.#on_add_mission_item_updates();\r\n        }\r\n    }\r\n\r\n    add_mission_item(item:NeuronFeatureBase, index:number = -1) {\r\n        this.#add_mission_item(item, index)\r\n    }\r\n\r\n    add_mission_items(items:NeuronFeatureBase[], index:number = -1) {\r\n        let count = 0;\r\n        for(const item of items) {\r\n            const new_ind = index == -1 ?\r\n                -1 :    //add to end\r\n                index + count;\r\n            this.#add_mission_item(item, new_ind, false);\r\n            count ++;\r\n        }\r\n\r\n        if(items.length)\r\n            this.#on_add_mission_item_updates();\r\n    }\r\n\r\n    remove_mission_item(item:NeuronFeatureBase) {\r\n        // console.log(`Mission item removed: ${item}`);\r\n        let index = this.#mission_items.indexOf(item);\r\n        if(index >= 0) {\r\n            this.#mission_items.splice(index, 1);\r\n        } else {\r\n            console.warn(\"Unknown mission item, cannot remove!\")\r\n        }\r\n\r\n        if(!this.#clearing_mission) {\r\n            this.update();\r\n            this.#run_on_mission_change();\r\n        }\r\n    }\r\n\r\n    clear_mission() {\r\n        this.#clearing_mission = true;\r\n        while(this.#mission_items.length > 0)\r\n            this.#mission_items[0].remove_feature();\r\n        this.#clearing_mission = false;\r\n\r\n        //Do this in bulk at the end\r\n        this.update();\r\n        this.#run_on_mission_change();\r\n    }\r\n\r\n    update() {\r\n        const mission_doms = this.#mission_items.map(x => x.get_dom());\r\n        const mission_ids = mission_doms.map(x => x.id);\r\n\r\n        const old_elements = Array.from(this.#plan_element.children).filter(x => !mission_ids.includes(x.id));\r\n\r\n        for(const el of old_elements)\r\n            el.remove();\r\n        // for(let el of this.#plan_element.children) {\r\n        //     if(!mission_ids.includes(el.id))\r\n        //         this.#plan_element.removeChild(el);\r\n        // }\r\n\r\n        for(let j = 0; j < mission_doms.length; j++) {\r\n            const i = mission_doms[j];\r\n            const i_next = j+1 > mission_doms.length ? null : mission_doms[j+1];\r\n\r\n            let nodes = Array.from(this.#plan_element.children);\r\n            const ind_n = nodes.indexOf(i);\r\n            const ind_nn = nodes.indexOf(i_next);\r\n\r\n            //Check to see if our node is in the right location\r\n            if(ind_n != j) {\r\n                //It is not...\r\n                //Our next item is already in the list, so place it before that\r\n                if(i_next && ind_nn >= 0) {\r\n                    //Item is in the list, but is in the wrong spot\r\n                    //Or\r\n                    //Item is not in the list, insert before the next item\r\n                    this.#plan_element.insertBefore(i, i_next);\r\n                } else {\r\n                    //Item is not in the list, and there is no next item, append to end\r\n                    this.#plan_element.appendChild(i);\r\n                    i.scrollIntoView();\r\n                }\r\n\r\n                if(ind_n < 0) {\r\n                    i.classList.remove('mission-feature-highlight-remove');\r\n                    i.classList.add('mission-feature-highlight');\r\n                    setTimeout(this.#remove_mission_feature_highlight.bind(this, i), 1000);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    #remove_mission_feature_highlight(dom:HTMLDivElement) {\r\n        dom.classList.remove('mission-feature-highlight');\r\n        dom.classList.add('mission-feature-highlight-remove');\r\n    }\r\n\r\n    #kml_loaded(result:NeuronKMLData) {\r\n        // console.log(\"Got file result:\");\r\n        // console.log(result);\r\n        let features:NeuronFeatureBase[] = [];\r\n\r\n        for(const p of result.markers) {\r\n            // p.altitude = this.get_last_item_altitude();\r\n            const f = new NeuronFeaturePoint(this.#map.get_leaflet_map(), p);\r\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\r\n            features.push(f);\r\n        }\r\n\r\n        for(const path of result.paths) {\r\n            for(const p of path) {\r\n                // p.altitude = this.get_last_item_altitude();\r\n                const f = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), p);\r\n                features.push(f);\r\n            }\r\n        }\r\n\r\n        for(const p of result.polygons) {\r\n            const f = new NeuronFeaturePolygon(this.#map.get_leaflet_map(), p);\r\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\r\n            features.push(f);\r\n        }\r\n\r\n        this.add_mission_items(features);\r\n        this.fit_mission_on_map();\r\n    }\r\n\r\n    replace_point_with_waypoint(old_item:NeuronFeaturePoint) {\r\n        const ind = this.#mission_items.indexOf(old_item);\r\n        if(ind >= 0) {\r\n            const waypoint = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), old_item.get_point());\r\n            old_item.remove_feature();\r\n            this.add_mission_item(waypoint, ind);\r\n        } else {\r\n            console.warn(\"Unknown mission feature, cannot replace\");\r\n        }\r\n    }\r\n\r\n    replace_polygon_with_survey(old_item:NeuronFeaturePolygon) {\r\n        const ind = this.#mission_items.indexOf(old_item);\r\n        if(ind >= 0) {\r\n            const survey = new NeuronFeatureSurvey(this.#map.get_leaflet_map(), old_item.get_corners_as_points());\r\n            old_item.remove_feature();\r\n            this.add_mission_item(survey, ind);\r\n        } else {\r\n            console.warn(\"Unknown mission feature, cannot replace\");\r\n        }\r\n    }\r\n\r\n    import_features_from_kmx_multiple(files:Blob[]|File[]) {\r\n        for(const file of files) {\r\n            this.import_features_from_kmx(file);\r\n        }\r\n    }\r\n\r\n    import_features_from_kmx(file:Blob|File) {\r\n        kmx_load_file(file, this.#kml_loaded.bind(this));\r\n    }\r\n\r\n    reset() {\r\n        //Collect our DOM elements\r\n        this.#plan_element = document.getElementById(this.#plan_element_name);\r\n\r\n        //Update the planner\r\n        this.update();\r\n        this.#run_on_mission_change();\r\n    }\r\n\r\n    get_mission_as_points() {\r\n        let coords:NeuronInterfacePoint[] = [];\r\n\r\n        for(const i of this.#mission_items)\r\n            coords = coords.concat(i.get_path_coords());\r\n\r\n        return coords;\r\n    }\r\n}\r\n","import {NeuronFeatureWaypoint} from \"./neuron_feature_waypoint\";\r\nimport {NeuronFeaturePolygon} from \"./neuron_feature_polygon\";\r\n\r\nimport { NeuronPlanner } from \"./neuron_planner\";\r\n\r\nimport {NeuronInterfacePoint} from \"./neuron_interfaces\";\r\nimport { L } from \"./interface_leaflet\";\r\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\r\nimport { NeuronOptions, NeuronOptionsBoolean } from \"./neuron_options\";\r\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\r\nimport { NeuronFeatureLine } from \"./neuron_feature_line\";\r\n\r\n//TODO: Document\r\ninterface NeuronMapLayers {\r\n    [id: string]: L.TileLayer;\r\n}\r\n\r\n//TODO: Document\r\nexport class NeuronMap {\r\n    #planner:NeuronPlanner\r\n    #map:L.Map;\r\n    #map_layer_control:L.Control.Layers;\r\n    #map_zoom_control:L.Control.Zoom;\r\n    #path:L.Polyline;\r\n    #map_element_name:string;\r\n    #help_element_name:string;\r\n    #map_element:HTMLElement;\r\n    #help_element:HTMLElement;\r\n    #map_layers:NeuronMapLayers;\r\n    #unsub_option_cb:()=>void;\r\n\r\n    constructor(map_element_name:string, help_element_name:string, planner:NeuronPlanner) {\r\n        this.#planner = planner;\r\n        this.#map = null;\r\n        this.#map_layer_control = null;\r\n        this.#map_zoom_control = null;\r\n        this.#map_layers = null;\r\n        this.#map_element = null;\r\n        this.#help_element = null;\r\n        this.#map_element_name = map_element_name;\r\n        this.#help_element_name = help_element_name;\r\n\r\n        this.#planner.on_mission_change(this.update_path.bind(this));\r\n        this.set_options_subscriber();\r\n    }\r\n\r\n    set_options_subscriber() {\r\n        if(this.#unsub_option_cb)\r\n            this.#unsub_option_cb();\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_path.bind(this));\r\n    }\r\n\r\n    show_map_help(show:boolean, help_key:string = '') {\r\n        if(show) {\r\n            this.#map_element.style.display = 'none';\r\n            this.#help_element.style.display = 'block';\r\n\r\n            if(help_key)\r\n                document.getElementById(help_key)?.scrollIntoView();\r\n        } else {\r\n            this.#map_element.style.display = 'block';\r\n            this.#help_element.style.display = 'none';\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    toggle_map_help() {\r\n        this.show_map_help(this.#map_element.style.display != 'none');\r\n    }\r\n\r\n    get_leaflet_map() {\r\n        return this.#map;\r\n    }\r\n\r\n    set_location(location:NeuronInterfacePoint, zoom=13) {\r\n        if(this.#map) {\r\n            this.#map.setView(location.to_leaflet(), zoom);\r\n        }\r\n    }\r\n\r\n    zoom_to(feature_group:L.FeatureGroup) {\r\n        if(this.#map) {\r\n            this.#map.fitBounds(feature_group.getBounds());\r\n        }\r\n    }\r\n\r\n    add_feature(feature:L.Layer) {\r\n        if(this.#map) {\r\n            feature.addTo(this.#map);\r\n        }\r\n    }\r\n\r\n    add_features(features:L.Layer[]) {\r\n        for(const f of features)\r\n            this.add_feature(f);\r\n    }\r\n\r\n    on_double_click(event:L.LeafletMouseEvent) {\r\n        //Click modifier handlers\r\n        //CTRL+Click: Add new waypoint\r\n        // if(event.originalEvent.ctrlKey) {\r\n            //...\r\n        // } else {\r\n            const l = NeuronInterfacePoint.from_leaflet(event.latlng);\r\n            l.altitude = this.#planner.get_last_item_altitude();\r\n            const p = new NeuronFeatureWaypoint(this.#map, l);\r\n            this.#planner.add_mission_item(p);\r\n        // }\r\n    }\r\n\r\n    create_point_in_view() {\r\n        if(this.#map) {\r\n            const b = this.#map.getBounds();\r\n            const ne = b.getNorthEast();\r\n            const sw = b.getSouthWest();\r\n            const dx = ne.lng - sw.lng;\r\n            const dy = ne.lat - sw.lat;\r\n\r\n            const p = new NeuronFeaturePoint(this.#map, new NeuronInterfacePoint(\r\n                sw.lat + dy / 2,\r\n                sw.lng + dx / 2,\r\n                this.#planner.get_last_item_altitude()\r\n            ));\r\n            p.set_planner(this.#planner);\r\n            this.#planner.add_mission_item(p);\r\n        }\r\n    }\r\n\r\n    create_waypoint_in_view() {\r\n        if(this.#map) {\r\n            const b = this.#map.getBounds();\r\n            const ne = b.getNorthEast();\r\n            const sw = b.getSouthWest();\r\n            const dx = ne.lng - sw.lng;\r\n            const dy = ne.lat - sw.lat;\r\n\r\n            const p = new NeuronFeatureWaypoint(this.#map, new NeuronInterfacePoint(\r\n                sw.lat + dy / 2,\r\n                sw.lng + dx / 2,\r\n                this.#planner.get_last_item_altitude()\r\n            ));\r\n            this.#planner.add_mission_item(p);\r\n        }\r\n    }\r\n\r\n    create_line_in_view() {\r\n        if(this.#map) {\r\n            const b = this.#map.getBounds();\r\n            const ne = b.getNorthEast();\r\n            const sw = b.getSouthWest();\r\n            const dx = ne.lng - sw.lng;\r\n            const dy = ne.lat - sw.lat;\r\n\r\n            const p = new NeuronFeatureLine(\r\n                this.#map,\r\n                new NeuronInterfacePoint(\r\n                    sw.lat + dy / 2,\r\n                    sw.lng + dx / 4,\r\n                    this.#planner.get_last_item_altitude()\r\n                ),\r\n                new NeuronInterfacePoint(\r\n                    sw.lat + dy / 2,\r\n                    sw.lng + 3 * dx / 4,\r\n                    this.#planner.get_last_item_altitude()\r\n                )\r\n            );\r\n            this.#planner.add_mission_item(p);\r\n        }\r\n    }\r\n\r\n\r\n    #get_poly_bounds_from_view() {\r\n        let bounds:NeuronInterfacePoint[] = [];\r\n        if(this.#map) {\r\n            const b = this.#map.getBounds();\r\n            const ne = b.getNorthEast();\r\n            const sw = b.getSouthWest();\r\n            const dx = ne.lng - sw.lng;\r\n            const dy = ne.lat - sw.lat;\r\n\r\n            bounds = [\r\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng +     dx / 4),\r\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng +     dx / 4),\r\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng + 3 * dx / 4),\r\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng + 3 * dx / 4)\r\n            ];\r\n        }\r\n\r\n        return bounds;\r\n    }\r\n\r\n    create_polygon_in_view() {\r\n        const bounds = this.#get_poly_bounds_from_view();\r\n\r\n        if(this.#map && bounds.length) {\r\n            const p = new NeuronFeaturePolygon(this.#map, bounds);\r\n            p.set_planner(this.#planner);\r\n            this.#planner.add_mission_item(p);\r\n        }\r\n    }\r\n\r\n    create_survey_in_view() {\r\n        const bounds = this.#get_poly_bounds_from_view();\r\n\r\n        if(this.#map && bounds.length) {\r\n            const p = new NeuronFeatureSurvey(this.#map, bounds);\r\n            p.set_altitude(this.#planner.get_last_item_altitude());\r\n            this.#planner.add_mission_item(p);\r\n        }\r\n    }\r\n\r\n    update_path() {\r\n        if(this.#path) {\r\n            const show = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\r\n            const path_points = show ? this.#planner.get_mission_as_points().map(x => x.to_leaflet()) : [];\r\n            this.#path.setLatLngs(path_points);\r\n        }\r\n    }\r\n\r\n    toggle_map_tools(show:boolean) {\r\n\r\n        if(this.#map) {\r\n\r\n            if(!this.#map_zoom_control) {\r\n                this.#map.zoomControl;\r\n            }\r\n\r\n            if(!show && this.#map_zoom_control) {\r\n                this.#map_zoom_control.remove();\r\n                this.#map_zoom_control = null;\r\n            } else if(!this.#map_zoom_control) {\r\n                this.#map_zoom_control = L.control.zoom();\r\n                this.#map_zoom_control.addTo(this.#map);\r\n            }\r\n\r\n            if(!show && this.#map_layer_control) {\r\n                this.#map_layer_control.remove();\r\n                this.#map_layer_control = null;\r\n            } else if(!this.#map_layer_control) {\r\n                this.#map_layer_control = L.control.layers(this.#map_layers); //, otherLayers...\r\n                this.#map_layer_control.addTo(this.#map);\r\n            }\r\n        }\r\n    }\r\n\r\n\treset() {\r\n        this.#map_element = document.getElementById(this.#map_element_name);\r\n        this.#help_element = document.getElementById(this.#help_element_name);\r\n\r\n\t\tif(!this.#map) {\r\n\t\t\tconst tiles_grey = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\r\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tid: 'mapbox/streets-v11',\r\n\t\t\t\ttileSize: 512,\r\n\t\t\t\tzoomOffset: -1,\r\n                // cspell:disable-next-line\r\n                accessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\r\n\t\t\t});\r\n\t\t\tconst tiles_satellite = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\r\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n\t\t\t\tmaxZoom: 18,\r\n\t\t\t\tid: 'mapbox/satellite-v9',\r\n\t\t\t\ttileSize: 512,\r\n\t\t\t\tzoomOffset: -1,\r\n                // cspell:disable-next-line\r\n\t\t\t\taccessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\r\n\t\t\t});\r\n\r\n            this.#map_layers = {\r\n                Street: tiles_grey,\r\n                Satellite: tiles_satellite\r\n            };\r\n\r\n\t\t\tthis.#map = L.map(this.#map_element_name, {\r\n                doubleClickZoom: false,\r\n                layers: [\r\n                    tiles_grey\r\n                ],\r\n                zoomControl: false\r\n            });\r\n            this.toggle_map_tools(true);\r\n            this.#map.on(\"dblclick\", this.on_double_click.bind(this));\r\n\r\n            //Set an initial zoom\r\n            this.set_location(new NeuronInterfacePoint(-27.4771033, 153.0301422), 11);\r\n\t\t} else {\r\n\t\t\t//Already have a map, so just force a re-render\r\n\t\t\tthis.#map.invalidateSize();\r\n\t\t}\r\n\r\n        if(!this.#path) {\r\n            this.#path = L.polyline([], {color: 'orange'}).addTo(this.#map);\r\n        }\r\n\t}\r\n}\r\n","// import { NeuronFeatureBase } from \"./neuron_feature_base\";\r\nimport { NeuronFeatureWaypoint } from \"./neuron_feature_waypoint\";\r\n// import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\r\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\r\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\r\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\r\n\r\nimport { MissionFeature, NeuronPlanner } from \"./neuron_planner\";\r\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\r\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\r\nimport { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\r\n\r\n//Defines an listing of key component fields to be displayed on the mission brief\r\nexport interface MissionBriefComponent {\r\n    field1:string,\r\n    field2:string,\r\n    field3:string\r\n}\r\n\r\n//Defines an summary for a set of specific feature, or part of a specific mission feature\r\nexport interface MissionBriefItem {\r\n    type:string,\r\n    description:string,\r\n    components:MissionBriefComponent[],\r\n    time_transit:string,\r\n    time_duration:string\r\n}\r\n\r\n//Defines an summary for a set of mission features in an itemized list\r\nexport interface MissionSummary {\r\n    brief:MissionBriefItem[],\r\n    total_duration:number,\r\n    total_distance:number,\r\n    total_images:number\r\n}\r\n\r\nexport class NeuronBrief {\r\n    #planner:NeuronPlanner;\r\n    #brief_element:HTMLElement;\r\n    #brief_element_name:string;\r\n\r\n    /** Creates a NeuronBrief object that controls the generation of the mission brief functions of the app\r\n     * @param  {NeuronPlanner} planner NeuronPlanner to use for accessing the current mission plan\r\n     * @param  {string} brief_element_name Identifier for the document element to use when generating a brief\r\n     */\r\n    constructor(planner:NeuronPlanner, brief_element_name:string) {\r\n        this.#planner = planner;\r\n        this.#brief_element = null;\r\n        this.#brief_element_name = brief_element_name\r\n    }\r\n\r\n    /** Resets the internal state of this class and prepares any relevant variables\r\n     */\r\n    reset() {\r\n        this.#brief_element = document.getElementById(this.#brief_element_name);\r\n    }\r\n\r\n    /** Generates and updates the mission brief element in the document with the current mission brief details\r\n     */\r\n    update_mission_brief() {\r\n        const mission_features = this.#planner.get_mission_items();\r\n        const notables = this.get_mission_notables(mission_features);\r\n        const summary = this.get_mission_summary(mission_features);\r\n\r\n        this.#brief_element.innerHTML = '';\r\n        let title = document.createElement('h1');\r\n        title.appendChild(document.createTextNode(\"Mission Brief\"));\r\n        this.#brief_element.appendChild(title);\r\n\r\n\r\n        let table = document.createElement('div');\r\n        table.className = 'brief-table';\r\n\r\n        if(notables.length) {\r\n            let t1 = document.createElement('h2');\r\n            t1.className = 'brief-table-title';\r\n            t1.appendChild(document.createTextNode(\"Points of Interest\"));\r\n            table.appendChild(t1);\r\n\r\n            const headings = [\r\n                \"Item\",\r\n                \"Type\",\r\n                \"Description\",\r\n                \"Latitude\",\r\n                \"Longitude\",\r\n                \"Altitude (ft)\",\r\n                \"\",\r\n                \"\",\r\n            ]\r\n\r\n            for(const h of headings) {\r\n                let th = document.createElement('div');\r\n                th.className = 'brief-table-header';\r\n                th.appendChild(document.createTextNode(h));\r\n                table.appendChild(th);\r\n            }\r\n\r\n            let count = 0;\r\n            for(const item of notables) {\r\n                count++;\r\n                //XXX: Check item.type for special cases of bold tallies\r\n                const content = [\r\n                    item.type ? count.toString() : \"\",\r\n                    item.type,\r\n                    item.description,\r\n                    item.components.length ? item.components[0].field1 : \"—\",\r\n                    item.components.length ? item.components[0].field2 : \"—\",\r\n                    item.components.length ? item.components[0].field3 : \"—\",\r\n                    \"\",\r\n                    \"\"\r\n                ];\r\n\r\n                const ind_values_start = 3;\r\n                for(let j=0; j<content.length; j++) {\r\n                    let td = document.createElement('div');\r\n                    td.appendChild(document.createTextNode(content[j]));\r\n                    if((j == 0) || (j >= ind_values_start))\r\n                        td.classList.add('brief-table-entry-right');\r\n                    if(!item.type)\r\n                        td.classList.add('brief-table-entry-bold');\r\n                    td.classList.add('brief-table-entry');\r\n                    table.appendChild(td);\r\n                }\r\n\r\n                //Handle case of multiple components (skipped if one or less)\r\n                for(let i = 1; i<item.components.length; i++) {\r\n                    const content = [\r\n                        \"\",\r\n                        \"\",\r\n                        \"\",\r\n                        item.components[i].field1,\r\n                        item.components[i].field2,\r\n                        item.components[i].field3,\r\n                        \"\",\r\n                        \"\"\r\n                    ]\r\n\r\n                    for(const h of content) {\r\n                        let td = document.createElement('div');\r\n                        td.appendChild(document.createTextNode(h));\r\n                        td.className = 'brief-table-entry-right brief-table-entry';\r\n                        table.appendChild(td);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(summary.brief.length) {\r\n            let t2 = document.createElement('h2');\r\n            t2.className = 'brief-table-title';\r\n            t2.appendChild(document.createTextNode(\"Flight Plan\"));\r\n            table.appendChild(t2);\r\n\r\n            const headings = [\r\n                \"Step\",\r\n                \"Type\",\r\n                \"Description\",\r\n                \"Latitude\",\r\n                \"Longitude\",\r\n                \"Altitude (ft)\",\r\n                \"Transit\",\r\n                \"Duration\",\r\n            ]\r\n\r\n            // let table = document.createElement('div');\r\n            // table.className = 'brief-table';\r\n            for(const h of headings) {\r\n                let th = document.createElement('div');\r\n                th.className = 'brief-table-header';\r\n                th.appendChild(document.createTextNode(h));\r\n                table.appendChild(th);\r\n            }\r\n\r\n            let count = 0;\r\n            for(const item of summary.brief) {\r\n                count++;\r\n                //XXX: Check item.type for special cases of bold tallies\r\n                const content = [\r\n                    item.type ? count.toString() : \"\",\r\n                    item.type,\r\n                    item.description,\r\n                    item.components.length ? item.components[0].field1 : \"—\",\r\n                    item.components.length ? item.components[0].field2 : \"—\",\r\n                    item.components.length ? item.components[0].field3 : \"—\",\r\n                    item.time_transit,\r\n                    item.time_duration\r\n                ];\r\n\r\n                const ind_values_start = 3;\r\n                for(let j=0; j<content.length; j++) {\r\n                    let td = document.createElement('div');\r\n                    td.appendChild(document.createTextNode(content[j]));\r\n                    if((j == 0) || (j >= ind_values_start))\r\n                        td.classList.add('brief-table-entry-right');\r\n                    if(!item.type)\r\n                        td.classList.add('brief-table-entry-bold');\r\n                    td.classList.add('brief-table-entry');\r\n                    table.appendChild(td);\r\n                }\r\n\r\n                //Handle case of multiple components (skipped if one or less)\r\n                for(let i = 1; i<item.components.length; i++) {\r\n                    const content = [\r\n                        \"\",\r\n                        \"\",\r\n                        \"\",\r\n                        item.components[i].field1,\r\n                        item.components[i].field2,\r\n                        item.components[i].field3,\r\n                        \"\",\r\n                        \"\"\r\n                    ]\r\n\r\n                    for(const h of content) {\r\n                        let td = document.createElement('div');\r\n                        td.appendChild(document.createTextNode(h));\r\n                        td.className = 'brief-table-entry-right brief-table-entry';\r\n                        table.appendChild(td);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.#brief_element.appendChild(table);\r\n\r\n        if(!notables.length && !summary.brief.length){\r\n            let td = document.createElement('div');\r\n            td.appendChild(document.createTextNode(\"No mission brief available.\"));\r\n            this.#brief_element.appendChild(td);\r\n        }\r\n    }\r\n\r\n    /** Breaks down a NeuronInterfacePoint location into set field components for the mission summary\r\n     * @param  {NeuronInterfacePoint} point Point to split into summary fields\r\n     */\r\n    static get_components_from_point(point:NeuronInterfacePoint) {\r\n        return <MissionBriefComponent>{\r\n            field1: point.toStringLatitude(),\r\n            field2: point.toStringLongitude(),\r\n            field3: point.toStringAltitude(),\r\n        }\r\n    }\r\n\r\n    /** Generates a list of mission brief items for non-flyable mission features\r\n     * @param  {MissionFeature[]} mission_features List of features to analyze.\r\n     */\r\n    get_mission_notables(mission_features:MissionFeature[]) {\r\n        let notables:MissionBriefItem[] = [];\r\n\r\n        for(const item of mission_features) {\r\n            let step:MissionBriefItem = null;\r\n\r\n            if(!item.is_flyable()) {\r\n                if(item instanceof NeuronFeaturePoint) {\r\n                    const point = item.get_point();\r\n                    step = {\r\n                        type: NeuronFeaturePoint.NAME,\r\n                        description: (point && point.tag) ? point.tag : \"Point of interest\",\r\n                        components: [point ? NeuronBrief.get_components_from_point(point) : {\r\n                            field1: \"\",\r\n                            field2: \"\",\r\n                            field3: \"\",\r\n                        }],\r\n                        time_duration: \"\",\r\n                        time_transit: \"\"\r\n                    };\r\n                // } else if(item instanceof NeuronFeaturePolygon) {\r\n                } else if(item instanceof NeuronFeaturePolygon) {\r\n                    const corners = item.get_corners_as_points();\r\n                    const tag = item.get_label();\r\n                    step = {\r\n                        type: NeuronFeaturePolygon.NAME,\r\n                        description: (tag) ? tag : \"Area of interest\",\r\n                        components: corners.map(x => NeuronBrief.get_components_from_point(x)),\r\n                        time_duration: \"\",\r\n                        time_transit: \"\",\r\n                    };\r\n                }\r\n            }\r\n\r\n           if(step)\r\n                notables.push(step);\r\n        }\r\n\r\n        return notables;\r\n    }\r\n\r\n    /** Generates a mission summary for a set of mission features\r\n     * @param  {MissionFeature[]} mission_features List of features to analyze.\r\n     */\r\n    get_mission_summary(mission_features:MissionFeature[]) {\r\n        let summary:MissionSummary = {\r\n            brief: [],\r\n            total_distance: 0,\r\n            total_duration: 0,\r\n            total_images: 0\r\n        }\r\n        const steps = this.#planner.get_mission_as_points();\r\n        let takeoff_duration = 0;\r\n        let land_duration = 0;\r\n        let extra_mission_duration = 0;\r\n        let takeoff_distance = 0;\r\n        let land_distance = 0;\r\n\r\n        if(steps.length) {\r\n            //Get the flight speed and lock it to at least 0.1m/s\r\n            const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\r\n            const flight_speed = Math.max(s ? s : 0.0, 0.1);\r\n\r\n            let point_last = null;\r\n            // let time_takeoff = \"—\";\r\n            let takeoff_point = steps[0];\r\n            if(takeoff_point.altitude != 0) {\r\n                takeoff_point = new NeuronInterfacePoint(steps[0].latitude, steps[0].longitude, 0.0);\r\n                const takeoff_coords = [takeoff_point, steps[0]];\r\n                takeoff_distance = flight_distance_from_coords(takeoff_coords);\r\n                takeoff_duration = takeoff_distance/flight_speed;\r\n                point_last = takeoff_point;\r\n                // time_takeoff = \"+\" + flight_time_from_duration(takeoff_duration);\r\n            }\r\n\r\n            let step0:MissionBriefItem = {\r\n                type: NeuronFeatureWaypoint.NAME,\r\n                description: \"Take-off at location\",\r\n                components: [NeuronBrief.get_components_from_point(takeoff_point)],\r\n                time_duration: \"—\",\r\n                time_transit: \"—\",\r\n            };\r\n\r\n            summary.brief.push(step0);\r\n\r\n            for(const item of mission_features) {\r\n                let path = item.get_path_coords();\r\n\r\n                let time_transit = \"—\";\r\n                if(path.length && point_last) {\r\n                    const transit_coords = [point_last, path[0]];\r\n                    const transit_distance = flight_distance_from_coords(transit_coords);\r\n                    time_transit = \"+\" + flight_time_from_duration(transit_distance/flight_speed);\r\n                }\r\n\r\n                let step:MissionBriefItem = null;\r\n                if(item.is_flyable()) {\r\n                    if(item instanceof NeuronFeatureWaypoint) {\r\n                        const wait = item.get_wait_duration();\r\n                        extra_mission_duration += wait;\r\n                        const image_count = item.get_image_count();\r\n                        step = {\r\n                            type: NeuronFeatureWaypoint.NAME,\r\n                            description: \"Fly to location\" + (image_count ? ' and capture image' : ''),\r\n                            components: path.map(x => NeuronBrief.get_components_from_point(x)),\r\n                            time_duration: wait > 0 ? \"+\" + flight_time_from_duration(wait) : \"—\",\r\n                            time_transit: time_transit\r\n                        };\r\n                        summary.total_images += image_count;\r\n                    } else if(item instanceof NeuronFeatureSurvey) {\r\n                        let corners = item.get_corners_as_points();\r\n                        for(let p of corners) {\r\n                            p.altitude = item.get_altitude();\r\n                        }\r\n                        const step_distance = flight_distance_from_coords(path);\r\n                        const step_duration = \"+\" + flight_time_from_duration(step_distance/flight_speed);\r\n                        step = {\r\n                            type: NeuronFeatureSurvey.NAME,\r\n                            description: \"Survey area with bounds\",\r\n                            components: corners.map(x => NeuronBrief.get_components_from_point(x)),\r\n                            time_duration: step_duration,\r\n                            time_transit: time_transit,\r\n                        };\r\n                        summary.total_images += item.get_image_count();\r\n                    }\r\n                }\r\n\r\n                if(path.length)\r\n                    point_last = path[path.length - 1];\r\n\r\n                if(step)\r\n                summary.brief.push(step);\r\n            }\r\n\r\n            let time_land = \"—\";\r\n            let land_point = point_last;\r\n            let land_component:MissionBriefComponent = {\r\n                field1: \"—\",\r\n                field2: \"—\",\r\n                field3: \"—\"\r\n            };\r\n            if(land_point && land_point.altitude != 0) {\r\n                land_point = new NeuronInterfacePoint(point_last.latitude, point_last.longitude, 0.0);\r\n                land_component = NeuronBrief.get_components_from_point(land_point);\r\n                const land_coords = [point_last, land_point];\r\n                land_distance = flight_distance_from_coords(land_coords);\r\n                land_duration = land_distance/flight_speed;\r\n                time_land = \"+\" + flight_time_from_duration(land_duration);\r\n            }\r\n\r\n            let step_n:MissionBriefItem = {\r\n                type: NeuronFeatureWaypoint.NAME,\r\n                description: \"Land at location\",\r\n                components: [land_component],\r\n                time_duration: time_land,\r\n                time_transit: \"—\"\r\n            };\r\n            summary.brief.push(step_n);\r\n\r\n            summary.total_distance = flight_distance_from_coords(steps) + takeoff_distance + land_distance;\r\n            const total_transit_duration = summary.total_distance/flight_speed;\r\n            summary.total_duration = total_transit_duration + takeoff_duration + land_duration + extra_mission_duration;\r\n            const total_time = flight_time_from_duration(summary.total_duration);\r\n\r\n            let step_total_time:MissionBriefItem= {\r\n                type: \"\",\r\n                description: \"\",\r\n                components: [{\r\n                    field1: \"\",\r\n                    field2: \"\",\r\n                    field3: \"\",\r\n                }],\r\n                time_transit: \"Duration:\",\r\n                time_duration: total_time,\r\n            };\r\n            summary.brief.push(step_total_time);\r\n\r\n            let step_total_distance:MissionBriefItem = {\r\n                type: \"\",\r\n                description: \"\",\r\n                components: [{\r\n                    field1: \"\",\r\n                    field2: \"\",\r\n                    field3: \"\",\r\n                }],\r\n                time_transit: \"Distance:\",\r\n                time_duration: `${(summary.total_distance / 1000).toFixed(2)}km`,\r\n            };\r\n            summary.brief.push(step_total_distance);\r\n\r\n            let step_total_images:MissionBriefItem = {\r\n                type: \"\",\r\n                description: \"\",\r\n                components: [{\r\n                    field1: \"\",\r\n                    field2: \"\",\r\n                    field3: \"\",\r\n                }],\r\n                time_transit: \"Images:\",\r\n                time_duration: summary.total_images > 0 ? summary.total_images.toString() : \"—\",\r\n            };\r\n            summary.brief.push(step_total_images);\r\n        }\r\n\r\n        return summary;\r\n    }\r\n}\r\n","import { flight_time_from_duration } from \"./neuron_tools_common\";\r\nimport { NeuronPlanner } from \"./neuron_planner\";\r\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\r\nimport { NeuronBrief } from \"./neuron_brief\";\r\nimport { NeuronOptions } from \"./neuron_options\";\r\n\r\n//TODO: Document\r\nexport class NeuronStatistics extends NeuronDOMFactory {\r\n    #planner:NeuronPlanner;\r\n    #brief:NeuronBrief;\r\n    #stats_element_name_stats:string;\r\n\r\n    #stats_results_element:HTMLElement;\r\n\r\n    #dom_stat_waypoints:HTMLOutputElement;\r\n    #dom_stat_distance:HTMLOutputElement;\r\n    #dom_stat_duration:HTMLOutputElement;\r\n    #dom_stat_images:HTMLOutputElement;\r\n\r\n    #unsub_option_cb:()=>void;\r\n\r\n    constructor(planner:NeuronPlanner, brief:NeuronBrief, element_name_stats:string) {\r\n        super('fp-stats');\r\n\r\n        this.#planner = planner;\r\n        this.#brief = brief;\r\n\r\n        this.#stats_element_name_stats = element_name_stats;\r\n        this.#stats_results_element = null;\r\n\r\n        this.#dom_stat_waypoints = null;\r\n        this.#dom_stat_distance = null;\r\n        this.#dom_stat_duration = null;\r\n        this.#dom_stat_images = null;\r\n\r\n        this.set_options_subscriber();\r\n    }\r\n\r\n    set_options_subscriber() {\r\n        if(this.#unsub_option_cb)\r\n            this.#unsub_option_cb();\r\n\r\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_statistics.bind(this));\r\n    }\r\n\r\n    update_statistics() {\r\n        const coords = this.#planner.get_mission_as_points();\r\n        const summary = this.#brief.get_mission_summary(this.#planner.get_mission_items());\r\n        // this.#last_mission_altitude = coords.length ?\r\n        //     coords[coords.length - 1].altitude :\r\n        //     0.0;\r\n\r\n        // let total_distance = flight_distance_from_coords(coords);\r\n        const dist_km = summary.total_distance / 1000;\r\n\r\n        //Get the flight speed and lock it to at least 0.1m/s\r\n        // const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\r\n        // const flight_speed = Math.max(s ? s : 0.0, 0.1);\r\n\r\n        if(this.#dom_stat_waypoints)\r\n            this.#dom_stat_waypoints.value = coords.length.toFixed(0);\r\n\r\n        if(this.#dom_stat_distance)\r\n            this.#dom_stat_distance.value = `${(dist_km).toFixed(2)}km`;\r\n\r\n        if(this.#dom_stat_duration)\r\n            this.#dom_stat_duration.value = flight_time_from_duration(summary.total_duration);\r\n\r\n        if(this.#dom_stat_images)\r\n            this.#dom_stat_images.value = summary.total_images > 0 ? summary.total_images.toString() : \"—\";\r\n    }\r\n\r\n    #gen_dom() {\r\n        //Statistics\r\n        this.#stats_results_element = document.getElementById(this.#stats_element_name_stats);\r\n        this.#stats_results_element.innerHTML = '';\r\n\r\n        const t1 = \"Total number of waypoints in the mission plan\";\r\n        this.#dom_stat_waypoints = this._create_dom_output();\r\n        this.#dom_stat_waypoints.title = t1;\r\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_stat_waypoints, t1));\r\n        this.#stats_results_element.appendChild(this.#dom_stat_waypoints);\r\n\r\n        const t2 = \"Total distance traveled during the mission plan\";\r\n        this.#dom_stat_distance = this._create_dom_output();\r\n        this.#dom_stat_distance.title = t2;\r\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Distance:\", this.#dom_stat_distance, t2));\r\n        this.#stats_results_element.appendChild(this.#dom_stat_distance);\r\n\r\n        const t3 = \"Total time taken to fly the mission plan\";\r\n        this.#dom_stat_duration = this._create_dom_output();\r\n        this.#dom_stat_duration.title = t3;\r\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Duration:\", this.#dom_stat_duration, t3));\r\n        this.#stats_results_element.appendChild(this.#dom_stat_duration);\r\n\r\n        const t4 = \"Total number of images taken during the mission plan\";\r\n        this.#dom_stat_images = this._create_dom_output();\r\n        this.#dom_stat_images.title = t4;\r\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Images:\", this.#dom_stat_images, t4));\r\n        this.#stats_results_element.appendChild(this.#dom_stat_images);\r\n    }\r\n\r\n    reset() {\r\n        this.#gen_dom();\r\n\r\n        //Update the planner\r\n        this.update_statistics();\r\n    }\r\n}\r\n","import { NeuronDOMFactory } from \"./neuron_dom_factory\";\r\nimport { NeuronCameraSpecifications } from \"./neuron_interfaces\";\r\nimport { NeuronOptionsBoolean, NeuronOptionsNumber, NeuronOptions } from \"./neuron_options\";\r\n\r\n//TODO: Document\r\nexport class NeuronSettings extends NeuronDOMFactory {\r\n    #element_name_options:string;\r\n    #stats_options_element:HTMLElement;\r\n\r\n    //Flight options\r\n    #dom_option_show_path:HTMLInputElement;\r\n    #dom_option_speed:HTMLInputElement;\r\n    //Capture parameters\r\n    #dom_option_camera_name:HTMLSelectElement;\r\n    #dom_option_camera_focal_length:HTMLInputElement;\r\n    #dom_option_camera_image_width:HTMLInputElement;\r\n    #dom_option_camera_image_height:HTMLInputElement;\r\n    #dom_option_camera_sensor_width:HTMLInputElement;\r\n    #dom_option_camera_sensor_height:HTMLInputElement;\r\n\r\n    static _camera_focal_length_min:number = 0;\r\n    static _camera_sensor_width_min:number = 0;\r\n    static _camera_sensor_height_min:number = 0;\r\n    static _camera_image_width_min:number = 0;\r\n    static _camera_image_height_min:number = 0;\r\n\r\n    constructor(element_name_options:string) {\r\n        super('fp-options');\r\n\r\n        this.#element_name_options = element_name_options;\r\n\r\n        this.#dom_option_show_path = null;\r\n        this.#dom_option_speed = null;\r\n        this.#dom_option_camera_name = null;\r\n        this.#dom_option_camera_focal_length = null;\r\n        this.#dom_option_camera_image_width = null;\r\n        this.#dom_option_camera_image_height = null;\r\n        this.#dom_option_camera_sensor_width = null;\r\n        this.#dom_option_camera_sensor_height = null;\r\n\r\n        this.#stats_options_element = null;\r\n\r\n        NeuronOptions.set_dom_callback(this.#update_dom_from_options.bind(this));\r\n    }\r\n\r\n    #update_option_speed_dom() {\r\n        if(this.#dom_option_speed)\r\n            NeuronOptions.set_option_number(NeuronOptionsNumber.MISSION_SPEED, this.#dom_option_speed.valueAsNumber, true, false);\r\n    }\r\n\r\n    #update_option_show_path() {\r\n        if(this.#dom_option_show_path)\r\n            NeuronOptions.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, this.#dom_option_show_path.checked, true, false);\r\n    }\r\n\r\n    #update_dom_from_options() {\r\n        if(this.#dom_option_show_path)\r\n            this.#dom_option_show_path.checked = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\r\n\r\n        if(this.#dom_option_speed)\r\n            this.#dom_option_speed.value = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED).toString();\r\n\r\n        this.set_camera(NeuronOptions.get_camera(), false);\r\n    }\r\n\r\n    #gen_dom() {\r\n        //Options\r\n        this.#stats_options_element = document.getElementById(this.#element_name_options);\r\n        this.#stats_options_element.innerHTML = '';\r\n\r\n        const t5 = \"Display the calculated flight path on the map\";\r\n        this.#dom_option_show_path = this._create_dom_input_checkbox(NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH), this.#update_option_show_path.bind(this));\r\n        this.#dom_option_show_path.title = t5;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Show path:\", this.#dom_option_show_path, t5));\r\n        this.#stats_options_element.appendChild(this.#dom_option_show_path);\r\n\r\n        const t0 = \"Speed of the aircraft during regular flight in metres per second\";\r\n        this.#dom_option_speed = this._create_dom_input_number(NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED), this.#update_option_speed_dom.bind(this), 0.1);\r\n        this.#dom_option_speed.title = t0;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Speed (m/s):\", this.#dom_option_speed, t0));\r\n        this.#stats_options_element.appendChild(this.#dom_option_speed);\r\n\r\n        const tb = \"Camera configuration for survey parameters.\";\r\n        let dom_break = this._create_dom_output();\r\n        dom_break.title = tb;\r\n        let dom_break_label = this._create_dom_label(\"Camera Config.\", dom_break, tb)\r\n        dom_break_label.classList.add('fp-stats-option-content-subtitle');\r\n        this.#stats_options_element.appendChild(dom_break_label);\r\n        this.#stats_options_element.appendChild(dom_break);\r\n\r\n        let camera = NeuronOptions.get_camera();\r\n        const t11 = \"Camera preset values for calculations based off of typical drone survey cameras\";\r\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\r\n        this.#dom_option_camera_name = this._create_dom_input_select(camera_names, camera_names, this.#update_camera_from_dom.bind(this));\r\n        this.#dom_option_camera_name.title = t11;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Camera:\", this.#dom_option_camera_name, t11));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_name);\r\n        //Manually set the camera name based off of the currently loaded camera\r\n        this.#set_camera_selector(camera);\r\n\r\n        const t12 = \"Camera focal length in millimeters\";\r\n        this.#dom_option_camera_focal_length = this._create_dom_input_number(camera.focal_length, this.#update_camera_focal_length_from_dom.bind(this), NeuronSettings._camera_focal_length_min);\r\n        this.#dom_option_camera_focal_length.title = t12;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"F.Length:\", this.#dom_option_camera_focal_length, t12));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_focal_length);\r\n\r\n        const t13 = \"Camera sensor width in millimeters\";\r\n        this.#dom_option_camera_sensor_width = this._create_dom_input_number(camera.sensor_width, this.#update_camera_sensor_width_from_dom.bind(this), NeuronSettings._camera_sensor_width_min);\r\n        this.#dom_option_camera_sensor_width.title = t13;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Width:\", this.#dom_option_camera_sensor_width, t13));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_width);\r\n\r\n        const t14 = \"Camera sensor height in millimeters\";\r\n        this.#dom_option_camera_sensor_height = this._create_dom_input_number(camera.sensor_height, this.#update_camera_sensor_height_from_dom.bind(this), NeuronSettings._camera_sensor_height_min);\r\n        this.#dom_option_camera_sensor_height.title = t14;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Height:\", this.#dom_option_camera_sensor_height, t14));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_height);\r\n\r\n        const t15 = \"Camera image width in pixels\";\r\n        this.#dom_option_camera_image_width = this._create_dom_input_number(camera.image_width, this.#update_camera_image_width_from_dom.bind(this), NeuronSettings._camera_image_width_min);\r\n        this.#dom_option_camera_image_width.title = t15;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Width:\", this.#dom_option_camera_image_width, t15));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_width);\r\n\r\n        const t16 = \"Camera image height in pixels\";\r\n        this.#dom_option_camera_image_height = this._create_dom_input_number(camera.image_height, this.#update_camera_image_height_from_dom.bind(this), NeuronSettings._camera_image_height_min);\r\n        this.#dom_option_camera_image_height.title = t16;\r\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Height:\", this.#dom_option_camera_image_height, t16));\r\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_height);\r\n    }\r\n\r\n    #set_camera_selector(camera:NeuronCameraSpecifications = NeuronOptions.camera_preset_custom) {\r\n        if(this.#dom_option_camera_name) {\r\n            let matched_camera:boolean = false;\r\n\r\n            //Go through our list and find possible matches for our set camera\r\n            const camera_matches = NeuronOptions.camera_presets.filter(x => x.name == camera.name);\r\n            if(camera_matches.length) {\r\n                const full_matches = camera_matches.filter(x => x.equals(camera));\r\n                matched_camera = full_matches.length > 0;\r\n            }\r\n\r\n            //If there is a proper match, then use that name (details should be filled in by set_camera())\r\n            //Otherwise it is a custom camera\r\n            this.#dom_option_camera_name.value = matched_camera ? camera.name : NeuronOptions.camera_preset_custom.name;\r\n        }\r\n    }\r\n\r\n    // set_camera(camera:NeuronCameraSpecifications) {\r\n    //     this.#set_camera(camera);\r\n    // };\r\n\r\n    // #set_camera(camera:NeuronCameraSpecifications, update_calcs:boolean = true) {\r\n\r\n    set_camera(camera:NeuronCameraSpecifications, update_settings:boolean = true) {\r\n        if(update_settings)\r\n            NeuronOptions.set_camera(camera, true, false);\r\n\r\n        this.#set_camera_selector(camera);\r\n\r\n        if(this.#dom_option_camera_focal_length)\r\n            this.#dom_option_camera_focal_length.value = Math.max(NeuronSettings._camera_focal_length_min, camera.focal_length).toString();\r\n        if(this.#dom_option_camera_sensor_width)\r\n            this.#dom_option_camera_sensor_width.value = Math.max(NeuronSettings._camera_sensor_width_min, camera.sensor_width).toString();\r\n        if(this.#dom_option_camera_sensor_height)\r\n            this.#dom_option_camera_sensor_height.value = Math.max(NeuronSettings._camera_sensor_height_min, camera.sensor_height).toString();\r\n        if(this.#dom_option_camera_image_width)\r\n            this.#dom_option_camera_image_width.value = Math.max(NeuronSettings._camera_image_width_min, camera.image_width).toString();\r\n        if(this.#dom_option_camera_image_height)\r\n            this.#dom_option_camera_image_height.value = Math.max(NeuronSettings._camera_image_height_min, camera.image_height).toString();\r\n    }\r\n\r\n    #update_camera_from_dom() {\r\n        const value = this.#dom_option_camera_name.value;\r\n\r\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\r\n        let camera = NeuronOptions.camera_preset_custom.copy();\r\n\r\n        if(camera_names.includes(value)) {\r\n            const matches = NeuronOptions.camera_presets.filter(x => x.name == value);\r\n            if(matches.length > 0) {\r\n                camera = matches[0].copy();\r\n            }\r\n        }\r\n\r\n        this.set_camera(camera);\r\n        // this.#calculate_and_update_camera_variables();\r\n    }\r\n\r\n    #update_camera_focal_length_from_dom() {\r\n        let camera = NeuronOptions.get_camera();\r\n        camera.focal_length = this.#dom_option_camera_focal_length.valueAsNumber;\r\n        this.set_camera(camera);\r\n    }\r\n\r\n    #update_camera_sensor_width_from_dom() {\r\n        let camera = NeuronOptions.get_camera();\r\n        camera.sensor_width = this.#dom_option_camera_sensor_width.valueAsNumber;\r\n        this.set_camera(camera);\r\n    }\r\n\r\n    #update_camera_sensor_height_from_dom() {\r\n        let camera = NeuronOptions.get_camera();\r\n        camera.sensor_height = this.#dom_option_camera_sensor_height.valueAsNumber;\r\n        this.set_camera(camera);\r\n    }\r\n\r\n    #update_camera_image_width_from_dom() {\r\n        let camera = NeuronOptions.get_camera();\r\n        camera.image_width = this.#dom_option_camera_image_width.valueAsNumber;\r\n        this.set_camera(camera);\r\n    }\r\n\r\n    #update_camera_image_height_from_dom() {\r\n        let camera = NeuronOptions.get_camera();\r\n        camera.image_height = this.#dom_option_camera_image_height.valueAsNumber;\r\n        this.set_camera(camera);\r\n    }\r\n\r\n    reset() {\r\n        this.#gen_dom();\r\n    }\r\n}\r\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { NeuronOptions } from './neuron_options';\r\nimport { app_elements_ignore_help_subs, app_element_prefix_help, InterfaceAppElements, InterfaceSummaryTabName, NeuronInterfacePoint } from './neuron_interfaces';\r\nimport { NeuronPlanner } from './neuron_planner';\r\nimport { NeuronMap } from './neuron_map';\r\nimport { NeuronBrief } from './neuron_brief';\r\nimport { NeuronStatistics } from './neuron_statistics';\r\nimport { NeuronHelp } from './neuron_help';\r\nimport { mm_to_px } from './neuron_tools_common';\r\nimport { neuron_load_dom_icons } from './interface_fontawesome'\r\nimport { get_supported_kmx_types } from './neuron_tools_kml'\r\nimport { NeuronSettings } from './neuron_settings';\r\n\r\nimport \"../css/index.css\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        neuron_planner: NeuronPlanner;\r\n        neuron_map: NeuronMap;\r\n        neuron_brief: NeuronBrief;\r\n        neuron_statistics: NeuronStatistics;\r\n        neuron_settings:NeuronSettings;\r\n        neuron_help: NeuronHelp;\r\n        neuron_set_panel_view: (panel_name:InterfaceSummaryTabName) => void;\r\n    }\r\n}\r\n\r\nconsole.log(`--== Neuron Planner by V-TOL Aerospace ==--`);\r\n\r\n//Initialize all of our options\r\nNeuronOptions.init();\r\n\r\n//Print-specific variables to store for later\r\nconst print_size_with_margin_mm = {\r\n    width: 190,   /* 210 */\r\n    height: 277/2,   /* 297 */\r\n}\r\nconst print_size_with_margin_px = {\r\n    width: mm_to_px(print_size_with_margin_mm.width),\r\n    height: mm_to_px(print_size_with_margin_mm.height)\r\n}\r\n\r\n//Application helpers\r\nwindow.neuron_set_panel_view = (tab:InterfaceSummaryTabName) => {\r\n    let el = <HTMLInputElement>document.getElementById(tab);\r\n    if(el)\r\n        el.checked = true;\r\n}\r\n\r\n//Application variables\r\nwindow.neuron_planner = new NeuronPlanner(InterfaceAppElements.PLAN);\r\nwindow.neuron_map = new NeuronMap(InterfaceAppElements.MAP, InterfaceAppElements.HELP, window.neuron_planner);\r\nwindow.neuron_brief = new NeuronBrief(window.neuron_planner, InterfaceAppElements.BRIEF);\r\nwindow.neuron_statistics = new NeuronStatistics(window.neuron_planner, window.neuron_brief, InterfaceAppElements.STATS);\r\nwindow.neuron_settings = new NeuronSettings(InterfaceAppElements.OPTIONS);\r\nwindow.neuron_help = new NeuronHelp(app_element_prefix_help, app_elements_ignore_help_subs);\r\n\r\n/** Toggles the initial application loading splash screen\r\n * @param  {boolean} show Sets the application to show the loader splash screen if true.\r\n */\r\nfunction show_loader(show:boolean) {\r\n    const el_loader = document.getElementById(InterfaceAppElements.LOADER);\r\n    const el_app = document.getElementById(InterfaceAppElements.APP);\r\n    el_loader.style.display = show ? 'flex' : 'none';\r\n    el_app.style.display = show ? 'none' : 'flex';\r\n}\r\n\r\n/**Handles the logic for dragging over files onto the application/map screen. This prevents the browser from doing something weird during drag.\r\n * @param  {DragEvent} event event that triggered the drag-over\r\n */\r\nfunction dragOverHandler(event:DragEvent) {\r\n    // console.log('File(s) in drop zone');\r\n\r\n    // Prevent default behavior (Prevent file from being opened)\r\n    event.preventDefault();\r\n}\r\n\r\nlet _dragdrop_counter = 0;\r\n/**Handles the logic for dragging over files onto the application/map screen. This reveals the drag-drop text overlay.\r\n * @param  {DragEvent} event event that triggered the drag-over\r\n */\r\n function dragEnterHandler(event:DragEvent) {\r\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\r\n    el.style.display = 'flex';\r\n    _dragdrop_counter++;\r\n}\r\n\r\n/**Handles the logic for dragging over files onto the application/map screen. This hides the drag-drop text overlay.\r\n * @param  {DragEvent} event event that triggered the drag-over\r\n */\r\n function dragLeaveHandler(event:DragEvent) {\r\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\r\n    _dragdrop_counter--;\r\n    if(_dragdrop_counter <= 0)\r\n        el.style.display = 'none';\r\n}\r\n\r\n/** Handles the logic for dragging and dropping files onto the application/map screen. This allows drag-drop import of mission and KMx files\r\n * @param  {DragEvent} event event that triggered the drag-drop\r\n */\r\nfunction dragDropHandler(event:DragEvent) {\r\n    event.preventDefault();\r\n\r\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\r\n    _dragdrop_counter--;\r\n    if(_dragdrop_counter <= 0)\r\n        el.style.display = 'none';\r\n\r\n    const kmx_types = get_supported_kmx_types();\r\n    for(const file of event.dataTransfer.items) {\r\n        if(file.type == 'application/json') {\r\n            window.neuron_planner.load_mission_file(file.getAsFile());\r\n        } else if (kmx_types.includes(file.type)) {\r\n            window.neuron_planner.import_features_from_kmx(file.getAsFile());\r\n        }\r\n    }\r\n}\r\n\r\n/** Performs the initial load and setup of the application. This should be run after the document has been loaded.\r\n */\r\nasync function load_app_data() {\r\n    //Do the FA switch-out for our DOM icons\r\n    neuron_load_dom_icons();\r\n\r\n    //Need to do this next, because many of the following need to known their final size on reset\r\n    show_loader(false);\r\n\r\n    window.neuron_planner.reset();\r\n    window.neuron_map.reset();\r\n    window.neuron_statistics.reset();\r\n    window.neuron_settings.reset();\r\n    window.neuron_brief.reset();\r\n    window.neuron_help.reset();\r\n\r\n    window.neuron_planner.set_map(window.neuron_map);\r\n    window.neuron_planner.on_mission_change(window.neuron_statistics.update_statistics.bind(window.neuron_statistics));\r\n\r\n    let el_app = document.getElementById(InterfaceAppElements.APP);\r\n    el_app.ondrop = dragDropHandler;\r\n    el_app.ondragover = dragOverHandler;\r\n    el_app.ondragenter = dragEnterHandler;\r\n    el_app.ondragleave = dragLeaveHandler;\r\n\r\n    //Update the map location if we can get the user's current location\r\n    navigator.geolocation.getCurrentPosition( async (location) => {\r\n        window.neuron_map.set_location(new NeuronInterfacePoint(location.coords.latitude, location.coords.longitude));\r\n    });\r\n}\r\n\r\n/** Prepares the page layout to take a print-friendly form\r\n * @param  {Event} event (unused)\r\n */\r\nfunction handle_before_print(event:Event) {\r\n    //Turn off the map tools\r\n    window.neuron_map.toggle_map_tools(false);\r\n    //Turn off the map tools\r\n    window.neuron_map.show_map_help(false);\r\n    //Set the size of the map, and reset it to fit the new size\r\n    const map = document.getElementById(InterfaceAppElements.MAP);\r\n    // map.style.width = `${print_size_with_margin_mm.width}mm`;\r\n    // map.style.height = `${print_size_with_margin_mm.height}mm`;\r\n    // window.neuron_map.reset();\r\n    //Position all visible elements on the map\r\n    const side_pad = 50;\r\n\r\n    let pl = side_pad;\r\n    let pr = side_pad;\r\n    if(print_size_with_margin_px.width > map.offsetWidth) {\r\n        const diff = print_size_with_margin_px.width - map.offsetWidth;\r\n        pr = -diff + side_pad;\r\n    } else {\r\n        pr = side_pad + (map.offsetWidth - print_size_with_margin_px.width);\r\n    }\r\n\r\n    let pt = side_pad;\r\n    let pb = side_pad;\r\n    if(print_size_with_margin_px.height > map.offsetHeight) {\r\n        const diff = print_size_with_margin_px.height - map.offsetHeight;\r\n        pb = -diff + side_pad;\r\n    } else {\r\n        pb = side_pad + (map.offsetHeight - print_size_with_margin_px.height);\r\n    }\r\n\r\n    window.neuron_planner.fit_mission_on_map(true, pl, pt, pr, pb);\r\n\r\n    //Generate the brief\r\n    window.neuron_brief.update_mission_brief();\r\n}\r\n\r\n/** Prepares the page layout to take the normal application form\r\n * @param  {Event} event (unused)\r\n */\r\nfunction handle_after_print(event:Event) {\r\n    //Turn off the map tools\r\n    window.neuron_map.toggle_map_tools(true);\r\n    //Set the size of the map, and reset it to fit the new size\r\n    const map = document.getElementById(InterfaceAppElements.MAP);\r\n    map.style.width = `auto`;\r\n    map.style.height = `auto`;\r\n    window.neuron_map.reset();\r\n    //Position all visible elements on the map\r\n    // window.neuron_planner.fit_mission_on_map();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', load_app_data, false);\r\nwindow.addEventListener('beforeprint', handle_before_print);\r\nwindow.addEventListener('afterprint', handle_after_print);\r\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","push","module","id","i","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","NeuronIcons","_neuron_get_icon_fa","neuron_icon","LOAD_PLAN","SAVE_PLAN","CLEAR_PLAN","UPLOAD_PLAN","CREATE_BRIEF","PLAN_LIST","HELP","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","DELETE","IDENTIFY","REVEAL","HIDE","MINIMIZE","EXPAND","FIT_ZOOM","POINT","POLYGON","RULER","IMPORT_FILE","EXPORT_FILE","neuron_get_icon","is_small","opts","transform","size","node","HTMLCollection","default_icon_options","iconUrl","shadowUrl","iconRetinaUrl","get_neuron_map_icon_html","class_name","name","get_neuron_map_marker","className","html","LeafletContextMenuItem","constructor","text","icon","callback","create_popup_context_dom","popup_title","context_items","marker_context","dom","t","d","ic","classList","add","s","onclick","zero_pad","num","places","padStart","lastId","NeuronUID","prefix","flight_distance_from_coords","coords","total_distance","p1","p2","u1","to_UTM","u2","zone","GetDistance2D","alt_d","Math","pow","abs","altitude","sqrt","flight_time_from_duration","duration","t_h","floor","t_m","t_s","mm_to_px","mm","devicePixelRatio","EPSG_code_from_utm_zone","is_south","zf","projection","get_UTM_is_south","latitude_or_zone","UTMPos","x","y","tag","equals","other","match_tag","copy","relative_point_from_dist_bearing","bearing","distance","degN","deg2rad","PI","cos","sin","relative_point_from_dist_angle","angle","b","GetAngle","atan2","static","vertices","total","l","to_NeuronInterfacePoint","p","NeuronInterfacePoint","projection_code","point","latitude","longitude","get_UTM_zone","UTMLine","base_pnt","StartPosition","GridPointTags","Rect","Left","Top","Width","Height","Right","Bottom","MidWidth","MidHeight","diag_distance","remove_item_from_array","array","indexOf","FindLineIntersection","start1","end1","start2","end2","denom","r","PointInPolygon","poly","inside","oldPoint","newPoint","FindLineIntersectionExtension","findClosestPoint","start","answer","current_best","Number","MAX_VALUE","pnt","dist1","findClosestLine","min_distance","METERS_TO_EXTEND","perpendicularOrientation","degrees","AddAngle","start_perpendicular_line","stop_perpendicular_line","intersectedPoints","Map","ordered_min_to_max","line","set","distance_p","has","ordered_keys","Array","from","keys","sort","a","key","filtered_lines","entries","filter","shortest","shorter_pnt","InterfaceSummaryTabName","InterfaceAppElements","heading","to_leaflet","latlng","lat","lng","from_NeuronInterfacePoint","utm","positions","object","isFinite","j","isObjectOfDataType","isNaN","to_json","use_imperial","use_decimal","toStringLatitude","toStringAltitude","toFixed","toStringLongitude","_altitude_ratio","dd","is_lng","dir","deg","min","sec","NeuronCameraSpecifications","focal_length","sensor_width","sensor_height","image_width","image_height","is_valid","get_ground_resolution","res","get_projected_size","get_distance","ground_resolution","ground_span","fov2_w","tan","get_projection","proj","fov2_h","h2","w2","type","TYPE","version","VERSION","NeuronOptionsBoolean","NeuronOptionsNumber","NeuronOptionsString","NeuronOptions","set_option_boolean","SHOW_PATH","set_option_number","MISSION_SPEED","set_camera","camera_preset_custom","bind","value","trigger_callbacks","trigger_dom","set_option_string","CAMERA_NAME","CAMERA_FOCAL_LENGTH","CAMERA_IMAGE_WIDTH","CAMERA_IMAGE_HEIGHT","CAMERA_SENSOR_WIDTH","CAMERA_SENSOR_HEIGHT","get","get_option_string","get_option_number","get_option_boolean","Boolean","delete","cb","values","camera_presets","NeuronDOMFactory","css_prefix","_create_dom_label","input","description","hide_label","htmlFor","title","visibility","HTMLElement","_create_dom_output","_create_dom_input_file","on_change","accepts","accept","onchange","_create_dom_input_button","_create_dom_input_textbox","_create_dom_input_number","max","step","_create_dom_input_range","_create_dom_input_checkbox","checked","_create_dom_input_select","labels","selected_option","option","selected","NeuronFeatureBase","super","set_remove_callback","set_change_callback","set_move_callback","_trigger_on_changed","_add_layer_to_map","m","addTo","console","error","_remove_layer_from_map","index_visible","index_hidden","_get_dom","button_class","_button_sizes","b0","zoom_to_feature","bv","toggle_visibility","b1","b2","b4","show_help","b3","remove_feature","on_remove","on_move","get_features","feature","group","fitBounds","getBounds","padding","neuron_map","show_map_help","is_flyable","IS_FLYABLE","get_path_coords","get_dom","but","innerHTML","icons","includes","direction","setTimeout","neuron_set_panel_view","PLAN","scrollIntoView","NAME","HELP_KEY","_distance_ratio","_area_ratio","NeuronHelp","help_element_name","ignore_sub_keys","AbortController","stop","abort","reset","help_elements","querySelectorAll","trigger_element","target_element","class_highlight","target_element_ids","split","target_element_id","getElementById","addEventListener","key_hover_start","key_hover_end","HELP_PREFIX_MISSION","NeuronFeatureWaypoint","set_point","add_callback","set_options_subscriber","remove_point_by_context","context","warn","draggable","autoPan","on","menu_items","show_on_plan","bindPopup","get_wait_duration","set_wait_duration","wait_duration","get_image_count","get_capture_image","set_capture_image","capture_image","c","t0","t1","t2","t3","t4","t5","t20","OPTIONS","t18","_gsd_ratio","append","set_ground_resolution","from_json","innerText","event","from_leaflet","getLatLng","update_marker","update_dom","update_calcs","setLatLng","resolution","get_camera","valueAsNumber","get_filename","ext","Date","now","download_file","filename","burl","createObjectURL","display","body","click","type_kml","type_kmz","kml_extract_features","kml_plain_text","xmlDoc","DOMParser","parseFromString","ret","documentElement","nodeName","markers","paths","polygons","getElementsByTagName","placeMarkName","childNodes","nodeValue","trim","kml_polygons","kml_markers","kml_paths","multi","ind","marker","TypeError","point_from_coord","path","kml_points","points","polygon","parseFloat","lon","alt","kml_download_from_neuron_data","waypoints","textXML","kml_data_from_neuron_data","file","Blob","kmz_download_from_neuron_data","kmz","blobWriter","writer","close","getData","get_kmz_from_kml_data","xmlDocument","implementation","createDocument","kmlNode","documentNode","kml_create_point_node","kml_create_path_node","kml_create_polygon_node","XMLSerializer","serializeToString","kml_document_to_string","placemarkNode","nameNode","descriptionNode","pointNode","coordinatesNode","coordinates","lineStringNode","plist","polygonNode","boundaryNode","ringNode","NeuronFeatureLine","end","set_start","set_end","update_line","setLatLngs","color","corners_visible","update_show_ends","show_ends","_set_on_change_internal","get_line","get_ends_as_points","ends","t21","t22","t11","t12","get_label","set_label","label","dist","NeuronFeaturePolygon","corners","planner","set_planner","add_corners","update_polygon","update_show_corners","show_corners","move_corner_forwards","corner","move_corner_backwards","select_corner","get_polygon","add_corner","get_corners","get_corners_as_points","remove_point_by_corner","add_point_at_location","ne","getNorthEast","sw","getSouthWest","dx","dy","get_perimeter","utm_points","get_area","AreaOfPolygon","t41","t42","t42_ld","t42_lds","arr","old_index","new_index","diff","perimeter","area","replace_polygon_with_survey","NeuronFeatureSurvey","show_waypoints","TopLeft","update_survey","update_show_waypoints","update_show_photos","show_photos","set_altitude","set_distance","set_spacing","spacing","set_angle","set_overshoot1","overshoot1","set_overshoot2","overshoot2","set_startpos","startpos","set_minLaneSeparation","minLaneSeparation","set_leadin","leadin","get_show_waypoints","get_show_photos","get_altitude","get_spacing","get_angle","get_overshoot1","get_overshoot2","get_startpos","get_minLaneSeparation","get_leadin","get_image_locations","photos","overlap_factor","photo_distance","lane","get_lane_coords","ps","pe","lane_distance","lane_angle","steps","ceil","p_last","photo_count","lanes","START","MIDDLE_START","MIDDLE_END","END","t00","t001","t002","t002_ld","t002_lds","t01","t03","t02","tb2","dom_break2","dom_break_label2","t17","_xlap_ratio","t19","tb1","dom_break1","dom_break_label1","TopRight","BottomLeft","BottomRight","t6","t7","t9","t8","t10","get_sidelap","get_overlap","set_sidelap","sidelap","set_overlap","overlap","uc","x_step","y_step","utl","ubr","ptl","pbr","fillColor","sidelap_factor","clearTimeout","fire_on_change","minLaneSeparationINMeters","utm_zone","utm_positions","utmpos","min_x","min_y","max_x","max_y","getPolyMinMax","diag_dist","grid","lines","left","l_start","l_end","l_next","grid_no","closest_distance","farthest_distance","MIN_VALUE","closest_point","farthest_point","matches","crosses","new_utmpos","newline","start_pos_utm","closest","last_pnt","ans","new_start","utmpos1","MIDDLE","new_end","utmpos2","from_UTMs","CreateGrid","val","v","parseInt","Object","settings_changed","camera","NeuronFeaturePoint","get_point","log","setIcon","replace_point_with_waypoint","NeuronPlanner","plan_element_name","get_mission_items","get_mission_as_json","mission_data","set_mission_from_json","settings","load","mission_items","fit_mission_on_map","save_mission_file","as_json","get_mission_as_points","load_mission_file","parse","allow_animate","pad_left","pad_top","pad_right","pad_bottom","Promise","resolve","get_leaflet_map","features","fg","old_snap","zoomSnap","ev","off","paddingTopLeft","paddingBottomRight","animate","export_mission_kml","set_map","on_mission_change","get_last_item_altitude","add_mission_item","add_mission_items","items","new_ind","remove_mission_item","clear_mission","mission_doms","mission_ids","old_elements","children","el","i_next","nodes","ind_n","ind_nn","insertBefore","old_item","waypoint","survey","import_features_from_kmx_multiple","files","import_features_from_kmx","cb_file_loaded","f_type","File","parts","get_file_type","reader","getEntries","got_data","kmx_load_file","run_update","f","bounds","NeuronBrief","brief_element_name","update_mission_brief","mission_features","notables","get_mission_notables","summary","get_mission_summary","table","headings","h","th","components","field1","field2","field3","ind_values_start","td","brief","time_transit","time_duration","get_components_from_point","total_duration","total_images","takeoff_duration","land_duration","extra_mission_duration","takeoff_distance","land_distance","flight_speed","point_last","takeoff_point","step0","wait","image_count","step_duration","time_land","land_point","land_component","step_n","total_transit_duration","step_total_time","step_total_distance","step_total_images","NeuronSettings","element_name_options","set_dom_callback","update_settings","_camera_focal_length_min","_camera_sensor_width_min","_camera_sensor_height_min","_camera_image_width_min","_camera_image_height_min","tb","dom_break","dom_break_label","camera_names","t13","t14","t15","t16","matched_camera","camera_matches","init","print_size_with_margin_px","dragOverHandler","preventDefault","tab","neuron_planner","map_element_name","update_path","show","help_key","toggle_map_help","set_location","location","zoom","setView","zoom_to","feature_group","add_feature","add_features","on_double_click","create_point_in_view","create_waypoint_in_view","create_line_in_view","create_polygon_in_view","create_survey_in_view","path_points","toggle_map_tools","zoomControl","invalidateSize","tiles_grey","attribution","maxZoom","tileSize","zoomOffset","accessToken","tiles_satellite","Street","Satellite","doubleClickZoom","layers","MAP","neuron_brief","BRIEF","neuron_statistics","element_name_stats","update_statistics","dist_km","STATS","neuron_settings","neuron_help","_dragdrop_counter","dragEnterHandler","DRAGDROP","dragLeaveHandler","dragDropHandler","kmx_types","dataTransfer","getAsFile","icon_name","icon_id","neuron_load_dom_icons","el_loader","LOADER","el_app","APP","show_loader","ondrop","ondragover","ondragenter","ondragleave","navigator","geolocation","getCurrentPosition","side_pad","pr","offsetWidth","pb","offsetHeight","width","height"],"sourceRoot":""}