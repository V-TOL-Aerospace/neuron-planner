{"version":3,"file":"index.24258187c8c4cbfb0135.js","mappings":"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","sources":["webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css","webpack://neuron-planner/./src/css/brief.css","webpack://neuron-planner/./src/css/common.css","webpack://neuron-planner/./src/css/help.css","webpack://neuron-planner/./src/css/index.css","webpack://neuron-planner/./src/css/map.css","webpack://neuron-planner/./src/css/plan.css","webpack://neuron-planner/./src/css/responsive.css","webpack://neuron-planner/./src/css/stats_options.css","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/api.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css?b9a3","webpack://neuron-planner/./src/js/interface_fontawesome.ts","webpack://neuron-planner/./src/js/interface_leaflet.ts","webpack://neuron-planner/./src/js/neuron_tools_common.ts","webpack://neuron-planner/./src/js/interface_proj4.ts","webpack://neuron-planner/./src/js/neuron_tools_survey.ts","webpack://neuron-planner/./src/js/neuron_interfaces.ts","webpack://neuron-planner/./src/js/neuron_options.ts","webpack://neuron-planner/./src/js/neuron_dom_factory.ts","webpack://neuron-planner/./src/js/neuron_feature_base.ts","webpack://neuron-planner/./src/js/neuron_help.ts","webpack://neuron-planner/./src/js/neuron_feature_waypoint.ts","webpack://neuron-planner/./src/js/neuron_tools_files.ts","webpack://neuron-planner/./src/js/neuron_tools_kml.ts","webpack://neuron-planner/./src/js/neuron_feature_line.ts","webpack://neuron-planner/./src/js/neuron_feature_polygon.ts","webpack://neuron-planner/./src/js/neuron_feature_survey.ts","webpack://neuron-planner/./src/js/neuron_feature_point.ts","webpack://neuron-planner/./src/js/neuron_planner.ts","webpack://neuron-planner/./src/js/neuron_map.ts","webpack://neuron-planner/./src/js/neuron_brief.ts","webpack://neuron-planner/./src/js/neuron_statistics.ts","webpack://neuron-planner/./src/js/neuron_settings.ts","webpack://neuron-planner/./src/css/index.css?f7ea","webpack://neuron-planner/./src/js/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"images/layers.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"images/layers-2x.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"images/marker-icon.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/leaflet/dist/leaflet.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers.png);\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers-2x.png);\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(images/marker-icon.png);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".brief-table {\\n    display: grid;\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\n    font-size: x-small;\\n}\\n\\n.brief-table-title {\\n    grid-column: 1 / 9;\\n}\\n\\n.brief-table-entry {\\n    text-align: left;\\n    margin-left: 1em;\\n    margin-right: 1em;\\n    /* display: grid;\\n    grid-template-columns: auto auto auto auto auto auto; */\\n}\\n\\n.brief-table-entry-right {\\n    text-align: right;\\n}\\n\\n/* .brief-table-entry-center {\\n    text-align: center;\\n} */\\n\\n.brief-table-entry-bold {\\n    font-weight: bold;\\n}\\n\\n.brief-table-header {\\n    font-weight: bold;\\n    text-align: center;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/brief.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,oFAAoF;IACpF,8DAA8D;IAC9D,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB;2DACuD;AAC3D;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;GAEG;;AAEH;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB\",\"sourcesContent\":[\".brief-table {\\n    display: grid;\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\n    font-size: x-small;\\n}\\n\\n.brief-table-title {\\n    grid-column: 1 / 9;\\n}\\n\\n.brief-table-entry {\\n    text-align: left;\\n    margin-left: 1em;\\n    margin-right: 1em;\\n    /* display: grid;\\n    grid-template-columns: auto auto auto auto auto auto; */\\n}\\n\\n.brief-table-entry-right {\\n    text-align: right;\\n}\\n\\n/* .brief-table-entry-center {\\n    text-align: center;\\n} */\\n\\n.brief-table-entry-bold {\\n    font-weight: bold;\\n}\\n\\n.brief-table-header {\\n    font-weight: bold;\\n    text-align: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* html {\\n    height: 100%;\\n} */\\n\\n.fp-user-buttons-frame {\\n    display: flex;\\n    flex: 0 1 1;\\n    flex-direction: row;\\n    background-color: var(--theme-bg-border);\\n    padding: 0.1em;\\n}\\n\\n.fp-user-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    padding: 0.5em;\\n    border-radius: 0;\\n}\\n\\n/* ========================== */\\n/*          Main View         */\\n/* ========================== */\\n\\n#fp-main {\\n    display: flex;\\n    flex-direction: row;\\n    flex: 1 0 0;\\n    overflow: hidden;\\n}\\n\\n#fp-map {\\n    flex: 1 0 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-map-sub {\\n    flex: 1 0 0;\\n}\\n\\n#fp-map-help {\\n    display: none;\\n    overflow: scroll;\\n    padding: 1em;\\n}\\n\\n#fp-summary {\\n    flex: auto;\\n    flex-grow: 0;\\n    width: 20em;\\n    display: flex;\\n    flex-direction: column;\\n    border-left: 2px solid black;\\n}\\n\\n#fp-advanced {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n/* Main container */\\n/* https://codepen.io/CesarVMB/pen/kPOrQb */\\n.tab-container {\\n    /* width: 100%;*/\\n    min-height: 0;\\n    min-width: 0;\\n    flex: 1 1 0;\\n    display: grid;\\n    /* grid-template-rows: auto auto auto; */\\n    grid-template-columns: auto min-content;\\n    background-color: var(--theme-bg-border);\\n    position: relative; /* This is needed for overlays, not for tab-container functions */\\n}\\n\\n/* Hide driving checkboxes */\\n.tab-container > input {\\n\\t/* height: 2.5em; */\\n\\tdisplay: none;\\n}\\n\\n/* Tabs */\\n.tab-container > label {\\n\\tbackground: var(--theme-shadow);\\n\\t/* color: var(--theme-primary); */\\n    /* border-style: solid; */\\n    /* border-left: solid 2px var(--theme-bg-border);\\n    border-right: solid 2px var(--theme-bg-border);\\n    border-top: solid 2px var(--theme-bg-border); */\\n\\tcursor: pointer;\\n\\t/* height: 2.5em; */\\n\\t/* line-height: 2.5em; */\\n\\tmargin-top: 0.25em;\\n\\t/* margin-right: .5em; */\\n    margin-left: 0;\\n\\tmargin-bottom: 0.25em;\\n\\tpadding: 0.5em;\\n\\ttext-align: center;\\n    font-weight: bold;\\n    display: block;\\n\\t/* height: 2.5em; */\\n    writing-mode: vertical-rl;\\n    text-orientation: upright;\\n}\\n\\n/* Hover for the tabs */\\n.tab-container > input:hover + label {\\n\\tbackground: var(--theme-bg);\\n    position: relative;\\n}\\n\\n\\n.tab-container > input:hover + label:before {\\n    content : \\\"\\\";\\n    position: absolute;\\n    top    : 20%;\\n    left    : 0px;\\n    width  : 0.4em;\\n    height   : 60%;\\n    border-left: 0.2em solid var(--theme-highlight);\\n    border-left-style: inset;\\n}\\n\\n/* Selected Tab */\\n.tab-container > input:checked + label {\\n\\tbackground: var(--theme-bg);\\n    position: relative;\\n}\\n\\n.tab-container > input:checked + label:before {\\n    content : \\\"\\\";\\n    position: absolute;\\n    top    : 20%;\\n    left    : 0px;\\n    width  : 0.4em;\\n    height   : 60%;\\n    border-left: 0.2em solid var(--theme-primary);\\n    border-left-style: inset;\\n}\\n\\n/* Main content internal area */\\n.tab-content {\\n\\tbackground: var(--theme-bg);\\n\\t/* height: 100%; */\\n\\t/* width: 100%; */\\n    display: block;\\n    grid-row: span 2/1;\\n    grid-column: 1;\\n    overflow: auto;\\n    scroll-behavior: smooth;\\n}\\n\\n/* All tab items */\\n.tab-content > div {\\n\\tdisplay: none;\\n\\tpadding: 1em;\\n}\\n\\n/* Shown content page */\\n/* XXX: Add and remove tab IDs here */\\n.tab-container input#tab-mission:checked ~ .tab-content #tab-item-mission,\\n/* .tab-container input#tab-stats:checked ~ .tab-content #tab-item-stats, */\\n.tab-container input#tab-options:checked ~ .tab-content #tab-item-options {\\n    display: block;\\n    /* flex: auto; */\\n}\\n\\n/* ========================== */\\n/*       Drawing Toolbar      */\\n/* ========================== */\\n/*\\n#fp-draw {\\n    display: flex;\\n    flex: 1 0 0;\\n    flex-direction: row;\\n    background-color: black;\\n    padding: 0.1em;\\n}\\n\\n.fp-draw-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    border-radius: 0;\\n}\\n*/\\n\\n/* ========================== */\\n/*     Management Toolbar     */\\n/* ========================== */\\n/*\\n#fp-manage {\\n    display: flex;\\n    flex: auto;\\n    flex-direction: row;\\n    padding: 0.1em;\\n    background-color: black;\\n}\\n\\n.fp-manage-buttons {\\n    flex: 1 0 0;\\n    border-radius: 0;\\n}\\n*/\\n\\n.fp-long-name {\\n    margin-left: 0.5em;\\n}\\n\\n#print-section {\\n    display: none;\\n}\\n\\nbody{counter-reset: section}\\nh2{counter-reset: sub-section}\\nh3{counter-reset: composite}\\nh4{counter-reset: detail}\\n\\nh2:before{\\n  counter-increment: section;\\n  content: counter(section) \\\". \\\";\\n}\\nh3:before{\\n  counter-increment: sub-section;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\n}\\nh4:before{\\n  counter-increment: composite;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\n}\\nh5:before{\\n  counter-increment: detail;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/common.css\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;;AAEH;IACI,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,wCAAwC;IACxC,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,cAAc;IACd,gBAAgB;AACpB;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;;AAE/B;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA,mBAAmB;AACnB,2CAA2C;AAC3C;IACI,gBAAgB;IAChB,aAAa;IACb,YAAY;IACZ,WAAW;IACX,aAAa;IACb,wCAAwC;IACxC,uCAAuC;IACvC,wCAAwC;IACxC,kBAAkB,EAAE,iEAAiE;AACzF;;AAEA,4BAA4B;AAC5B;CACC,mBAAmB;CACnB,aAAa;AACd;;AAEA,SAAS;AACT;CACC,+BAA+B;CAC/B,iCAAiC;IAC9B,yBAAyB;IACzB;;mDAE+C;CAClD,eAAe;CACf,mBAAmB;CACnB,wBAAwB;CACxB,kBAAkB;CAClB,wBAAwB;IACrB,cAAc;CACjB,qBAAqB;CACrB,cAAc;CACd,kBAAkB;IACf,iBAAiB;IACjB,cAAc;CACjB,mBAAmB;IAChB,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA,uBAAuB;AACvB;CACC,2BAA2B;IACxB,kBAAkB;AACtB;;;AAGA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,cAAc;IACd,cAAc;IACd,+CAA+C;IAC/C,wBAAwB;AAC5B;;AAEA,iBAAiB;AACjB;CACC,2BAA2B;IACxB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,cAAc;IACd,cAAc;IACd,6CAA6C;IAC7C,wBAAwB;AAC5B;;AAEA,+BAA+B;AAC/B;CACC,2BAA2B;CAC3B,kBAAkB;CAClB,iBAAiB;IACd,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,cAAc;IACd,uBAAuB;AAC3B;;AAEA,kBAAkB;AAClB;CACC,aAAa;CACb,YAAY;AACb;;AAEA,uBAAuB;AACvB,qCAAqC;AACrC;;;IAGI,cAAc;IACd,gBAAgB;AACpB;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;;CAcC;;AAED,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;CAaC;;AAED;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA,KAAK,sBAAsB;AAC3B,GAAG,0BAA0B;AAC7B,GAAG,wBAAwB;AAC3B,GAAG,qBAAqB;;AAExB;EACE,0BAA0B;EAC1B,8BAA8B;AAChC;AACA;EACE,8BAA8B;EAC9B,uDAAuD;AACzD;AACA;EACE,4BAA4B;EAC5B,8EAA8E;AAChF;AACA;EACE,yBAAyB;EACzB,kGAAkG;AACpG\",\"sourcesContent\":[\"/* html {\\n    height: 100%;\\n} */\\n\\n.fp-user-buttons-frame {\\n    display: flex;\\n    flex: 0 1 1;\\n    flex-direction: row;\\n    background-color: var(--theme-bg-border);\\n    padding: 0.1em;\\n}\\n\\n.fp-user-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    padding: 0.5em;\\n    border-radius: 0;\\n}\\n\\n/* ========================== */\\n/*          Main View         */\\n/* ========================== */\\n\\n#fp-main {\\n    display: flex;\\n    flex-direction: row;\\n    flex: 1 0 0;\\n    overflow: hidden;\\n}\\n\\n#fp-map {\\n    flex: 1 0 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-map-sub {\\n    flex: 1 0 0;\\n}\\n\\n#fp-map-help {\\n    display: none;\\n    overflow: scroll;\\n    padding: 1em;\\n}\\n\\n#fp-summary {\\n    flex: auto;\\n    flex-grow: 0;\\n    width: 20em;\\n    display: flex;\\n    flex-direction: column;\\n    border-left: 2px solid black;\\n}\\n\\n#fp-advanced {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n/* Main container */\\n/* https://codepen.io/CesarVMB/pen/kPOrQb */\\n.tab-container {\\n    /* width: 100%;*/\\n    min-height: 0;\\n    min-width: 0;\\n    flex: 1 1 0;\\n    display: grid;\\n    /* grid-template-rows: auto auto auto; */\\n    grid-template-columns: auto min-content;\\n    background-color: var(--theme-bg-border);\\n    position: relative; /* This is needed for overlays, not for tab-container functions */\\n}\\n\\n/* Hide driving checkboxes */\\n.tab-container > input {\\n\\t/* height: 2.5em; */\\n\\tdisplay: none;\\n}\\n\\n/* Tabs */\\n.tab-container > label {\\n\\tbackground: var(--theme-shadow);\\n\\t/* color: var(--theme-primary); */\\n    /* border-style: solid; */\\n    /* border-left: solid 2px var(--theme-bg-border);\\n    border-right: solid 2px var(--theme-bg-border);\\n    border-top: solid 2px var(--theme-bg-border); */\\n\\tcursor: pointer;\\n\\t/* height: 2.5em; */\\n\\t/* line-height: 2.5em; */\\n\\tmargin-top: 0.25em;\\n\\t/* margin-right: .5em; */\\n    margin-left: 0;\\n\\tmargin-bottom: 0.25em;\\n\\tpadding: 0.5em;\\n\\ttext-align: center;\\n    font-weight: bold;\\n    display: block;\\n\\t/* height: 2.5em; */\\n    writing-mode: vertical-rl;\\n    text-orientation: upright;\\n}\\n\\n/* Hover for the tabs */\\n.tab-container > input:hover + label {\\n\\tbackground: var(--theme-bg);\\n    position: relative;\\n}\\n\\n\\n.tab-container > input:hover + label:before {\\n    content : \\\"\\\";\\n    position: absolute;\\n    top    : 20%;\\n    left    : 0px;\\n    width  : 0.4em;\\n    height   : 60%;\\n    border-left: 0.2em solid var(--theme-highlight);\\n    border-left-style: inset;\\n}\\n\\n/* Selected Tab */\\n.tab-container > input:checked + label {\\n\\tbackground: var(--theme-bg);\\n    position: relative;\\n}\\n\\n.tab-container > input:checked + label:before {\\n    content : \\\"\\\";\\n    position: absolute;\\n    top    : 20%;\\n    left    : 0px;\\n    width  : 0.4em;\\n    height   : 60%;\\n    border-left: 0.2em solid var(--theme-primary);\\n    border-left-style: inset;\\n}\\n\\n/* Main content internal area */\\n.tab-content {\\n\\tbackground: var(--theme-bg);\\n\\t/* height: 100%; */\\n\\t/* width: 100%; */\\n    display: block;\\n    grid-row: span 2/1;\\n    grid-column: 1;\\n    overflow: auto;\\n    scroll-behavior: smooth;\\n}\\n\\n/* All tab items */\\n.tab-content > div {\\n\\tdisplay: none;\\n\\tpadding: 1em;\\n}\\n\\n/* Shown content page */\\n/* XXX: Add and remove tab IDs here */\\n.tab-container input#tab-mission:checked ~ .tab-content #tab-item-mission,\\n/* .tab-container input#tab-stats:checked ~ .tab-content #tab-item-stats, */\\n.tab-container input#tab-options:checked ~ .tab-content #tab-item-options {\\n    display: block;\\n    /* flex: auto; */\\n}\\n\\n/* ========================== */\\n/*       Drawing Toolbar      */\\n/* ========================== */\\n/*\\n#fp-draw {\\n    display: flex;\\n    flex: 1 0 0;\\n    flex-direction: row;\\n    background-color: black;\\n    padding: 0.1em;\\n}\\n\\n.fp-draw-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    border-radius: 0;\\n}\\n*/\\n\\n/* ========================== */\\n/*     Management Toolbar     */\\n/* ========================== */\\n/*\\n#fp-manage {\\n    display: flex;\\n    flex: auto;\\n    flex-direction: row;\\n    padding: 0.1em;\\n    background-color: black;\\n}\\n\\n.fp-manage-buttons {\\n    flex: 1 0 0;\\n    border-radius: 0;\\n}\\n*/\\n\\n.fp-long-name {\\n    margin-left: 0.5em;\\n}\\n\\n#print-section {\\n    display: none;\\n}\\n\\nbody{counter-reset: section}\\nh2{counter-reset: sub-section}\\nh3{counter-reset: composite}\\nh4{counter-reset: detail}\\n\\nh2:before{\\n  counter-increment: section;\\n  content: counter(section) \\\". \\\";\\n}\\nh3:before{\\n  counter-increment: sub-section;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\n}\\nh4:before{\\n  counter-increment: composite;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\n}\\nh5:before{\\n  counter-increment: detail;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".help-highlight {\\n    background-color: var(--theme-highlight) !important;\\n}\\n\\n/* .help-highlight > .tab-container {\\n    background-color: var(--theme-highlight) !important;\\n} */\\n\\n.help-highlight ~ .tab-content {\\n    background-color: var(--theme-highlight) !important;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/help.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,mDAAmD;AACvD;;AAEA;;GAEG;;AAEH;IACI,mDAAmD;AACvD\",\"sourcesContent\":[\".help-highlight {\\n    background-color: var(--theme-highlight) !important;\\n}\\n\\n/* .help-highlight > .tab-container {\\n    background-color: var(--theme-highlight) !important;\\n} */\\n\\n.help-highlight ~ .tab-content {\\n    background-color: var(--theme-highlight) !important;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../node_modules/css-loader/dist/cjs.js!./common.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../../node_modules/css-loader/dist/cjs.js!./map.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_2___ from \"-!../../node_modules/css-loader/dist/cjs.js!./stats_options.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_3___ from \"-!../../node_modules/css-loader/dist/cjs.js!./plan.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_4___ from \"-!../../node_modules/css-loader/dist/cjs.js!./brief.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_5___ from \"-!../../node_modules/css-loader/dist/cjs.js!./help.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_6___ from \"-!../../node_modules/css-loader/dist/cjs.js!./responsive.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_4___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_5___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_6___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* // import \\\"../css/theme.css\\\";  //XXX: Loaded by minimal script in head */\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/index.css\"],\"names\":[],\"mappings\":\"AAAA,2EAA2E\",\"sourcesContent\":[\"/* // import \\\"../css/theme.css\\\";  //XXX: Loaded by minimal script in head */\\n@import \\\"./common.css\\\";\\n@import \\\"./map.css\\\";\\n@import \\\"./stats_options.css\\\";\\n@import \\\"./plan.css\\\";\\n@import \\\"./brief.css\\\";\\n@import \\\"./help.css\\\";\\n@import \\\"./responsive.css\\\";\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".neuron-marker-popup {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.neuron-marker-popup-title {\\n    flex: auto;\\n    justify-content: center;\\n    display: flex;\\n\\n    font-weight: bold;\\n    text-decoration: underline;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item {\\n    flex: auto;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item:hover {\\n    background-color: var(--theme-popup);\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.neuron-marker-popup-icon {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-item-text {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-break {\\n    width: 100%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/map.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,iBAAiB;IACjB,0BAA0B;IAC1B,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,oCAAoC;IACpC,0BAA0B;IAC1B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\".neuron-marker-popup {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.neuron-marker-popup-title {\\n    flex: auto;\\n    justify-content: center;\\n    display: flex;\\n\\n    font-weight: bold;\\n    text-decoration: underline;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item {\\n    flex: auto;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item:hover {\\n    background-color: var(--theme-popup);\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.neuron-marker-popup-icon {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-item-text {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-break {\\n    width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#fp-mission {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n}\\n\\n#fp-plan-container {\\n    flex: auto;\\n    overflow: scroll;\\n    padding-top: 0.25em;\\n    padding-bottom: 0.25em;\\n    scroll-behavior: smooth;\\n}\\n\\n#fp-plan {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#fp-plan-title {\\n    text-align: center;\\n    font-weight: bold;\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\n}\\n\\n#mission-features-dragdrop {\\n    display: none;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background-color: var(--theme-highlight-thick);\\n    padding: 0;\\n    margin: 0;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n}\\n/*\\n#mission-features-dragdrop-content {\\n    display: flex;\\n    flex-direction: column;\\n    max-width: 100%;\\n    max-height: 100%;\\n    padding: 0;\\n    margin: 0;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: larger;\\n    color: var(--theme-text-light);\\n} */\\n\\n.mission-features-dragdrop-content {\\n    /* flex: auto; */\\n    font-size:x-large;\\n    color: var(--theme-text-light);\\n    padding: 1em;\\n    text-align: center;\\n}\\n\\n.mission-features-dragdrop-content-large {\\n    font-size:xx-large;\\n}\\n\\n.mission-feature {\\n    display: flex;\\n    flex-direction: column;\\n    background-color: var(--theme-bg);\\n    border: 2px solid var(--theme-bg-border);\\n    border-radius: 0.5em;\\n    margin-top: 0.25em;\\n    margin-bottom: 0.25em;\\n    /* margin-left: 0.5em;\\n    margin-right: 0.5em; */\\n    scroll-margin: 0.25em;\\n    padding: 0.5em;\\n    box-shadow: 0px 2px 2px var(--theme-shadow);\\n}\\n\\n.mission-feature-highlight {\\n    background-color: var(--theme-highlight);\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-highlight-remove {\\n    background-color: inherit;\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-hidden {\\n    background: var(--theme-shadow);\\n}\\n\\n.mission-feature-title {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: flex-end;\\n}\\n\\n.mission-feature-title-button-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n}\\n\\n.mission-feature-title-button,\\n.mission-feature-title-button-small {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.1em;\\n    margin-right: 0.1em;\\n}\\n\\n\\n.mission-feature-title-button-small {\\n    display: none;\\n}\\n\\n.mission-feature-title-text {\\n    font-weight: bold;\\n    flex: auto;\\n}\\n.mission-feature-content {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    /* overflow: scroll; */\\n}\\n\\n.mission-feature-content-label, .mission-feature-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.mission-feature-content-value-center {\\n    text-align: center;\\n}\\n\\n.mission-feature-content-subtitle {\\n    font-weight: bold;\\n}\\n\\n.mission-feature-content-value-right {\\n    text-align: right;\\n}\\n\\n.neuron-marker-poi {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-corner {\\n    filter: hue-rotate(145deg);\\n}\\n\\n.neuron-marker-waypoint {\\n    filter: hue-rotate(180deg);\\n}\\n\\n.neuron-marker-line-start {\\n    filter: hue-rotate(80deg);\\n}\\n\\n.neuron-marker-line-end {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-photo {\\n    filter: hue-rotate(280deg);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/plan.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,MAAM;IACN,OAAO;IACP,8CAA8C;IAC9C,UAAU;IACV,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;AACA;;;;;;;;;;;;GAYG;;AAEH;IACI,gBAAgB;IAChB,iBAAiB;IACjB,8BAA8B;IAC9B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,iCAAiC;IACjC,wCAAwC;IACxC,oBAAoB;IACpB,kBAAkB;IAClB,qBAAqB;IACrB;0BACsB;IACtB,qBAAqB;IACrB,cAAc;IACd,2CAA2C;AAC/C;;AAEA;IACI,wCAAwC;IACxC,4BAA4B;AAChC;;AAEA;IACI,yBAAyB;IACzB,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;AACA;IACI,UAAU;IACV,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,0BAA0B;AAC9B\",\"sourcesContent\":[\"#fp-mission {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n}\\n\\n#fp-plan-container {\\n    flex: auto;\\n    overflow: scroll;\\n    padding-top: 0.25em;\\n    padding-bottom: 0.25em;\\n    scroll-behavior: smooth;\\n}\\n\\n#fp-plan {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#fp-plan-title {\\n    text-align: center;\\n    font-weight: bold;\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\n}\\n\\n#mission-features-dragdrop {\\n    display: none;\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    background-color: var(--theme-highlight-thick);\\n    padding: 0;\\n    margin: 0;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n}\\n/*\\n#mission-features-dragdrop-content {\\n    display: flex;\\n    flex-direction: column;\\n    max-width: 100%;\\n    max-height: 100%;\\n    padding: 0;\\n    margin: 0;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: larger;\\n    color: var(--theme-text-light);\\n} */\\n\\n.mission-features-dragdrop-content {\\n    /* flex: auto; */\\n    font-size:x-large;\\n    color: var(--theme-text-light);\\n    padding: 1em;\\n    text-align: center;\\n}\\n\\n.mission-features-dragdrop-content-large {\\n    font-size:xx-large;\\n}\\n\\n.mission-feature {\\n    display: flex;\\n    flex-direction: column;\\n    background-color: var(--theme-bg);\\n    border: 2px solid var(--theme-bg-border);\\n    border-radius: 0.5em;\\n    margin-top: 0.25em;\\n    margin-bottom: 0.25em;\\n    /* margin-left: 0.5em;\\n    margin-right: 0.5em; */\\n    scroll-margin: 0.25em;\\n    padding: 0.5em;\\n    box-shadow: 0px 2px 2px var(--theme-shadow);\\n}\\n\\n.mission-feature-highlight {\\n    background-color: var(--theme-highlight);\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-highlight-remove {\\n    background-color: inherit;\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-hidden {\\n    background: var(--theme-shadow);\\n}\\n\\n.mission-feature-title {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: flex-end;\\n}\\n\\n.mission-feature-title-button-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n}\\n\\n.mission-feature-title-button,\\n.mission-feature-title-button-small {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.1em;\\n    margin-right: 0.1em;\\n}\\n\\n\\n.mission-feature-title-button-small {\\n    display: none;\\n}\\n\\n.mission-feature-title-text {\\n    font-weight: bold;\\n    flex: auto;\\n}\\n.mission-feature-content {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    /* overflow: scroll; */\\n}\\n\\n.mission-feature-content-label, .mission-feature-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.mission-feature-content-value-center {\\n    text-align: center;\\n}\\n\\n.mission-feature-content-subtitle {\\n    font-weight: bold;\\n}\\n\\n.mission-feature-content-value-right {\\n    text-align: right;\\n}\\n\\n.neuron-marker-poi {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-corner {\\n    filter: hue-rotate(145deg);\\n}\\n\\n.neuron-marker-waypoint {\\n    filter: hue-rotate(180deg);\\n}\\n\\n.neuron-marker-line-start {\\n    filter: hue-rotate(80deg);\\n}\\n\\n.neuron-marker-line-end {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-photo {\\n    filter: hue-rotate(280deg);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n/* Prefer portrait mode for very small screen sizes */\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\n    #fp-main {\\n        flex-direction: column;\\n    }\\n\\n    #fp-map {\\n        max-height: 50%;\\n    }\\n\\n    #fp-summary {\\n        height: 50%;\\n        width: 100%;\\n        border-left: 0px;\\n        border-top: 2px solid black;\\n    }\\n\\n    .tab-container {\\n        grid-template-columns: auto auto;\\n        grid-template-rows: min-content auto;\\n    }\\n\\n    .tab-content {\\n        grid-column: span 2;\\n        grid-row: 2;\\n    }\\n\\n    .tab-container > label {\\n        /* height: 2.5em; */\\n        margin-top: 0;\\n        margin-right: .25em;\\n        margin-left: .25em;\\n        margin-bottom: 0;\\n        writing-mode: horizontal-tb;\\n        /* text-orientation: mixed; */\\n    }\\n\\n    .tab-container > input:hover + label:before {\\n        top    : auto;\\n        left    : 20%;\\n        bottom  : 0;\\n        height  : 0.4em;\\n        width   : 60%;\\n        border-bottom: 0.2em solid var(--theme-highlight);\\n        border-bottom-style: inset;\\n        border-left-style: none;\\n    }\\n\\n    .tab-container > input:checked + label:before {\\n        top    : auto;\\n        left    : 20%;\\n        bottom  : 0;\\n        height  : 0.4em;\\n        width   : 60%;\\n        border-bottom: 0.2em solid var(--theme-primary);\\n        border-bottom-style: inset;\\n        border-left-style: none;\\n    }\\n}\\n\\n@media only screen and (max-width: 50em) {\\n    .fp-long-name {\\n        display: none;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\\n@media (max-height: 40em) or (max-width: 50em) {\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n\\n    #fp-summary > * {\\n        font-size: x-small;\\n        /* width: 25em; */\\n    }\\n\\n    .mission-features-dragdrop-content {\\n        /* flex: auto; */\\n        font-size:medium;\\n        padding: 0.25em;\\n    }\\n\\n    .mission-features-dragdrop-content-large {\\n        font-size:large;\\n    }\\n\\n    /* .mission-feature-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .fp-stats-content-value {\\n        font-size: x-small;\\n    } */\\n\\n    .mission-feature-title-button {\\n        display: none;\\n    }\\n\\n    .mission-feature-title-button-small {\\n        display: block;\\n    }\\n}\\n\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\n    #fp-summary {\\n        height: 100%;\\n        width: 100%;\\n    }\\n}\\n\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\n    #fp-map {\\n        max-height: 100%;\\n    }\\n\\n    #fp-summary {\\n        display: none;\\n    }\\n}\\n\\n@media print {\\n    @page {\\n        size: A4;\\n        margin: 10mm;\\n    }\\n\\n    /* body > * {\\n        display: none;\\n    } */\\n    html {\\n        /* height: auto; */\\n        /*\\n        Manually set our height and width\\n        to make sure that we can scale the map\\n        properly for display later.\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\n        */\\n        width: 190mm;   /* 210 */\\n        height: 276mm;   /* 297 */\\n    }\\n\\n    body {\\n        height: auto;\\n        width: auto;\\n    }\\n\\n    #app {\\n        height: auto;\\n        width: auto;\\n        display: block;\\n        overflow-x: auto;\\n    }\\n\\n    #fp-main {\\n        overflow: initial;\\n    }\\n    #fp-manage {\\n        display: none;\\n    }\\n    #fp-summary {\\n        display: none;\\n    }\\n    #fp-draw {\\n        display: none;\\n    }\\n    #fp-map {\\n        width: calc(190mm);\\n        height: calc(277mm/2);\\n    }\\n    #fp-map-interactive {\\n        display: block;\\n    }\\n    #fp-map-help {\\n        display: none;\\n    }\\n    #print-section {\\n        display: block;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/responsive.css\"],\"names\":[],\"mappings\":\";AACA,qDAAqD;AACrD;IACI;QACI,sBAAsB;IAC1B;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,WAAW;QACX,WAAW;QACX,gBAAgB;QAChB,2BAA2B;IAC/B;;IAEA;QACI,gCAAgC;QAChC,oCAAoC;IACxC;;IAEA;QACI,mBAAmB;QACnB,WAAW;IACf;;IAEA;QACI,mBAAmB;QACnB,aAAa;QACb,mBAAmB;QACnB,kBAAkB;QAClB,gBAAgB;QAChB,2BAA2B;QAC3B,6BAA6B;IACjC;;IAEA;QACI,aAAa;QACb,aAAa;QACb,WAAW;QACX,eAAe;QACf,aAAa;QACb,iDAAiD;QACjD,0BAA0B;QAC1B,uBAAuB;IAC3B;;IAEA;QACI,aAAa;QACb,aAAa;QACb,WAAW;QACX,eAAe;QACf,aAAa;QACb,+CAA+C;QAC/C,0BAA0B;QAC1B,uBAAuB;IAC3B;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,kBAAkB;QAClB,iBAAiB;IACrB;;IAEA;QACI,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;IACnB;;IAEA;QACI,eAAe;IACnB;;IAEA;;;;;;OAMG;;IAEH;QACI,aAAa;IACjB;;IAEA;QACI,cAAc;IAClB;AACJ;;AAEA;IACI;QACI,YAAY;QACZ,WAAW;IACf;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,QAAQ;QACR,YAAY;IAChB;;IAEA;;OAEG;IACH;QACI,kBAAkB;QAClB;;;;;SAKC;QACD,YAAY,IAAI,QAAQ;QACxB,aAAa,IAAI,QAAQ;IAC7B;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,YAAY;QACZ,WAAW;QACX,cAAc;QACd,gBAAgB;IACpB;;IAEA;QACI,iBAAiB;IACrB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,kBAAkB;QAClB,qBAAqB;IACzB;IACA;QACI,cAAc;IAClB;IACA;QACI,aAAa;IACjB;IACA;QACI,cAAc;IAClB;;IAEA;QACI,aAAa;IACjB;AACJ\",\"sourcesContent\":[\"\\n/* Prefer portrait mode for very small screen sizes */\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\n    #fp-main {\\n        flex-direction: column;\\n    }\\n\\n    #fp-map {\\n        max-height: 50%;\\n    }\\n\\n    #fp-summary {\\n        height: 50%;\\n        width: 100%;\\n        border-left: 0px;\\n        border-top: 2px solid black;\\n    }\\n\\n    .tab-container {\\n        grid-template-columns: auto auto;\\n        grid-template-rows: min-content auto;\\n    }\\n\\n    .tab-content {\\n        grid-column: span 2;\\n        grid-row: 2;\\n    }\\n\\n    .tab-container > label {\\n        /* height: 2.5em; */\\n        margin-top: 0;\\n        margin-right: .25em;\\n        margin-left: .25em;\\n        margin-bottom: 0;\\n        writing-mode: horizontal-tb;\\n        /* text-orientation: mixed; */\\n    }\\n\\n    .tab-container > input:hover + label:before {\\n        top    : auto;\\n        left    : 20%;\\n        bottom  : 0;\\n        height  : 0.4em;\\n        width   : 60%;\\n        border-bottom: 0.2em solid var(--theme-highlight);\\n        border-bottom-style: inset;\\n        border-left-style: none;\\n    }\\n\\n    .tab-container > input:checked + label:before {\\n        top    : auto;\\n        left    : 20%;\\n        bottom  : 0;\\n        height  : 0.4em;\\n        width   : 60%;\\n        border-bottom: 0.2em solid var(--theme-primary);\\n        border-bottom-style: inset;\\n        border-left-style: none;\\n    }\\n}\\n\\n@media only screen and (max-width: 50em) {\\n    .fp-long-name {\\n        display: none;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\\n@media (max-height: 40em) or (max-width: 50em) {\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n\\n    #fp-summary > * {\\n        font-size: x-small;\\n        /* width: 25em; */\\n    }\\n\\n    .mission-features-dragdrop-content {\\n        /* flex: auto; */\\n        font-size:medium;\\n        padding: 0.25em;\\n    }\\n\\n    .mission-features-dragdrop-content-large {\\n        font-size:large;\\n    }\\n\\n    /* .mission-feature-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .fp-stats-content-value {\\n        font-size: x-small;\\n    } */\\n\\n    .mission-feature-title-button {\\n        display: none;\\n    }\\n\\n    .mission-feature-title-button-small {\\n        display: block;\\n    }\\n}\\n\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\n    #fp-summary {\\n        height: 100%;\\n        width: 100%;\\n    }\\n}\\n\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\n    #fp-map {\\n        max-height: 100%;\\n    }\\n\\n    #fp-summary {\\n        display: none;\\n    }\\n}\\n\\n@media print {\\n    @page {\\n        size: A4;\\n        margin: 10mm;\\n    }\\n\\n    /* body > * {\\n        display: none;\\n    } */\\n    html {\\n        /* height: auto; */\\n        /*\\n        Manually set our height and width\\n        to make sure that we can scale the map\\n        properly for display later.\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\n        */\\n        width: 190mm;   /* 210 */\\n        height: 276mm;   /* 297 */\\n    }\\n\\n    body {\\n        height: auto;\\n        width: auto;\\n    }\\n\\n    #app {\\n        height: auto;\\n        width: auto;\\n        display: block;\\n        overflow-x: auto;\\n    }\\n\\n    #fp-main {\\n        overflow: initial;\\n    }\\n    #fp-manage {\\n        display: none;\\n    }\\n    #fp-summary {\\n        display: none;\\n    }\\n    #fp-draw {\\n        display: none;\\n    }\\n    #fp-map {\\n        width: calc(190mm);\\n        height: calc(277mm/2);\\n    }\\n    #fp-map-interactive {\\n        display: block;\\n    }\\n    #fp-map-help {\\n        display: none;\\n    }\\n    #print-section {\\n        display: block;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* #fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0.5em;\\n    border-bottom: 2px solid black;\\n} */\\n\\n/* #fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-stats-title {\\n    text-align: center;\\n    font-weight: bold;\\n    background-color: black;\\n    color: white;\\n    display: flex;\\n    padding: 0.2em;\\n}\\n\\n.fp-stats-title-button {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.5em;\\n}\\n\\n.fp-stats-title-label {\\n    flex: auto;\\n} */\\n\\n#fp-options {\\n    flex: auto;\\n    display: grid;\\n    /* width: 100%; */\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    grid-template-rows: auto auto;\\n    /* padding: 0.5em; */\\n    overflow: auto;\\n    /* line-height: 2.5em; */\\n}\\n\\n#fp-options > *{\\n    margin-bottom: 0.5em;\\n}\\n\\n#fp-stats {\\n    /* height: 10em; */\\n    flex: auto;\\n    flex-grow: 0;\\n    flex-shrink: 0;\\n    display: grid;\\n    /* width: 100%; */\\n    /* flex-direction: column; */\\n    grid-template-columns: min-content auto;\\n    border-bottom: 0.4em solid var(--theme-bg-border);\\n    /* grid-template-rows: auto auto; */\\n    padding: 0.5em;\\n    /* overflow: auto; */\\n    line-height: 1em;\\n}\\n\\n.fp-stats-options-label, .fp-stats-options-value,\\n.fp-stats-content-label, .fp-stats-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\n    text-align: center;\\n}\\n\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\n    text-align: right;\\n}\\n\\n/* .fp-stats-option-label {\\n    flex: auto;\\n}\\n\\n.fp-stats-option-value {\\n    flex: auto;\\n    max-width: 5em;\\n} */\\n\\n.fp-stats-option-content-subtitle {\\n    font-weight: bold;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/stats_options.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;GAOG;;AAEH;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;;AAEH;IACI,UAAU;IACV,aAAa;IACb,iBAAiB;IACjB,4BAA4B;IAC5B,8BAA8B;IAC9B,6BAA6B;IAC7B,oBAAoB;IACpB,cAAc;IACd,wBAAwB;AAC5B;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,YAAY;IACZ,cAAc;IACd,aAAa;IACb,iBAAiB;IACjB,4BAA4B;IAC5B,uCAAuC;IACvC,iDAAiD;IACjD,mCAAmC;IACnC,cAAc;IACd,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;;;;;;GAOG;;AAEH;IACI,iBAAiB;AACrB\",\"sourcesContent\":[\"/* #fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0.5em;\\n    border-bottom: 2px solid black;\\n} */\\n\\n/* #fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-stats-title {\\n    text-align: center;\\n    font-weight: bold;\\n    background-color: black;\\n    color: white;\\n    display: flex;\\n    padding: 0.2em;\\n}\\n\\n.fp-stats-title-button {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.5em;\\n}\\n\\n.fp-stats-title-label {\\n    flex: auto;\\n} */\\n\\n#fp-options {\\n    flex: auto;\\n    display: grid;\\n    /* width: 100%; */\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    grid-template-rows: auto auto;\\n    /* padding: 0.5em; */\\n    overflow: auto;\\n    /* line-height: 2.5em; */\\n}\\n\\n#fp-options > *{\\n    margin-bottom: 0.5em;\\n}\\n\\n#fp-stats {\\n    /* height: 10em; */\\n    flex: auto;\\n    flex-grow: 0;\\n    flex-shrink: 0;\\n    display: grid;\\n    /* width: 100%; */\\n    /* flex-direction: column; */\\n    grid-template-columns: min-content auto;\\n    border-bottom: 0.4em solid var(--theme-bg-border);\\n    /* grid-template-rows: auto auto; */\\n    padding: 0.5em;\\n    /* overflow: auto; */\\n    line-height: 1em;\\n}\\n\\n.fp-stats-options-label, .fp-stats-options-value,\\n.fp-stats-content-label, .fp-stats-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\n    text-align: center;\\n}\\n\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\n    text-align: right;\\n}\\n\\n/* .fp-stats-option-label {\\n    flex: auto;\\n}\\n\\n.fp-stats-option-value {\\n    flex: auto;\\n    max-width: 5em;\\n} */\\n\\n.fp-stats-option-content-subtitle {\\n    font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { icon, dom, library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faBars, faClose, faRuler, faDrawPolygon, faEye, faEyeSlash, faFile, faFileExport, faFileImport, faFolderOpen, faLocationCrosshairs, faLocationDot, faMinimize, faMinus, faPlus, faQuestionCircle, faSave, faTrash, faUpload, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n\n/* Listing of common icons to use in the application\n */\nexport enum NeuronIcons {\n    LOAD_PLAN,\n    SAVE_PLAN,\n    CLEAR_PLAN,\n    UPLOAD_PLAN,\n    CREATE_BRIEF,\n    PLAN_LIST,\n    HELP,\n    MINIMIZE,\n    EXPAND,\n    ADD,\n    ARROW_UP,\n    ARROW_DOWN,\n    ARROW_LEFT,\n    ARROW_RIGHT,\n    DELETE,\n    IDENTIFY,\n    REVEAL,\n    HIDE,\n    FIT_ZOOM,\n    POINT,\n    POLYGON,\n    RULER,\n    IMPORT_FILE,\n    EXPORT_FILE,\n}\n/** Returns the corresponding FA icon from the NeuronIcon lookup\n * @param  {NeuronIcons} neuron_icon Icon to get from the library\n */\nfunction _neuron_get_icon_fa(neuron_icon:NeuronIcons) {\n    let i = null;\n\n    switch(neuron_icon) {\n        case NeuronIcons.LOAD_PLAN: {\n            i = faFolderOpen;\n            break\n        }\n        case NeuronIcons.SAVE_PLAN: {\n            i = faSave;\n            break;\n        }\n        case NeuronIcons.CLEAR_PLAN: {\n            i = faTrash;\n            break;\n        }\n        case NeuronIcons.UPLOAD_PLAN: {\n            i = faUpload;\n            break;\n        }\n        case NeuronIcons.CREATE_BRIEF: {\n            i = faFile;\n            break;\n        }\n        case NeuronIcons.PLAN_LIST: {\n            i = faBars;\n            break;\n        }\n        case NeuronIcons.HELP: {\n            i = faQuestionCircle;\n            break;\n        }\n        case NeuronIcons.ARROW_UP: {\n            i = faArrowUp;\n            break;\n        }\n        case NeuronIcons.ARROW_DOWN: {\n            i = faArrowDown;\n            break;\n        }\n        case NeuronIcons.ARROW_LEFT: {\n            i = faArrowLeft;\n            break;\n        }\n        case NeuronIcons.ARROW_RIGHT: {\n            i = faArrowRight;\n            break;\n        }\n        case NeuronIcons.DELETE: {\n            i = faClose;\n            break;\n        }\n        case NeuronIcons.IDENTIFY: {\n            i = faLocationCrosshairs;\n            break;\n        }\n        case NeuronIcons.REVEAL: {\n            i = faEye;\n            break;\n        }\n        case NeuronIcons.HIDE: {\n            i = faEyeSlash;\n            break;\n        }\n        case NeuronIcons.MINIMIZE: {\n            i = faMinus;\n            break;\n        }\n        case NeuronIcons.EXPAND: {\n            i = faPlus;\n            break;\n        }\n        case NeuronIcons.FIT_ZOOM: {\n            i = faMinimize;\n            break;\n        }\n        case NeuronIcons.POINT: {\n            i = faLocationDot;\n            break;\n        }\n        case NeuronIcons.POLYGON: {\n            i = faDrawPolygon;\n            break;\n        }\n        case NeuronIcons.RULER: {\n            i = faRuler;\n            break;\n        }\n        case NeuronIcons.IMPORT_FILE: {\n            i = faFileImport;\n            break;\n        }\n        case NeuronIcons.EXPORT_FILE: {\n            i = faFileExport;\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n\n    return i;\n}\n/** Skims the DOM and loads any hard-linked FA icons\n */\nexport function neuron_load_dom_icons() {\n    //Handle the DOM conversions for hard-coded icons\n    for(const icon_name in NeuronIcons) {\n        const icon_id = Number(icon_name);\n        if (!isNaN(icon_id)) {\n            //XXX: Slight abuse of the enum, but it gets results!\n            const i = _neuron_get_icon_fa(icon_id);\n            if(i)\n                library.add(i);\n        }\n    }\n\n    dom.i2svg();\n}\n/** Returns the FA icon for use or adding to the document.\n * @param  {NeuronIcons} neuron_icon Icon to retrieve from the library\n * @param  {boolean} is_small Modifier to retrieve a small-scale icon\n */\nexport function neuron_get_icon(neuron_icon:NeuronIcons, is_small:boolean = false) {\n    let i = _neuron_get_icon_fa(neuron_icon);\n    let opts = {\n        transform: {\n          size: is_small ? 10 : 16,     // small is fa-2xs\n        }\n    }\n    return i ? icon(i, opts).node : new HTMLCollection();\n}\n","import * as L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\n// @ts-ignore\n//import * as ContextMenu from \"leaflet-contextmenu\";\n// import 'leaflet-contextmenu/dist/leaflet.contextmenu.css';\\\n// @ts-ignore\n// import * as FileLoader from 'leaflet-filelayer'\n\n// delete L.Icon.Default.prototype._getIconUrl;\n//XXX: Fix the image paths loaded by leaflet\n\nconst default_icon_options = {\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n}\nL.Icon.Default.mergeOptions(default_icon_options);\n\nexport function get_neuron_map_marker(class_name:string) {\n    return new L.Icon({\n        ...L.Icon.Default.prototype.options,\n        className: class_name\n    });\n}\n\n//require('leaflet/dist/images/layers.png')\n//require('leaflet/dist/images/layers-2x.png')\n\n//const cm = ContextMenu;\n// const fl = FileLoader;\n\nexport { L };\n\nexport class LeafletContextMenuItem {\n    text:string = \"\";\n    icon:NeuronIcons;\n    callback: (contextTarget:L.Marker) => void;\n\n    /** Creates a LeafletContextMenuItem object for use when creating consistent popup context menus\n     * @param  {string=} text Text to display on on the context menu item\n     * @param  {NeuronIcons} icon Icon to display next to the context menu item\n     * @param  {(contextTarget:L.Marker)=>null} callback Callback to run when the context menu item is clicked\n     */\n    constructor(text:string = \"\", icon:NeuronIcons = null, callback:(contextTarget:L.Marker) => void = null) {\n        this.text = text;\n        this.icon = icon;\n\n        if(callback)\n            this.callback = callback;\n    }\n}\n\n/** Creates a consistent popup context menu for a leaflet marker\n * @param  {string} popup_title Title to put at the top of the popup\n * @param  {LeafletContextMenuItem[]} context_items List of context menu items to load in\n * @param  {L.Marker} marker_context Marker context to use when calling the context menu item callbacks (passed as argument)\n */\nexport function create_popup_context_dom(popup_title:string = \"Marker\", context_items:LeafletContextMenuItem[] = [], marker_context:L.Marker = null) {\n    let dom = document.createElement(\"div\");\n    dom.className = 'neuron-marker-popup';\n\n    let t = document.createElement(\"div\");\n    t.className = 'neuron-marker-popup-title';\n    t.appendChild(document.createTextNode(popup_title));\n    dom.appendChild(t);\n\n    for(const i of context_items) {\n        if(i) {\n            let d = document.createElement(\"div\");\n            d.className = 'neuron-marker-popup-item';\n\n            if(i.icon) {\n                for(let ic of neuron_get_icon(i.icon)) {\n                    ic.classList.add('neuron-marker-popup-icon');\n                    d.appendChild(ic);\n                }\n                // let o = document.createElement('i');\n                // o.className = `fas ${i.icon} neuron-marker-popup-icon`;\n                // o.appendChild(document.createTextNode(i.text));\n                // d.appendChild(o);\n            }\n\n            let s = document.createElement('span');\n            s.className = 'neuron-marker-popup-item-text';\n            s.appendChild(document.createTextNode(i.text));\n            d.appendChild(s);\n\n            if(i.callback) {\n                d.onclick = function() {\n                    return i.callback(marker_context);\n                };\n            }\n\n            dom.appendChild(d);\n        } else {\n            let d = document.createElement(\"hr\");\n            d.className = 'neuron-marker-popup-break';\n            dom.appendChild(d);\n        }\n    }\n\n    return dom;\n}\n","//TODO: Document\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\n\n//TODO: Document\nexport function zero_pad(num:number, places:number) {\n    return String(num).padStart(places, '0');\n}\n\n//TODO: Document\nlet lastId = 0;\nexport function NeuronUID(prefix='nuid-') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n\n//TODO: Document\nexport function flight_distance_from_coords(coords:NeuronInterfacePoint[]) {\n    //XXX:  Total distance calculated with the haversine method\n    //      This is a shortcut and is probably ok for small distances\n    //      but we should definitely look at a proper earth model to\n    //      do it properly in the future\n\n    let total_distance = 0.0;\n    for (var i = 0; i < coords.length - 1; i++) {\n        const p1 = coords[i];\n        const p2 = coords[i+1];\n        const u1 = p1.to_UTM();\n        const u2 = p2.to_UTM(u1.zone);\n        const d = u1.GetDistance2D(u2);\n        //Do some sneaky stuff to support altitude as well\n        const alt_d = Math.pow(Math.abs(p1.altitude - p2.altitude), 2);\n        total_distance += Math.sqrt(Math.pow(d,2) + alt_d);\n    }\n\n    return total_distance;\n}\n\n//TODO: Document\nexport function flight_time_from_duration(duration:number) {\n    const t_h = Math.floor(duration / 3600);\n    const t_m = Math.floor(duration % 3600 / 60);\n    const t_s = Math.floor(duration % 3600 % 60);\n\n    return `${zero_pad(t_h,2)}:${zero_pad(t_m,2)}:${zero_pad(t_s,2)}`;\n}\n\n//TODO: Document\nexport function mm_to_px(mm:number) {\n    const default_dpi = 96;\n    return (mm / 25.4) * window.devicePixelRatio * default_dpi;\n}","import proj4 from 'proj4';\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { zero_pad } from \"./neuron_tools_common\";\n\n/** Get a EPSG code from a given UTM zone number.\n * @param  {number} zone UTM zone.\n * @param  {boolean} is_south Defines if the zone is north or south of the equator.\n */\nfunction EPSG_code_from_utm_zone(zone:number, is_south:boolean) {\n    const zf = Math.floor(zone);\n    if (zf <= 0 || zf > 60)\n        throw new Error(`Zone out of range (${zone}|${zf})`);\n\n    return `EPSG:326${zero_pad(zf, 2)}${is_south ? 'S' : 'N'}`;\n}\n\n//Predefine all of our zones\n// https://epsg.io/32600\nfor(let i = 1; i <= 60; i++) {\n    let projection = `+proj=utm +zone=${i}`;\n    proj4.defs(EPSG_code_from_utm_zone(i, false), projection);\n    proj4.defs(EPSG_code_from_utm_zone(i, true), projection + \" +south\");\n}\n\n/** Determines if a given UTM number or latitude is for a southerly location.\n * @param  {number} latitude_or_zone Latitude or UTM zone number to check.\n */\nfunction get_UTM_is_south(latitude_or_zone:number) {\n    return (latitude_or_zone < 0);\n}\n\n/** Get the UTM Zone number for a given combination of latitudes and longitudes.\n * @param  {number} latitude Latitude of the location to determine.\n * @param  {number} longitude Longitude of the location to determine.\n */\nfunction get_UTM_zone(latitude:number, longitude:number) {\n    let zone = Math.floor((longitude - -186.0) / 6.0);\n    if (get_UTM_is_south(latitude))\n        zone *= -1;\n\n    return zone;\n}\n\nexport class UTMPos {\n    x:number;\n    y:number;\n    zone:number;\n    tag:string;\n\n    /** Creates a UTMPos object that defines a location in the coordinate frame of a specific UTM zone.\n     * @param  {number} x Coordinate location in the x-axis of the UTM zone.\n     * @param  {number} y Coordinate location in the y-axis of the UTM zone.\n     * @param  {number} zone UTM zone to use as the reference origin.\n     * @param  {string} tag Additional tag metadata information to identify this position.\n     */\n    constructor(x:number=0.0, y:number=0.0, zone:number=0.0, tag:string=\"\") {\n        this.x = x;\n        this.y = y;\n        this.zone = zone;\n        this.tag = tag;\n    }\n    /** Compares this UTMPos object with another object to assess if they represent the same location and same UTM zone.\n     * @param  {UTMPos} other The other UTM object to compare with in the assessment.\n     * @param  {boolean} match_tag Additional flag to consider if the tag metadata should also be matched. Tag data will be ignored if this is false.\n     */\n    equals(other:UTMPos, match_tag:boolean = false) {\n        return (this.x == other.x) && (this.y == other.y) && (this.zone == other.zone) && (!match_tag || (this.tag == other.tag));\n    }\n\n    /** Create a deep copy of this UTMPos object.\n     * @param  {string} tag Additional tag metadata information to identify the new position\n     */\n    copy(tag:string=null) {\n        return new UTMPos(this.x, this.y, this.zone, tag ? tag : this.tag);\n    }\n\n    /** Get a new UTMPos object that represents a position of relative bearing and distance from this UTMPos.\n     * @param  {number} bearing The bearing from north from this UTMPos to the new location.\n     * @param  {number} distance The distance from this UTMPos to the new location.\n     * @param  {string} tag Additional tag metadata information to identify the new position.\n     */\n     relative_point_from_dist_bearing(bearing:number, distance:number, tag:string = \"\") {\n        let degN = 90 - bearing;\n        // if (degN < 0)\n        //     degN += 360;\n\n        const deg2rad = Math.PI/180.0;\n\n        return new UTMPos(\n            this.x + distance * Math.cos(degN * deg2rad),\n            this.y + distance * Math.sin(degN * deg2rad),\n            this.zone,\n            tag\n        );\n    }\n\n    /** Get a new UTMPos object that represents a position of relative bearing and distance from this UTMPos.\n     * @param  {number} angle The bearing from x-axis in radians from this UTMPos to the new location.\n     * @param  {number} distance The distance from this UTMPos to the new location.\n     * @param  {string} tag Additional tag metadata information to identify the new position.\n     */\n    relative_point_from_dist_angle(angle:number, distance:number, tag:string = \"\") {\n        return new UTMPos(\n            this.x + distance * Math.cos(angle),\n            this.y + distance * Math.sin(angle),\n            this.zone,\n            tag\n        );\n    }\n\n    /** Get the 2D distance between this UTMPos and another location.\n     * @param  {UTMPos} b The other location to measure distance to.\n     */\n    GetDistance2D(b:UTMPos) {\n        return Math.sqrt(Math.pow(Math.abs(this.x - b.x), 2) + Math.pow(Math.abs(this.y - b.y), 2));\n    }\n\n    /** Get the 2D angle of the line that forms between this UTMPos and another location, relative to x-axis and measured anti-clockwise in radians.\n     * @param  {UTMPos} b The other location to measure distance to.\n     */\n     GetAngle(b:UTMPos) {\n        return Math.atan2(b.y - this.y, b.x - this.x);\n    }\n    /** Calculates the area of a polygon defined by the list of polygons as provided\n     * @param  {UTMPos[]} vertices corner points of the polygon as defined in this area\n     */\n    static AreaOfPolygon(vertices:UTMPos[]) {\n        var total = 0;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          var addX = vertices[i].x;\n          var addY = vertices[i == vertices.length - 1 ? 0 : i + 1].y;\n          var subX = vertices[i == vertices.length - 1 ? 0 : i + 1].x;\n          var subY = vertices[i].y;\n\n          total += (addX * addY * 0.5);\n          total -= (subX * subY * 0.5);\n        }\n\n        return Math.abs(total);\n    }\n\n    /** Convert this UTMPos data into a new NeuronInterfacePoint that represents the same location. Tag metadata will also be included if it exists.\n     */\n    to_NeuronInterfacePoint() {\n        let p = proj4(\n            EPSG_code_from_utm_zone(\n                Math.abs(this.zone),\n                get_UTM_is_south(this.zone)),\n            NeuronInterfacePoint.projection_code(),\n            [this.x, this.y]\n        );\n\n        //p given as [lng, lat]\n        return new NeuronInterfacePoint(p[1], p[0], 0.0, 0.0, this.tag);\n    }\n\n    /** Converts NeuronInterfacePoint data into a new UTMPos that represents the same location. Tag metadata will also be included if it exists.\n     * @param  {NeuronInterfacePoint} point Point to create the transformation from\n     * @param  {number=null} zone Zone override to use during the projection\n     * @param  {string=\"\"} tag Additional tag information for this point\n     */\n    static from_NeuronInterfacePoint(point:NeuronInterfacePoint, zone:number = null) {\n        if (!zone)\n            zone = get_UTM_zone(point.latitude, point.longitude);\n\n        let p = proj4(\n            NeuronInterfacePoint.projection_code(),\n            EPSG_code_from_utm_zone(\n                Math.abs(zone),\n                get_UTM_is_south(zone)),\n            [point.longitude, point.latitude]\n        );\n\n        //p given as [x, y]\n        return new UTMPos(p[0], p[1], zone, point.tag);\n    }\n}\n\nexport class UTMLine {\n    // start of line\n    p1:UTMPos;\n    // end of line\n    p2:UTMPos;\n    // used as a base for grid along line (initial setout)\n    base_pnt:UTMPos;\n\n    /** Creates a UTMLine which is a representation of a line that connects two locations in a UTM zone. Includes an identifier for determining which point is the starting location.\n     * @param  {UTMPos} p1 The first location of the line.\n     * @param  {UTMPos} p2 The second location of the line.\n     * @param  {UTMPos} base_pnt Determines the starting point of the line\n     */\n    constructor(p1:UTMPos, p2:UTMPos, base_pnt:UTMPos) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.base_pnt = base_pnt;\n    }\n}\n","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { UTMPos, UTMLine } from \"./interface_proj4\";\n\n//TODO: Document\nexport enum StartPosition {\n    // Home = 0,\n    BottomLeft = 1,\n    TopLeft = 2,\n    BottomRight = 3,\n    TopRight = 4,\n    // Point = 5\n}\n\n//TODO: Document\nexport class Rect {\n    Top:number;\n    Bottom:number;\n    Left:number;\n    Right:number;\n\n    constructor(Left:number=0.0, Top:number=0.0, Width:number=0.0, Height:number=0.0)\n    {\n        this.Left = Left;\n        this.Top = Top;\n        this.Right = Left + Width;\n        this.Bottom = Top + Height;\n    }\n\n    Width() {\n        return this.Right - this.Left;\n    }\n\n    Height() {\n        return this.Bottom - this.Top;\n    }\n\n\n    MidWidth() {\n        return ((this.Right - this.Left) / 2) + this.Left;\n    }\n\n    MidHeight() {\n        return ((this.Top - this.Bottom) / 2) + this.Bottom;\n    }\n\n    diag_distance()\n    {\n        // Pythagoras\n        return Math.sqrt(Math.pow(this.Width(), 2) + Math.pow(this.Height(), 2));\n    }\n\n}\n\n//TODO: Document\nfunction remove_item_from_array(array:any[], item:any) {\n    const index = array.indexOf(item);\n    if (index > -1)\n        array.splice(index, 1);\n}\n\n/** Add an angle while normalizing output in the range 0...360\n * @param  {number} angle Initial angle in degrees\n * @param  {number} degrees Additional degrees to add to add onto the angle\n */\nfunction AddAngle(angle:number, degrees:number) {\n    angle += degrees;\n    angle = angle % 360;\n\n    if (angle < 0)\n        angle += 360;\n\n    return angle;\n}\n\n//TODO: Document\nfunction FindLineIntersection(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n    //  AB & CD are parallel\n    if (denom == 0)\n        return new UTMPos();\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n    let r = numerator / denom;\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n    let s = numerator2 / denom;\n    if ((r < 0 || r > 1) || (s < 0 || s > 1))\n        return new UTMPos();\n    // Find intersection point\n    return new UTMPos(\n        start1.x + (r * (end1.x - start1.x)),\n        start1.y + (r * (end1.y - start1.y)),\n        start1.zone\n    );\n}\n\n//TODO: Document\nfunction getPolyMinMax(utmpos:UTMPos[]) {\n    if (utmpos.length == 0)\n        return new Rect();\n\n    let min_x, min_y, max_x, max_y = 0.0;\n\n    min_x = max_x = utmpos[0].x;\n    min_y = max_y = utmpos[0].y;\n\n    for(const pnt of utmpos) {\n        min_x = Math.min(min_x, pnt.x);\n        max_x = Math.max(max_x, pnt.x);\n\n        min_y = Math.min(min_y, pnt.y);\n        max_y = Math.max(max_y, pnt.y);\n    }\n\n    return new Rect(min_x, max_y, max_x - min_x, min_y - max_y);\n}\n\n//TODO: Document\nfunction PointInPolygon(p:UTMPos, poly:UTMPos[]) {\n    let p1 = new UTMPos()\n    let p2 = new UTMPos();\n    let inside = false;\n\n    if (poly.length < 3)\n    {\n        return inside;\n    }\n    let oldPoint = poly[poly.length - 1].copy();\n\n    for (let i = 0; i < poly.length; i++)\n    {\n\n        let newPoint = poly[i].copy();\n\n        if (newPoint.y > oldPoint.y)\n        {\n            p1 = oldPoint;\n            p2 = newPoint;\n        }\n        else\n        {\n            p1 = newPoint;\n            p2 = oldPoint;\n        }\n\n        if ((newPoint.y < p.y) == (p.y <= oldPoint.y)\n            && (p.x - p1.x) * (p2.y - p1.y)\n            < (p2.x - p1.x) * (p.y - p1.y))\n        {\n            inside = !inside;\n        }\n        oldPoint = newPoint;\n    }\n    return inside;\n}\n\n//TODO: Document\nfunction FindLineIntersectionExtension(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n    //  AB & CD are parallel\n    if (denom == 0)\n        return new UTMPos();\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n    let r = numerator / denom;\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n    let s = numerator2 / denom;\n    if ((r < 0 || r > 1) || (s < 0 || s > 1)) {\n        // line intersection is outside our lines.\n    }\n\n    // Find intersection point\n    let result = new UTMPos(\n        start1.x + (r * (end1.x - start1.x)),\n        start1.y + (r * (end1.y - start1.y)),\n        start1.zone\n    );\n\n    return result;\n}\n\n//TODO: Document\nfunction findClosestPoint(start:UTMPos, list:UTMPos[]) {\n    let answer = new UTMPos();\n    let current_best = Number.MAX_VALUE;\n\n    for(const pnt of list) {\n        const dist1 = start.GetDistance2D(pnt);\n\n        if (dist1 < current_best) {\n            answer = pnt;\n            current_best = dist1;\n        }\n    }\n\n    return answer;\n}\n\n//TODO: Document\nfunction findClosestLine(start:UTMPos, list:UTMLine[], min_distance:number, angle:number):UTMLine {\n    if (min_distance != 0) {\n        // By now, just add 5.000 km to our lines so they are long enough to allow intersection\n        let METERS_TO_EXTEND = 5000;\n        let perpendicularOrientation = AddAngle(angle, 90);\n\n        // Calculation of a perpendicular line to the grid lines containing the \"start\" point\n        /*\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  -------------------------------------start---------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        */\n        let start_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, -METERS_TO_EXTEND);\n        let stop_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, METERS_TO_EXTEND);\n\n        // Store one intersection point per grid line\n        let intersectedPoints:Map<UTMPos,UTMLine> = new Map();\n        // lets order distances from every intersected point per line with the \"start\" point\n        let ordered_min_to_max:Map<number,UTMPos> = new Map();\n\n        for(const line of list) {\n            // Calculate intersection point\n            let p = FindLineIntersectionExtension(line.p1, line.p2, start_perpendicular_line, stop_perpendicular_line);\n\n            // Store it\n            intersectedPoints.set(p, line);\n\n            // Calculate distances between intersect point and \"start\" (i.e. line and start)\n            let distance_p = start.GetDistance2D(p);\n\n            if (!ordered_min_to_max.has(distance_p))\n                ordered_min_to_max.set(distance_p, p);\n        }\n\n        // Acquire keys and sort them.\n        let ordered_keys = Array.from(ordered_min_to_max.keys());\n        ordered_keys.sort(function(a, b) {\n            return a - b;\n        });\n\n        // Lets select a line that is the closest to \"start\" point but \"min_distance\" away at least.\n        // If we have only one line, return that line whatever the minDistance says\n        let key = Number.MAX_VALUE;\n        let i = 0;\n        while (key == Number.MAX_VALUE && i < ordered_keys.length) {\n            if (ordered_keys[i] >= min_distance)\n                key = ordered_keys[i];\n            i++;\n        }\n\n        // If no line is selected (because all of them are closer than minDistance, then get the farthest one\n        if (key == Number.MAX_VALUE)\n            key = ordered_keys[ordered_keys.length - 1];\n\n        let filtered_map = Array.from(intersectedPoints.entries()).filter(a => a[0].GetDistance2D(start) >= key);\n        let filtered_lines = filtered_map.map(a => a[1]);\n\n        return findClosestLine(start, filtered_lines, 0, angle);\n    } else {\n        let answer = list[0];\n        let shortest = Number.MAX_VALUE;\n\n        for(const line of list) {\n            let ans1 = start.GetDistance2D(line.p1);\n            let ans2 = start.GetDistance2D(line.p2);\n            let shorter_pnt = ans1 < ans2 ? line.p1 : line.p2;\n\n            if (shortest > start.GetDistance2D(shorter_pnt)) {\n                answer = line;\n                shortest = start.GetDistance2D(shorter_pnt);\n            }\n        }\n\n        return answer;\n    }\n}\n\n//TODO: Document\nexport enum GridPointTags {\n    START = \"S\",\n    END = \"E\",\n    MIDDLE = \"M\",\n    MIDDLE_START= \"MS\",\n    MIDDLE_END = \"ME\",\n}\n\nconst min_distance = 0.5;\n/** Creates listing of points that form a survey grid of a provided area\n * @param  {NeuronInterfacePoint[]} polygon List of points that define the survey polygon\n * @param  {number} altitude altitude to map to the final points\n * @param  {number} distance distance between lines\n * @param  {number} spacing Additional spacing between polygon and turns?  TODO: Figure out what this is meant to do?\n * @param  {number} angle angle of the survey pattern to follow (lane angle)\n * @param  {number} overshoot1 overshoot distance at the first \"end\" of the survey pattern\n * @param  {number} overshoot2 overshoot distance at the second \"end\" of the survey pattern\n * @param  {StartPosition} startpos selector for where the starting position should be\n * @param  {number} minLaneSeparation minimum lane separation/skip parameter (causes the lanes to alternate)\n * @param  {number} leadin additional lead-in to assist with mission planning for planes (allows more time for the plane to complete the turn before entering the survey stretch)\n */\nexport function CreateGrid(\n    polygon:NeuronInterfacePoint[],\n    altitude:number,\n    distance:number,\n    spacing:number,\n    angle:number,\n    overshoot1:number,\n    overshoot2:number,\n    startpos:StartPosition,\n    // shutter:boolean,\n    minLaneSeparation:number,\n    leadin:number,\n    // HomeLocation:NeuronInterfacePoint\n    ) {\n\n    if (spacing < 0.1 && spacing != 0)\n        spacing = 0.1;\n\n    if (distance < min_distance)\n        distance = min_distance;\n\n    if (polygon.length == 0)\n        return [];\n\n\n    // Make a non round number in case of corner cases\n    if (minLaneSeparation != 0)\n        minLaneSeparation += 0.5;\n\n    // Lane Separation in meters\n    const minLaneSeparationINMeters = minLaneSeparation * distance;\n\n    const utm_zone = polygon[0].to_UTM().zone;\n    // utm position list\n    let utm_positions = polygon.map(x => x.to_UTM(utm_zone));\n    // utm zone distance calcs will be done in\n    // let utm_positions = utmpos.ToList(NeuronInterfacePoint.ToUTM(utm_zone, polygon), utm_zone);\n    // let utm_positions = polygon;\n\n    // close the loop if its not already\n    if (!utm_positions[0].equals(utm_positions[utm_positions.length - 1]))\n        utm_positions.push(utm_positions[0]); // make a full loop\n\n    // get min/max of coverage area\n    let area = getPolyMinMax(utm_positions);\n\n    // get initial grid\n\n    // used to determine the size of the outer grid area\n    let diag_dist = area.diag_distance();\n\n    // somewhere to store out generated lines\n    let grid:UTMLine[] = [];\n    // number of lines we need\n    let lines = 0;\n\n    // get start point middle\n    let x = area.MidWidth();\n    let y = area.MidHeight();\n    let start_p = new UTMPos(x,y,utm_zone);\n\n    // //UTMLine(new utmpos(x, y, utm_zone), \"Base\");\n\n    // // get left extent\n    // let xb1 = x;\n    // let yb1 = y;\n    // // to the left\n    // new_pos(ref xb1, ref yb1, angle - 90, diag_dist / 2 + distance);\n    // // backwards\n    // new_pos(ref xb1, ref yb1, angle + 180, diag_dist / 2 + distance);\n\n    // utmpos left = new utmpos(xb1, yb1, utm_zone);\n    let left = start_p.relative_point_from_dist_bearing(angle - 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\n\n    ////UTMLine(left, \"left\");\n\n    // get right extent\n    // // double xb2 = x;\n    // // double yb2 = y;\n    // // // to the right\n    // // new_pos(ref xb2, ref yb2, angle + 90, diag_dist / 2 + distance);\n    // // // backwards\n    // // new_pos(ref xb2, ref yb2, angle + 180, diag_dist / 2 + distance);\n\n    // // utmpos right = new utmpos(xb2, yb2, utm_zone);\n    // let right = start_p.relative_point_from_dist_bearing(angle + 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\n\n    ////UTMLine(right, \"right\");\n\n    // set start point to left hand side\n    x = left.x;\n    y = left.y;\n\n    // draw the outer grid, this is a grid that cover the entire area of the rectangle plus more.\n    while (lines < ((diag_dist + distance * 2) / distance))\n    {\n        // copy the start point to generate the end point\n        let l_start = new UTMPos(x, y, utm_zone);\n        let l_end = l_start.relative_point_from_dist_bearing(angle, diag_dist + distance * 2);\n        // let nx = x;\n        // let ny = y;\n        // new_pos(ref nx, ref ny, angle, diag_dist + distance * 2);\n\n        let line = new UTMLine(l_start, l_end, l_start.copy());\n        // line.p1 = new utmpos(x, y, utm_zone);\n        // line.p2 = new utmpos(nx, ny, utm_zone);\n        // line.base_pnt = new utmpos(x, y, utm_zone);\n        grid.push(line);\n\n        // //UTMLine(line);\n\n        // new_pos(ref x, ref y, angle + 90, distance);\n        let l_next = l_start.relative_point_from_dist_bearing(angle + 90, distance);\n        x = l_next.x;\n        y = l_next.y;\n        lines++;\n    }\n\n    // find intersections with our polygon\n\n    // store lines that dont have any intersections\n    let remove:UTMLine[] = [];\n\n    let grid_no = grid.length;\n\n    // cycle through our grid\n    for (let a = 0; a < grid_no; a++) {\n        let closest_distance = Number.MAX_VALUE;\n        let farthest_distance = Number.MIN_VALUE;\n\n        let closest_point = new UTMPos();\n        let farthest_point = new UTMPos();\n\n        // somewhere to store our intersections\n        let matches:UTMPos[] = [];\n\n        let crosses = 0;\n        for (let b = 1; b < utm_positions.length; b++) {\n            const utm_p1 = utm_positions[b-1];\n            const utm_p2 = utm_positions[b];\n\n            let new_utmpos = FindLineIntersection(utm_p1, utm_p2, grid[a].p1, grid[a].p2);\n            if (!(new_utmpos.equals(new UTMPos()))) {\n                crosses++;\n                matches.push(new_utmpos);\n                if (closest_distance > grid[a].p1.GetDistance2D(new_utmpos))\n                {\n                    closest_point.y = new_utmpos.y;\n                    closest_point.x = new_utmpos.x;\n                    closest_point.zone = new_utmpos.zone;\n                    closest_distance = grid[a].p1.GetDistance2D(new_utmpos);\n                }\n                if (farthest_distance < grid[a].p1.GetDistance2D(new_utmpos))\n                {\n                    farthest_point.y = new_utmpos.y;\n                    farthest_point.x = new_utmpos.x;\n                    farthest_point.zone = new_utmpos.zone;\n                    farthest_distance = grid[a].p1.GetDistance2D(new_utmpos);\n                }\n            }\n        }\n        if (crosses == 0) // outside our polygon\n        {\n            if (!PointInPolygon(grid[a].p1, utm_positions) && !PointInPolygon(grid[a].p2, utm_positions))\n                remove.push(grid[a]);\n        }\n        else if (crosses == 1) // bad - shouldn't happen\n        {\n\n        }\n        else if (crosses == 2) // simple start and finish\n        {\n            let line = grid[a];\n            line.p1 = closest_point;\n            line.p2 = farthest_point;\n            grid[a] = line;\n        }\n        else // multiple intersections\n        {\n            let line = grid[a];\n            remove.push(line);\n\n            while (matches.length > 1)\n            {\n                closest_point = findClosestPoint(closest_point, matches);\n                const p1 = closest_point;\n                remove_item_from_array(matches, closest_point);\n\n                closest_point = findClosestPoint(closest_point, matches);\n                const p2 = closest_point;\n                remove_item_from_array(matches, closest_point);\n\n                let newline = new UTMLine(\n                    p1,\n                    p2,\n                    line.base_pnt.copy()\n                );\n\n                grid.push(newline);\n            }\n        }\n    }\n\n    // let grid_debug = [...grid];\n    // let debug_points = [];\n    // for(const line of grid_debug) {\n    //     debug_points.push(line.p1);\n    //     debug_points.push(line.p2);\n    // }\n\n    // cleanup and keep only lines that pass though our polygon\n    for(const line of remove)\n        remove_item_from_array(grid, line);\n\n    if (grid.length == 0)\n        return [];\n        // return NeuronInterfacePoint.from_UTMs(debug_points);\n\n    // pick start position based on initial point rectangle\n    let start_pos_utm:UTMPos = null;\n\n    switch (startpos)\n    {\n        default:\n        // case StartPosition.Home:\n        //     start_pos_utm = HomeLocation.to_UTM(utm_zone);\n        //     break;\n        case StartPosition.BottomLeft:\n            start_pos_utm = new UTMPos(area.Left, area.Bottom, utm_zone);\n            break;\n        case StartPosition.BottomRight:\n            start_pos_utm = new UTMPos(area.Right, area.Bottom, utm_zone);\n            break;\n        case StartPosition.TopLeft:\n            start_pos_utm = new UTMPos(area.Left, area.Top, utm_zone);\n            break;\n        case StartPosition.TopRight:\n            start_pos_utm = new UTMPos(area.Right, area.Top, utm_zone);\n            break;\n        // case StartPosition.Point:\n        //     start_pos_utm = new UTMPos();\n        //     start_pos_utm.zone = utm_zone;\n        //     break;\n    }\n\n    // find the closes polygon point based from our startpos selection\n    start_pos_utm = findClosestPoint(start_pos_utm, utm_positions);\n\n    // find closest line point to startpos\n    let closest = findClosestLine(start_pos_utm, grid, 0 /*Lane separation does not apply to starting point*/, angle);\n\n    let last_pnt = new UTMPos();\n\n    // get the closes point from the line we picked\n    if (closest.p1.GetDistance2D(start_pos_utm) < closest.p2.GetDistance2D(start_pos_utm))\n    {\n        last_pnt = closest.p1;\n    }\n    else\n    {\n        last_pnt = closest.p2;\n    }\n\n    let ans:UTMPos[] = [];\n    while (grid.length > 0) {\n        // for each line, check which end of the line is the next closest\n        if (closest.p1.GetDistance2D(last_pnt) < closest.p2.GetDistance2D(last_pnt)) {\n            let new_start = closest.p1.relative_point_from_dist_bearing(angle, -leadin);\n            new_start.tag = GridPointTags.START;\n            //UTMLine(new_start, \"S\");\n            ans.push(new_start);\n\n            if (leadin < 0) {\n                var p2 = new_start.copy();\n                p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(p2, \"SM\");\n                ans.push(p2);\n            } else if (leadin > 0) {\n                closest.p1.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(closest.p1, \"SM\");\n                ans.push(closest.p1);\n            }\n\n            if (spacing > 0) {\n                for (let d = (spacing - ((closest.base_pnt.GetDistance2D(closest.p1)) % spacing));\n                    d < (closest.p1.GetDistance2D(closest.p2));\n                    d += spacing) {\n                    // new_pos(ref ax, ref ay, angle, d);\n                    let utmpos1 = new UTMPos(closest.p1.x, closest.p1.y, utm_zone, GridPointTags.MIDDLE);\n                    //UTMLine(utmpos1, \"M\");\n                    ans.push(utmpos1);\n                }\n            }\n\n            let new_end = closest.p2.relative_point_from_dist_bearing(angle, overshoot1, GridPointTags.END);\n\n            if (overshoot1 < 0) {\n                var p2 = new_end.copy()\n                p2.tag = GridPointTags.MIDDLE_END;\n                //UTMLine(p2, \"ME\");\n                ans.push(p2);\n            } else if (overshoot1 > 0) {\n                closest.p2.tag = GridPointTags.MIDDLE_END;\n                //UTMLine(closest.p2, \"ME\");\n                ans.push(closest.p2);\n            }\n\n            // new_end.tag = GridPointTags.END;\n            //UTMLine(new_end, \"E\");\n            ans.push(new_end);\n\n            last_pnt = closest.p2;\n\n            remove_item_from_array(grid, closest);\n            if (grid.length == 0)\n                break;\n\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\n        } else {\n            let new_start = closest.p2.relative_point_from_dist_bearing(angle, leadin);\n            new_start.tag = GridPointTags.START;\n            //UTMLine(new_start, \"S\");\n            ans.push(new_start);\n\n            if (leadin < 0) {\n                var p2 = new_start.copy()\n                p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(p2, \"SM\");\n                ans.push(p2);\n            } else if(leadin > 0) {\n                closest.p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(closest.p2, \"SM\");\n                ans.push(closest.p2);\n            }\n\n            if (spacing > 0) {\n                for (let d = ((closest.base_pnt.GetDistance2D(closest.p2)) % spacing);\n                    d < (closest.p1.GetDistance2D(closest.p2));\n                    d += spacing) {\n                    // let ax = closest.p2.x;\n                    // let ay = closest.p2.y;\n                    let a = closest.p2.relative_point_from_dist_bearing(angle, -d);\n\n                    // new_pos(ref ax, ref ay, angle, -d);\n                    var utmpos2 = new UTMPos(a.x, a.y, utm_zone, GridPointTags.MIDDLE);\n                    //UTMLine(utmpos2, \"M\");\n                    ans.push(utmpos2);\n                }\n            }\n\n            let new_end = closest.p1.relative_point_from_dist_bearing(angle, -overshoot2, GridPointTags.END);\n            // utmpos new_end = new_pos(closest.p1, angle, -overshoot2);\n\n            if (overshoot2 < 0) {\n                // var p2 = new_end.copy(\"ME\");\n                //UTMLine(p2, \"ME\");\n                ans.push(new_end.copy(GridPointTags.MIDDLE_END));\n            } else if (overshoot2 > 0) {\n                // closest.p1.tag = \"ME\";\n                //UTMLine(closest.p1, \"ME\");\n                ans.push(closest.p1.copy(GridPointTags.MIDDLE_END));\n            }\n\n            // new_end.tag = \"E\";\n            //UTMLine(new_end, \"E\");\n            ans.push(new_end);\n\n            last_pnt = closest.p1;\n\n            // grid.Remove(closest);\n            remove_item_from_array(grid, closest);\n            if (grid.length == 0)\n                break;\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\n        }\n    }\n\n    const points = NeuronInterfacePoint.from_UTMs(ans);\n\n    // set the altitude on all points\n    for(let p of points)\n        p.altitude = altitude;\n\n    return points;\n}\n","import { L } from \"./interface_leaflet\";\nimport { Rect } from \"./neuron_tools_survey\";\nimport { UTMPos } from \"./interface_proj4\";\n\n//TODO: Document\nexport enum InterfaceSummaryTabName {\n    PLAN = 'tab-mission',\n    OPTIONS = 'tab-options',\n}\n\n//TODO: Document\nexport enum InterfaceAppElements {\n    LOADER = 'loader',\n    APP = 'app',\n    PLAN = 'fp-mission',\n    STATS = 'fp-stats',\n    OPTIONS = 'fp-options',\n    MAP = 'fp-map-interactive',\n    DRAGDROP = 'mission-features-dragdrop',\n    HELP = 'fp-map-help',\n    BRIEF = 'print-section',\n\n}\n\n//Explicit sets of IDs that match DOM elements for the help page interaction\nexport const app_element_prefix_help = 'help';\nexport const app_elements_ignore_help_subs = [\n    'fp-mission',\n];\n\n//TODO: Document\nexport interface NeuronInterfacePointData {\n    latitude: number;\n    longitude: number;\n    altitude:number;\n    heading:number;\n    tag:string;\n}\n\n//TODO: Document\nexport class NeuronInterfacePoint {\n    latitude: number;\n    longitude: number;\n    altitude:number;\n    heading:number;\n    tag:string;\n\n    static _altitude_ratio = 0.3048;\n\n    constructor(latitude:number=0.0, longitude:number=0.0, altitude:number=0.0, heading:number=0.0, tag:string=\"\") {\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.altitude = altitude;\n        this.heading = heading;\n        this.tag = tag;\n    }\n\n    static projection_code() {\n        return 'WGS84';\n    }\n\n    equals(other:NeuronInterfacePoint) {\n        return this.latitude == other.latitude &&\n               this.longitude == other.longitude &&\n               this.altitude == other.altitude &&\n               this.heading == other.heading;\n    }\n\n    to_leaflet() {\n        return L.latLng([this.latitude, this.longitude]);\n    }\n\n    static from_leaflet(latlng:L.LatLng) {\n        return new NeuronInterfacePoint(latlng.lat, latlng.lng);\n    }\n\n    to_UTM(zone:number = null) {\n        return UTMPos.from_NeuronInterfacePoint(this, zone);\n    }\n\n    static from_UTM(utm:UTMPos) {\n        return utm.to_NeuronInterfacePoint();\n    }\n\n    static from_UTMs(positions:UTMPos[]) {\n        return positions.map(p => p.to_NeuronInterfacePoint());\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronInterfacePointData {\n        let is_valid =\n            Number.isFinite(object.latitude) &&\n            Number.isFinite(object.longitude) &&\n            Number.isFinite(object.altitude) &&\n            ((object.tag !== undefined) || (object.tag !== null)) ;\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronInterfacePointData) {\n        if(!NeuronInterfacePoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronInterfacePoint`);\n\n        return new NeuronInterfacePoint(\n            Number.isNaN(j.latitude) ? 0.0 : j.latitude,\n            Number.isNaN(j.longitude) ? 0.0 : j.longitude,\n            Number.isNaN(j.altitude) ? 0.0 : j.altitude,\n            Number.isNaN(j.heading) ? 0.0 : j.heading,\n            j.tag ? j.tag.toString() : \"\"\n        );\n    }\n\n    to_json() {\n        return <NeuronInterfacePointData>{\n            latitude: this.latitude,\n            longitude: this.longitude,\n            altitude:this.altitude,\n            heading:this.heading,\n            tag:this.tag,\n        }\n    }\n\n    #value_as_DMS(dd:number, is_lng:boolean) {\n        const dir = dd < 0 ? (is_lng ? \"W\" : \"S\") : is_lng ? \"E\" : \"N\";\n        const deg = 0 | (dd < 0 ? (dd = -dd) : dd);\n        const min = 0 | (((dd += 1e-9) % 1) * 60);\n        const sec = (0 | (((dd * 60) % 1) * 6000)) / 100;\n\n        return `${deg.toFixed(0)}° ${min.toFixed(0)}' ${sec.toFixed(2)}\" ${dir}`;\n    }\n\n    toString(use_imperial:boolean = true, use_decimal:boolean = false) {\n        return `[${this.toStringLatitude(use_decimal)}, ${this.toStringLatitude(use_decimal)}, ${this.toStringAltitude(use_imperial)}]`;\n     }\n\n     toStringLatitude(use_decimal:boolean = false) {\n        return use_decimal ? this.latitude.toFixed(8) + '°' : this.#value_as_DMS(this.latitude, false);\n     }\n\n     toStringLongitude(use_decimal:boolean = false) {\n        return use_decimal ? this.longitude.toFixed(8) + '°' : this.#value_as_DMS(this.longitude, true);\n     }\n\n     toStringAltitude(use_imperial:boolean = true) {\n        return use_imperial ? (this.altitude / NeuronInterfacePoint._altitude_ratio ).toFixed(2) + \"'\" : this.altitude.toFixed(2) + 'm';\n     }\n}\n\nexport interface NeuronCameraSpecificationsData {\n    name:string;\n    focal_length:number;    //mm\n    sensor_width:number;    //mm\n    sensor_height:number;   //mm\n    image_width:number;     //px\n    image_height:number;    //px\n}\n\n//TODO: Document\nexport class NeuronCameraSpecifications {\n    static TYPE = \"NeuronCameraSpecifications\";\n    static VERSION = 'c5a01d00-d4fa-11ec-95ac-1b0aaa4d0e1e';\n\n    name:string;\n    focal_length:number;    //mm\n    sensor_width:number;    //mm\n    sensor_height:number;   //mm\n    image_width:number;     //px\n    image_height:number;    //px\n\n    constructor(name:string=\"Custom\", focal_length:number = 0.0, sensor_width:number = 0.0, sensor_height:number = 0.0, image_width:number = 0, image_height:number = 0) {\n        this.name = name;\n        this.focal_length = focal_length;\n        this.sensor_width = sensor_width;\n        this.sensor_height = sensor_height;\n        this.image_width = image_width;\n        this.image_height = image_height;\n    }\n\n    copy() {\n        return new NeuronCameraSpecifications(\n            this.name,\n            this.focal_length,\n            this.sensor_width,\n            this.sensor_height,\n            this.image_width,\n            this.image_height\n        );\n    }\n\n    equals(other:NeuronCameraSpecifications) {\n        return (this.name == other.name) &&\n               (this.focal_length == other.focal_length) &&\n               (this.sensor_width == other.sensor_width) &&\n               (this.sensor_height == other.sensor_height) &&\n               (this.image_width == other.image_width) &&\n               (this.image_height == other.image_height);\n    }\n\n    is_valid() {\n        return (this.focal_length > 0) &&\n               (this.sensor_width > 0) &&\n               (this.sensor_height > 0) &&\n               (this.image_width > 0) &&\n               (this.image_height > 0);\n    }\n\n    get_ground_resolution(distance:number) {\n        let res:number = null;\n\n        if(this.is_valid() && distance > 0) {\n            //XXX: Assume square pixels\n            const projection = this.get_projected_size(distance);\n            if(projection) {\n                res = projection.Width() / this.image_width;\n            }\n        }\n\n        return res;\n    }\n\n    get_distance(ground_resolution:number) {\n        let res:number = null;\n\n        if(this.is_valid() && ground_resolution > 0) {\n            //XXX: Assume square pixels\n            const ground_span = this.image_width * ground_resolution;\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate from half the ground span for half the AoV\n            res = (ground_span / 2) / Math.tan(fov2_w);\n        }\n\n        return res;\n    }\n\n    get_projection(distance:number) {\n        let proj:Rect = null;\n\n        if(this.is_valid() && distance > 0) {\n            //Calculate the half field of views\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate the half distances\n            const h2 = Math.tan(fov2_h) * distance;\n            const w2 = Math.tan(fov2_w) * distance;\n\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\n        }\n\n        return proj;\n    }\n\n    get_projected_size(distance:number) {\n        let proj:Rect = null;\n\n        if(this.is_valid() && distance > 0) {\n            //Calculate the half field of views\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate the half distances\n            const h2 = Math.tan(fov2_h) * distance;\n            const w2 = Math.tan(fov2_w) * distance;\n\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\n        }\n\n        return proj;\n    }\n\n\n\n    static isObjectOfDataType(object: any): object is NeuronCameraSpecificationsData {\n        let is_valid =\n            (object.type == NeuronCameraSpecifications.TYPE) &&\n            (object.version == NeuronCameraSpecifications.VERSION);\n\n        return is_valid;\n    }\n\n\n    static from_json(j:NeuronCameraSpecificationsData) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronCameraSpecifications.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronCameraSpecifications`);\n\n        return new NeuronCameraSpecifications(\n            j.name,\n            j.focal_length,\n            j.sensor_width,\n            j.sensor_height,\n            j.image_width,\n            j.image_height\n        );\n    }\n\n    to_json() {\n        return <NeuronCameraSpecificationsData>{\n            version: NeuronCameraSpecifications.VERSION,\n            type: NeuronCameraSpecifications.TYPE,\n            name: this.name,\n            focal_length: this.focal_length,\n            sensor_width: this.sensor_width,\n            sensor_height: this.sensor_height,\n            image_width: this.image_width,\n            image_height: this.image_height,\n        }\n    }\n}\n","import { NeuronCameraSpecifications } from \"./neuron_interfaces\";\nimport { NeuronUID } from \"./neuron_tools_common\";\n\n//TODO: Document\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsBoolean {\n    SHOW_PATH,\n}\n\n//TODO: Document\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsNumber {\n    MISSION_SPEED,\n    CAMERA_FOCAL_LENGTH,\n    CAMERA_IMAGE_WIDTH,\n    CAMERA_IMAGE_HEIGHT,\n    CAMERA_SENSOR_WIDTH,\n    CAMERA_SENSOR_HEIGHT,\n}\n\n//TODO: Document\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsString {\n    CAMERA_NAME,\n}\n\n//TODO: Document\nexport interface NeuronOptionsData {\n    SHOW_PATH:boolean,\n    MISSION_SPEED:number,\n    CAMERA_FOCAL_LENGTH:number,\n    CAMERA_IMAGE_WIDTH:number,\n    CAMERA_IMAGE_HEIGHT:number,\n    CAMERA_SENSOR_WIDTH:number,\n    CAMERA_SENSOR_HEIGHT:number,\n    CAMERA_NAME:string,\n}\n\n//TODO: Document\nexport class NeuronOptions {\n    //XXX: Keys must be unique!\n    static camera_preset_custom = new NeuronCameraSpecifications(\"Custom\", 16, 23.50, 15.60, 6000, 4000);\n    static camera_presets:NeuronCameraSpecifications[]= [\n        NeuronOptions.camera_preset_custom,\n        new NeuronCameraSpecifications(\"A6000\", 20, 23.50, 15.60, 6000, 4000),\n    ];\n\n    //XXX: Keep in sync with NeuronStatisticsOptionKeys\n    static #stat_options_boolean:Map<NeuronOptionsBoolean,boolean> = new Map();\n    static #stat_options_number:Map<NeuronOptionsNumber,number> = new Map();\n    static #stat_options_string:Map<NeuronOptionsString,string> = new Map();\n\n    static #dom_callback:()=>void = null;\n    static #general_callbacks:Map<string,()=>void> = new Map();\n\n    static init() {\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, true, false, false);\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, 5.0, false, false);\n        this.set_camera(NeuronOptions.camera_preset_custom, false, false)\n    }\n\n    static set_dom_callback(callback:()=>void) {\n        this.#dom_callback = callback;\n    }\n\n    static add_callback(callback:()=>void) {\n        const id = NeuronUID('option');\n        this.#general_callbacks.set(id, callback);\n        return this.#remove_callback.bind(this, id);\n    }\n\n    static #remove_callback(id:string) {\n        if(this.#general_callbacks.has(id)) {\n            this.#general_callbacks.delete(id);\n        }\n    }\n\n    static #handle_callbacks(trigger_callbacks:boolean, trigger_dom:boolean) {\n        if(trigger_callbacks) {\n            for(const cb of this.#general_callbacks.values())\n                cb();\n        }\n\n        if(trigger_dom && this.#dom_callback)\n            this.#dom_callback();\n    }\n\n    static set_option_boolean(key:NeuronOptionsBoolean, value:boolean, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_boolean.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_option_number(key:NeuronOptionsNumber, value:number, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_number.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_option_string(key:NeuronOptionsString, value:string, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_string.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_camera(value:NeuronCameraSpecifications, trigger_callbacks:boolean = false, trigger_dom:boolean = true) {\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, value.name, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, value.focal_length, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, value.image_width, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, value.image_height, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, value.sensor_width, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, value.sensor_height, false, false);\n\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    };\n\n    static get_option_boolean(key:NeuronOptionsBoolean) {\n        return this.#stat_options_boolean.get(key);\n    }\n\n    static get_option_number(key:NeuronOptionsNumber) {\n        return this.#stat_options_number.get(key);\n    }\n\n    static get_option_string(key:NeuronOptionsString) {\n        return this.#stat_options_string.get(key);\n    }\n\n    static get_camera() {\n        return new NeuronCameraSpecifications(\n            this.get_option_string(NeuronOptionsString.CAMERA_NAME),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT)\n        );\n    }\n\n    static as_json() {\n        return <NeuronOptionsData>{\n            SHOW_PATH: this.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH),\n            MISSION_SPEED: this.get_option_number(NeuronOptionsNumber.MISSION_SPEED),\n            CAMERA_FOCAL_LENGTH: this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\n            CAMERA_SENSOR_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\n            CAMERA_SENSOR_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\n            CAMERA_IMAGE_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\n            CAMERA_IMAGE_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT),\n            CAMERA_NAME: this.get_option_string(NeuronOptionsString.CAMERA_NAME),\n        };\n    }\n\n    static load(j:NeuronOptionsData) {\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, Boolean(j.SHOW_PATH), false, false);\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, Number.isNaN(j.MISSION_SPEED) ? 0 : j.MISSION_SPEED, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, Number.isNaN(j.CAMERA_FOCAL_LENGTH) ? 0 : j.CAMERA_FOCAL_LENGTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, Number.isNaN(j.CAMERA_IMAGE_WIDTH) ? 0 : j.CAMERA_IMAGE_WIDTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, Number.isNaN(j.CAMERA_IMAGE_HEIGHT) ? 0 : j.CAMERA_IMAGE_HEIGHT, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, Number.isNaN(j.CAMERA_SENSOR_WIDTH) ? 0 : j.CAMERA_SENSOR_WIDTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, Number.isNaN(j.CAMERA_SENSOR_HEIGHT) ? 0 : j.CAMERA_SENSOR_HEIGHT, false, false);\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, j.CAMERA_NAME.toString(), false, false);\n\n        this.#handle_callbacks(true, true);\n    };\n}\n","import { NeuronUID } from \"./neuron_tools_common\";\n\nexport class NeuronDOMFactory {\n    #prefix:string;\n\n\n    /** Creates a DOM factory that can be used to generate consistent style elements\n     * @param  {string} css_prefix A CSS prefix to give any classes generated by this factory\n     */\n    constructor (css_prefix:string) {\n        this.#prefix = css_prefix;\n    }\n    /** Creates a HTML label that is linked to a specific input/other DOM element\n     * @param  {string} text Label text to show\n     * @param  {(HTMLInputElement|HTMLSelectElement|HTMLButtonElement|HTMLOutputElement)} input Input/other HTML element to link this label to\n     * @param  {string} description Mouse-over description for this label item\n     * @param  {boolean} hide_label Sets the visibility to hidden for this label if true (useful for building grid layouts with only one label but many inputs)\n     */\n    _create_dom_label(text:string, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement|HTMLOutputElement), description:string = null, hide_label:boolean=false) {\n        if (!input.id)\n            input.id = NeuronUID();\n\n        let l = document.createElement(\"label\");\n        l.className = `${this.#prefix}-content-label`;\n        l.htmlFor = input.id;\n        if(description)\n            l.title = description;\n        if(hide_label)\n            l.style.visibility = 'hidden';\n\n        l.appendChild(document.createTextNode(text));\n\n        return l;\n    }\n\n    /** Creates a HTML output element\n     * @param  {string} value Value string to set for this element\n     */\n    _create_dom_output(value:string=null) {\n        let dom = document.createElement(\"output\");\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        if(value != null)\n            dom.value = value;\n        return dom;\n    }\n\n    /**Creates a HTML file loader element\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     * @param  {string} accepts Classifier to force the user to select specific file types\n     */\n    _create_dom_input_file(on_change:(event:Event) => void, accepts:string = null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"file\";\n        if(accepts != null)\n            dom.accept = accepts;\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n\n    /**Creates a HTML button element\n     * @param  {string} text Label string to set for this element\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     */\n    _create_dom_input_button(text:string, on_change:(event:Event) => void) {\n        let dom = document.createElement(\"button\");\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-center`;\n        dom.onclick = on_change;\n        dom.appendChild(document.createTextNode(text));\n        return dom;\n    }\n\n    /**Creates a HTML textbox element\n     * @param  {string} value Label string to set for this element\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     */\n    _create_dom_input_textbox(value:string, on_change:(event:Event) => void) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"text\";\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    /**Creates a HTML number scroll element\n     * @param  {number} value Value to set for this element\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     * @param  {number} min Minimum value that can be input for this element. Set to null for no minimum.\n     * @param  {number} max Maximum value that can be input for this element Set to null for no maximum.\n     * @param  {number} step Step value for scrolling/toggling for this element. Set to null for default.\n     */\n    _create_dom_input_number(value:number, on_change:(event:Event) => void, min:number = null, max:number = null, step:number=null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"number\";\n        if(min != null)\n            dom.min = min.toString();\n        if(max != null)\n            dom.max = max.toString();\n        if(step != null)\n            dom.step = step.toString();\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n\n    /**Creates a HTML slider element\n     * @param  {number} value Value to set for this element\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     * @param  {number} min Minimum value that can be input for this element. Set to null for no minimum.\n     * @param  {number} max Maximum value that can be input for this element Set to null for no maximum.\n     * @param  {number} step Step value for scrolling/toggling for this element. Set to null for default.\n     */\n    _create_dom_input_range(value:number, on_change:(event:Event) => void, min:number, max:number, step:number=null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"range\";\n        dom.min = min.toString();\n        dom.max = max.toString();\n        if(step == null)\n            step = (max - min) / 100;\n        dom.step = step.toString();\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    /**Creates a HTML checkbox element\n     * @param  {boolean} checked Initial checked status of the checkbox\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user\n     */\n    _create_dom_input_checkbox(checked:boolean, on_change:(event:Event) => void) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"checkbox\";\n        dom.checked = checked;\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    /**Creates a HTML dropdown selector element.\n     * @param  {string[]} options List of option values for the dropdown list to be used internally.\n     * @param  {string[]} labels List of labels for the dropdown list to be shown to the user.\n     * @param  {(event:Event)=>void} on_change Callback to be run when the element input is changed by the user.\n     * @param  {string} selected_option Initial option to be selected. Set to null to be unselected by default.\n     */\n    _create_dom_input_select(options:string[], labels:string[], on_change:(event:Event) => void, selected_option:string=null) {\n        let dom = document.createElement(\"select\");\n\n        if(options.length != labels.length)\n            throw new Error(`Options list does not match labels list (${options.length} != ${labels.length})`);\n\n        //Create and append the options\n        for (let i = 0; i < options.length; i++) {\n            let option = document.createElement(\"option\");\n            option.value = options[i];\n            option.text = labels[i];\n            if(selected_option && selected_option==options[i])\n                option.selected = true;\n            dom.appendChild(option);\n        }\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n}\n","import { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\nimport { L } from \"./interface_leaflet\";\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint} from \"./neuron_interfaces\";\nimport { NeuronUID } from \"./neuron_tools_common\";\n\n//TODO: Document\nexport interface NeuronFeatureBaseData {\n    version:string,\n    type:string\n}\n\n//TODO: Document\nexport class NeuronFeatureBase extends NeuronDOMFactory {\n    //XXX: Override this in any inherited classes\n    static NAME = \"[BASE FEATURE]\";\n    static TYPE = \"NeuronFeatureBase\";\n    static VERSION = '5caf31f0-d243-11ec-bbb3-df25a4f645e3';\n    static HELP_KEY = 'base';\n    static IS_FLYABLE = false;\n\n    #visible:boolean;\n    #map:L.Map;\n    #features:L.Layer[];\n    #hidden_features:L.Layer[];\n    #on_remove:(feature:NeuronFeatureBase)=>void;\n    #on_change:(feature:NeuronFeatureBase)=>void;\n    #on_move:(feature:NeuronFeatureBase, direction:number)=>void;\n\n    #dom:HTMLDivElement;\n    #dom_buttons_visibility:HTMLButtonElement[];\n\n    static _altitude_ratio = 0.3048;   //ft -> m: `Alt = [DOM Value] * Ratio\n    static _distance_ratio = 0.001;   //km -> m: `Alt = [DOM Value] * Ratio\n    static _area_ratio = 0.000001;   //km2 -> m2: `Alt = [DOM Value] * Ratio\n\n    //Add two sets of icons, one for each size button\n    static _button_sizes = [\n        'mission-feature-title-button',\n        'mission-feature-title-button-small'\n    ];\n\n    constructor(map:L.Map) {\n        super('mission-feature');\n\n        this.#visible = true;\n        this.#features = [];\n        this.#hidden_features = [];\n        this.#map = map;\n        this.#dom_buttons_visibility = [];\n        this.#dom = null;\n        this.set_remove_callback(null);\n        this.set_change_callback(null);\n        this.set_move_callback(null);\n    }\n\n    _trigger_on_changed() {\n        if(this.#on_change)\n            this.#on_change(this);\n    }\n\n    _add_layer_to_map(m:L.Layer) {\n        if(this.#map) {\n            if(this.#visible) {\n                m.addTo(this.#map);\n\n                // //XXX: Forbidden work to change the hue of the marker (must be done after adding to map)\n                // //@ts-ignore\n                // if(icon_adj && m._icon) {\n                //     //@ts-ignore\n                //     m._icon.classList.add(icon_adj);\n                // }\n\n                this.#features.push(m);\n            } else {\n                this.#hidden_features.push(m);\n            }\n            // m.on('remove', this._feature_removed.bind(this));\n        } else {\n            console.error('Error: no map reference set');\n        }\n    }\n\n    _remove_layer_from_map(m:L.Layer) {\n        let index_visible = this.#features.indexOf(m);\n        if(index_visible !== -1) {\n            this.#features.splice(index_visible, 1);\n            m.remove();\n        }\n\n        let index_hidden = this.#hidden_features.indexOf(m);\n        if(index_hidden !== -1) {\n            this.#features.splice(index_hidden, 1);\n            //XXX: These already do not exist on the map, so no need to remove!\n        }\n    }\n\n    #update_visibility_dom() {\n        if(this.#dom) {\n            if(this.#visible) {\n                this.#dom.classList.remove('mission-feature-hidden');\n            } else {\n                this.#dom.classList.add('mission-feature-hidden');\n            }\n        }\n    }\n\n    #update_visibility_icons() {\n        for(let but of this.#dom_buttons_visibility) {\n            const is_small = this.#use_small_icon(but.className);\n            but.innerHTML = '';\n            const icons = neuron_get_icon(this.#visible ? NeuronIcons.HIDE : NeuronIcons.REVEAL, is_small);\n            for(const i of icons)\n                but.appendChild(i);\n        }\n    }\n\n    #use_small_icon(button_class:string) {\n        return  button_class.includes('small');\n    }\n\n    #remove_mission_feature_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    _get_dom(text:string=\"Mission Feature\") {\n        this.#dom = document.createElement(\"div\");\n        this.#dom.id = `mission-item-${NeuronUID()}`;\n        this.#dom.className = 'mission-feature';\n\n        let title = document.createElement(\"div\");\n        title.className = 'mission-feature-title';\n\n        let t = document.createElement(\"div\");\n        t.className = 'mission-feature-title-text';\n        t.appendChild(document.createTextNode(text));\n        title.appendChild(t);\n\n        let d = document.createElement(\"div\");\n        d.className = 'mission-feature-title-button-container';\n\n        this.#dom_buttons_visibility = [];\n        for(const button_class of NeuronFeatureBase._button_sizes) {\n            const is_small = this.#use_small_icon(button_class);\n\n            let b0 = document.createElement(\"button\");\n            b0.className = button_class;\n            b0.title = \"Zoom to feature\";\n            b0.onclick = this.zoom_to_feature.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.IDENTIFY, is_small))\n                b0.appendChild(i);\n            // let b0i = document.createElement(\"i\");\n            // b0i.className = 'fas fa-location-crosshairs' + is_small;\n            // b0.appendChild(b0i);\n            d.appendChild(b0);\n\n            let bv = document.createElement(\"button\");\n            bv.className = button_class;\n            bv.title = \"Toggle feature visibility\";\n            bv.onclick = this.toggle_visibility.bind(this);\n            d.appendChild(bv);\n            this.#dom_buttons_visibility.push(bv);\n\n            let b1 = document.createElement(\"button\");\n            b1.className = button_class;\n            b1.title = \"Move up\";\n            b1.onclick = this.#request_move.bind(this, -1);\n            // let b1i = document.createElement(\"i\");\n            // b1i.className = 'fas fa-arrow-up' + is_small;\n            // b1.appendChild(b1i);\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_UP, is_small))\n                b1.appendChild(i);\n            d.appendChild(b1);\n\n            let b2 = document.createElement(\"button\");\n            b2.className = button_class;\n            b2.title = \"Move down\";\n            b2.onclick = this.#request_move.bind(this, 1);\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_DOWN, is_small))\n                b2.appendChild(i);\n            d.appendChild(b2);\n\n            let b4 = document.createElement(\"button\");\n            b4.className = button_class;\n            b4.title = \"Help\";\n            b4.onclick = this.show_help.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.HELP, is_small))\n                b4.appendChild(i);\n            d.appendChild(b4);\n\n            let b3 = document.createElement(\"button\");\n            b3.className = button_class;\n            b3.title = \"Remove\";\n            b3.onclick = this.remove_feature.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.DELETE, is_small))\n                b3.appendChild(i);\n            d.appendChild(b3);\n        }\n        title.appendChild(d);\n\n        this.#update_visibility_icons();\n        this.#update_visibility_dom();\n\n        this.#dom.appendChild(title);\n\n        return this.#dom;\n    }\n\n    // _create_dom_labelled_input(text:string, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement), label_first:boolean=true, hide_label:boolean=false) {\n    //     let dom = document.createElement(\"div\");\n    //     dom.className = 'mission-feature-content-item';\n\n    //     if (!input.id)\n    //         input.id = NeuronUID();\n\n    //     let l = document.createElement(\"label\");\n    //     l.className = 'mission-feature-content-label';\n    //     l.htmlFor = input.id;\n    //     l.appendChild(document.createTextNode(text));\n    //     if(hide_label)\n    //         l.style.visibility = 'hidden';\n\n    //     if(label_first) {\n    //         dom.appendChild(l);\n    //         dom.appendChild(input);\n    //     } else {\n    //         dom.appendChild(input);\n    //         dom.appendChild(l);\n    //     }\n    //     return dom;\n    // }\n\n    #request_move(direction:number = 0) {\n        if(this.#on_move && direction != 0) {\n            if(this.#dom) {\n                this.#dom.classList.remove('mission-feature-highlight-remove');\n                this.#dom.classList.add('mission-feature-highlight');\n                setTimeout(this.#remove_mission_feature_highlight.bind(this), 1000);\n\n                // this.#dom.classList.add('mission-feature-moved');\n                // setTimeout(this.#remove_mission_feature_moved.bind(this), 300);\n            }\n\n            this.#on_move(this, direction);\n\n            if(this.#dom) {\n                window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n                this.#dom.scrollIntoView();\n            }\n        }\n    }\n\n    // #remove_mission_feature_moved() {\n    //     if(this.#dom) {\n    //         this.#dom.classList.remove('mission-feature-moved');\n    //         // dom.classList.remove('mission-feature-moved-down');\n    //         this.#dom.scrollIntoView();\n    //     }\n    // }\n\n    set_remove_callback(on_remove:(feature:NeuronFeatureBase)=>void) {\n        this.#on_remove = on_remove;\n    }\n\n    set_change_callback(on_change:(feature:NeuronFeatureBase)=>void) {\n        this.#on_change = on_change;\n    }\n\n    set_move_callback(on_move:()=>void) {\n        this.#on_move = on_move;\n    }\n\n    get_features() {\n        return this.#features;\n    }\n\n    toggle_visibility() {\n        this.#visible = !this.#visible;\n        if(this.#visible) {\n            //Show layers\n            this.#features = [].concat(this.#hidden_features);\n            this.#hidden_features = [];\n\n            for(let feature of this.#features)\n                feature.addTo(this.#map);\n        } else {\n            //Hide layers\n            this.#hidden_features = [].concat(this.#features);\n            this.#features = [];\n\n            for(let feature of this.#hidden_features)\n                feature.remove();\n        }\n\n        this.#update_visibility_icons();\n        this.#update_visibility_dom();\n    }\n\n    zoom_to_feature() {\n        const group = L.featureGroup(this.#features);\n        this.#map.fitBounds(group.getBounds(), {\n            padding: [20, 20]\n        });\n\n        window.neuron_map.show_map_help(false);\n    }\n\n\n    show_help() {\n        //XXX: Implement this per inherited feature\n        //XXX: Explicitly do use \"base\" key for the base feature\n        window.neuron_map.show_map_help(true);\n    }\n\n    remove_feature() {\n        //XXX: Implement this per inherited feature\n        if(this.#on_remove)\n            this.#on_remove(this);\n    }\n\n    is_flyable() {\n        return NeuronFeatureBase.IS_FLYABLE;\n    }\n\n    get_path_coords() {\n        //XXX: Implement this per inherited feature\n        const coords:NeuronInterfacePoint[] = [];\n        return coords;\n    }\n\n    get_dom() {\n        //XXX: Implement this per inherited feature\n        return this._get_dom();\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronFeatureBaseData {\n        let is_valid =\n            (object.type == NeuronFeatureBase.TYPE) &&\n            (object.version == NeuronFeatureBase.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeatureBaseData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureBase.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeatureBase`);\n\n        return new NeuronFeatureBase(map);\n    }\n\n    to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeatureBaseData>{\n            version: NeuronFeatureBase.VERSION,\n            type: NeuronFeatureBase.TYPE\n        }\n    }\n}\n","//TODO: Document\nexport class NeuronHelp {\n    static HELP_PREFIX_MISSION = 'help-fp-mission';\n\n    #help_element_name:string;\n    #help_element_ignore_subs:string[];\n\n    #controller :AbortController;\n\n    static key_hover_start:string = \"mouseenter\";\n    static key_hover_end:string = \"mouseleave\";\n\n    static class_highlight:string = \"help-highlight\";\n\n    constructor(help_element_name:string, ignore_sub_keys:string[] = []) {\n        this.#help_element_name = help_element_name;\n        this.#controller = new AbortController();\n        this.#help_element_ignore_subs = ignore_sub_keys;\n    }\n\n    #add_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\n        // console.log('mouse entered');\n        target_element.classList.add(NeuronHelp.class_highlight);\n    }\n\n    #remove_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\n        target_element.classList.remove(NeuronHelp.class_highlight);\n        // console.log('mouse exit');\n    }\n\n    #configure_linked_element_callbacks(trigger_element:HTMLElement) {\n        if(trigger_element.id) {\n            const target_element_ids = trigger_element.id.split(this.#help_element_name + '-');\n            const target_element_id = target_element_ids.length > 1 ? target_element_ids[1] : null;\n            let target_element = target_element_id ? document.getElementById(target_element_id) : null;\n\n            if(target_element) {\n                // console.log(`Adding help hover display for ${trigger_element.id} -> ${target_element_id}`)\n\n                trigger_element.addEventListener(NeuronHelp.key_hover_start, this.#add_hover.bind(this, trigger_element, target_element));\n                trigger_element.addEventListener(NeuronHelp.key_hover_end, this.#remove_hover.bind(this, trigger_element, target_element));\n            } else {\n                throw new Error(\"Unable to identify target element with ID: \" + target_element_id);\n            }\n        } else {\n            throw new Error(\"Unable to link element without ID!\");\n        }\n    }\n\n    stop() {\n        // this.#undo_listeners();\n        this.#controller.abort();\n    }\n\n    reset() {\n        this.stop();\n\n        //Go through all the elements we can find and add in our hover callbacks\n        const section_elements = Array.from(document.querySelectorAll(\"section\"));\n        //Filter to any elements that have out key plus some extra stuff that could be the ID we need\n        let help_elements = section_elements.filter(\n            x => x.id.includes(this.#help_element_name) && (x.id.length > this.#help_element_name.length)\n        );\n\n        //Iteratively filter to remove any unwanted sub-IDs\n        for(const i of this.#help_element_ignore_subs)\n            help_elements = help_elements.filter(x => !x.id.includes(`${this.#help_element_name}-${i}-`))\n\n        //Add the hover function to remaining elements\n        for(let e of help_elements)\n            this.#configure_linked_element_callbacks(e);\n    }\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronOptions, NeuronOptionsString } from \"./neuron_options\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\n//TODO: Document\nexport interface NeuronFeaturePointData {\n    version:string,\n    type:string,\n    point:NeuronInterfacePointData,\n    wait_duration:number,\n    capture_image:boolean,\n    ground_resolution:number,\n}\n\n//TODO: Document\nexport class NeuronFeatureWaypoint extends NeuronFeatureBase {\n    static override NAME = \"Waypoint\";\n    static override TYPE = \"NeuronFeatureWaypoint\";\n    static override VERSION = '1066fce0-dd80-11ec-b085-f96e36263ede';\n    static override HELP_KEY = 'waypoint';\n    static override IS_FLYABLE = true;\n\n    #marker:L.Marker;\n    #point:NeuronInterfacePoint;\n    #dom:HTMLDivElement;\n    #dom_lat:HTMLInputElement;\n    #dom_lon:HTMLInputElement;\n    #dom_alt:HTMLInputElement;\n    #dom_hdg:HTMLInputElement;\n    #dom_wait:HTMLInputElement;\n    #dom_capture:HTMLInputElement;\n    #dom_ground_resolution:HTMLInputElement;\n    #dom_current_camera:HTMLButtonElement;\n\n    #wait_duration:number;\n    #capture_image:boolean;\n    #ground_resolution:number;\n\n    #unsub_option_cb:()=>void;\n\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\n\n    constructor(map:L.Map, point:NeuronInterfacePoint=null) {\n        super(map);\n\n        this.#marker = null;\n        this.#point = null;\n        this.#dom = null;\n        this.#dom_lat = null;\n        this.#dom_lon = null;\n        this.#dom_alt = null;\n        this.#dom_hdg = null;\n        this.#dom_wait = null;\n        this.#dom_capture = null;\n        this.#dom_ground_resolution = null;\n\n        this.#wait_duration = 0;\n        this.#capture_image = false;\n        this.#ground_resolution = 0;\n        this.#dom_current_camera;\n\n        if(point)\n            this.set_point(point);\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    #options_changed() {\n        if(this.#dom_current_camera) {\n            this.#dom_current_camera.innerText = '';\n            this.#dom_current_camera.appendChild(document.createTextNode(NeuronOptions.get_option_string(NeuronOptionsString.CAMERA_NAME)));\n        }\n\n        //Give preference to update altitude from current ground resolution if we're capturing an image\n        if(this.#capture_image) {\n            this.set_ground_resolution(this.#ground_resolution);\n        } else {\n            this.#internal_set_point(this.#point, false, false, true);  //Only use this to trigger calcs, don't update other marker details\n        }\n    }\n\n    remove_point_by_context(context:L.Marker) {\n        if(this.#marker == context) {\n            this.remove_feature();\n        } else {\n            console.warn(\"Call to remove unknown marker context\");\n        }\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_context(event.target);\n    }\n\n    #update_position_from_event(event:L.LeafletEvent) {\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\n        if (this.#point)\n            point.altitude = this.#point.altitude;\n        this.#internal_set_point(point);\n    }\n\n    set_point(point:NeuronInterfacePoint) {\n        if(!this.#marker) {\n            this.#marker = L.marker(point.to_leaflet(),{\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-waypoint')\n            })\n\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n\n            const menu_items = [\n                new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n                null,\n                new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\n            ]\n            this.#marker.bindPopup(create_popup_context_dom(\"Waypoint\", menu_items, this.#marker));\n\n            this._add_layer_to_map(this.#marker);\n        }\n\n        this.#internal_set_point(point);\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true, update_calcs:boolean=true) {\n        this.#point = point;\n\n        if(update_marker && this.#marker)\n            this.#marker.setLatLng(point.to_leaflet());\n\n        if(update_dom) {\n            if(this.#dom_lat)\n                this.#dom_lat.value = point.latitude.toString();\n\n            if(this.#dom_lon)\n                this.#dom_lon.value = point.longitude.toString();\n\n            if(this.#dom_alt)\n                this.#dom_alt.value = (point.altitude / NeuronFeatureBase._altitude_ratio).toString();\n\n            if(this.#dom_hdg)\n                this.#dom_hdg.value = point.heading.toString();\n        }\n\n        if(update_calcs) {\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#point.altitude);\n            if(resolution) {\n                if(this.#dom_ground_resolution)\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureWaypoint._gsd_ratio).toString();\n\n                this.#set_ground_resolution(resolution, false, false);\n            }\n        }\n\n        this._trigger_on_changed();\n    }\n\n    get_wait_duration() {\n        return this.#wait_duration;\n    }\n\n    set_wait_duration(wait_duration:number) {\n        this.#wait_duration = wait_duration;\n\n        if(this.#dom_wait)\n            this.#dom_wait.value = this.#wait_duration.toString();\n\n        this._trigger_on_changed();\n    }\n\n    get_image_count() {\n        return this.#capture_image ? 1 : 0;\n    }\n\n    get_capture_image() {\n        return this.#capture_image;\n    }\n\n    set_capture_image(capture_image:boolean) {\n        this.#capture_image = capture_image;\n\n        if(this.#dom_capture)\n            this.#dom_capture.checked = this.#capture_image;\n\n        this._trigger_on_changed();\n    }\n\n    #update_latitude_from_dom() {\n        if(this.#point && this.#dom_lat)\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_longitude_from_dom() {\n        if(this.#point && this.#dom_lon)\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_altitude_from_dom() {\n        if(this.#point && this.#dom_alt)\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_heading_from_dom() {\n        if(this.#point && this.#dom_hdg)\n            this.#point.heading = this.#dom_hdg.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_wait_duration_from_dom() {\n        this.#wait_duration = this.#dom_wait.valueAsNumber;\n\n        this._trigger_on_changed();\n    }\n\n    #update_capture_image_from_dom() {\n        this.#capture_image = this.#dom_capture.checked;\n\n        this._trigger_on_changed();\n    }\n\n    #update_ground_resolution_from_dom() {\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureWaypoint._gsd_ratio);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureWaypoint.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        if(this.#marker)\n            this._remove_layer_from_map(this.#marker);\n\n        super.remove_feature();\n    }\n\n    override get_path_coords() {\n        return this.#point ? [this.#point] : [];\n    }\n\n    override is_flyable() {\n        return NeuronFeatureWaypoint.IS_FLYABLE;\n    }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Waypoint\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            const t0 = \"Latitude location for the waypoint in decimal degrees\";\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\n            this.#dom_lat.title = t0;\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\n            c.appendChild(this.#dom_lat);\n\n            const t1 = \"Longitude location for the waypoint in decimal degrees\";\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\n            this.#dom_lon.title = t1;\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\n            c.appendChild(this.#dom_lon);\n\n            const t2 = \"Altitude for the waypoint in feet relative to take-off location ground level\";\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_alt.title = t2;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_alt, t2));\n            c.appendChild(this.#dom_alt);\n\n            const t3 = \"Heading for the waypoint in degrees relative to North\";\n            this.#dom_hdg = this._create_dom_input_number((this.#point ? this.#point.heading : 0.0), this.#update_heading_from_dom.bind(this), -180, 180);\n            this.#dom_hdg.title = t3;\n            c.appendChild(this._create_dom_label(\"Heading:\", this.#dom_hdg, t3));\n            c.appendChild(this.#dom_hdg);\n\n            const t4 = \"Duration in seconds for the aircraft to hold position at the waypoint\";\n            this.#dom_wait = this._create_dom_input_number(this.#wait_duration, this.#update_wait_duration_from_dom.bind(this), 0);\n            this.#dom_wait.title = t4;\n            c.appendChild(this._create_dom_label(\"Wait:\", this.#dom_wait, t4));\n            c.appendChild(this.#dom_wait);\n\n            const t5 = \"Capture an image when the aircraft arrives at the waypoint\";\n            this.#dom_capture = this._create_dom_input_checkbox(this.#capture_image, this.#update_capture_image_from_dom.bind(this));\n            this.#dom_capture.title = t5;\n            c.appendChild(this._create_dom_label(\"Capture:\", this.#dom_capture, t5));\n            c.appendChild(this.#dom_capture);\n\n            const t20 = \"Camera for the mission as configured in the mission options\";\n            this.#dom_current_camera = this._create_dom_input_button(NeuronOptions.camera_preset_custom.name, window.neuron_set_panel_view.bind(null, InterfaceSummaryTabName.OPTIONS));\n            this.#dom_current_camera.title = t20;\n            c.appendChild(this._create_dom_label(\"Camera:\", this.#dom_current_camera, t20));\n            c.appendChild(this.#dom_current_camera);\n\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureWaypoint._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\n            this.#dom_ground_resolution.title = t18;\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\n            c.appendChild(this.#dom_ground_resolution);\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    set_ground_resolution(ground_resolution:number) {\n        this.#set_ground_resolution(ground_resolution);\n    }\n\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true, trigger_callbacks:boolean = true) {\n        this.#ground_resolution = ground_resolution;\n\n        if(update_calcs) {\n            let altitude = NeuronOptions.get_camera().get_distance(this.get_ground_resolution());\n\n            if( altitude && altitude != this.#point.altitude) {\n                this.#point.altitude = altitude;\n                this.#internal_set_point(this.#point, true, true, false);\n            }\n        }\n\n        if(trigger_callbacks)\n            this._trigger_on_changed();\n    };\n\n\n    get_ground_resolution() {\n        return this.#ground_resolution;\n    };\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\n        let is_valid =\n            (object.type == NeuronFeatureWaypoint.TYPE) &&\n            (object.version == NeuronFeatureWaypoint.VERSION);\n\n        return is_valid;\n    }\n\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureWaypoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\n\n        const point = NeuronInterfacePoint.from_json(j.point);\n        const p = new NeuronFeatureWaypoint(map, point);\n        p.set_wait_duration(Number.isNaN(j.wait_duration) ? 0.0 : j.wait_duration);\n        p.set_capture_image(Boolean(j.capture_image));\n        p.set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution); //Also triggers update of calculations\n        return p;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePointData>{\n            version: NeuronFeatureWaypoint.VERSION,\n            type: NeuronFeatureWaypoint.TYPE,\n            point: this.#point.to_json(),\n            wait_duration: this.#wait_duration,\n            capture_image: this.#capture_image,\n            ground_resolution: this.#ground_resolution,\n        }\n    }\n}\n","/** Generates a generic file name based on the current time and date\n * @param  {string} ext file extension to give the file\n */\nexport function get_filename(ext:string) {\n    return `neuron-planner${Date.now()}.${ext}`;\n}\n\n/** Initiates a file download for a given data blob\n * @param  {string} filename Filename preset of the downloaded file\n * @param  {Blob} data File data to be downloaded\n */\nexport async function download_file(filename:string, data:Blob) {\n    var element = document.createElement('a');\n    const burl = URL.createObjectURL(data);\n    element.setAttribute('href', burl);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { download_file, get_filename } from \"./neuron_tools_files\"\nimport * as zip from \"@zip.js/zip.js\";\n\n//TODO: Document\nconst type_kml = \"application/vnd.google-earth.kml+xml\";\nconst type_kmz = \"application/vnd.google-earth.kmz\";\n\n//TODO: Document\nexport function get_supported_kmx_types() {\n    return [type_kml, type_kmz];\n}\n\n//TODO: Document\nexport interface NeuronKMLData {\n    markers:NeuronInterfacePoint[];\n    paths:NeuronInterfacePoint[][];\n    polygons:NeuronInterfacePoint[][];\n}\n\n//TODO: Document\nexport async function kmx_load_file(file:Blob, cb_file_loaded:(result:NeuronKMLData)=>void) {\n    let result = null;\n    console.log(`Loaded file identified as \"${file.type}\" type`);\n    switch(file.type) {\n        case type_kml: {\n            const text = await file.text();\n            result = await kml_extract_features(text);\n            break;\n        }\n        case type_kmz: {\n            const reader = new zip.ZipReader(new zip.BlobReader(file));\n            const entries = await reader.getEntries();\n            let got_data = false;\n            let markers:NeuronInterfacePoint[] = [];\n            let paths:NeuronInterfacePoint[][] = [];\n            let polygons:NeuronInterfacePoint[][] = [];\n\n            for(const e of entries) {\n                const text:string = await e.getData(new zip.TextWriter());\n                const r = await kml_extract_features(text);\n\n                if(r.markers.length || r.paths.length || r.polygons.length) {\n                    got_data = true;\n                    markers.push(...r.markers);\n                    paths.push(...r.paths);\n                    polygons.push(...r.polygons);\n                }\n            }\n\n            if(got_data) {\n                result = {\n                    markers: markers,\n                    paths: paths,\n                    polygons: polygons,\n                }\n            }\n\n            break;\n        }\n    }\n\n    // console.log(result);\n    cb_file_loaded(result);\n}\n\n//TODO: Document\nexport async function kml_extract_features(kml_plain_text:string) {\n    //XXX: Only supports google marks/placemarks and polygons\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(kml_plain_text, \"text/xml\");\n    let ret:NeuronKMLData = null;\n\n    if (xmlDoc.documentElement.nodeName == \"kml\") {\n        let markers:NeuronInterfacePoint[] = [];\n        let paths:NeuronInterfacePoint[][] = [];\n        let polygons:NeuronInterfacePoint[][] = [];\n\n        for (const item of xmlDoc.getElementsByTagName('Placemark')) {\n            let placeMarkName = \"Unknown\";\n            try{\n                placeMarkName = item.getElementsByTagName('name')[0].childNodes[0].nodeValue.trim();\n            }\n            catch {}\n            let kml_polygons = Array.from(item.getElementsByTagName('Polygon'));\n            let kml_markers = Array.from(item.getElementsByTagName('Point'));\n            let kml_paths = Array.from(item.getElementsByTagName('LineString'));\n\n            for(const multi of item.getElementsByTagName('MultiGeometry')) {\n                kml_polygons = kml_polygons.concat(Array.from(multi.getElementsByTagName('Polygon')));\n                kml_markers = kml_markers.concat(Array.from(multi.getElementsByTagName('Point')));\n                kml_paths = kml_paths.concat(Array.from(multi.getElementsByTagName('LineString')));\n            }\n\n            /** MARKER PARSE **/\n            for (const [ind, marker] of kml_markers.entries()) {\n                let point = \"\";\n                try {\n                    point = marker.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                } catch(e) {\n                    console.warn(\"Unable to extract marker #\" + (ind + 1).toString());\n                    if (e instanceof TypeError) {\n                        //Do nothing?\n                    } else {\n                        console.warn(e);\n                    }\n                }\n\n                if (point.length) {\n                    let p = point_from_coord(point.split(\",\"));\n                    p.tag = placeMarkName;\n                    markers.push(p);\n                }\n            }\n\n            /** PATH PARSE **/\n            for (const [ind, path] of kml_paths.entries()) {\n                let coords = \"\";\n\n                try {\n                    coords = path.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                } catch(e) {\n                    console.warn(\"Unable to extract path #\" + (ind + 1).toString());\n                    if (e instanceof TypeError) {\n                        //Do nothing?\n                    } else {\n                        console.warn(e);\n                    }\n                }\n\n                if(coords.length) {\n                    let kml_points = coords.split(\" \");\n\n                    let points:NeuronInterfacePoint[] = [];\n                    for (const point of kml_points) {\n                        points.push(point_from_coord(point.split(\",\")));\n                    }\n\n                    paths.push(points);\n                }\n            }\n\n            /** POLYGONS PARSE **/\n            for (const [ind, polygon] of kml_polygons.entries()) {\n                let coords = \"\";\n\n                try {\n                    coords = polygon.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                } catch(e) {\n                    console.warn(\"Unable to extract polygon #\" + (ind + 1).toString());\n                    if (e instanceof TypeError) {\n                        //Do nothing?\n                    } else {\n                        console.warn(e);\n                    }\n                }\n\n                if(coords.length) {\n\n                    let kml_points = coords.split(\" \");\n\n                    let points:NeuronInterfacePoint[] = [];\n                    for (const point of kml_points) {\n                        points.push(point_from_coord(point.split(\",\")));\n                    }\n\n                    polygons.push(points);\n                }\n            }\n        }\n\n        ret = { markers: markers, paths: paths, polygons: polygons };\n    } else {\n        console.error(\"Error while parsing KML string\");\n    }\n\n    return ret;\n}\n\n//TODO: Document\nfunction point_from_coord(coords:string[]) {\n\n    let lat = coords.length >= 2 ? Number.parseFloat(coords[1]) : 0.0;\n    let lon = coords.length >= 1 ? Number.parseFloat(coords[0]) : 0.0;\n    let alt = coords.length >= 3 ? Number.parseFloat(coords[2]) : 0.0;\n\n    return new NeuronInterfacePoint(\n        Number.isNaN(lat) ? 0.0 : lat,\n        Number.isNaN(lon) ? 0.0 : lon,\n        Number.isNaN(alt) ? 0.0 : alt,\n    );\n}\n\n//TODO: Document\nexport async function kml_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\n    const file = new Blob(\n        [textXML],\n        {\n            type: type_kml\n        }\n    );\n    download_file(get_filename('kml'), file);\n}\n\n//TODO: Document\nexport async function kmz_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\n    const kmz = await get_kmz_from_kml_data(textXML);\n    download_file(get_filename('kmz'), kmz);\n}\n\n//TODO: Document\nasync function get_kmz_from_kml_data(data:string) {\n    // use a BlobWriter to store with a ZipWriter the zip into a Blob object\n    const blobWriter = new zip.BlobWriter(type_kmz);\n    const writer = new zip.ZipWriter(blobWriter);\n\n    // use a TextReader to read the String to add\n    await writer.add(\"doc.kml\", new zip.TextReader(data));\n\n    // close the ZipReader\n    await writer.close();\n\n    // get the zip file as a Blob\n    return blobWriter.getData();\n}\n\n//TODO: Document\nexport async function kml_data_from_neuron_data(markers:NeuronInterfacePoint[], paths:NeuronInterfacePoint[][], polygons:NeuronInterfacePoint[][]) {\n    let xmlDocument = document.implementation.createDocument(\"\", \"\", null);\n    const kmlNode = xmlDocument.createElement('kml');\n    kmlNode.setAttribute('xmlns', 'http://www.opengis.net/kml/2.2');\n    const documentNode = xmlDocument.createElement('Document');\n    kmlNode.appendChild(documentNode);\n    xmlDocument.appendChild(kmlNode);\n\n    //Markers\n    for(let i=0; i<markers.length; i++) {\n        documentNode.appendChild(\n            kml_create_point_node(xmlDocument, markers[i].tag ? markers[i].tag : `Marker #${i+1}`, markers[i].latitude, markers[i].longitude)\n        );\n    }\n\n    //Paths\n    for(let i=0; i<paths.length; i++) {\n        if(paths[i].length)\n            documentNode.appendChild(kml_create_path_node(xmlDocument, (i == 0) ? \"flight-path\" : `paths-${i+1}`, paths[i]));\n    }\n\n    //Polygons\n    for(let i=0; i<polygons.length; i++) {\n        if(polygons[i].length)\n            documentNode.appendChild(kml_create_polygon_node(xmlDocument, `polygon-${i+1}`, polygons[i]));\n    }\n\n    return kml_document_to_string(xmlDocument);\n}\n\n//TODO: Document\nexport function kml_document_to_string(xmlDocument: XMLDocument) {\n    let textXML = new XMLSerializer().serializeToString(xmlDocument);\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + textXML;\n}\n\n//TODO: Document\nfunction kml_create_point_node(xmlDocument: XMLDocument, name:string, lat:number, lng:number) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const pointNode = xmlDocument.createElement('Point');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    coordinatesNode.innerHTML = `${lng},${lat}`;\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(pointNode);\n    pointNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n\n//TODO: Document\nfunction kml_create_path_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const lineStringNode = xmlDocument.createElement('LineString');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\n    coordinatesNode.innerHTML = plist.join(' ');\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(lineStringNode);\n    lineStringNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n\n//TODO: Document\nfunction kml_create_polygon_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const polygonNode = xmlDocument.createElement('Polygon');\n    const boundaryNode = xmlDocument.createElement('outerBoundaryIs');\n    const ringNode = xmlDocument.createElement('LinearRing');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\n    coordinatesNode.innerHTML = plist.join(' ');\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(polygonNode);\n    polygonNode.appendChild(boundaryNode);\n    boundaryNode.appendChild(ringNode);\n    ringNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { kml_download_from_neuron_data, kmz_download_from_neuron_data } from \"./neuron_tools_kml\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\n//TODO: Document\nexport interface NeuronFeatureLineData {\n    version:string;\n    type:string;\n    start:NeuronInterfacePointData;\n    end:NeuronInterfacePointData;\n    label:string;\n}\n\n//TODO: Document\nexport class NeuronFeatureLine extends NeuronFeatureBase {\n    static override NAME = \"Line\";\n    static override TYPE = \"NeuronFeatureLine\";\n    static override VERSION = 'bd03b410-ed17-11ec-ada3-676515aa426a';\n    static override HELP_KEY = 'line';\n\n    #show_ends:boolean\n\n    #label:string;\n    #start:L.Marker;\n    #end:L.Marker;\n    #line:L.Polyline;\n    #on_change_internal:()=>void;\n    #dom:HTMLDivElement;\n    #dom_length:HTMLOutputElement;\n    #dom_bearing:HTMLOutputElement;\n    #dom_show_ends:HTMLInputElement;\n    #dom_label:HTMLInputElement;\n    #dom_export_kml:HTMLButtonElement;\n    #dom_export_kmz:HTMLButtonElement;\n\n    constructor(map:L.Map, start:NeuronInterfacePoint=null, end:NeuronInterfacePoint=null) {\n        super(map);\n        this.#on_change_internal = null;\n        this.#dom = null;\n        this.#dom_length = null;\n        this.#dom_export_kml = null;\n        this.#dom_export_kmz = null;\n        this.#label = \"\";\n        this.#line = null;\n        this.#show_ends = true;\n        this.set_start(start);\n        this.set_end(end);\n        //XXX: update_line() called by start and end\n    }\n\n    #generate_popup(context:L.Marker) {\n        const menu_items = [\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_feature.bind(this)),\n        ]\n        context.bindPopup(create_popup_context_dom(this.#label ? this.#label : \"Line End\", menu_items, context));\n    }\n\n    set_start(point:NeuronInterfacePoint) {\n        if(this.#start) {\n            //Update the existing polygon\n            // console.log(this.#polygon);\n            this.#start.setLatLng(point.to_leaflet());\n        } else {\n            let m = L.marker(point.to_leaflet(), {\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-line-start')\n            })\n\n            m.on(\"drag\", this.update_line.bind(this));\n            m.on(\"dblclick\", this.#remove_by_event.bind(this));\n            this.#generate_popup(m);\n\n            this.#start = m;\n            if(this.#show_ends)\n                this._add_layer_to_map(m);\n        }\n\n        this.update_line();\n    }\n\n    set_end(point:NeuronInterfacePoint) {\n        if(this.#end) {\n            //Update the existing polygon\n            // console.log(this.#polygon);\n            this.#end.setLatLng(point.to_leaflet());\n        } else {\n            let m = L.marker(point.to_leaflet(), {\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-line-end')\n            })\n\n            m.on(\"drag\", this.update_line.bind(this));\n            m.on(\"dblclick\", this.#remove_by_event.bind(this));\n            this.#generate_popup(m);\n\n            this.#end = m;\n            if(this.#show_ends)\n                this._add_layer_to_map(m);\n        }\n\n        this.update_line();\n    }\n\n    update_line() {\n        if((this.#start != null) && (this.#end != null)) {\n            //Add or update the line\n            if(this.#line) {\n                this.#line.setLatLngs([this.#start.getLatLng(), this.#end.getLatLng()]);\n            } else {\n                this.#line = L.polyline([this.#start.getLatLng(), this.#end.getLatLng()], {color: 'violet'});\n                // this.#line.on(\"click\", this.#add_point_at_mouseevent.bind(this));\n                if(this.#show_ends)\n                    this._add_layer_to_map(this.#line);\n            }\n        } else {\n            //Remove the line\n            this._remove_layer_from_map(this.#line);\n            this.#line = null;\n        }\n\n        this.#try_update_dom();\n    }\n\n    corners_visible() {\n        return this.#show_ends;\n    }\n\n    update_show_ends(show_ends:boolean) {\n        this.#show_ends = show_ends;\n\n        if(this.#show_ends) {\n            //Show layers\n            this._add_layer_to_map(this.#start);\n            this._add_layer_to_map(this.#end);\n        } else {\n            //Hide layers\n            this._remove_layer_from_map(this.#start);\n            this._remove_layer_from_map(this.#end);\n        }\n    }\n\n    _set_on_change_internal(on_change:()=>void=null) {\n        this.#on_change_internal = on_change;\n    }\n\n    get_line() {\n        return this.#line;\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    #remove_by_event(event:L.LeafletEvent) {\n        this.remove_feature();\n    }\n\n    #try_update_dom() {\n        if(this.#dom_length) {\n            let dist = 0;\n            if(this.#start && this.#end) {\n                let p1 = NeuronInterfacePoint.from_leaflet(this.#start.getLatLng());\n                let p2 = NeuronInterfacePoint.from_leaflet(this.#end.getLatLng());\n                let u1 = p1.to_UTM();\n                let u2 = p2.to_UTM(u1.zone);\n                dist = u1.GetDistance2D(u2) * NeuronFeatureLine._distance_ratio;\n            }\n            this.#dom_length.value = dist.toFixed(3);\n        }\n\n        if(this.#dom_bearing) {\n            let bearing = 0;\n            if(this.#start && this.#end) {\n                let p1 = NeuronInterfacePoint.from_leaflet(this.#start.getLatLng());\n                let p2 = NeuronInterfacePoint.from_leaflet(this.#end.getLatLng());\n                let u1 = p1.to_UTM();\n                let u2 = p2.to_UTM(u1.zone);\n                let angle = u1.GetAngle(u2);\n                bearing = ((Math.PI/2 - angle)*180/Math.PI) % 360;\n                if(bearing < 0)\n                    bearing += 360\n            }\n            this.#dom_bearing.value = bearing.toFixed(2);\n        }\n    }\n\n    get_ends_as_points() {\n        let ends:NeuronInterfacePoint[] = [];\n        if (this.#start && this.#end) {\n            ends.push(NeuronInterfacePoint.from_leaflet(this.#start.getLatLng()));\n            ends.push(NeuronInterfacePoint.from_leaflet(this.#end.getLatLng()));\n        }\n        return ends;\n    }\n\n    #export_as_kml() {\n        kml_download_from_neuron_data([], [this.get_ends_as_points()], []);\n    }\n\n    #export_as_kmz() {\n        kmz_download_from_neuron_data([], [this.get_ends_as_points()], []);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureLine.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        if(this.#start) {\n            this._remove_layer_from_map(this.#start);\n            this.#start = null;\n        }\n\n        if(this.#end) {\n            this._remove_layer_from_map(this.#end);\n            this.#end = null;\n        }\n\n        if(this.#line) {\n            this._remove_layer_from_map(this.#line);\n            this.#line = null;\n        }\n\n        super.remove_feature();\n    }\n\n    //override get_path_coords() {} //XXX: No paths provided by this feature, use base return\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Line\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            //Output items\n            const t4 = \"Length of the line from start to end in kilometers\";\n            this.#dom_length = this._create_dom_output();\n            this.#dom_length.title = t4;\n            c.appendChild(this._create_dom_label(\"Length:\", this.#dom_length, t4));\n            c.appendChild(this.#dom_length);\n\n            const t5 = \"Angle from North in degrees that the line makes from start to end\";\n            this.#dom_bearing = this._create_dom_output();\n            this.#dom_bearing.title = t5;\n            c.appendChild(this._create_dom_label(\"Bearing:\", this.#dom_bearing, t5));\n            c.appendChild(this.#dom_bearing);\n\n            this.#try_update_dom();\n\n            //Input Items\n            const t21 = \"Show the corners of the polygon\";\n            this.#dom_show_ends = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\n            this.#dom_show_ends.title = t21;\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_ends, t21));\n            c.appendChild(this.#dom_show_ends);\n\n            const t22 = \"Text label for identification of the polygon\";\n            this.#dom_label = this._create_dom_input_textbox(this.#label, this.#update_label_from_dom.bind(this));\n            this.#dom_label.title = t22;\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t22));\n            c.appendChild(this.#dom_label);\n\n            const t1 = \"Export this line to a drawing document\";\n            const t11 = \"Export this line to a KML document\";\n            const t12 = \"Export this line to a KMZ document\";\n            this.#dom_export_kml = this._create_dom_input_button(\"KML\", this.#export_as_kml.bind(this));\n            this.#dom_export_kml.title = t11;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kml, t1));\n            c.appendChild(this.#dom_export_kml);\n\n            this.#dom_export_kmz = this._create_dom_input_button(\"KMZ\", this.#export_as_kmz.bind(this));\n            this.#dom_export_kmz.title = t12;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kmz, t1, true));\n            c.appendChild(this.#dom_export_kmz);\n\n            // c.appendChild(this._create_dom_labelled_input(\"\", this.#dom_export_shape.bind(this)));\n\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    #update_show_corners_from_dom() {\n        this.update_show_ends(this.#dom_show_ends.checked);\n    }\n\n    #update_label_from_dom() {\n        this.set_label(this.#dom_label.value, false);\n    }\n\n    get_label() {\n        return this.#label;\n    }\n\n    set_label(label:string, update_dom:boolean = true) {\n        this.#label = label;\n        if(this.#dom_label && update_dom)\n            this.#dom_label.value = label;\n\n        if(this.#start)\n            this.#generate_popup(this.#start);\n        if(this.#end)\n            this.#generate_popup(this.#end);\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeatureLineData {\n        let is_valid =\n            (object.type == NeuronFeatureLine.TYPE) &&\n            (object.version == NeuronFeatureLine.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeatureLineData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureLine.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeatureLine`);\n\n        let p = new NeuronFeatureLine(map, NeuronInterfacePoint.from_json(j.start), NeuronInterfacePoint.from_json(j.end));\n        p.set_label(j.label.toString());\n        return p;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeatureLineData>{\n            version: NeuronFeatureLine.VERSION,\n            type: NeuronFeatureLine.TYPE,\n            start: this.#start ? NeuronInterfacePoint.from_leaflet(this.#start.getLatLng()) : new NeuronInterfacePoint(),\n            end: this.#end ? NeuronInterfacePoint.from_leaflet(this.#end.getLatLng()) : new NeuronInterfacePoint(),\n            label: this.#label,\n        }\n    }\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { kml_download_from_neuron_data, kmz_download_from_neuron_data } from \"./neuron_tools_kml\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\nimport { UTMPos } from \"./interface_proj4\";\n\n//TODO: Document\nexport interface NeuronFeaturePolygonData {\n    version:string;\n    type:string;\n    corners:NeuronInterfacePointData[];\n    label:string;\n}\n\n//TODO: Document\nexport class NeuronFeaturePolygon extends NeuronFeatureBase {\n    static override NAME = \"Polygon\";\n    static override TYPE = \"NeuronFeaturePolygon\";\n    static override VERSION = 'f0e9c050-e135-11ec-8ea0-c3c316816bb1';\n    static override HELP_KEY = 'polygon';\n\n    #show_corners:boolean\n\n    #label:string;\n    #corners:L.Marker[];\n    #polygon:L.Polygon;\n    #planner:NeuronPlanner;\n    #selected_corner:number;\n    #on_change_internal:()=>void;\n    #dom:HTMLDivElement;\n    #dom_corner_count:HTMLOutputElement;\n    #dom_perimeter:HTMLOutputElement;\n    #dom_area:HTMLOutputElement;\n    #dom_show_corners:HTMLInputElement;\n    #dom_label:HTMLInputElement;\n    #dom_convert_survey:HTMLButtonElement;\n    #dom_export_kml:HTMLButtonElement;\n    #dom_export_kmz:HTMLButtonElement;\n\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], planner:NeuronPlanner = null) {\n        super(map);\n        this.#on_change_internal = null;\n        this.#dom = null;\n        this.#dom_perimeter = null;\n        this.#dom_area = null;\n        this.#dom_corner_count = null;\n        this.#dom_convert_survey = null;\n        this.#dom_export_kml = null;\n        this.#dom_export_kmz = null;\n        this.#label = \"\";\n\n        this.set_planner(planner);\n\n        this.#show_corners = corners.length < 20;\n        this.#selected_corner = 0;\n        this.#corners = [];\n        if(corners.length) {\n            if(corners.length == 1)\n                console.warn(\"Insufficient number of corners to define polygon! May be removed immediately\");\n\n            this.add_corners(corners);\n            //XXX: This also calls update_polygon();\n        } else {\n            this.update_polygon();\n        }\n    }\n\n    corners_visible() {\n        return this.#show_corners;\n    }\n\n    update_show_corners(show_corners:boolean) {\n        this.#show_corners = show_corners;\n\n        if(this.#show_corners) {\n            //Show layers\n            for(let feature of this.#corners)\n                this._add_layer_to_map(feature);\n        } else {\n            //Hide layers\n            for(let feature of this.#corners)\n                this._remove_layer_from_map(feature);\n        }\n    }\n\n    set_planner(planner:NeuronPlanner) {\n        this.#planner = planner;\n    }\n\n    _set_on_change_internal(on_change:()=>void=null) {\n        this.#on_change_internal = on_change;\n    }\n\n    #array_move(arr:any[], old_index:number, new_index:number) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        // return arr; // for testing\n    }\n\n    #array_move_cyclic(arr:any[], old_index:number, diff:number) {\n        let new_index = (old_index + diff) % arr.length;\n        if(new_index < 0) {\n            new_index += arr.length;\n        }\n        this.#array_move(this.#corners, old_index, new_index);\n    }\n\n    move_corner_forwards(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n\n        if(ind >= 0) {\n            this.#array_move_cyclic(this.#corners, ind, -1);\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    move_corner_backwards(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n        if(ind >= 0) {\n            this.#array_move_cyclic(this.#corners, ind, 1);\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    select_corner(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n\n        if(ind >= 0) {\n            this.#selected_corner = ind;\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    #select_corner_by_event(event:L.LeafletEvent) {\n        this.select_corner(event.target);\n    }\n\n    get_polygon() {\n        return this.#polygon;\n    }\n\n    #generate_popup(context:L.Marker) {\n        const menu_items = [\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Move forward\", NeuronIcons.ARROW_LEFT, this.move_corner_forwards.bind(this)),\n            new LeafletContextMenuItem(\"Move backward\", NeuronIcons.ARROW_RIGHT, this.move_corner_backwards.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_corner.bind(this)),\n        ]\n        context.bindPopup(create_popup_context_dom(this.#label ? this.#label : \"Polygon Corner\", menu_items, context));\n    }\n\n    add_corner(corner:NeuronInterfacePoint, update_polygon=true) {\n        if(this.#selected_corner < 0 || this.#selected_corner >= this.#corners.length)\n            this.#selected_corner = Math.min(this.#corners.length - 1, 0)\n\n        let m = L.marker([corner.latitude, corner.longitude], {\n            draggable: true,\n            autoPan: true,\n            icon: get_neuron_map_marker('neuron-marker-corner')\n        })\n\n        m.on(\"drag\", this.update_polygon.bind(this));\n        m.on(\"click\", this.#select_corner_by_event.bind(this));\n        m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n        this.#generate_popup(m);\n\n        this.#corners.splice(this.#selected_corner, 0, m);\n        if(this.#show_corners)\n            this._add_layer_to_map(m);\n\n        if(update_polygon)\n            this.update_polygon();\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    add_corners(corners:NeuronInterfacePoint[]=[]) {\n        for(const c of corners)\n            this.add_corner(c, false);\n\n        //Do this manually at the end\n        this.update_polygon();\n    }\n\n    get_corners() {\n        return this.#corners;\n    }\n\n    get_corners_as_points() {\n        return this.#corners.map(p => NeuronInterfacePoint.from_leaflet(p.getLatLng()));\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_corner(event.target);\n    }\n\n    remove_point_by_corner(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n        if(ind >= 0) {\n            this._remove_layer_from_map(corner); //Remove from map\n            this.#corners.splice(ind, 1);   //Remove from list\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    #add_point_at_mouseevent(event:L.LeafletMouseEvent) {\n        if(this.#polygon && this.#show_corners) {\n            // const c = this.#polygon.getCenter();\n            // const dx = b._northEast.lng - b._southWest.lng;\n            // const dy = b._northEast.lat - b._southWest.lat;\n            // const p = new NeuronMapPoint(b._southWest.lat + dy / 2, b._southWest.lng + dx / 2);\n            const p = NeuronInterfacePoint.from_leaflet(event.latlng);\n\n            this.add_corner(p);\n        }\n    }\n\n    add_point_at_location() {\n        if(this.#polygon) {\n            const b = this.#polygon.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n            const p = new NeuronInterfacePoint(sw.lat + dy / 2, sw.lng + dx / 2);\n\n            this.add_corner(p);\n        }\n    }\n\n    update_polygon() {\n        if(this.#corners.length > 1) {\n            let corners = [];\n\n            for(const c of this.#corners) {\n                corners.push(c.getLatLng());\n            }\n\n            if(this.#polygon) {\n                //Update the existing polygon\n                // console.log(this.#polygon);\n                this.#polygon.setLatLngs(corners);\n            } else{\n                //Create a new polygon\n                this.#polygon = L.polygon(corners, {color: 'red'});\n                this.#polygon.on(\"click\", this.#add_point_at_mouseevent.bind(this));\n                this._add_layer_to_map(this.#polygon);\n            }\n        } else {\n            this.remove_feature();\n        }\n\n        if(this.#on_change_internal)\n            this.#on_change_internal();\n        this._trigger_on_changed();\n\n        this.#try_update_dom();\n    }\n\n    #try_update_dom() {\n        if(this.#dom_corner_count)\n            this.#dom_corner_count.value = this.#corners.length.toFixed(0);\n\n        const points = this.get_corners_as_points();\n        let utm_points:UTMPos[] = [];\n        if(points.length > 2) {\n            const u1 = points[0].to_UTM();\n            utm_points = points.map(x => x.to_UTM(u1.zone));\n        }\n\n        if(this.#dom_perimeter) {\n            let perimeter = \"---\";\n            let length = 0;\n            if(utm_points.length > 1) {\n                for(let i = 0; i < utm_points.length; i++) {\n                    const p1 = utm_points[i];\n                    const p2 = i < (utm_points.length - 1) ? utm_points[i+1] : utm_points[0];\n                    length += p1.GetDistance2D(p2);\n                }\n\n                perimeter = (length * NeuronFeaturePolygon._distance_ratio).toFixed(3);\n            }\n\n            this.#dom_perimeter.value = perimeter;\n        }\n\n        if(this.#dom_area) {\n            let area = \"---\";\n            if(utm_points.length > 2) {\n                const u1 = points[0].to_UTM();\n                const utm_points = points.map(x => x.to_UTM(u1.zone));\n                const area_m = UTMPos.AreaOfPolygon(utm_points)\n                area = (area_m * NeuronFeaturePolygon._area_ratio).toFixed(3);\n            }\n            this.#dom_area.value = area;\n        }\n    }\n\n    #convert_to_survey() {\n        if(this.#planner) {\n            this.#planner.replace_polygon_with_survey(this);\n        } else {\n            console.warn(\"Planner not set, cannot convert polygon feature!\");\n        }\n    }\n\n    #export_as_kml() {\n        kml_download_from_neuron_data([], [], [this.get_corners_as_points()]);\n    }\n\n    #export_as_kmz() {\n        kmz_download_from_neuron_data([], [], [this.get_corners_as_points()]);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePolygon.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        for(const c of this.#corners) {\n            this._remove_layer_from_map(c);\n        }\n        this.#corners = [];\n\n        if(this.#polygon) {\n            this._remove_layer_from_map(this.#polygon);\n            this.#polygon = null;\n        }\n\n        super.remove_feature();\n    }\n\n    //override get_path_coords() {} //XXX: No paths provided by this feature, use base return\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Polygon\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            //Output items\n            const t4 = \"Number of corners that define this polygon's boundaries\";\n            this.#dom_corner_count = this._create_dom_output();\n            this.#dom_corner_count.title = t4;\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t4));\n            c.appendChild(this.#dom_corner_count);\n\n            const t41 = \"Perimeter of this polygon as defined by it's boundaries in kilometers\";\n            this.#dom_perimeter = this._create_dom_output();\n            this.#dom_perimeter.title = t41;\n            c.appendChild(this._create_dom_label(\"Perimeter:\", this.#dom_perimeter, t41));\n            c.appendChild(this.#dom_perimeter);\n\n            const t42 = \"Area of this polygon as defined by it's boundaries in square kilometers\";\n            this.#dom_area = this._create_dom_output();\n            this.#dom_area.title = t42;\n            c.appendChild(this._create_dom_label(\"Area:\", this.#dom_area, t42));\n            c.appendChild(this.#dom_area);\n\n            this.#try_update_dom();\n\n            //Input Items\n            const t21 = \"Show the corners of the polygon\";\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\n            this.#dom_show_corners.title = t21;\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t21));\n            c.appendChild(this.#dom_show_corners);\n\n            const t22 = \"Text label for identification of the polygon\";\n            this.#dom_label = this._create_dom_input_textbox(this.#label, this.#update_label_from_dom.bind(this));\n            this.#dom_label.title = t22;\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t22));\n            c.appendChild(this.#dom_label);\n\n            const t0 = \"Convert this polygon to a survey feature\";\n            this.#dom_convert_survey = this._create_dom_input_button(\"Survey\", this.#convert_to_survey.bind(this));\n            this.#dom_convert_survey.title = t0;\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_survey, t0));\n            c.appendChild(this.#dom_convert_survey);\n\n            const t1 = \"Export this polygon to a drawing document\";\n            const t11 = \"Export this polygon to a KML document\";\n            const t12 = \"Export this polygon to a KMZ document\";\n            this.#dom_export_kml = this._create_dom_input_button(\"KML\", this.#export_as_kml.bind(this));\n            this.#dom_export_kml.title = t11;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kml, t1));\n            c.appendChild(this.#dom_export_kml);\n\n            this.#dom_export_kmz = this._create_dom_input_button(\"KMZ\", this.#export_as_kmz.bind(this));\n            this.#dom_export_kmz.title = t12;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kmz, t1, true));\n            c.appendChild(this.#dom_export_kmz);\n\n            // c.appendChild(this._create_dom_labelled_input(\"\", this.#dom_export_shape.bind(this)));\n\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    #update_show_corners_from_dom() {\n        this.update_show_corners(this.#dom_show_corners.checked);\n    }\n\n    #update_label_from_dom() {\n        this.set_label(this.#dom_label.value, false);\n    }\n\n    get_label() {\n        return this.#label;\n    }\n\n    set_label(label:string, update_dom:boolean = true) {\n        this.#label = label;\n        if(this.#dom_label && update_dom)\n            this.#dom_label.value = label;\n\n        for(let m of this.#corners)\n            this.#generate_popup(m);\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePolygonData {\n        let is_valid =\n            (object.type == NeuronFeaturePolygon.TYPE) &&\n            (object.version == NeuronFeaturePolygon.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeaturePolygonData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeaturePolygon.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePolygon`);\n\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\n        let p = new NeuronFeaturePolygon(map, corners);\n        p.set_label(j.label.toString());\n        return p;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePolygonData>{\n            version: NeuronFeaturePolygon.VERSION,\n            type: NeuronFeaturePolygon.TYPE,\n            corners: this.get_corners_as_points().map(x => x.to_json()),\n            label: this.#label,\n        }\n    }\n}\n","import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { CreateGrid, GridPointTags, StartPosition } from \"./neuron_tools_survey\"\nimport { L, create_popup_context_dom, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { UTMPos } from \"./interface_proj4\";\n\n//TODO: Document\nexport interface NeuronFeatureSurveyData {\n    version:string,\n    type:string,\n    corners:NeuronInterfacePointData[],\n    altitude:number,\n    distance:number,\n    spacing:number,\n    angle:number,\n    overshoot1:number,\n    overshoot2:number,\n    startpos:number,\n    minLaneSeparation:number,\n    leadin:number,\n    sidelap:number,\n    overlap:number,\n    ground_resolution:number,\n    label:string\n}\n\n//TODO: Document\nexport interface NeuronFeatureSurveyLane {\n    start:NeuronInterfacePoint,\n    end:NeuronInterfacePoint\n}\n\n//TODO: Document\nexport class NeuronFeatureSurvey extends NeuronFeaturePolygon {\n    static override NAME = \"Survey\";\n    static override TYPE = \"NeuronFeatureSurvey\";\n    static override VERSION = '70bb75e0-d5a0-11ec-aaa0-9f86362bde1a';\n    static override HELP_KEY = 'survey';\n    static override IS_FLYABLE = true;\n\n    #waypoints:NeuronInterfacePoint[];\n    #mappoints:L.Marker[];\n    #photos:NeuronInterfacePoint[];\n    #photopoints:L.Marker[];\n    #photobounds:L.Rectangle;\n\n    #altitude:number;\n    #distance:number;\n    #spacing:number;\n    #angle:number;\n    #overshoot1:number;\n    #overshoot2:number;\n    #startpos:StartPosition;\n    #minLaneSeparation:number;\n    #leadin:number;\n\n    #sidelap:number;\n    #overlap:number;\n    #ground_resolution:number;\n\n    #show_waypoints:boolean;\n    #show_photos:boolean;\n\n    #dom:HTMLDivElement;\n    #dom_corner_count:HTMLOutputElement;\n    #dom_waypoint_count:HTMLOutputElement;\n    #dom_segment_duration:HTMLOutputElement;\n    #dom_photo_count:HTMLOutputElement;\n    //Display parameters\n    #dom_show_photos:HTMLInputElement;\n    #dom_show_waypoints:HTMLInputElement;\n    #dom_show_corners:HTMLInputElement;\n    //Survey parameters\n    #dom_altitude:HTMLInputElement;\n    #dom_distance:HTMLInputElement;\n    #dom_spacing:HTMLInputElement;\n    #dom_angle:HTMLInputElement;\n    #dom_angle_slider:HTMLInputElement;\n    #dom_overshoot1:HTMLInputElement;\n    #dom_overshoot2:HTMLInputElement;\n    #dom_startpos:HTMLSelectElement;\n    #dom_minLaneSeparation:HTMLInputElement;\n    #dom_leadin:HTMLInputElement;\n    //Capture parameters\n    #dom_sidelap:HTMLInputElement;\n    #dom_overlap:HTMLInputElement;\n    #dom_ground_resolution:HTMLInputElement;\n    #dom_current_camera:HTMLButtonElement;\n\n    #update_timer:NodeJS.Timeout;\n    #update_interval:number;\n    #unsub_option_cb:()=>void;\n\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\n    static _xlap_ratio = 0.01;   //Sidelap = [DOM Value] * Ratio\n\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], show_waypoints=false) {\n        super(map, corners);\n        this.#update_timer = null;\n        this.#update_interval = 50; //ms\n\n        this.#waypoints = [];\n        this.#photos = [];\n        this.#photopoints = [];\n        this.#mappoints = [];\n        this.#photobounds = null;\n\n        this.#dom = null;\n        this.#dom_corner_count = null;\n        this.#dom_waypoint_count = null;\n        this.#dom_segment_duration = null;\n        this.#dom_photo_count = null;\n\n        this.#dom_show_corners = null;\n        this.#dom_show_waypoints = null;\n        this.#dom_show_photos = null;\n        this.#dom_altitude = null;\n        this.#dom_distance = null;\n        this.#dom_spacing = null;\n        this.#dom_angle = null;\n        this.#dom_angle_slider = null;\n        this.#dom_overshoot1 = null;\n        this.#dom_overshoot2 = null;\n        this.#dom_startpos = null;\n        this.#dom_minLaneSeparation = null;\n        this.#dom_leadin = null;\n\n        this.#dom_sidelap = null;\n        this.#dom_overlap = null;\n        this.#dom_ground_resolution = null;\n        this.#dom_current_camera = null;\n\n        this.#show_waypoints = show_waypoints;\n        this.#show_photos = false;\n        this.#altitude = 100;\n        this.#distance = 50;\n        this.#spacing = 0;\n        this.#angle = 0.0;\n        this.#overshoot1 = 0.0;\n        this.#overshoot2 = 0.0;\n        this.#startpos = StartPosition.TopLeft;\n        this.#minLaneSeparation = 0;\n        this.#leadin = 0.0;\n\n        this.#sidelap = 0.7;\n        this.#overlap = 0.7;\n        this.#ground_resolution = 0.0;\n\n        this._set_on_change_internal(this.update_survey.bind(this));\n        this.#_update_survey(false);\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    override show_on_plan() {\n        if(this.#dom) {\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    #options_changed() {\n        //Update our variables, and then the survey if there was a change\n        if(this.#calculate_and_update_capture_variables())\n            this.update_survey();\n    }\n\n    #add_waypoint(point:NeuronInterfacePoint, name:string = \"Survey Waypoint\") {\n        if(this.#show_waypoints) {\n            let m = L.marker([point.latitude, point.longitude], {\n                // draggable: true,\n                autoPan: true,\n            })\n\n            // const menu_items = [\n            //     new LeafletContextMenuItem(\"Move forward\", \"fa-arrow-left\", this.move_corner_forwards.bind(this)),\n            //     new LeafletContextMenuItem(\"Move backward\", \"fa-arrow-right\", this.move_corner_backwards.bind(this)),\n            //     null,\n            //     new LeafletContextMenuItem(\"Remove\", \"fa-trash\", this.remove_point_by_corner.bind(this)),\n            // ]\n            m.bindPopup(create_popup_context_dom(name, [], m));\n\n            // m.on(\"drag\", this.update_polygon.bind(this));\n            // m.on(\"click\", this.#select_corner_by_event.bind(this));\n            // m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n            this._add_layer_to_map(m);\n            this.#mappoints.push(m);\n        }\n\n        this.#waypoints.push(point);\n    }\n\n    #show_photo_bounds(point:NeuronInterfacePoint) {\n        this.#clean_photobounds();\n\n        const projection = NeuronOptions.get_camera().get_projected_size(point.altitude);\n        if(projection) {\n            const uc = point.to_UTM();\n            const x_step = projection.Width()/2;\n            const y_step = projection.Height()/2;\n            const utl = new UTMPos(uc.x - x_step, uc.y + y_step, uc.zone);\n            const ubr = new UTMPos(uc.x + x_step, uc.y - y_step, uc.zone);\n            const ptl = utl.to_NeuronInterfacePoint();\n            const pbr = ubr.to_NeuronInterfacePoint();\n            this.#photobounds = new L.Rectangle([[ptl.latitude, ptl.longitude], [pbr.latitude, pbr.longitude]],\n                {\n                    color: '#20AA20',\n                    fillColor: '#20AA20'\n                });\n            this._add_layer_to_map(this.#photobounds);\n        }\n    }\n\n    #add_photo(point:NeuronInterfacePoint, name:string = \"Survey Photo\") {\n        if(this.#show_photos) {\n            let m = L.marker([point.latitude, point.longitude], {\n                // draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-photo')\n            })\n\n            // const menu_items = [\n            //     new LeafletContextMenuItem(\"Move forward\", \"fa-arrow-left\", this.move_corner_forwards.bind(this)),\n            //     new LeafletContextMenuItem(\"Move backward\", \"fa-arrow-right\", this.move_corner_backwards.bind(this)),\n            //     null,\n            //     new LeafletContextMenuItem(\"Remove\", \"fa-trash\", this.remove_point_by_corner.bind(this)),\n            // ]\n            m.bindPopup(create_popup_context_dom(name, [], m));\n\n            // m.on(\"drag\", this.update_polygon.bind(this));\n            m.on(\"popupopen\", this.#show_photo_bounds.bind(this, point));\n            m.on(\"popupclose\", this.#clean_photobounds.bind(this));\n            // m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n            this._add_layer_to_map(m);\n            this.#photopoints.push(m);\n        }\n\n        this.#photos.push(point);\n    }\n\n    update_show_waypoints(show_waypoints:boolean) {\n        this.#show_waypoints = show_waypoints;\n        this.update_survey();\n    }\n\n    update_show_photos(show_photos:boolean) {\n        this.#show_photos = show_photos;\n        this.update_survey();\n    }\n\n    set_altitude(altitude:number) {\n        this.#set_altitude(altitude, true);\n    }\n\n    #set_altitude(altitude:number, update_calcs:boolean=true) {\n        this.#altitude = altitude;\n\n        if(update_calcs) {\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#altitude);\n            if(resolution) {\n                if(this.#dom_ground_resolution)\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureSurvey._gsd_ratio).toString();\n\n                this.#set_ground_resolution(resolution, false);\n            }\n        }\n\n        this.update_survey();\n    }\n\n    set_distance(distance:number) {\n        this.#set_distance(distance);\n    }\n\n    #set_distance(distance:number, update_calcs:boolean=true) {\n        this.#distance = distance;\n\n        if(update_calcs) {\n            let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\n            if(projection && (distance >= 0)) {\n                const sidelap_factor = distance/projection.Width();\n                const sidelap = Math.max(Math.min(1 - sidelap_factor, 1.0), 0.0);\n\n                if(this.#dom_ground_resolution)\n                    this.#dom_sidelap.value = (sidelap / NeuronFeatureSurvey._xlap_ratio).toString();\n\n                this.#set_sidelap(sidelap, false);\n            }\n        }\n\n        this.update_survey();\n    }\n\n    set_spacing(spacing:number) {\n        this.#spacing = spacing;\n        this.update_survey();\n    }\n\n    set_angle(angle:number) {\n        this.#angle = angle;\n        this.update_survey();\n    }\n\n    set_overshoot1(overshoot1:number) {\n        this.#overshoot1 = overshoot1;\n        this.update_survey();\n    }\n\n    set_overshoot2(overshoot2:number) {\n        this.#overshoot2 = overshoot2;\n        this.update_survey();\n    }\n\n    set_startpos(startpos:StartPosition) {\n        this.#startpos = startpos;\n        this.update_survey();\n    }\n\n    set_minLaneSeparation(minLaneSeparation:number) {\n        this.#minLaneSeparation = minLaneSeparation;\n        this.update_survey();\n    }\n\n    set_leadin(leadin:number) {\n        this.#leadin = leadin;\n        this.update_survey();\n    }\n\n    get_show_waypoints() {\n        return this.#show_waypoints;\n    }\n\n    get_show_photos() {\n        return this.#show_photos;\n    }\n\n    get_altitude() {\n        return this.#altitude;\n    }\n\n    get_distance() {\n        return this.#distance;\n    }\n\n    get_spacing() {\n        return this.#spacing;\n    }\n\n    get_angle() {\n        return this.#angle;\n    }\n\n    get_overshoot1() {\n        return this.#overshoot1;\n    }\n\n    get_overshoot2() {\n        return this.#overshoot2;\n    }\n\n    get_startpos() {\n        return this.#startpos;\n    }\n\n    get_minLaneSeparation() {\n        return this.#minLaneSeparation;\n    }\n\n    get_leadin() {\n        return this.#leadin;\n    }\n\n    update_survey() {\n        //Clear any queued updates\n        this.#clear_update_timer();\n\n        //Force clear the survey survey immediately for display\n        this.#clean_waypoints();\n        this.#clean_photopoints();\n        this.#clean_photobounds();\n\n        //Update survey with slight delay for processing\n        this.#update_timer = setTimeout(this.#_update_survey.bind(this, true), this.#update_interval);\n    }\n\n    #clear_update_timer() {\n        if(this.#update_timer) {\n            clearTimeout(this.#update_timer);\n            this.#update_timer = null;\n        }\n    }\n\n    #_update_survey(fire_on_change:boolean = true) {\n        this.#clean_waypoints();\n        this.#clean_photopoints();\n        this.#clean_photobounds();\n\n        const corners = this.get_corners_as_points();\n        const waypoints = (corners.length <= 2) ?\n            //There's only a line, so go end-to-end\n            corners :\n            //There is an actual polygon, so do a survey grid\n            CreateGrid(\n                this.get_corners_as_points(),\n                this.#altitude,\n                this.#distance,\n                this.#spacing,\n                this.#angle,\n                this.#overshoot1,\n                this.#overshoot2,\n                this.#startpos,\n                this.#minLaneSeparation,\n                this.#leadin\n            );\n\n        for(let i = 0; i < waypoints.length; i++)\n            this.#add_waypoint(waypoints[i], `Survey Waypoint (#${i})`);\n\n        this.#try_update_dom_stats();\n\n        if(fire_on_change)\n            this._trigger_on_changed();\n    }\n\n    #clean_waypoints() {\n        for(const m of this.#mappoints) {\n            this._remove_layer_from_map(m);\n        }\n        this.#mappoints = [];\n        this.#waypoints = [];\n    }\n\n    #clean_photopoints() {\n        for(const m of this.#photopoints) {\n            this._remove_layer_from_map(m);\n        }\n\n        this.#photopoints = [];\n        this.#photos = [];\n    }\n\n    #clean_photobounds() {\n        if(this.#photobounds)\n            this._remove_layer_from_map(this.#photobounds);\n\n        this.#photobounds = null;\n    }\n\n    #try_update_dom_stats() {\n        this.#clean_photopoints();\n        this.#clean_photobounds();\n        const coords = this.get_path_coords();\n\n        if(this.#dom_corner_count)\n            this.#dom_corner_count.value = this.get_corners().length.toFixed(0);\n\n        if(this.#dom_waypoint_count)\n            this.#dom_waypoint_count.value = coords.length.toFixed(0);\n\n\n        if(this.#dom_segment_duration) {\n\n            const distance = flight_distance_from_coords(coords);\n            const duration = distance / NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n            this.#dom_segment_duration.value = flight_time_from_duration(duration);\n        }\n\n        let photo_count = 0;\n\n        if(this.#show_photos) {\n            const photos = this.get_image_locations();\n            for(let i = 0; i < photos.length; i++)\n                this.#add_photo(photos[i], `Survey Photo (#${i})`);\n\n            photo_count = photos.length;\n        } else {\n            //Use shorthand calc if we don't need to get the full listing\n            photo_count = this.get_image_count();\n        }\n\n        if(this.#dom_photo_count) {\n            this.#dom_photo_count.value = photo_count > 0 ? photo_count.toString() : \"---\";\n        }\n    }\n\n    get_image_locations() {\n        let photos:NeuronInterfacePoint[] = [];\n        const alt = this.#altitude;\n        let projection = NeuronOptions.get_camera().get_projected_size(alt);\n\n        if(projection && (this.#overlap >= 0) && (this.#overlap <= 1)) {\n            const overlap_factor = 1 - this.#overlap;\n            const photo_distance = Math.abs(projection.Height())*overlap_factor;\n\n            for(const lane of this.get_lane_coords()) {\n                const ps = lane.start.to_UTM();\n                const pe = lane.end.to_UTM(ps.zone);\n\n                const lane_distance = ps.GetDistance2D(pe);\n                const lane_angle = ps.GetAngle(pe);\n                const steps = Math.ceil(lane_distance / photo_distance);\n\n                let p_last = ps;\n                for(let i = 0; i<steps; i++) {\n                    let point = p_last.to_NeuronInterfacePoint();\n                    point.altitude = alt;\n                    photos.push(point);\n                    p_last = p_last.relative_point_from_dist_angle(lane_angle, photo_distance);\n                }\n            }\n        }\n\n        return photos;\n    }\n\n    get_image_count() {\n        let count = null;\n        let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\n\n        if(projection && (this.#overlap >= 0) && (this.#overlap <= 1)) {\n            let photo_count = 0;\n\n            const overlap_factor = 1 - this.#overlap;\n            const photo_distance = Math.abs(projection.Height())*overlap_factor;\n\n            for(const lane of this.get_lane_coords()) {\n                const ps = lane.start.to_UTM();\n                const pe = lane.end.to_UTM(ps.zone);\n\n                const lane_distance = ps.GetDistance2D(pe);\n                photo_count += Math.ceil(lane_distance / photo_distance);\n            }\n\n            count = photo_count;\n        }\n\n        return count;\n    }\n\n    #update_show_corners_from_dom() {\n        this.update_show_corners(this.#dom_show_corners.checked);\n    }\n\n    #update_show_waypoints_from_dom() {\n        this.update_show_waypoints(this.#dom_show_waypoints.checked);\n    }\n\n    #update_show_photos_from_dom() {\n        this.update_show_photos(this.#dom_show_photos.checked);\n    }\n\n    #update_altitude_from_dom() {\n        this.set_altitude(this.#dom_altitude.valueAsNumber * NeuronFeatureSurvey._altitude_ratio);\n    }\n\n    #update_distance_from_dom() {\n        this.set_distance(this.#dom_distance.valueAsNumber);\n    }\n\n    #update_spacing_from_dom() {\n        this.set_spacing(this.#dom_spacing.valueAsNumber);\n    }\n\n    #update_angle_from_dom() {\n        const val = this.#dom_angle.valueAsNumber;\n        this.#dom_angle_slider.value = val.toString();\n        this.set_angle(this.#dom_angle.valueAsNumber);\n    }\n\n    #update_angle_slider_from_dom() {\n        const val = this.#dom_angle_slider.valueAsNumber;\n        this.#dom_angle.value = val.toString();\n        this.set_angle(val);\n    }\n\n    #update_overshoot1_from_dom() {\n        this.set_overshoot1(this.#dom_overshoot1.valueAsNumber);\n    }\n\n    #update_overshoot2_from_dom() {\n        this.set_overshoot2(this.#dom_overshoot2.valueAsNumber);\n    }\n\n    #update_startpos_from_dom() {\n        const v = Number.parseInt(this.#dom_startpos.value);\n        const values = Object.values(StartPosition);\n        if (!values.includes(v))\n            throw new Error(`Selected value (${v}) is not a StartingPosition`);\n\n        this.set_startpos(v);\n    }\n\n    #update_minLaneSeparation_from_dom() {\n        this.set_minLaneSeparation(this.#dom_minLaneSeparation.valueAsNumber);\n    }\n\n    #update_leadin_from_dom() {\n        this.set_leadin(this.#dom_leadin.valueAsNumber);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureSurvey.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        this.#clean_waypoints();\n        this.#clean_photopoints();\n        this.#clean_photobounds();\n\n        super.remove_feature();\n    }\n\n    override is_flyable() {\n        return NeuronFeatureSurvey.IS_FLYABLE;\n    }\n\n    override get_path_coords() {\n        const corners = this.get_corners_as_points();\n        return this.#waypoints.length ? this.#waypoints : (corners.length ? [corners[0]] : []);\n    }\n\n    get_lane_coords() {\n        const coords = this.get_path_coords();\n        let lanes:NeuronFeatureSurveyLane[] = [];\n        let start:NeuronInterfacePoint = null;\n\n        for(let i = 0; i < coords.length; i++) {\n            const p = coords[i];\n            if((!start && p.tag == GridPointTags.START) || (start && p.tag == GridPointTags.MIDDLE_START)) {\n                //If we found a new start, or we are adjusting to a new middle start\n                start = p;\n            } else if (start && ((p.tag == GridPointTags.MIDDLE_END) || (p.tag == GridPointTags.END))) {\n                //If we have a valid start and we have found a valid end\n                //Add our finished lane\n                lanes.push({\n                    start: start,\n                    end: p\n                })\n                //And reset\n                start = null;\n            }\n        }\n\n        if(start)\n            console.warn(\"Unable to determine all lanes correctly!\");\n\n        return lanes;\n    }\n\n    override get_corners_as_points() {\n        let points = super.get_corners_as_points();\n        for(let p of points) {\n            p.altitude = this.get_altitude();\n        }\n        return points;\n    }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Survey\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            //Output fields\n            const t00 = \"Number of corners that define this survey's boundaries\";\n            this.#dom_corner_count = this._create_dom_output();\n            this.#dom_corner_count.title = t00;\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t00));\n            c.appendChild(this.#dom_corner_count);\n\n            const t01 = \"Number of waypoints that have been calculated to perform this survey\";\n            this.#dom_waypoint_count = this._create_dom_output();\n            this.#dom_waypoint_count.title = t01;\n            c.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_waypoint_count, t01));\n            c.appendChild(this.#dom_waypoint_count);\n\n            const t03 = \"Estimated flight time of the survey feature\";\n            this.#dom_segment_duration = this._create_dom_output();\n            this.#dom_segment_duration.title = t03;\n            c.appendChild(this._create_dom_label(\"Duration:\", this.#dom_segment_duration, t03));\n            c.appendChild(this.#dom_segment_duration);\n\n            const t02 = \"Number of images that will be captured by the camera on the aircraft to perform this survey\";\n            this.#dom_photo_count = this._create_dom_output();\n            this.#dom_photo_count.title = t02;\n            c.appendChild(this._create_dom_label(\"Images:\", this.#dom_photo_count, t02));\n            c.appendChild(this.#dom_photo_count);\n\n            //Input fields\n            const t2 = \"Show the corners of the polygon that defines the survey area\";\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\n            this.#dom_show_corners.title = t2;\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t2));\n            c.appendChild(this.#dom_show_corners);\n\n            const t21 = \"Show the waypoints that have been calculated at the end of each lane to perform this survey\";\n            this.#dom_show_waypoints = this._create_dom_input_checkbox(this.#show_waypoints, this.#update_show_waypoints_from_dom.bind(this));\n            this.#dom_show_waypoints.title = t21;\n            c.appendChild(this._create_dom_label(\"Show ends:\", this.#dom_show_waypoints, t2));\n            c.appendChild(this.#dom_show_waypoints);\n\n            const t22 = \"Show the locations of the photos that will be taken throughout this survey\";\n            this.#dom_show_photos = this._create_dom_input_checkbox(this.#show_photos, this.#update_show_photos_from_dom.bind(this));\n            this.#dom_show_photos.title = t22;\n            c.appendChild(this._create_dom_label(\"Show photos:\", this.#dom_show_photos, t2));\n            c.appendChild(this.#dom_show_photos);\n\n\n            //=====================================\n            //Capture calculations\n            //=====================================\n            const tb2 = \"Image capture configuration and calculations for survey parameters.\";\n            let dom_break2 = this._create_dom_output();\n            dom_break2.title = tb2;\n            let dom_break_label2 = this._create_dom_label(\"Capture Config.\", dom_break2, tb2)\n            dom_break_label2.classList.add('mission-feature-content-subtitle');\n            c.appendChild(dom_break_label2);\n            c.appendChild(dom_break2);\n\n            const t20 = \"Camera for the mission as configured in the mission options\";\n            this.#dom_current_camera = this._create_dom_input_button(NeuronOptions.camera_preset_custom.name, window.neuron_set_panel_view.bind(null, InterfaceSummaryTabName.OPTIONS));\n            this.#dom_current_camera.title = t20;\n            c.appendChild(this._create_dom_label(\"Camera:\", this.#dom_current_camera, t20));\n            c.appendChild(this.#dom_current_camera);\n\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureSurvey._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\n            this.#dom_ground_resolution.title = t18;\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\n            c.appendChild(this.#dom_ground_resolution);\n\n            const t17 = \"Image vertical overlap between lanes as a percentage\";\n            this.#dom_overlap = this._create_dom_input_number(this.#overlap / NeuronFeatureSurvey._xlap_ratio, this.#update_overlap_from_dom.bind(this), 0, 100);\n            this.#dom_overlap.title = t17;\n            c.appendChild(this._create_dom_label(\"Overlap:\", this.#dom_overlap, t17));\n            c.appendChild(this.#dom_overlap);\n\n            const t19 = \"Image horizontal overlap between lanes as a percentage\";\n            this.#dom_sidelap = this._create_dom_input_number(this.#sidelap / NeuronFeatureSurvey._xlap_ratio, this.#update_sidelap_from_dom.bind(this), 0, 100);\n            this.#dom_sidelap.title = t19;\n            c.appendChild(this._create_dom_label(\"Sidelap:\", this.#dom_sidelap, t19));\n            c.appendChild(this.#dom_sidelap);\n\n            //=====================================\n            //Flight calculations\n            //=====================================\n            const tb1 = \"Flight path parameter configuration and calculations for the survey.\";\n            let dom_break1 = this._create_dom_output();\n            dom_break1.title = tb1;\n            let dom_break_label1 = this._create_dom_label(\"Path Config.\", dom_break1, tb1)\n            dom_break_label1.classList.add('mission-feature-content-subtitle');\n            c.appendChild(dom_break_label1);\n            c.appendChild(dom_break1);\n\n\n            const t3 = \"Altitude for the survey in feet relative to take-off location ground level\";\n            this.#dom_altitude = this._create_dom_input_number(this.#altitude / NeuronFeatureSurvey._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_altitude.title = t3;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_altitude, t3));\n            c.appendChild(this.#dom_altitude);\n\n            const t4 = \"Spacing between the individual lanes of the survey pattern in meters\";\n            this.#dom_distance = this._create_dom_input_number(this.#distance, this.#update_distance_from_dom.bind(this), 0.5);\n            this.#dom_distance.title = t4;\n            c.appendChild(this._create_dom_label(\"Spacing:\", this.#dom_distance, t4));\n            c.appendChild(this.#dom_distance);\n\n            const t5 = \"Entry location on the survey pattern relative to the most Northwestern point of the survey\";\n            this.#dom_startpos = this._create_dom_input_select(\n                [\n                    StartPosition.TopLeft,\n                    StartPosition.TopRight,\n                    StartPosition.BottomLeft,\n                    StartPosition.BottomRight\n                ].map(x => x.toString()),\n                [\n                    \"Top left\",\n                    \"Top right\",\n                    \"Bottom left\",\n                    \"Bottom right\"\n                ],\n                this.#update_startpos_from_dom.bind(this),\n                this.#startpos.toString());\n            this.#dom_startpos.title = t5;\n            c.appendChild(this._create_dom_label(\"Entry:\", this.#dom_startpos, t5));\n            c.appendChild(this.#dom_startpos);\n\n            // this.#dom_spacing = this._create_dom_input_number(this.#spacing, this.#update_spacing_from_dom.bind(this), 0);\n            // c.appendChild(this._create_dom_labelled_input(\"Spacing:\", this.#dom_spacing));\n\n            const t6 = \"Angle of the survey pattern in degrees relative to North\";\n            this.#dom_angle = this._create_dom_input_number(this.#angle, this.#update_angle_from_dom.bind(this), -180, 180);\n            this.#dom_angle.title = t6;\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle, t6));\n            c.appendChild(this.#dom_angle);\n\n            //XXX: Same title as dom_angle\n            this.#dom_angle_slider = this._create_dom_input_range(this.#angle, this.#update_angle_slider_from_dom.bind(this), -180, 180, 5);\n            this.#dom_angle_slider.title = t6;\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle_slider, t6, true));\n            c.appendChild(this.#dom_angle_slider);\n\n            const t7 = \"Lane start waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary\";\n            this.#dom_leadin = this._create_dom_input_number(this.#leadin, this.#update_leadin_from_dom.bind(this), 0);\n            this.#dom_leadin.title = t7;\n            c.appendChild(this._create_dom_label(\"Lead-in:\", this.#dom_leadin, t7));\n            c.appendChild(this.#dom_leadin);\n\n            const t9 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for odd-numbered lanes\";\n            this.#dom_overshoot2 = this._create_dom_input_number(this.#overshoot2, this.#update_overshoot2_from_dom.bind(this));\n            this.#dom_overshoot2.title = t9;\n            c.appendChild(this._create_dom_label(\"Run-out A:\", this.#dom_overshoot2, t9));\n            c.appendChild(this.#dom_overshoot2);\n\n            const t8 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for even-numbered lanes\";\n            this.#dom_overshoot1 = this._create_dom_input_number(this.#overshoot1, this.#update_overshoot1_from_dom.bind(this));\n            this.#dom_overshoot1.title = t8;\n            c.appendChild(this._create_dom_label(\"Run-out B:\", this.#dom_overshoot1, t8));\n            c.appendChild(this.#dom_overshoot1);\n\n            const t10 = \"Number of lanes to skip between each run across the survey area\";\n            this.#dom_minLaneSeparation = this._create_dom_input_number(this.#minLaneSeparation, this.#update_minLaneSeparation_from_dom.bind(this), 0);\n            this.#dom_minLaneSeparation.title = t10;\n            c.appendChild(this._create_dom_label(\"Lane Skip:\", this.#dom_minLaneSeparation, t10));\n            c.appendChild(this.#dom_minLaneSeparation);\n\n            //Try go back now and calculate other values if relevant\n            this.#calculate_and_update_capture_variables();\n            this.#try_update_dom_stats();\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    get_sidelap() {\n        return this.#sidelap;\n    };\n\n    get_overlap() {\n        return this.#overlap;\n    }\n\n    get_ground_resolution() {\n        return this.#ground_resolution;\n    };\n\n    set_sidelap(sidelap:number) {\n        this.#set_sidelap(sidelap);\n    }\n\n    #set_sidelap(sidelap:number, update_calcs:boolean = true) {\n        this.#sidelap = sidelap;\n        if(update_calcs)\n            this.#calculate_and_update_capture_variables();\n    };\n\n    set_overlap(overlap:number) {\n        this.#overlap = overlap;\n        this.#try_update_dom_stats();\n    }\n\n    set_ground_resolution(ground_resolution:number) {\n        this.#set_ground_resolution(ground_resolution);\n    }\n\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true) {\n        this.#ground_resolution = ground_resolution;\n\n        if(update_calcs)\n            this.#calculate_and_update_capture_variables();\n    };\n\n    #update_sidelap_from_dom() {\n        this.set_sidelap(this.#dom_sidelap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\n    }\n\n    #update_overlap_from_dom() {\n        this.set_overlap(this.#dom_overlap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\n    }\n\n    #update_ground_resolution_from_dom() {\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureSurvey._gsd_ratio)\n    }\n\n    #calculate_and_update_capture_variables() {\n        let settings_changed = false;\n        const camera = NeuronOptions.get_camera();\n\n        if(this.#dom_current_camera) {\n            this.#dom_current_camera.innerText = '';\n            this.#dom_current_camera.appendChild(document.createTextNode(camera.name));\n        }\n\n        let altitude = camera.get_distance(this.get_ground_resolution());\n\n        if(altitude && altitude != this.get_altitude()) {\n            settings_changed = true;\n\n            if(this.#dom_altitude)\n                this.#dom_altitude.value = (altitude / NeuronFeatureSurvey._altitude_ratio).toString();\n            this.#set_altitude(altitude, false);\n        }\n\n        let projection = camera.get_projected_size(this.#altitude);\n\n        if(projection && (this.#sidelap >= 0) && (this.#sidelap <= 1)) {\n            const sidelap_factor = 1 - this.#sidelap;\n            const distance = projection.Width()*sidelap_factor;\n\n            if(distance != this.get_distance()) {\n                settings_changed = true;\n\n                if(this.#dom_distance)\n                this.#dom_distance.value = Math.max(Number.parseFloat(this.#dom_distance.min), distance).toString();\n\n                this.#set_distance(distance, false);\n            }\n        }\n\n        return settings_changed;\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeatureSurveyData {\n        let is_valid =\n            (object.type == NeuronFeatureSurvey.TYPE) &&\n            (object.version == NeuronFeatureSurvey.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeatureSurveyData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureSurvey.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeatureSurvey`);\n\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\n        let s = new NeuronFeatureSurvey(map, corners);\n\n        s.set_altitude(Number.isNaN(j.altitude) ? 0.0 : j.altitude);\n        s.set_distance(Number.isNaN(j.distance) ? 0.0 : j.distance);\n        s.set_spacing(Number.isNaN(j.spacing) ? 0.0 : j.spacing);\n        s.set_angle(Number.isNaN(j.angle) ? 0.0 : j.angle);\n        s.set_overshoot1(Number.isNaN(j.overshoot1) ? 0.0 : j.overshoot1);\n        s.set_overshoot2(Number.isNaN(j.overshoot2) ? 0.0 : j.overshoot2);\n        s.set_startpos(Number.isNaN(j.startpos) ? 0.0 : j.startpos);\n        s.set_minLaneSeparation(Number.isNaN(j.minLaneSeparation) ? 0.0 : j.minLaneSeparation);\n        s.set_leadin(Number.isNaN(j.leadin) ? 0.0 : j.leadin);\n        s.set_overlap(Number.isNaN(j.overlap) ? 0.0 : j.overlap);\n        s.#set_sidelap(Number.isNaN(j.sidelap) ? 0.0 : j.sidelap, false);\n        s.#set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution, false);\n\n        s.#calculate_and_update_capture_variables();\n\n        return s;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeatureSurveyData>{\n            version: NeuronFeatureSurvey.VERSION,\n            type: NeuronFeatureSurvey.TYPE,\n            corners: this.get_corners_as_points().map(x => x.to_json()),\n            altitude: this.get_altitude(),\n            distance: this.get_distance(),\n            spacing: this.get_spacing(),\n            angle: this.get_angle(),\n            overshoot1: this.get_overshoot1(),\n            overshoot2: this.get_overshoot2(),\n            startpos: this.get_startpos(),\n            minLaneSeparation: this.get_minLaneSeparation(),\n            leadin: this.get_leadin(),\n            overlap: this.get_overlap(),\n            sidelap: this.get_sidelap(),\n            ground_resolution: this.get_ground_resolution(),\n            label: this.get_label(),\n        }\n    }\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { InterfaceSummaryTabName, NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\n//TODO: Document\nexport interface NeuronFeaturePointData {\n    version:string,\n    type:string,\n    point:NeuronInterfacePointData\n}\n\n//TODO: Document\nexport class NeuronFeaturePoint extends NeuronFeatureBase {\n    static override NAME = \"Point\";\n    static override TYPE = \"NeuronFeaturePoint\";\n    static override VERSION = 'cd512a90-dd55-11ec-8a8a-23c90341eb99';\n    static override HELP_KEY = 'point';\n\n    #planner:NeuronPlanner;\n    #marker:L.Marker;\n    #point:NeuronInterfacePoint;\n    #dom:HTMLDivElement;\n    #dom_label:HTMLInputElement;\n    #dom_lat:HTMLInputElement;\n    #dom_lon:HTMLInputElement;\n    #dom_alt:HTMLInputElement;\n    #dom_convert_waypoint:HTMLButtonElement;\n\n    constructor(map:L.Map, point:NeuronInterfacePoint=null, planner:NeuronPlanner = null) {\n        super(map);\n\n        this.#marker = null;\n        this.#point = null;\n        this.#dom = null;\n        this.#dom_label = null;\n        this.#dom_lat = null;\n        this.#dom_lon = null;\n        this.#dom_alt = null;\n        this.#dom_convert_waypoint = null;\n\n        this.set_planner(planner);\n\n        if(point)\n            this.set_point(point);\n    }\n\n    get_point() {\n        return this.#point;\n    }\n\n    set_planner(planner:NeuronPlanner) {\n        this.#planner = planner;\n    }\n\n    remove_point_by_context(context:L.Marker) {\n        if(this.#marker == context) {\n            this.remove_feature();\n        } else {\n            console.warn(\"Call to remove unknown marker context\");\n        }\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_context(event.target);\n    }\n\n    #update_position_from_event(event:L.LeafletEvent) {\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\n        if (this.#point)\n            point.altitude = this.#point.altitude;\n        this.#internal_set_point(point);\n    }\n\n    #generate_popup(context:L.Marker) {\n        const menu_items = [\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\n        ]\n        context.bindPopup(create_popup_context_dom(this.#point && this.#point.tag ? this.#point.tag : \"Point\", menu_items, context));\n    }\n\n    set_point(point:NeuronInterfacePoint) {\n        if(!this.#marker) {\n            this.#marker = L.marker(point.to_leaflet(),{\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-poi')\n            })\n\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n\n            this._add_layer_to_map(this.#marker);\n        }\n\n        this.#internal_set_point(point);\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            window.neuron_set_panel_view(InterfaceSummaryTabName.PLAN);\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true) {\n        this.#point = point;\n\n        if(update_marker && this.#marker) {\n            this.#marker.setLatLng(point.to_leaflet());\n            this.#generate_popup(this.#marker);\n        }\n\n        if(update_dom) {\n            if(this.#dom_lat)\n                this.#dom_lat.value = point.latitude.toString();\n\n            if(this.#dom_lon)\n                this.#dom_lon.value = point.longitude.toString();\n        }\n\n        this._trigger_on_changed();\n    }\n\n    #update_latitude_from_dom() {\n        if(this.#point)\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_tag_from_dom() {\n        if(this.#point)\n            this.#point.tag = this.#dom_label.value;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_longitude_from_dom() {\n        if(this.#point)\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_altitude_from_dom() {\n        if(this.#point)\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePoint.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        if(this.#marker)\n            this._remove_layer_from_map(this.#marker);\n\n        super.remove_feature();\n    }\n\n    //XXX: No paths provided by this feature, use base return\n    // override get_path_coords():NeuronInterfacePoint[] {\n    //     return [];\n    // }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Point\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            const t01 = \"Convert this point to a waypoint feature\";\n            this.#dom_convert_waypoint = this._create_dom_input_button(\"Waypoint\", this.#convert_to_waypoint.bind(this));\n            this.#dom_convert_waypoint.title = t01;\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_waypoint, t01));\n            c.appendChild(this.#dom_convert_waypoint);\n\n            const t3 = \"Text label for identification of the point\";\n            this.#dom_label = this._create_dom_input_textbox((this.#point ? this.#point.tag : \"\"), this.#update_tag_from_dom.bind(this));\n            this.#dom_label.title = t3;\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t3));\n            c.appendChild(this.#dom_label);\n\n            const t0 = \"Latitude location for the point in decimal degrees\";\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\n            this.#dom_lat.title = t0;\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\n            c.appendChild(this.#dom_lat);\n\n            const t1 = \"Longitude location for the point in decimal degrees\";\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\n            this.#dom_lon.title = t1;\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\n            c.appendChild(this.#dom_lon);\n\n            const t2 = \"Altitude for the point in feet relative to take-off location ground level\";\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_alt.title = t2;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_alt, t2));\n            c.appendChild(this.#dom_alt);\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    #convert_to_waypoint() {\n        if(this.#planner) {\n            this.#planner.replace_point_with_waypoint(this);\n        } else {\n            console.warn(\"Planner not set, cannot convert point feature!\");\n        }\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\n        let is_valid =\n            (object.type == NeuronFeaturePoint.TYPE) &&\n            (object.version == NeuronFeaturePoint.VERSION);\n\n        return is_valid;\n    }\n\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeaturePoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\n\n        const point = NeuronInterfacePoint.from_json(j.point);\n        return new NeuronFeaturePoint(map, point);\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePointData>{\n            version: NeuronFeaturePoint.VERSION,\n            type: NeuronFeaturePoint.TYPE,\n            point: this.#point.to_json()\n        }\n    }\n}\n","import { NeuronFeatureBase, NeuronFeatureBaseData } from \"./neuron_feature_base\";\nimport { NeuronFeatureWaypoint, NeuronFeaturePointData } from \"./neuron_feature_waypoint\";\nimport { NeuronFeatureLine, NeuronFeatureLineData } from \"./neuron_feature_line\";\nimport { NeuronFeaturePolygon, NeuronFeaturePolygonData } from \"./neuron_feature_polygon\";\nimport { NeuronFeatureSurvey, NeuronFeatureSurveyData } from \"./neuron_feature_survey\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { NeuronMap } from \"./neuron_map\";\nimport { kml_download_from_neuron_data, kmx_load_file, NeuronKMLData } from \"./neuron_tools_kml\";\nimport { download_file, get_filename } from \"./neuron_tools_files\"\nimport { L } from \"./interface_leaflet\"\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\nimport { NeuronOptions, NeuronOptionsData } from \"./neuron_options\";\n\n//TODO: Document\nexport type MissionFeatureData = (\n    NeuronFeatureBaseData |\n    NeuronFeaturePointData |\n    NeuronFeatureLineData |\n    NeuronFeaturePolygonData |\n    NeuronFeatureSurveyData\n);\n\n//TODO: Document\nexport type MissionFeature = (\n    NeuronFeatureBase |\n    NeuronFeaturePoint |\n    NeuronFeatureWaypoint |\n    NeuronFeatureLine |\n    NeuronFeaturePolygon |\n    NeuronFeatureSurvey\n);\n\n//TODO: Document\nexport interface NeuronPlannerMissionData {\n    version:string;\n    type:string;\n    settings:NeuronOptionsData;\n    mission_items:MissionFeatureData[],\n    waypoints: NeuronInterfacePointData[];\n}\n\n//TODO: Document\nexport interface MissionBrief {\n    type:string,\n    description:string,\n    components:string[],\n    time_transit:string,\n    time_duration:string\n}\n\n//TODO: Document\nexport class NeuronPlanner {\n    static TYPE = 'NeuronPlanner';\n    static VERSION = '48a24a80-d243-11ec-918e-9fd28348efc7';\n\n    #map:NeuronMap;\n\n    #plan_element:HTMLElement;\n    #mission_items:MissionFeature[];\n    #on_change_callbacks:Map<number,()=>void>;\n    #last_callback_id:number;\n    #clearing_mission:boolean;\n\n    #last_mission_altitude:number;\n\n    #plan_element_name:string;\n    // #unsub_option_cb:()=>void;\n\n    constructor(plan_element_name:string, map:NeuronMap = null) {\n        this.#map = map;\n\n        this.#plan_element = null;\n        this.#plan_element_name = plan_element_name;\n\n        this.#mission_items = [];\n        this.#on_change_callbacks = new Map();\n        this.#last_callback_id = 0;\n        this.#last_mission_altitude = 0.0;\n        this.#clearing_mission = false;\n        // this.#unsub_option_cb = null;\n    }\n\n    // set_options_subscriber() {\n    //     if(this.#unsub_option_cb)\n    //         this.#unsub_option_cb();\n\n    //     this.#unsub_option_cb = NeuronOptions.add_callback(this.#run_on_mission_change.bind(this));\n    // }\n\n    get_mission_items() {\n        return this.#mission_items;\n    }\n\n    get_mission_as_json() {\n        let mission_data:MissionFeatureData[] = [];\n        for(const item of this.#mission_items)\n            mission_data.push(item.to_json());\n\n        return mission_data;\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronPlannerMissionData {\n        let is_valid =\n            (object.type == NeuronPlanner.TYPE) &&\n            (object.version == NeuronPlanner.VERSION);\n\n        return is_valid;\n    }\n\n    set_mission_from_json(j:NeuronPlannerMissionData) {\n        if(!NeuronPlanner.isObjectOfDataType(j))\n            throw new Error(\"Invalid version during import of NeuronPlannerMissionData\");\n\n        if(j.settings)\n            NeuronOptions.load(j.settings);\n\n        if(j.mission_items && j.mission_items.length) {\n            this.#add_mission_features_from_json(j.mission_items);\n        } else if(j.waypoints && j.waypoints.length) {\n            console.warn(\"No mission items found, importing waypoints instead!\");\n            this.#add_waypoint_features_from_json(j.waypoints);\n        }\n\n        this.fit_mission_on_map();\n    }\n\n    #add_mission_features_from_json(mission_items:MissionFeatureData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of mission_items) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronFeatureBase.isObjectOfDataType(item)) {\n                feature = NeuronFeatureBase.from_json(item, this.#map.get_leaflet_map());\n            } else if(NeuronFeaturePoint.isObjectOfDataType(item)) {\n                let p = NeuronFeaturePoint.from_json(item, this.#map.get_leaflet_map());\n                p.set_planner(this);\n                feature = p;\n            } else if(NeuronFeatureWaypoint.isObjectOfDataType(item)) {\n                feature = NeuronFeatureWaypoint.from_json(item, this.#map.get_leaflet_map());\n            } else if(NeuronFeatureLine.isObjectOfDataType(item)) {\n                feature = NeuronFeatureLine.from_json(item, this.#map.get_leaflet_map());\n            } else if(NeuronFeaturePolygon.isObjectOfDataType(item)) {\n                let p = NeuronFeaturePolygon.from_json(item, this.#map.get_leaflet_map());\n                p.set_planner(this);\n                feature = p;\n            } else if(NeuronFeatureSurvey.isObjectOfDataType(item)) {\n                feature = NeuronFeatureSurvey.from_json(item, this.#map.get_leaflet_map());\n            } else {\n                console.warn(\"Unable to import mission item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    #add_waypoint_features_from_json(waypoints:NeuronInterfacePointData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of waypoints) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\n                const point = NeuronInterfacePoint.from_json(item);\n                feature = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), point);\n            } else {\n                console.warn(\"Unable to import waypoint item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    #add_point_features_from_json(points:NeuronInterfacePointData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of points) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\n                const point = NeuronInterfacePoint.from_json(item);\n                feature = new NeuronFeaturePoint(this.#map.get_leaflet_map(), point);\n            } else {\n                console.warn(\"Unable to import waypoint item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    async save_mission_file() {\n        let j:NeuronPlannerMissionData = {\n            version: NeuronPlanner.VERSION,\n            type: NeuronPlanner.TYPE,\n            settings: NeuronOptions.as_json(),\n            mission_items: this.get_mission_as_json(),\n            waypoints: this.get_mission_as_points().map(x => x.to_json())\n        }\n\n        const file = new Blob(\n            [JSON.stringify(j, null, 4)],\n            {\n                type: 'application/json'\n            }\n        );\n\n        const filename = get_filename('json');\n        await download_file(filename, file);\n    }\n\n    async load_mission_file(file:Blob) {\n        const j = <NeuronPlannerMissionData>JSON.parse(await file.text());\n        this.set_mission_from_json(j);\n    }\n\n    async fit_mission_on_map(allow_animate:boolean=true, pad_left:number=50,pad_top:number=50,pad_right:number=50,pad_bottom:number=50) {\n        return new Promise(resolve => {\n            //Try to fit all the features on screen\n            if(this.#map) {\n                let m = this.#map.get_leaflet_map();\n                if(m) {\n                    let features:L.Layer[] = [];\n                    for(const item of this.#mission_items)\n                        features.push(...item.get_features());\n\n                    if(features.length) {\n                        let fg = L.featureGroup(features);\n                        const old_snap = m.options.zoomSnap;\n                        m.options.zoomSnap = 0;\n                        let cb = (ev:L.LayerEvent) => {\n                            // console.log(`Zoom ended at ${m.getZoom()}, disabling thing~`);\n                            m.options.zoomSnap = old_snap;\n                            m.off('moveend', cb);\n                            resolve(true);\n                        }\n                        //XXX:  we use moveend here because the map always moves to\n                        //      fit bounds, but it doesn't always zoom to fit bounds\n                        m.on('moveend', cb);\n                        m.fitBounds(fg.getBounds(), {\n                            paddingTopLeft: [pad_left, pad_top],\n                            paddingBottomRight: [pad_right, pad_bottom],\n                            animate: allow_animate,\n                            // duration: 0.001\n                        });\n\n                        // } else {\n                        //     console.log(\"Zoom not needed!\");\n                        //     resolve(true);\n                        // }\n                    } else {\n                        // console.log(\"No objects to zoom too!\");\n                        resolve(true);\n                    }\n\n                    window.neuron_map.show_map_help(false);\n                } else {\n                    resolve(false);\n                }\n            } else {\n                resolve(false);\n            }\n        });\n    }\n\n    export_mission_kml() {\n        let markers:NeuronInterfacePoint[] = [];\n        let paths:NeuronInterfacePoint[][] = [this.get_mission_as_points()];\n        let polygons:NeuronInterfacePoint[][] = [];\n        for(const i of this.#mission_items) {\n            if((i instanceof NeuronFeaturePoint)) {\n                markers.push(i.get_point());\n            } else if((i instanceof NeuronFeatureLine)) {\n                paths.push(i.get_ends_as_points());\n            } else if((i instanceof NeuronFeaturePolygon) || (i instanceof NeuronFeatureSurvey)) {\n                polygons.push(i.get_corners_as_points());\n            }\n        }\n\n        kml_download_from_neuron_data(markers, paths, polygons);\n    }\n\n    set_map(map:NeuronMap) {\n        this.#map = map;\n    }\n\n    #run_on_mission_change() {\n        const coords = this.get_mission_as_points();\n        this.#last_mission_altitude = coords.length ?\n            coords[coords.length - 1].altitude :\n            0.0;\n\n        for(const cb of this.#on_change_callbacks.values())\n            cb();\n    }\n\n    on_mission_change(cb:()=>void): ()=>void {\n        const id = this.#last_callback_id++;\n        this.#on_change_callbacks.set(id, cb);\n\n        return this.#remove_on_mission_change.bind(this, id);\n    }\n\n    #remove_on_mission_change(key:number) {\n        if(this.#on_change_callbacks.has(key)) {\n            this.#on_change_callbacks.delete(key);\n        }\n    }\n\n    #mission_item_changed(item:NeuronFeatureBase) {\n        this.#run_on_mission_change();\n    }\n\n    #array_move(arr:any[], old_index:number, new_index:number) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        return arr; // for testing\n    };\n\n    #move_mission_item(item:NeuronFeatureBase, direction:number) {\n        let ind = this.#mission_items.indexOf(item);\n        if(ind >= 0) {\n            //Move index and clamp to array size\n            let new_ind = ind + (direction > 0 ? 1 : -1)\n            new_ind = Math.max(Math.min(new_ind, (this.#mission_items.length - 1)), 0);\n            this.#array_move(this.#mission_items, ind, new_ind);\n\n            this.update();\n            this.#run_on_mission_change();\n        } else {\n            console.warn(\"Unknown mission item, cannot move\");\n        }\n    }\n\n    get_last_item_altitude() {\n        return this.#last_mission_altitude;\n    }\n\n    #on_add_mission_item_updates() {\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    #add_mission_item(item:NeuronFeatureBase, index:number = -1, run_update:boolean = true) {\n        item.set_remove_callback(this.remove_mission_item.bind(this));\n        item.set_change_callback(this.#mission_item_changed.bind(this));\n        item.set_move_callback(this.#move_mission_item.bind(this));\n        if(index < 0 || index >= this.#mission_items.length) {\n            this.#mission_items.push(item);\n        } else {\n            this.#mission_items.splice(index, 0, item);\n        }\n\n        if(run_update) {\n            this.#on_add_mission_item_updates();\n        }\n    }\n\n    add_mission_item(item:NeuronFeatureBase, index:number = -1) {\n        this.#add_mission_item(item, index)\n    }\n\n    add_mission_items(items:NeuronFeatureBase[], index:number = -1) {\n        let count = 0;\n        for(const item of items) {\n            const new_ind = index == -1 ?\n                -1 :    //add to end\n                index + count;\n            this.#add_mission_item(item, new_ind, false);\n            count ++;\n        }\n\n        if(items.length)\n            this.#on_add_mission_item_updates();\n    }\n\n    remove_mission_item(item:NeuronFeatureBase) {\n        // console.log(`Mission item removed: ${item}`);\n        let index = this.#mission_items.indexOf(item);\n        if(index >= 0) {\n            this.#mission_items.splice(index, 1);\n        } else {\n            console.warn(\"Unknown mission item, cannot remove!\")\n        }\n\n        if(!this.#clearing_mission) {\n            this.update();\n            this.#run_on_mission_change();\n        }\n    }\n\n    clear_mission() {\n        this.#clearing_mission = true;\n        while(this.#mission_items.length > 0)\n            this.#mission_items[0].remove_feature();\n        this.#clearing_mission = false;\n\n        //Do this in bulk at the end\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    update() {\n        const mission_doms = this.#mission_items.map(x => x.get_dom());\n        const mission_ids = mission_doms.map(x => x.id);\n\n        const old_elements = Array.from(this.#plan_element.children).filter(x => !mission_ids.includes(x.id));\n\n        for(const el of old_elements)\n            el.remove();\n        // for(let el of this.#plan_element.children) {\n        //     if(!mission_ids.includes(el.id))\n        //         this.#plan_element.removeChild(el);\n        // }\n\n        for(let j = 0; j < mission_doms.length; j++) {\n            const i = mission_doms[j];\n            const i_next = j+1 > mission_doms.length ? null : mission_doms[j+1];\n\n            let nodes = Array.from(this.#plan_element.children);\n            const ind_n = nodes.indexOf(i);\n            const ind_nn = nodes.indexOf(i_next);\n\n            //Check to see if our node is in the right location\n            if(ind_n != j) {\n                //It is not...\n                //Our next item is already in the list, so place it before that\n                if(i_next && ind_nn >= 0) {\n                    //Item is in the list, but is in the wrong spot\n                    //Or\n                    //Item is not in the list, insert before the next item\n                    this.#plan_element.insertBefore(i, i_next);\n                } else {\n                    //Item is not in the list, and there is no next item, append to end\n                    this.#plan_element.appendChild(i);\n                    i.scrollIntoView();\n                }\n\n                if(ind_n < 0) {\n                    i.classList.remove('mission-feature-highlight-remove');\n                    i.classList.add('mission-feature-highlight');\n                    setTimeout(this.#remove_mission_feature_highlight.bind(this, i), 1000);\n                }\n            }\n        }\n    }\n\n    #remove_mission_feature_highlight(dom:HTMLDivElement) {\n        dom.classList.remove('mission-feature-highlight');\n        dom.classList.add('mission-feature-highlight-remove');\n    }\n\n    #kml_loaded(result:NeuronKMLData) {\n        // console.log(\"Got file result:\");\n        // console.log(result);\n        let features:NeuronFeatureBase[] = [];\n\n        for(const p of result.markers) {\n            // p.altitude = this.get_last_item_altitude();\n            const f = new NeuronFeaturePoint(this.#map.get_leaflet_map(), p);\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\n            features.push(f);\n        }\n\n        for(const path of result.paths) {\n            for(const p of path) {\n                // p.altitude = this.get_last_item_altitude();\n                const f = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), p);\n                features.push(f);\n            }\n        }\n\n        for(const p of result.polygons) {\n            const f = new NeuronFeaturePolygon(this.#map.get_leaflet_map(), p);\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\n            features.push(f);\n        }\n\n        this.add_mission_items(features);\n        this.fit_mission_on_map();\n    }\n\n    replace_point_with_waypoint(old_item:NeuronFeaturePoint) {\n        const ind = this.#mission_items.indexOf(old_item);\n        if(ind >= 0) {\n            const waypoint = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), old_item.get_point());\n            old_item.remove_feature();\n            this.add_mission_item(waypoint, ind);\n        } else {\n            console.warn(\"Unknown mission feature, cannot replace\");\n        }\n    }\n\n    replace_polygon_with_survey(old_item:NeuronFeaturePolygon) {\n        const ind = this.#mission_items.indexOf(old_item);\n        if(ind >= 0) {\n            const survey = new NeuronFeatureSurvey(this.#map.get_leaflet_map(), old_item.get_corners_as_points());\n            old_item.remove_feature();\n            this.add_mission_item(survey, ind);\n        } else {\n            console.warn(\"Unknown mission feature, cannot replace\");\n        }\n    }\n\n    import_features_from_kmx_multiple(files:Blob[]) {\n        for(const file of files) {\n            this.import_features_from_kmx(file);\n        }\n    }\n\n    import_features_from_kmx(file:Blob) {\n        kmx_load_file(file, this.#kml_loaded.bind(this));\n    }\n\n    reset() {\n        //Collect our DOM elements\n        this.#plan_element = document.getElementById(this.#plan_element_name);\n\n        //Update the planner\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    get_mission_as_points() {\n        let coords:NeuronInterfacePoint[] = [];\n\n        for(const i of this.#mission_items)\n            coords = coords.concat(i.get_path_coords());\n\n        return coords;\n    }\n}\n","import {NeuronFeatureWaypoint} from \"./neuron_feature_waypoint\";\nimport {NeuronFeaturePolygon} from \"./neuron_feature_polygon\";\n\nimport { NeuronPlanner } from \"./neuron_planner\";\n\nimport {NeuronInterfacePoint} from \"./neuron_interfaces\";\nimport { L } from \"./interface_leaflet\";\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\nimport { NeuronOptions, NeuronOptionsBoolean } from \"./neuron_options\";\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\nimport { NeuronFeatureLine } from \"./neuron_feature_line\";\n\n//TODO: Document\ninterface NeuronMapLayers {\n    [id: string]: L.TileLayer;\n}\n\n//TODO: Document\nexport class NeuronMap {\n    #planner:NeuronPlanner\n    #map:L.Map;\n    #map_layer_control:L.Control.Layers;\n    #map_zoom_control:L.Control.Zoom;\n    #path:L.Polyline;\n    #map_element_name:string;\n    #help_element_name:string;\n    #map_element:HTMLElement;\n    #help_element:HTMLElement;\n    #map_layers:NeuronMapLayers;\n    #unsub_option_cb:()=>void;\n\n    constructor(map_element_name:string, help_element_name:string, planner:NeuronPlanner) {\n        this.#planner = planner;\n        this.#map = null;\n        this.#map_layer_control = null;\n        this.#map_zoom_control = null;\n        this.#map_layers = null;\n        this.#map_element = null;\n        this.#help_element = null;\n        this.#map_element_name = map_element_name;\n        this.#help_element_name = help_element_name;\n\n        this.#planner.on_mission_change(this.update_path.bind(this));\n        this.set_options_subscriber();\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_path.bind(this));\n    }\n\n    show_map_help(show:boolean, help_key:string = '') {\n        if(show) {\n            this.#map_element.style.display = 'none';\n            this.#help_element.style.display = 'block';\n\n            if(help_key)\n                document.getElementById(help_key)?.scrollIntoView();\n        } else {\n            this.#map_element.style.display = 'block';\n            this.#help_element.style.display = 'none';\n            this.reset();\n        }\n    }\n\n    toggle_map_help() {\n        this.show_map_help(this.#map_element.style.display != 'none');\n    }\n\n    get_leaflet_map() {\n        return this.#map;\n    }\n\n    set_location(location:NeuronInterfacePoint, zoom=13) {\n        if(this.#map) {\n            this.#map.setView(location.to_leaflet(), zoom);\n        }\n    }\n\n    zoom_to(feature_group:L.FeatureGroup) {\n        if(this.#map) {\n            this.#map.fitBounds(feature_group.getBounds());\n        }\n    }\n\n    add_feature(feature:L.Layer) {\n        if(this.#map) {\n            feature.addTo(this.#map);\n        }\n    }\n\n    add_features(features:L.Layer[]) {\n        for(const f of features)\n            this.add_feature(f);\n    }\n\n    on_double_click(event:L.LeafletMouseEvent) {\n        //Click modifier handlers\n        //CTRL+Click: Add new waypoint\n        // if(event.originalEvent.ctrlKey) {\n            //...\n        // } else {\n            const l = NeuronInterfacePoint.from_leaflet(event.latlng);\n            l.altitude = this.#planner.get_last_item_altitude();\n            const p = new NeuronFeatureWaypoint(this.#map, l);\n            this.#planner.add_mission_item(p);\n        // }\n    }\n\n    create_point_in_view() {\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            const p = new NeuronFeaturePoint(this.#map, new NeuronInterfacePoint(\n                sw.lat + dy / 2,\n                sw.lng + dx / 2,\n                this.#planner.get_last_item_altitude()\n            ));\n            p.set_planner(this.#planner);\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    create_waypoint_in_view() {\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            const p = new NeuronFeatureWaypoint(this.#map, new NeuronInterfacePoint(\n                sw.lat + dy / 2,\n                sw.lng + dx / 2,\n                this.#planner.get_last_item_altitude()\n            ));\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    create_line_in_view() {\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            const p = new NeuronFeatureLine(\n                this.#map,\n                new NeuronInterfacePoint(\n                    sw.lat + dy / 2,\n                    sw.lng + dx / 4,\n                    this.#planner.get_last_item_altitude()\n                ),\n                new NeuronInterfacePoint(\n                    sw.lat + dy / 2,\n                    sw.lng + 3 * dx / 4,\n                    this.#planner.get_last_item_altitude()\n                )\n            );\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n\n    #get_poly_bounds_from_view() {\n        let bounds:NeuronInterfacePoint[] = [];\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            bounds = [\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng +     dx / 4),\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng +     dx / 4),\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng + 3 * dx / 4),\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng + 3 * dx / 4)\n            ];\n        }\n\n        return bounds;\n    }\n\n    create_polygon_in_view() {\n        const bounds = this.#get_poly_bounds_from_view();\n\n        if(this.#map && bounds.length) {\n            const p = new NeuronFeaturePolygon(this.#map, bounds);\n            p.set_planner(this.#planner);\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    create_survey_in_view() {\n        const bounds = this.#get_poly_bounds_from_view();\n\n        if(this.#map && bounds.length) {\n            const p = new NeuronFeatureSurvey(this.#map, bounds);\n            p.set_altitude(this.#planner.get_last_item_altitude());\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    update_path() {\n        if(this.#path) {\n            const show = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\n            const path_points = show ? this.#planner.get_mission_as_points().map(x => x.to_leaflet()) : [];\n            this.#path.setLatLngs(path_points);\n        }\n    }\n\n    toggle_map_tools(show:boolean) {\n\n        if(this.#map) {\n\n            if(!this.#map_zoom_control) {\n                this.#map.zoomControl;\n            }\n\n            if(!show && this.#map_zoom_control) {\n                this.#map_zoom_control.remove();\n                this.#map_zoom_control = null;\n            } else if(!this.#map_zoom_control) {\n                this.#map_zoom_control = L.control.zoom();\n                this.#map_zoom_control.addTo(this.#map);\n            }\n\n            if(!show && this.#map_layer_control) {\n                this.#map_layer_control.remove();\n                this.#map_layer_control = null;\n            } else if(!this.#map_layer_control) {\n                this.#map_layer_control = L.control.layers(this.#map_layers); //, otherLayers...\n                this.#map_layer_control.addTo(this.#map);\n            }\n        }\n    }\n\n\treset() {\n        this.#map_element = document.getElementById(this.#map_element_name);\n        this.#help_element = document.getElementById(this.#help_element_name);\n\n\t\tif(!this.#map) {\n\t\t\tconst tiles_grey = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tid: 'mapbox/streets-v11',\n\t\t\t\ttileSize: 512,\n\t\t\t\tzoomOffset: -1,\n                // cspell:disable-next-line\n                accessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\n\t\t\t});\n\t\t\tconst tiles_satellite = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tid: 'mapbox/satellite-v9',\n\t\t\t\ttileSize: 512,\n\t\t\t\tzoomOffset: -1,\n                // cspell:disable-next-line\n\t\t\t\taccessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\n\t\t\t});\n\n            this.#map_layers = {\n                Street: tiles_grey,\n                Satellite: tiles_satellite\n            };\n\n\t\t\tthis.#map = L.map(this.#map_element_name, {\n                doubleClickZoom: false,\n                layers: [\n                    tiles_grey\n                ],\n                zoomControl: false\n            });\n            this.toggle_map_tools(true);\n            this.#map.on(\"dblclick\", this.on_double_click.bind(this));\n\n            //Set an initial zoom\n            this.set_location(new NeuronInterfacePoint(-27.4771033, 153.0301422), 11);\n\t\t} else {\n\t\t\t//Already have a map, so just force a re-render\n\t\t\tthis.#map.invalidateSize();\n\t\t}\n\n        if(!this.#path) {\n            this.#path = L.polyline([], {color: 'orange'}).addTo(this.#map);\n        }\n\t}\n}\n","// import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { NeuronFeatureWaypoint } from \"./neuron_feature_waypoint\";\n// import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\n\nimport { MissionFeature, NeuronPlanner } from \"./neuron_planner\";\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\nimport { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\n\n//Defines an listing of key component fields to be displayed on the mission brief\nexport interface MissionBriefComponent {\n    field1:string,\n    field2:string,\n    field3:string\n}\n\n//Defines an summary for a set of specific feature, or part of a specific mission feature\nexport interface MissionBriefItem {\n    type:string,\n    description:string,\n    components:MissionBriefComponent[],\n    time_transit:string,\n    time_duration:string\n}\n\n//Defines an summary for a set of mission features in an itemized list\nexport interface MissionSummary {\n    brief:MissionBriefItem[],\n    total_duration:number,\n    total_distance:number,\n    total_images:number\n}\n\nexport class NeuronBrief {\n    #planner:NeuronPlanner;\n    #brief_element:HTMLElement;\n    #brief_element_name:string;\n\n    /** Creates a NeuronBrief object that controls the generation of the mission brief functions of the app\n     * @param  {NeuronPlanner} planner NeuronPlanner to use for accessing the current mission plan\n     * @param  {string} brief_element_name Identifier for the document element to use when generating a brief\n     */\n    constructor(planner:NeuronPlanner, brief_element_name:string) {\n        this.#planner = planner;\n        this.#brief_element = null;\n        this.#brief_element_name = brief_element_name\n    }\n\n    /** Resets the internal state of this class and prepares any relevant variables\n     */\n    reset() {\n        this.#brief_element = document.getElementById(this.#brief_element_name);\n    }\n\n    /** Generates and updates the mission brief element in the document with the current mission brief details\n     */\n    update_mission_brief() {\n        const mission_features = this.#planner.get_mission_items();\n        const notables = this.get_mission_notables(mission_features);\n        const summary = this.get_mission_summary(mission_features);\n\n        this.#brief_element.innerHTML = '';\n        let title = document.createElement('h1');\n        title.appendChild(document.createTextNode(\"Mission Brief\"));\n        this.#brief_element.appendChild(title);\n\n\n        let table = document.createElement('div');\n        table.className = 'brief-table';\n\n        if(notables.length) {\n            let t1 = document.createElement('h2');\n            t1.className = 'brief-table-title';\n            t1.appendChild(document.createTextNode(\"Points of Interest\"));\n            table.appendChild(t1);\n\n            const headings = [\n                \"Item\",\n                \"Type\",\n                \"Description\",\n                \"Features\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n            ]\n\n            for(const h of headings) {\n                let th = document.createElement('div');\n                th.className = 'brief-table-header';\n                th.appendChild(document.createTextNode(h));\n                table.appendChild(th);\n            }\n\n            let count = 0;\n            for(const item of notables) {\n                count++;\n                //XXX: Check item.type for special cases of bold tallies\n                const content = [\n                    item.type ? count.toString() : \"\",\n                    item.type,\n                    item.description,\n                    item.components.length ? item.components[0].field1 : \"—\",\n                    item.components.length ? item.components[0].field2 : \"—\",\n                    item.components.length ? item.components[0].field3 : \"—\",\n                    \"\",\n                    \"\"\n                ];\n\n                const ind_values_start = 3;\n                for(let j=0; j<content.length; j++) {\n                    let td = document.createElement('div');\n                    td.appendChild(document.createTextNode(content[j]));\n                    if((j == 0) || (j >= ind_values_start))\n                        td.classList.add('brief-table-entry-right');\n                    if(!item.type)\n                        td.classList.add('brief-table-entry-bold');\n                    td.classList.add('brief-table-entry');\n                    table.appendChild(td);\n                }\n\n                //Handle case of multiple components (skipped if one or less)\n                for(let i = 1; i<item.components.length; i++) {\n                    const content = [\n                        \"\",\n                        \"\",\n                        \"\",\n                        item.components[i].field1,\n                        item.components[i].field2,\n                        item.components[i].field3,\n                        \"\",\n                        \"\"\n                    ]\n\n                    for(const h of content) {\n                        let td = document.createElement('div');\n                        td.appendChild(document.createTextNode(h));\n                        td.className = 'brief-table-entry-right brief-table-entry';\n                        table.appendChild(td);\n                    }\n                }\n            }\n        }\n\n        if(summary.brief.length) {\n            let t2 = document.createElement('h2');\n            t2.className = 'brief-table-title';\n            t2.appendChild(document.createTextNode(\"Flight Plan\"));\n            table.appendChild(t2);\n\n            const headings = [\n                \"Step\",\n                \"Type\",\n                \"Description\",\n                \"Features\",\n                \"\",\n                \"\",\n                \"Transit\",\n                \"Duration\",\n            ]\n\n            // let table = document.createElement('div');\n            // table.className = 'brief-table';\n            for(const h of headings) {\n                let th = document.createElement('div');\n                th.className = 'brief-table-header';\n                th.appendChild(document.createTextNode(h));\n                table.appendChild(th);\n            }\n\n            let count = 0;\n            for(const item of summary.brief) {\n                count++;\n                //XXX: Check item.type for special cases of bold tallies\n                const content = [\n                    item.type ? count.toString() : \"\",\n                    item.type,\n                    item.description,\n                    item.components.length ? item.components[0].field1 : \"—\",\n                    item.components.length ? item.components[0].field2 : \"—\",\n                    item.components.length ? item.components[0].field3 : \"—\",\n                    item.time_transit,\n                    item.time_duration\n                ];\n\n                const ind_values_start = 3;\n                for(let j=0; j<content.length; j++) {\n                    let td = document.createElement('div');\n                    td.appendChild(document.createTextNode(content[j]));\n                    if((j == 0) || (j >= ind_values_start))\n                        td.classList.add('brief-table-entry-right');\n                    if(!item.type)\n                        td.classList.add('brief-table-entry-bold');\n                    td.classList.add('brief-table-entry');\n                    table.appendChild(td);\n                }\n\n                //Handle case of multiple components (skipped if one or less)\n                for(let i = 1; i<item.components.length; i++) {\n                    const content = [\n                        \"\",\n                        \"\",\n                        \"\",\n                        item.components[i].field1,\n                        item.components[i].field2,\n                        item.components[i].field3,\n                        \"\",\n                        \"\"\n                    ]\n\n                    for(const h of content) {\n                        let td = document.createElement('div');\n                        td.appendChild(document.createTextNode(h));\n                        td.className = 'brief-table-entry-right brief-table-entry';\n                        table.appendChild(td);\n                    }\n                }\n            }\n        }\n\n        this.#brief_element.appendChild(table);\n\n        if(!notables.length && !summary.brief.length){\n            let td = document.createElement('div');\n            td.appendChild(document.createTextNode(\"No mission brief available.\"));\n            this.#brief_element.appendChild(td);\n        }\n    }\n\n    /** Breaks down a NeuronInterfacePoint location into set field components for the mission summary\n     * @param  {NeuronInterfacePoint} point Point to split into summary fields\n     */\n    static get_components_from_point(point:NeuronInterfacePoint) {\n        return <MissionBriefComponent>{\n            field1: point.toStringLatitude(),\n            field2: point.toStringLongitude(),\n            field3: point.toStringAltitude(),\n        }\n    }\n\n    /** Generates a list of mission brief items for non-flyable mission features\n     * @param  {MissionFeature[]} mission_features List of features to analyze.\n     */\n    get_mission_notables(mission_features:MissionFeature[]) {\n        let notables:MissionBriefItem[] = [];\n\n        for(const item of mission_features) {\n            let step:MissionBriefItem = null;\n\n            if(!item.is_flyable()) {\n                if(item instanceof NeuronFeaturePoint) {\n                    const point = item.get_point();\n                    step = {\n                        type: NeuronFeaturePoint.NAME,\n                        description: (point && point.tag) ? point.tag : \"Point of interest\",\n                        components: [point ? NeuronBrief.get_components_from_point(point) : {\n                            field1: \"\",\n                            field2: \"\",\n                            field3: \"\",\n                        }],\n                        time_duration: \"\",\n                        time_transit: \"\"\n                    };\n                // } else if(item instanceof NeuronFeaturePolygon) {\n                } else if(item instanceof NeuronFeaturePolygon) {\n                    const corners = item.get_corners_as_points();\n                    const tag = item.get_label();\n                    step = {\n                        type: NeuronFeaturePolygon.NAME,\n                        description: (tag) ? tag : \"Area of interest\",\n                        components: corners.map(x => NeuronBrief.get_components_from_point(x)),\n                        time_duration: \"\",\n                        time_transit: \"\",\n                    };\n                }\n            }\n\n           if(step)\n                notables.push(step);\n        }\n\n        return notables;\n    }\n\n    /** Generates a mission summary for a set of mission features\n     * @param  {MissionFeature[]} mission_features List of features to analyze.\n     */\n    get_mission_summary(mission_features:MissionFeature[]) {\n        let summary:MissionSummary = {\n            brief: [],\n            total_distance: 0,\n            total_duration: 0,\n            total_images: 0\n        }\n        const steps = this.#planner.get_mission_as_points();\n        let takeoff_duration = 0;\n        let land_duration = 0;\n        let extra_mission_duration = 0;\n        let takeoff_distance = 0;\n        let land_distance = 0;\n\n        if(steps.length) {\n            //Get the flight speed and lock it to at least 0.1m/s\n            const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n            const flight_speed = Math.max(s ? s : 0.0, 0.1);\n\n            let point_last = null;\n            // let time_takeoff = \"—\";\n            let takeoff_point = steps[0];\n            if(takeoff_point.altitude != 0) {\n                takeoff_point = new NeuronInterfacePoint(steps[0].latitude, steps[0].longitude, 0.0);\n                const takeoff_coords = [takeoff_point, steps[0]];\n                takeoff_distance = flight_distance_from_coords(takeoff_coords);\n                takeoff_duration = takeoff_distance/flight_speed;\n                point_last = takeoff_point;\n                // time_takeoff = \"+\" + flight_time_from_duration(takeoff_duration);\n            }\n\n            let step0:MissionBriefItem = {\n                type: NeuronFeatureWaypoint.NAME,\n                description: \"Take-off at location\",\n                components: [NeuronBrief.get_components_from_point(takeoff_point)],\n                time_duration: \"—\",\n                time_transit: \"—\",\n            };\n\n            summary.brief.push(step0);\n\n            for(const item of mission_features) {\n                let path = item.get_path_coords();\n\n                let time_transit = \"—\";\n                if(path.length && point_last) {\n                    const transit_coords = [point_last, path[0]];\n                    const transit_distance = flight_distance_from_coords(transit_coords);\n                    time_transit = \"+\" + flight_time_from_duration(transit_distance/flight_speed);\n                }\n\n                let step:MissionBriefItem = null;\n                if(item.is_flyable()) {\n                    if(item instanceof NeuronFeatureWaypoint) {\n                        const wait = item.get_wait_duration();\n                        extra_mission_duration += wait;\n                        const image_count = item.get_image_count();\n                        step = {\n                            type: NeuronFeatureWaypoint.NAME,\n                            description: \"Fly to location\" + (image_count ? ' and capture image' : ''),\n                            components: path.map(x => NeuronBrief.get_components_from_point(x)),\n                            time_duration: wait > 0 ? \"+\" + flight_time_from_duration(wait) : \"—\",\n                            time_transit: time_transit\n                        };\n                        summary.total_images += image_count;\n                    } else if(item instanceof NeuronFeatureSurvey) {\n                        let corners = item.get_corners_as_points();\n                        const step_distance = flight_distance_from_coords(path);\n                        const step_duration = \"+\" + flight_time_from_duration(step_distance/flight_speed);\n                        step = {\n                            type: NeuronFeatureSurvey.NAME,\n                            description: \"Survey area with bounds\",\n                            components: corners.map(x => NeuronBrief.get_components_from_point(x)),\n                            time_duration: step_duration,\n                            time_transit: time_transit,\n                        };\n                        summary.total_images += item.get_image_count();\n                    }\n                }\n\n                if(path.length)\n                    point_last = path[path.length - 1];\n\n                if(step)\n                summary.brief.push(step);\n            }\n\n            let time_land = \"—\";\n            let land_point = point_last;\n            let land_component:MissionBriefComponent = {\n                field1: \"—\",\n                field2: \"—\",\n                field3: \"—\"\n            };\n            if(land_point && land_point.altitude != 0) {\n                land_point = new NeuronInterfacePoint(point_last.latitude, point_last.longitude, 0.0);\n                land_component = NeuronBrief.get_components_from_point(land_point);\n                const land_coords = [point_last, land_point];\n                land_distance = flight_distance_from_coords(land_coords);\n                land_duration = land_distance/flight_speed;\n                time_land = \"+\" + flight_time_from_duration(land_duration);\n            }\n\n            let step_n:MissionBriefItem = {\n                type: NeuronFeatureWaypoint.NAME,\n                description: \"Land at location\",\n                components: [land_component],\n                time_duration: time_land,\n                time_transit: \"—\"\n            };\n            summary.brief.push(step_n);\n\n            summary.total_distance = flight_distance_from_coords(steps) + takeoff_distance + land_distance;\n            const total_transit_duration = summary.total_distance/flight_speed;\n            summary.total_duration = total_transit_duration + takeoff_duration + land_duration + extra_mission_duration;\n            const total_time = flight_time_from_duration(summary.total_duration);\n\n            let step_total_time:MissionBriefItem= {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Duration:\",\n                time_duration: total_time,\n            };\n            summary.brief.push(step_total_time);\n\n            let step_total_distance:MissionBriefItem = {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Distance:\",\n                time_duration: `${(summary.total_distance / 1000).toFixed(2)}km`,\n            };\n            summary.brief.push(step_total_distance);\n\n            let step_total_images:MissionBriefItem = {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Images:\",\n                time_duration: summary.total_images > 0 ? summary.total_images.toString() : \"—\",\n            };\n            summary.brief.push(step_total_images);\n        }\n\n        return summary;\n    }\n}\n","import { flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\nimport { NeuronBrief } from \"./neuron_brief\";\nimport { NeuronOptions } from \"./neuron_options\";\n\n//TODO: Document\nexport class NeuronStatistics extends NeuronDOMFactory {\n    #planner:NeuronPlanner;\n    #brief:NeuronBrief;\n    #stats_element_name_stats:string;\n\n    #stats_results_element:HTMLElement;\n\n    #dom_stat_waypoints:HTMLOutputElement;\n    #dom_stat_distance:HTMLOutputElement;\n    #dom_stat_duration:HTMLOutputElement;\n    #dom_stat_images:HTMLOutputElement;\n\n    #unsub_option_cb:()=>void;\n\n    constructor(planner:NeuronPlanner, brief:NeuronBrief, element_name_stats:string) {\n        super('fp-stats');\n\n        this.#planner = planner;\n        this.#brief = brief;\n\n        this.#stats_element_name_stats = element_name_stats;\n        this.#stats_results_element = null;\n\n        this.#dom_stat_waypoints = null;\n        this.#dom_stat_distance = null;\n        this.#dom_stat_duration = null;\n        this.#dom_stat_images = null;\n\n        this.set_options_subscriber();\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_statistics.bind(this));\n    }\n\n    update_statistics() {\n        const coords = this.#planner.get_mission_as_points();\n        const summary = this.#brief.get_mission_summary(this.#planner.get_mission_items());\n        // this.#last_mission_altitude = coords.length ?\n        //     coords[coords.length - 1].altitude :\n        //     0.0;\n\n        // let total_distance = flight_distance_from_coords(coords);\n        const dist_km = summary.total_distance / 1000;\n\n        //Get the flight speed and lock it to at least 0.1m/s\n        // const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n        // const flight_speed = Math.max(s ? s : 0.0, 0.1);\n\n        if(this.#dom_stat_waypoints)\n            this.#dom_stat_waypoints.value = coords.length.toFixed(0);\n\n        if(this.#dom_stat_distance)\n            this.#dom_stat_distance.value = `${(dist_km).toFixed(2)}km`;\n\n        if(this.#dom_stat_duration)\n            this.#dom_stat_duration.value = flight_time_from_duration(summary.total_duration);\n\n        if(this.#dom_stat_images)\n            this.#dom_stat_images.value = summary.total_images > 0 ? summary.total_images.toString() : \"—\";\n    }\n\n    #gen_dom() {\n        //Statistics\n        this.#stats_results_element = document.getElementById(this.#stats_element_name_stats);\n        this.#stats_results_element.innerHTML = '';\n\n        const t1 = \"Total number of waypoints in the mission plan\";\n        this.#dom_stat_waypoints = this._create_dom_output();\n        this.#dom_stat_waypoints.title = t1;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_stat_waypoints, t1));\n        this.#stats_results_element.appendChild(this.#dom_stat_waypoints);\n\n        const t2 = \"Total distance traveled during the mission plan\";\n        this.#dom_stat_distance = this._create_dom_output();\n        this.#dom_stat_distance.title = t2;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Distance:\", this.#dom_stat_distance, t2));\n        this.#stats_results_element.appendChild(this.#dom_stat_distance);\n\n        const t3 = \"Total time taken to fly the mission plan\";\n        this.#dom_stat_duration = this._create_dom_output();\n        this.#dom_stat_duration.title = t3;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Duration:\", this.#dom_stat_duration, t3));\n        this.#stats_results_element.appendChild(this.#dom_stat_duration);\n\n        const t4 = \"Total number of images taken during the mission plan\";\n        this.#dom_stat_images = this._create_dom_output();\n        this.#dom_stat_images.title = t4;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Images:\", this.#dom_stat_images, t4));\n        this.#stats_results_element.appendChild(this.#dom_stat_images);\n    }\n\n    reset() {\n        this.#gen_dom();\n\n        //Update the planner\n        this.update_statistics();\n    }\n}\n","import { NeuronDOMFactory } from \"./neuron_dom_factory\";\nimport { NeuronCameraSpecifications } from \"./neuron_interfaces\";\nimport { NeuronOptionsBoolean, NeuronOptionsNumber, NeuronOptions } from \"./neuron_options\";\n\n//TODO: Document\nexport class NeuronSettings extends NeuronDOMFactory {\n    #element_name_options:string;\n    #stats_options_element:HTMLElement;\n\n    //Flight options\n    #dom_option_show_path:HTMLInputElement;\n    #dom_option_speed:HTMLInputElement;\n    //Capture parameters\n    #dom_option_camera_name:HTMLSelectElement;\n    #dom_option_camera_focal_length:HTMLInputElement;\n    #dom_option_camera_image_width:HTMLInputElement;\n    #dom_option_camera_image_height:HTMLInputElement;\n    #dom_option_camera_sensor_width:HTMLInputElement;\n    #dom_option_camera_sensor_height:HTMLInputElement;\n\n    static _camera_focal_length_min:number = 0;\n    static _camera_sensor_width_min:number = 0;\n    static _camera_sensor_height_min:number = 0;\n    static _camera_image_width_min:number = 0;\n    static _camera_image_height_min:number = 0;\n\n    constructor(element_name_options:string) {\n        super('fp-options');\n\n        this.#element_name_options = element_name_options;\n\n        this.#dom_option_show_path = null;\n        this.#dom_option_speed = null;\n        this.#dom_option_camera_name = null;\n        this.#dom_option_camera_focal_length = null;\n        this.#dom_option_camera_image_width = null;\n        this.#dom_option_camera_image_height = null;\n        this.#dom_option_camera_sensor_width = null;\n        this.#dom_option_camera_sensor_height = null;\n\n        this.#stats_options_element = null;\n\n        NeuronOptions.set_dom_callback(this.#update_dom_from_options.bind(this));\n    }\n\n    #update_option_speed_dom() {\n        if(this.#dom_option_speed)\n            NeuronOptions.set_option_number(NeuronOptionsNumber.MISSION_SPEED, this.#dom_option_speed.valueAsNumber, true, false);\n    }\n\n    #update_option_show_path() {\n        if(this.#dom_option_show_path)\n            NeuronOptions.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, this.#dom_option_show_path.checked, true, false);\n    }\n\n    #update_dom_from_options() {\n        if(this.#dom_option_show_path)\n            this.#dom_option_show_path.checked = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\n\n        if(this.#dom_option_speed)\n            this.#dom_option_speed.value = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED).toString();\n\n        this.set_camera(NeuronOptions.get_camera(), false);\n    }\n\n    #gen_dom() {\n        //Options\n        this.#stats_options_element = document.getElementById(this.#element_name_options);\n        this.#stats_options_element.innerHTML = '';\n\n        const t5 = \"Display the calculated flight path on the map\";\n        this.#dom_option_show_path = this._create_dom_input_checkbox(NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH), this.#update_option_show_path.bind(this));\n        this.#dom_option_show_path.title = t5;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Show path:\", this.#dom_option_show_path, t5));\n        this.#stats_options_element.appendChild(this.#dom_option_show_path);\n\n        const t0 = \"Speed of the aircraft during regular flight in metres per second\";\n        this.#dom_option_speed = this._create_dom_input_number(NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED), this.#update_option_speed_dom.bind(this), 0.1);\n        this.#dom_option_speed.title = t0;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Speed (m/s):\", this.#dom_option_speed, t0));\n        this.#stats_options_element.appendChild(this.#dom_option_speed);\n\n        const tb = \"Camera configuration for survey parameters.\";\n        let dom_break = this._create_dom_output();\n        dom_break.title = tb;\n        let dom_break_label = this._create_dom_label(\"Camera Config.\", dom_break, tb)\n        dom_break_label.classList.add('fp-stats-option-content-subtitle');\n        this.#stats_options_element.appendChild(dom_break_label);\n        this.#stats_options_element.appendChild(dom_break);\n\n        let camera = NeuronOptions.get_camera();\n        const t11 = \"Camera preset values for calculations based off of typical drone survey cameras\";\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\n        this.#dom_option_camera_name = this._create_dom_input_select(camera_names, camera_names, this.#update_camera_from_dom.bind(this));\n        this.#dom_option_camera_name.title = t11;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Camera:\", this.#dom_option_camera_name, t11));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_name);\n        //Manually set the camera name based off of the currently loaded camera\n        this.#set_camera_selector(camera);\n\n        const t12 = \"Camera focal length in millimeters\";\n        this.#dom_option_camera_focal_length = this._create_dom_input_number(camera.focal_length, this.#update_camera_focal_length_from_dom.bind(this), NeuronSettings._camera_focal_length_min);\n        this.#dom_option_camera_focal_length.title = t12;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"F.Length:\", this.#dom_option_camera_focal_length, t12));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_focal_length);\n\n        const t13 = \"Camera sensor width in millimeters\";\n        this.#dom_option_camera_sensor_width = this._create_dom_input_number(camera.sensor_width, this.#update_camera_sensor_width_from_dom.bind(this), NeuronSettings._camera_sensor_width_min);\n        this.#dom_option_camera_sensor_width.title = t13;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Width:\", this.#dom_option_camera_sensor_width, t13));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_width);\n\n        const t14 = \"Camera sensor height in millimeters\";\n        this.#dom_option_camera_sensor_height = this._create_dom_input_number(camera.sensor_height, this.#update_camera_sensor_height_from_dom.bind(this), NeuronSettings._camera_sensor_height_min);\n        this.#dom_option_camera_sensor_height.title = t14;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Height:\", this.#dom_option_camera_sensor_height, t14));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_height);\n\n        const t15 = \"Camera image width in pixels\";\n        this.#dom_option_camera_image_width = this._create_dom_input_number(camera.image_width, this.#update_camera_image_width_from_dom.bind(this), NeuronSettings._camera_image_width_min);\n        this.#dom_option_camera_image_width.title = t15;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Width:\", this.#dom_option_camera_image_width, t15));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_width);\n\n        const t16 = \"Camera image height in pixels\";\n        this.#dom_option_camera_image_height = this._create_dom_input_number(camera.image_height, this.#update_camera_image_height_from_dom.bind(this), NeuronSettings._camera_image_height_min);\n        this.#dom_option_camera_image_height.title = t16;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Height:\", this.#dom_option_camera_image_height, t16));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_height);\n    }\n\n    #set_camera_selector(camera:NeuronCameraSpecifications = NeuronOptions.camera_preset_custom) {\n        if(this.#dom_option_camera_name) {\n            let matched_camera:boolean = false;\n\n            //Go through our list and find possible matches for our set camera\n            const camera_matches = NeuronOptions.camera_presets.filter(x => x.name == camera.name);\n            if(camera_matches.length) {\n                const full_matches = camera_matches.filter(x => x.equals(camera));\n                matched_camera = full_matches.length > 0;\n            }\n\n            //If there is a proper match, then use that name (details should be filled in by set_camera())\n            //Otherwise it is a custom camera\n            this.#dom_option_camera_name.value = matched_camera ? camera.name : NeuronOptions.camera_preset_custom.name;\n        }\n    }\n\n    // set_camera(camera:NeuronCameraSpecifications) {\n    //     this.#set_camera(camera);\n    // };\n\n    // #set_camera(camera:NeuronCameraSpecifications, update_calcs:boolean = true) {\n\n    set_camera(camera:NeuronCameraSpecifications, update_settings:boolean = true) {\n        if(update_settings)\n            NeuronOptions.set_camera(camera, true, false);\n\n        this.#set_camera_selector(camera);\n\n        if(this.#dom_option_camera_focal_length)\n            this.#dom_option_camera_focal_length.value = Math.max(NeuronSettings._camera_focal_length_min, camera.focal_length).toString();\n        if(this.#dom_option_camera_sensor_width)\n            this.#dom_option_camera_sensor_width.value = Math.max(NeuronSettings._camera_sensor_width_min, camera.sensor_width).toString();\n        if(this.#dom_option_camera_sensor_height)\n            this.#dom_option_camera_sensor_height.value = Math.max(NeuronSettings._camera_sensor_height_min, camera.sensor_height).toString();\n        if(this.#dom_option_camera_image_width)\n            this.#dom_option_camera_image_width.value = Math.max(NeuronSettings._camera_image_width_min, camera.image_width).toString();\n        if(this.#dom_option_camera_image_height)\n            this.#dom_option_camera_image_height.value = Math.max(NeuronSettings._camera_image_height_min, camera.image_height).toString();\n    }\n\n    #update_camera_from_dom() {\n        const value = this.#dom_option_camera_name.value;\n\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\n        let camera = NeuronOptions.camera_preset_custom.copy();\n\n        if(camera_names.includes(value)) {\n            const matches = NeuronOptions.camera_presets.filter(x => x.name == value);\n            if(matches.length > 0) {\n                camera = matches[0].copy();\n            }\n        }\n\n        this.set_camera(camera);\n        // this.#calculate_and_update_camera_variables();\n    }\n\n    #update_camera_focal_length_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.focal_length = this.#dom_option_camera_focal_length.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_sensor_width_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.sensor_width = this.#dom_option_camera_sensor_width.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_sensor_height_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.sensor_height = this.#dom_option_camera_sensor_height.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_image_width_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.image_width = this.#dom_option_camera_image_width.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_image_height_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.image_height = this.#dom_option_camera_image_height.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    reset() {\n        this.#gen_dom();\n    }\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { NeuronOptions } from './neuron_options';\nimport { app_elements_ignore_help_subs, app_element_prefix_help, InterfaceAppElements, InterfaceSummaryTabName, NeuronInterfacePoint } from './neuron_interfaces';\nimport { NeuronPlanner } from './neuron_planner';\nimport { NeuronMap } from './neuron_map';\nimport { NeuronBrief } from './neuron_brief';\nimport { NeuronStatistics } from './neuron_statistics';\nimport { NeuronHelp } from './neuron_help';\nimport { mm_to_px } from './neuron_tools_common';\nimport { neuron_load_dom_icons } from './interface_fontawesome'\nimport { get_supported_kmx_types } from './neuron_tools_kml'\nimport { NeuronSettings } from './neuron_settings';\n\nimport \"../css/index.css\";\n\ndeclare global {\n    interface Window {\n        neuron_planner: NeuronPlanner;\n        neuron_map: NeuronMap;\n        neuron_brief: NeuronBrief;\n        neuron_statistics: NeuronStatistics;\n        neuron_settings:NeuronSettings;\n        neuron_help: NeuronHelp;\n        neuron_set_panel_view: (panel_name:InterfaceSummaryTabName) => void;\n    }\n}\n\nconsole.log(`--== Neuron Planner by V-TOL Aerospace ==--`);\n\n//Initialize all of our options\nNeuronOptions.init();\n\n//Print-specific variables to store for later\nconst print_size_with_margin_mm = {\n    width: 190,   /* 210 */\n    height: 277/2,   /* 297 */\n}\nconst print_size_with_margin_px = {\n    width: mm_to_px(print_size_with_margin_mm.width),\n    height: mm_to_px(print_size_with_margin_mm.height)\n}\n\n//Application helpers\nwindow.neuron_set_panel_view = (tab:InterfaceSummaryTabName) => {\n    let el = <HTMLInputElement>document.getElementById(tab);\n    if(el)\n        el.checked = true;\n}\n\n//Application variables\nwindow.neuron_planner = new NeuronPlanner(InterfaceAppElements.PLAN);\nwindow.neuron_map = new NeuronMap(InterfaceAppElements.MAP, InterfaceAppElements.HELP, window.neuron_planner);\nwindow.neuron_brief = new NeuronBrief(window.neuron_planner, InterfaceAppElements.BRIEF);\nwindow.neuron_statistics = new NeuronStatistics(window.neuron_planner, window.neuron_brief, InterfaceAppElements.STATS);\nwindow.neuron_settings = new NeuronSettings(InterfaceAppElements.OPTIONS);\nwindow.neuron_help = new NeuronHelp(app_element_prefix_help, app_elements_ignore_help_subs);\n\n/** Toggles the initial application loading splash screen\n * @param  {boolean} show Sets the application to show the loader splash screen if true.\n */\nfunction show_loader(show:boolean) {\n    const el_loader = document.getElementById(InterfaceAppElements.LOADER);\n    const el_app = document.getElementById(InterfaceAppElements.APP);\n    el_loader.style.display = show ? 'flex' : 'none';\n    el_app.style.display = show ? 'none' : 'flex';\n}\n\n/**Handles the logic for dragging over files onto the application/map screen. This prevents the browser from doing something weird during drag.\n * @param  {DragEvent} event event that triggered the drag-over\n */\nfunction dragOverHandler(event:DragEvent) {\n    // console.log('File(s) in drop zone');\n\n    // Prevent default behavior (Prevent file from being opened)\n    event.preventDefault();\n}\n\nlet _dragdrop_counter = 0;\n/**Handles the logic for dragging over files onto the application/map screen. This reveals the drag-drop text overlay.\n * @param  {DragEvent} event event that triggered the drag-over\n */\n function dragEnterHandler(event:DragEvent) {\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\n    el.style.display = 'flex';\n    _dragdrop_counter++;\n}\n\n/**Handles the logic for dragging over files onto the application/map screen. This hides the drag-drop text overlay.\n * @param  {DragEvent} event event that triggered the drag-over\n */\n function dragLeaveHandler(event:DragEvent) {\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\n    _dragdrop_counter--;\n    if(_dragdrop_counter <= 0)\n        el.style.display = 'none';\n}\n\n/** Handles the logic for dragging and dropping files onto the application/map screen. This allows drag-drop import of mission and KMx files\n * @param  {DragEvent} event event that triggered the drag-drop\n */\nfunction dragDropHandler(event:DragEvent) {\n    event.preventDefault();\n\n    let el = document.getElementById(InterfaceAppElements.DRAGDROP);\n    _dragdrop_counter--;\n    if(_dragdrop_counter <= 0)\n        el.style.display = 'none';\n\n    const kmx_types = get_supported_kmx_types();\n    for(const file of event.dataTransfer.items) {\n        if(file.type == 'application/json') {\n            window.neuron_planner.load_mission_file(file.getAsFile());\n        } else if (kmx_types.includes(file.type)) {\n            window.neuron_planner.import_features_from_kmx(file.getAsFile());\n        }\n    }\n}\n\n/** Performs the initial load and setup of the application. This should be run after the document has been loaded.\n */\nasync function load_app_data() {\n    //Do the FA switch-out for our DOM icons\n    neuron_load_dom_icons();\n\n    //Need to do this next, because many of the following need to known their final size on reset\n    show_loader(false);\n\n    window.neuron_planner.reset();\n    window.neuron_map.reset();\n    window.neuron_statistics.reset();\n    window.neuron_settings.reset();\n    window.neuron_brief.reset();\n    window.neuron_help.reset();\n\n    window.neuron_planner.set_map(window.neuron_map);\n    window.neuron_planner.on_mission_change(window.neuron_statistics.update_statistics.bind(window.neuron_statistics));\n\n    let el_app = document.getElementById(InterfaceAppElements.APP);\n    el_app.ondrop = dragDropHandler;\n    el_app.ondragover = dragOverHandler;\n    el_app.ondragenter = dragEnterHandler;\n    el_app.ondragleave = dragLeaveHandler;\n\n    //Update the map location if we can get the user's current location\n    navigator.geolocation.getCurrentPosition( async (location) => {\n        window.neuron_map.set_location(new NeuronInterfacePoint(location.coords.latitude, location.coords.longitude));\n    });\n}\n\n/** Prepares the page layout to take a print-friendly form\n * @param  {Event} event (unused)\n */\nfunction handle_before_print(event:Event) {\n    //Turn off the map tools\n    window.neuron_map.toggle_map_tools(false);\n    //Turn off the map tools\n    window.neuron_map.show_map_help(false);\n    //Set the size of the map, and reset it to fit the new size\n    const map = document.getElementById(InterfaceAppElements.MAP);\n    // map.style.width = `${print_size_with_margin_mm.width}mm`;\n    // map.style.height = `${print_size_with_margin_mm.height}mm`;\n    // window.neuron_map.reset();\n    //Position all visible elements on the map\n    const side_pad = 50;\n\n    let pl = side_pad;\n    let pr = side_pad;\n    if(print_size_with_margin_px.width > map.offsetWidth) {\n        const diff = print_size_with_margin_px.width - map.offsetWidth;\n        pr = -diff + side_pad;\n    } else {\n        pr = side_pad + (map.offsetWidth - print_size_with_margin_px.width);\n    }\n\n    let pt = side_pad;\n    let pb = side_pad;\n    if(print_size_with_margin_px.height > map.offsetHeight) {\n        const diff = print_size_with_margin_px.height - map.offsetHeight;\n        pb = -diff + side_pad;\n    } else {\n        pb = side_pad + (map.offsetHeight - print_size_with_margin_px.height);\n    }\n\n    window.neuron_planner.fit_mission_on_map(true, pl, pt, pr, pb);\n\n    //Generate the brief\n    window.neuron_brief.update_mission_brief();\n}\n\n/** Prepares the page layout to take the normal application form\n * @param  {Event} event (unused)\n */\nfunction handle_after_print(event:Event) {\n    //Turn off the map tools\n    window.neuron_map.toggle_map_tools(true);\n    //Set the size of the map, and reset it to fit the new size\n    const map = document.getElementById(InterfaceAppElements.MAP);\n    map.style.width = `auto`;\n    map.style.height = `auto`;\n    window.neuron_map.reset();\n    //Position all visible elements on the map\n    // window.neuron_planner.fit_mission_on_map();\n}\n\ndocument.addEventListener('DOMContentLoaded', load_app_data, false);\nwindow.addEventListener('beforeprint', handle_before_print);\nwindow.addEventListener('afterprint', handle_after_print);\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","push","module","id","i","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","NeuronIcons","_neuron_get_icon_fa","neuron_icon","LOAD_PLAN","SAVE_PLAN","CLEAR_PLAN","UPLOAD_PLAN","CREATE_BRIEF","PLAN_LIST","HELP","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","DELETE","IDENTIFY","REVEAL","HIDE","MINIMIZE","EXPAND","FIT_ZOOM","POINT","POLYGON","RULER","IMPORT_FILE","EXPORT_FILE","neuron_get_icon","is_small","opts","transform","size","node","HTMLCollection","default_icon_options","iconUrl","shadowUrl","iconRetinaUrl","get_neuron_map_marker","class_name","className","LeafletContextMenuItem","constructor","text","icon","callback","create_popup_context_dom","popup_title","context_items","marker_context","dom","t","d","ic","classList","add","s","onclick","zero_pad","num","places","padStart","lastId","NeuronUID","prefix","flight_distance_from_coords","coords","total_distance","p1","p2","u1","to_UTM","u2","zone","GetDistance2D","alt_d","Math","pow","abs","altitude","sqrt","flight_time_from_duration","duration","t_h","floor","t_m","t_s","mm_to_px","mm","devicePixelRatio","EPSG_code_from_utm_zone","is_south","zf","projection","get_UTM_is_south","latitude_or_zone","UTMPos","x","y","tag","equals","other","match_tag","copy","relative_point_from_dist_bearing","bearing","distance","degN","deg2rad","PI","cos","sin","relative_point_from_dist_angle","angle","b","GetAngle","atan2","static","vertices","total","l","to_NeuronInterfacePoint","p","NeuronInterfacePoint","projection_code","point","latitude","longitude","get_UTM_zone","UTMLine","base_pnt","StartPosition","GridPointTags","Rect","Left","Top","Width","Height","Right","Bottom","MidWidth","MidHeight","diag_distance","remove_item_from_array","array","indexOf","FindLineIntersection","start1","end1","start2","end2","denom","r","PointInPolygon","poly","inside","oldPoint","newPoint","FindLineIntersectionExtension","findClosestPoint","start","answer","current_best","Number","MAX_VALUE","pnt","dist1","findClosestLine","min_distance","METERS_TO_EXTEND","perpendicularOrientation","degrees","AddAngle","start_perpendicular_line","stop_perpendicular_line","intersectedPoints","Map","ordered_min_to_max","line","set","distance_p","has","ordered_keys","Array","from","keys","sort","a","key","filtered_lines","entries","filter","shortest","shorter_pnt","InterfaceSummaryTabName","InterfaceAppElements","heading","to_leaflet","latlng","lat","lng","from_NeuronInterfacePoint","utm","positions","object","isFinite","j","isObjectOfDataType","isNaN","to_json","use_imperial","use_decimal","toStringLatitude","toStringAltitude","toFixed","toStringLongitude","_altitude_ratio","dd","is_lng","dir","deg","min","sec","NeuronCameraSpecifications","name","focal_length","sensor_width","sensor_height","image_width","image_height","is_valid","get_ground_resolution","res","get_projected_size","get_distance","ground_resolution","ground_span","fov2_w","tan","get_projection","proj","fov2_h","h2","w2","type","TYPE","version","VERSION","NeuronOptionsBoolean","NeuronOptionsNumber","NeuronOptionsString","NeuronOptions","set_option_boolean","SHOW_PATH","set_option_number","MISSION_SPEED","set_camera","camera_preset_custom","bind","value","trigger_callbacks","trigger_dom","set_option_string","CAMERA_NAME","CAMERA_FOCAL_LENGTH","CAMERA_IMAGE_WIDTH","CAMERA_IMAGE_HEIGHT","CAMERA_SENSOR_WIDTH","CAMERA_SENSOR_HEIGHT","get","get_option_string","get_option_number","get_option_boolean","Boolean","delete","cb","values","camera_presets","NeuronDOMFactory","css_prefix","_create_dom_label","input","description","hide_label","htmlFor","title","visibility","_create_dom_output","_create_dom_input_file","on_change","accepts","accept","onchange","_create_dom_input_button","_create_dom_input_textbox","_create_dom_input_number","max","step","_create_dom_input_range","_create_dom_input_checkbox","checked","_create_dom_input_select","labels","selected_option","option","selected","NeuronFeatureBase","super","set_remove_callback","set_change_callback","set_move_callback","_trigger_on_changed","_add_layer_to_map","m","addTo","console","error","_remove_layer_from_map","index_visible","index_hidden","_get_dom","button_class","_button_sizes","b0","zoom_to_feature","bv","toggle_visibility","b1","b2","b4","show_help","b3","remove_feature","on_remove","on_move","get_features","feature","group","fitBounds","getBounds","padding","neuron_map","show_map_help","is_flyable","IS_FLYABLE","get_path_coords","get_dom","but","innerHTML","icons","includes","direction","setTimeout","neuron_set_panel_view","PLAN","scrollIntoView","NAME","HELP_KEY","_distance_ratio","_area_ratio","NeuronHelp","help_element_name","ignore_sub_keys","AbortController","stop","abort","reset","help_elements","querySelectorAll","trigger_element","target_element","class_highlight","target_element_ids","split","target_element_id","getElementById","addEventListener","key_hover_start","key_hover_end","HELP_PREFIX_MISSION","NeuronFeatureWaypoint","set_point","add_callback","set_options_subscriber","remove_point_by_context","context","warn","draggable","autoPan","on","menu_items","show_on_plan","bindPopup","get_wait_duration","set_wait_duration","wait_duration","get_image_count","get_capture_image","set_capture_image","capture_image","c","t0","t1","t2","t3","t4","t5","t20","OPTIONS","t18","_gsd_ratio","append","set_ground_resolution","from_json","innerText","event","from_leaflet","getLatLng","update_marker","update_dom","update_calcs","setLatLng","resolution","get_camera","valueAsNumber","get_filename","ext","Date","now","download_file","filename","burl","createObjectURL","display","body","click","type_kml","type_kmz","kml_extract_features","kml_plain_text","xmlDoc","DOMParser","parseFromString","ret","documentElement","nodeName","markers","paths","polygons","getElementsByTagName","placeMarkName","childNodes","nodeValue","trim","kml_polygons","kml_markers","kml_paths","multi","ind","marker","TypeError","point_from_coord","path","kml_points","points","polygon","parseFloat","lon","alt","kml_download_from_neuron_data","waypoints","textXML","kml_data_from_neuron_data","file","Blob","kmz_download_from_neuron_data","kmz","blobWriter","writer","close","getData","get_kmz_from_kml_data","xmlDocument","implementation","createDocument","kmlNode","documentNode","kml_create_point_node","kml_create_path_node","kml_create_polygon_node","XMLSerializer","serializeToString","kml_document_to_string","placemarkNode","nameNode","descriptionNode","pointNode","coordinatesNode","coordinates","lineStringNode","plist","polygonNode","boundaryNode","ringNode","NeuronFeatureLine","end","set_start","set_end","update_line","setLatLngs","color","corners_visible","update_show_ends","show_ends","_set_on_change_internal","get_line","get_ends_as_points","ends","t21","t22","t11","t12","get_label","set_label","label","dist","NeuronFeaturePolygon","corners","planner","set_planner","add_corners","update_polygon","update_show_corners","show_corners","move_corner_forwards","corner","move_corner_backwards","select_corner","get_polygon","add_corner","get_corners","get_corners_as_points","remove_point_by_corner","add_point_at_location","ne","getNorthEast","sw","getSouthWest","dx","dy","t41","t42","arr","old_index","new_index","diff","utm_points","perimeter","area","AreaOfPolygon","replace_polygon_with_survey","NeuronFeatureSurvey","show_waypoints","TopLeft","update_survey","update_show_waypoints","update_show_photos","show_photos","set_altitude","set_distance","set_spacing","spacing","set_angle","set_overshoot1","overshoot1","set_overshoot2","overshoot2","set_startpos","startpos","set_minLaneSeparation","minLaneSeparation","set_leadin","leadin","get_show_waypoints","get_show_photos","get_altitude","get_spacing","get_angle","get_overshoot1","get_overshoot2","get_startpos","get_minLaneSeparation","get_leadin","get_image_locations","photos","overlap_factor","photo_distance","lane","get_lane_coords","ps","pe","lane_distance","lane_angle","steps","ceil","p_last","photo_count","lanes","START","MIDDLE_START","MIDDLE_END","END","t00","t01","t03","t02","tb2","dom_break2","dom_break_label2","t17","_xlap_ratio","t19","tb1","dom_break1","dom_break_label1","TopRight","BottomLeft","BottomRight","t6","t7","t9","t8","t10","get_sidelap","get_overlap","set_sidelap","sidelap","set_overlap","overlap","uc","x_step","y_step","utl","ubr","ptl","pbr","fillColor","sidelap_factor","clearTimeout","fire_on_change","minLaneSeparationINMeters","utm_zone","utm_positions","utmpos","min_x","min_y","max_x","max_y","getPolyMinMax","diag_dist","grid","lines","left","l_start","l_end","l_next","grid_no","closest_distance","farthest_distance","MIN_VALUE","closest_point","farthest_point","matches","crosses","new_utmpos","newline","start_pos_utm","closest","last_pnt","ans","new_start","utmpos1","MIDDLE","new_end","utmpos2","from_UTMs","CreateGrid","val","v","parseInt","Object","settings_changed","camera","NeuronFeaturePoint","get_point","replace_point_with_waypoint","NeuronPlanner","plan_element_name","get_mission_items","get_mission_as_json","mission_data","set_mission_from_json","settings","load","mission_items","fit_mission_on_map","save_mission_file","as_json","get_mission_as_points","load_mission_file","parse","allow_animate","pad_left","pad_top","pad_right","pad_bottom","Promise","resolve","get_leaflet_map","features","fg","old_snap","zoomSnap","ev","off","paddingTopLeft","paddingBottomRight","animate","export_mission_kml","set_map","on_mission_change","get_last_item_altitude","add_mission_item","add_mission_items","items","new_ind","remove_mission_item","clear_mission","mission_doms","mission_ids","old_elements","children","el","i_next","nodes","ind_n","ind_nn","insertBefore","old_item","waypoint","survey","import_features_from_kmx_multiple","files","import_features_from_kmx","cb_file_loaded","log","reader","getEntries","got_data","kmx_load_file","run_update","f","bounds","NeuronBrief","brief_element_name","update_mission_brief","mission_features","notables","get_mission_notables","summary","get_mission_summary","table","headings","h","th","components","field1","field2","field3","ind_values_start","td","brief","time_transit","time_duration","get_components_from_point","total_duration","total_images","takeoff_duration","land_duration","extra_mission_duration","takeoff_distance","land_distance","flight_speed","point_last","takeoff_point","step0","wait","image_count","step_duration","time_land","land_point","land_component","step_n","total_transit_duration","step_total_time","step_total_distance","step_total_images","NeuronSettings","element_name_options","set_dom_callback","update_settings","_camera_focal_length_min","_camera_sensor_width_min","_camera_sensor_height_min","_camera_image_width_min","_camera_image_height_min","tb","dom_break","dom_break_label","camera_names","t13","t14","t15","t16","matched_camera","camera_matches","init","print_size_with_margin_px","dragOverHandler","preventDefault","tab","neuron_planner","map_element_name","update_path","show","help_key","toggle_map_help","set_location","location","zoom","setView","zoom_to","feature_group","add_feature","add_features","on_double_click","create_point_in_view","create_waypoint_in_view","create_line_in_view","create_polygon_in_view","create_survey_in_view","path_points","toggle_map_tools","zoomControl","invalidateSize","tiles_grey","attribution","maxZoom","tileSize","zoomOffset","accessToken","tiles_satellite","Street","Satellite","doubleClickZoom","layers","MAP","neuron_brief","BRIEF","neuron_statistics","element_name_stats","update_statistics","dist_km","STATS","neuron_settings","neuron_help","_dragdrop_counter","dragEnterHandler","DRAGDROP","dragLeaveHandler","dragDropHandler","kmx_types","dataTransfer","getAsFile","icon_name","icon_id","neuron_load_dom_icons","el_loader","LOADER","el_app","APP","show_loader","ondrop","ondragover","ondragenter","ondragleave","navigator","geolocation","getCurrentPosition","side_pad","pr","offsetWidth","pb","offsetHeight","width","height"],"sourceRoot":""}