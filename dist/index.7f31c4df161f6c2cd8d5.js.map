{"version":3,"file":"index.7f31c4df161f6c2cd8d5.js","mappings":"yLAIIA,EAAgC,IAAIC,IAAI,YACxCC,EAAgC,IAAID,IAAI,YACxCE,EAAgC,IAAIF,IAAI,WACxCG,EAA0B,IAA4B,KACtDC,EAAqC,IAAgCL,GACrEM,EAAqC,IAAgCJ,GACrEK,EAAqC,IAAgCJ,GAEzEC,EAAwBI,KAAK,CAACC,EAAOC,GAAI,4qRAA8qRL,EAAqC,iIAAmIC,EAAqC,ioCAAmoCC,EAAqC,8hMAAmiM,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,qDAAqD,MAAQ,GAAG,SAAW,urKAAurK,eAAiB,CAAC,gggBAAmggB,WAAa,MAE96qC,W,8DCXIH,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,0sBAA2sB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iCAAiC,MAAQ,GAAG,SAAW,qPAAqP,eAAiB,CAAC,2sBAA2sB,WAAa,MAEryD,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,qyEAA0zE,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,iCAAiC,MAAQ,GAAG,SAAW,k2BAAk2B,eAAiB,CAAC,syEAA0zE,WAAa,MAEhnL,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,8qBAA+qB,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,+BAA+B,MAAQ,GAAG,SAAW,oSAAoS,eAAiB,CAAC,+qBAA+qB,WAAa,MAE1xD,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,43EAA63E,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,gCAAgC,MAAQ,GAAG,SAAW,w8BAAw8B,eAAiB,CAAC,63EAA63E,WAAa,MAE31L,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,6kFAA8kF,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,sCAAsC,MAAQ,GAAG,SAAW,q1BAAq1B,eAAiB,CAAC,8kFAA8kF,WAAa,MAEhpM,W,8DCJIN,E,MAA0B,GAA4B,KAE1DA,EAAwBI,KAAK,CAACC,EAAOC,GAAI,0xCAA2xC,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,yCAAyC,MAAQ,GAAG,SAAW,keAAke,eAAiB,CAAC,2xCAA2xC,WAAa,MAE1rG,W,QCDAD,EAAOE,QAAU,SAAUC,GACzB,IAAIC,EAAO,GA6FX,OA3FAA,EAAKC,SAAW,WACd,OAAOC,KAAKC,KAAI,SAAUC,GACxB,IAAIC,EAAU,GACVC,OAA+B,IAAZF,EAAK,GA4B5B,OA1BIA,EAAK,KACPC,GAAW,cAAcE,OAAOH,EAAK,GAAI,QAGvCA,EAAK,KACPC,GAAW,UAAUE,OAAOH,EAAK,GAAI,OAGnCE,IACFD,GAAW,SAASE,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,OAG5EC,GAAWN,EAAuBK,GAE9BE,IACFD,GAAW,KAGTD,EAAK,KACPC,GAAW,KAGTD,EAAK,KACPC,GAAW,KAGNA,KACNI,KAAK,KAIVT,EAAKU,EAAI,SAAWC,EAASC,EAAOC,EAAQC,EAAUC,GAC7B,iBAAZJ,IACTA,EAAU,CAAC,CAAC,KAAMA,OAASK,KAG7B,IAAIC,EAAyB,GAE7B,GAAIJ,EACF,IAAK,IAAIK,EAAI,EAAGA,EAAIhB,KAAKM,OAAQU,IAAK,CACpC,IAAIrB,EAAKK,KAAKgB,GAAG,GAEP,MAANrB,IACFoB,EAAuBpB,IAAM,GAKnC,IAAK,IAAIsB,EAAK,EAAGA,EAAKR,EAAQH,OAAQW,IAAM,CAC1C,IAAIf,EAAO,GAAGG,OAAOI,EAAQQ,IAEzBN,GAAUI,EAAuBb,EAAK,WAIrB,IAAVW,SACc,IAAZX,EAAK,KAGdA,EAAK,GAAK,SAASG,OAAOH,EAAK,GAAGI,OAAS,EAAI,IAAID,OAAOH,EAAK,IAAM,GAAI,MAAMG,OAAOH,EAAK,GAAI,MAF/FA,EAAK,GAAKW,GAOVH,IACGR,EAAK,IAGRA,EAAK,GAAK,UAAUG,OAAOH,EAAK,GAAI,MAAMG,OAAOH,EAAK,GAAI,KAC1DA,EAAK,GAAKQ,GAHVR,EAAK,GAAKQ,GAOVE,IACGV,EAAK,IAGRA,EAAK,GAAK,cAAcG,OAAOH,EAAK,GAAI,OAAOG,OAAOH,EAAK,GAAI,KAC/DA,EAAK,GAAKU,GAHVV,EAAK,GAAK,GAAGG,OAAOO,IAOxBd,EAAKL,KAAKS,MAIPJ,I,QClGTJ,EAAOE,QAAU,SAAUsB,EAAKC,GAK9B,OAJKA,IACHA,EAAU,IAGPD,GAILA,EAAME,OAAOF,EAAIG,WAAaH,EAAII,QAAUJ,GAExC,eAAeK,KAAKL,KACtBA,EAAMA,EAAIM,MAAM,GAAI,IAGlBL,EAAQM,OACVP,GAAOC,EAAQM,MAKb,oBAAoBF,KAAKL,IAAQC,EAAQO,WACpC,IAAKrB,OAAOa,EAAIS,QAAQ,KAAM,OAAOA,QAAQ,MAAO,OAAQ,KAG9DT,GAnBEA,I,QCNXxB,EAAOE,QAAU,SAAUM,GACzB,IAAIC,EAAUD,EAAK,GACf0B,EAAa1B,EAAK,GAEtB,IAAK0B,EACH,OAAOzB,EAGT,GAAoB,mBAAT0B,KAAqB,CAC9B,IAAIC,EAASD,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUN,MACzDO,EAAO,+DAA+D9B,OAAOyB,GAC7EM,EAAgB,OAAO/B,OAAO8B,EAAM,OACpCE,EAAaT,EAAWU,QAAQrC,KAAI,SAAUsC,GAChD,MAAO,iBAAiBlC,OAAOuB,EAAWY,YAAc,IAAInC,OAAOkC,EAAQ,UAE7E,MAAO,CAACpC,GAASE,OAAOgC,GAAYhC,OAAO,CAAC+B,IAAgB7B,KAAK,MAGnE,MAAO,CAACJ,GAASI,KAAK,Q,QClBxB,IAAIkC,EAAc,GAElB,SAASC,EAAqBC,GAG5B,IAFA,IAAIC,GAAU,EAELpC,EAAI,EAAGA,EAAIiC,EAAYnC,OAAQE,IACtC,GAAIiC,EAAYjC,GAAGmC,aAAeA,EAAY,CAC5CC,EAASpC,EACT,MAIJ,OAAOoC,EAGT,SAASC,EAAa/C,EAAMqB,GAI1B,IAHA,IAAI2B,EAAa,GACbC,EAAc,GAETvC,EAAI,EAAGA,EAAIV,EAAKQ,OAAQE,IAAK,CACpC,IAAIN,EAAOJ,EAAKU,GACZb,EAAKwB,EAAQ6B,KAAO9C,EAAK,GAAKiB,EAAQ6B,KAAO9C,EAAK,GAClD+C,EAAQH,EAAWnD,IAAO,EAC1BgD,EAAa,GAAGtC,OAAOV,EAAI,KAAKU,OAAO4C,GAC3CH,EAAWnD,GAAMsD,EAAQ,EACzB,IAAIC,EAAoBR,EAAqBC,GACzCQ,EAAM,CACRC,IAAKlD,EAAK,GACVQ,MAAOR,EAAK,GACZmD,UAAWnD,EAAK,GAChBU,SAAUV,EAAK,GACfW,MAAOX,EAAK,IAGd,IAA2B,IAAvBgD,EACFT,EAAYS,GAAmBI,aAC/Bb,EAAYS,GAAmBK,QAAQJ,OAClC,CACL,IAAII,EAAUC,EAAgBL,EAAKhC,GACnCA,EAAQsC,QAAUjD,EAClBiC,EAAYiB,OAAOlD,EAAG,EAAG,CACvBmC,WAAYA,EACZY,QAASA,EACTD,WAAY,IAIhBP,EAAYtD,KAAKkD,GAGnB,OAAOI,EAGT,SAASS,EAAgBL,EAAKhC,GAC5B,IAAIwC,EAAMxC,EAAQyC,OAAOzC,GAezB,OAdAwC,EAAIE,OAAOV,GAEG,SAAiBW,GAC7B,GAAIA,EAAQ,CACV,GAAIA,EAAOV,MAAQD,EAAIC,KAAOU,EAAOpD,QAAUyC,EAAIzC,OAASoD,EAAOT,YAAcF,EAAIE,WAAaS,EAAOlD,WAAauC,EAAIvC,UAAYkD,EAAOjD,QAAUsC,EAAItC,MACzJ,OAGF8C,EAAIE,OAAOV,EAAMW,QAEjBH,EAAII,UAOVrE,EAAOE,QAAU,SAAUE,EAAMqB,GAG/B,IAAI6C,EAAkBnB,EADtB/C,EAAOA,GAAQ,GADfqB,EAAUA,GAAW,IAGrB,OAAO,SAAgB8C,GACrBA,EAAUA,GAAW,GAErB,IAAK,IAAIzD,EAAI,EAAGA,EAAIwD,EAAgB1D,OAAQE,IAAK,CAC/C,IACI0D,EAAQxB,EADKsB,EAAgBxD,IAEjCiC,EAAYyB,GAAOZ,aAKrB,IAFA,IAAIa,EAAqBtB,EAAaoB,EAAS9C,GAEtCiD,EAAK,EAAGA,EAAKJ,EAAgB1D,OAAQ8D,IAAM,CAClD,IAEIC,EAAS3B,EAFKsB,EAAgBI,IAIK,IAAnC3B,EAAY4B,GAAQf,aACtBb,EAAY4B,GAAQd,UAEpBd,EAAYiB,OAAOW,EAAQ,IAI/BL,EAAkBG,K,QCnGtB,IAAIG,EAAO,GAoCX5E,EAAOE,QAVP,SAA0B2E,EAAQC,GAChC,IAAIC,EAxBN,SAAmBA,GACjB,QAA4B,IAAjBH,EAAKG,GAAyB,CACvC,IAAIC,EAAcC,SAASC,cAAcH,GAEzC,GAAII,OAAOC,mBAAqBJ,aAAuBG,OAAOC,kBAC5D,IAGEJ,EAAcA,EAAYK,gBAAgBC,KAC1C,MAAOC,GAEPP,EAAc,KAIlBJ,EAAKG,GAAUC,EAGjB,OAAOJ,EAAKG,GAMCS,CAAUX,GAEvB,IAAKE,EACH,MAAM,IAAIU,MAAM,2GAGlBV,EAAOW,YAAYZ,K,QCzBrB9E,EAAOE,QAPP,SAA4BuB,GAC1B,IAAIkE,EAAUV,SAASW,cAAc,SAGrC,OAFAnE,EAAQoE,cAAcF,EAASlE,EAAQqE,YACvCrE,EAAQoD,OAAOc,EAASlE,EAAQA,SACzBkE,I,cCIT3F,EAAOE,QARP,SAAwC6F,GACtC,IAAIC,EAAmD,KAEnDA,GACFD,EAAaE,aAAa,QAASD,K,QC8DvChG,EAAOE,QAZP,SAAgBuB,GACd,IAAIsE,EAAetE,EAAQyE,mBAAmBzE,GAC9C,MAAO,CACL0C,OAAQ,SAAgBV,IAzD5B,SAAesC,EAActE,EAASgC,GACpC,IAAIC,EAAM,GAEND,EAAIvC,WACNwC,GAAO,cAAc/C,OAAO8C,EAAIvC,SAAU,QAGxCuC,EAAIzC,QACN0C,GAAO,UAAU/C,OAAO8C,EAAIzC,MAAO,OAGrC,IAAIN,OAAiC,IAAd+C,EAAItC,MAEvBT,IACFgD,GAAO,SAAS/C,OAAO8C,EAAItC,MAAMP,OAAS,EAAI,IAAID,OAAO8C,EAAItC,OAAS,GAAI,OAG5EuC,GAAOD,EAAIC,IAEPhD,IACFgD,GAAO,KAGLD,EAAIzC,QACN0C,GAAO,KAGLD,EAAIvC,WACNwC,GAAO,KAGT,IAAIC,EAAYF,EAAIE,UAEhBA,GAA6B,oBAATxB,OACtBuB,GAAO,uDAAuD/C,OAAOwB,KAAKE,SAASC,mBAAmBC,KAAKC,UAAUmB,MAAe,QAMtIlC,EAAQ0E,kBAAkBzC,EAAKqC,EAActE,EAAQA,SAkBjD2E,CAAML,EAActE,EAASgC,IAE/BY,OAAQ,YAjBZ,SAA4B0B,GAE1B,GAAgC,OAA5BA,EAAaM,WACf,OAAO,EAGTN,EAAaM,WAAWC,YAAYP,GAYhCQ,CAAmBR,O,QCjDzB/F,EAAOE,QAZP,SAA2BwD,EAAKqC,GAC9B,GAAIA,EAAaS,WACfT,EAAaS,WAAWC,QAAU/C,MAC7B,CACL,KAAOqC,EAAaW,YAClBX,EAAaO,YAAYP,EAAaW,YAGxCX,EAAaL,YAAYT,SAAS0B,eAAejD,O,gJCAjDjC,EAAU,GAEdA,EAAQ0E,kBAAoB,IAC5B1E,EAAQoE,cAAgB,IAElBpE,EAAQoD,OAAS,SAAc,KAAM,QAE3CpD,EAAQyC,OAAS,IACjBzC,EAAQyE,mBAAqB,IAEhB,IAAI,IAASzE,GAKJ,KAAW,YAAiB,W,ICdtCmF,E,kBAyBZ,SAASC,EAAoBC,GACzB,IAAIhG,EAAI,KAER,OAAOgG,GACH,KAAKF,EAAYG,UACbjG,EAAI,MACJ,MAEJ,KAAK8F,EAAYI,UACblG,EAAI,MACJ,MAEJ,KAAK8F,EAAYK,WACbnG,EAAI,MACJ,MAEJ,KAAK8F,EAAYM,YACbpG,EAAI,MACJ,MAEJ,KAAK8F,EAAYO,aACbrG,EAAI,MACJ,MAEJ,KAAK8F,EAAYQ,UACbtG,EAAI,MACJ,MAEJ,KAAK8F,EAAYS,KACbvG,EAAI,MACJ,MAEJ,KAAK8F,EAAYU,SACbxG,EAAI,MACJ,MAEJ,KAAK8F,EAAYW,WACbzG,EAAI,MACJ,MAEJ,KAAK8F,EAAYY,WACb1G,EAAI,MACJ,MAEJ,KAAK8F,EAAYa,YACb3G,EAAI,MACJ,MAEJ,KAAK8F,EAAYc,OACb5G,EAAI,MACJ,MAEJ,KAAK8F,EAAYe,SACb7G,EAAI,MACJ,MAEJ,KAAK8F,EAAYgB,OACb9G,EAAI,MACJ,MAEJ,KAAK8F,EAAYiB,KACb/G,EAAI,KACJ,MAEJ,KAAK8F,EAAYkB,SACbhH,EAAI,MACJ,MAEJ,KAAK8F,EAAYmB,OACbjH,EAAI,MACJ,MAEJ,KAAK8F,EAAYoB,SACblH,EAAI,KACJ,MAEJ,KAAK8F,EAAYqB,MACbnH,EAAI,MACJ,MAEJ,KAAK8F,EAAYsB,QACbpH,EAAI,MACJ,MAEJ,KAAK8F,EAAYuB,YACbrH,EAAI,MACJ,MAEJ,KAAK8F,EAAYwB,YACbtH,EAAI,MAQZ,OAAOA,EAkBJ,SAASuH,EAAgBvB,EAAyBwB,GAAmB,GACxE,IAAIxH,EAAI+F,EAAoBC,GACxByB,EAAO,CACPC,UAAW,CACTC,KAAMH,EAAW,GAAK,KAG5B,OAAOxH,GAAI,QAAKA,EAAGyH,GAAMG,KAAO,IAAIC,gBAnJxC,SAAY/B,GACR,6BACA,6BACA,+BACA,iCACA,mCACA,6BACA,mBACA,2BACA,uBACA,2BACA,gCACA,gCACA,kCACA,wBACA,4BACA,wBACA,oBACA,4BACA,sBACA,0BACA,kCACA,kCAtBJ,CAAYA,IAAAA,EAAW,KCAvB,MAAMgC,EAAuB,CACzBC,QAAS,EAAQ,IACjBC,UAAW,EAAQ,KACnBC,cAAe,EAAQ,MAIpB,SAASC,EAAsBC,GAClC,OAAO,IAAI,OAAO,OAAD,wBACV,kCAAgC,CACnCC,UAAWD,KALnB,4BAA4BL,GAiBrB,MAAMO,EAKTC,YAAYC,EAAc,GAAIC,EAAmB,KAAMC,EAA4C,MAJnG,KAAAF,KAAc,GAKV/I,KAAK+I,KAAOA,EACZ/I,KAAKgJ,KAAOA,EAETC,IACCjJ,KAAKiJ,SAAWA,IAIrB,SAASC,EAAyBC,EAAqB,SAAUC,EAAyC,GAAIC,EAA0B,MAC3I,IAAIC,EAAM3E,SAASW,cAAc,OACjCgE,EAAIV,UAAY,sBAEhB,IAAIW,EAAI5E,SAASW,cAAc,OAC/BiE,EAAEX,UAAY,4BACdW,EAAEnE,YAAYT,SAAS0B,eAAe8C,IACtCG,EAAIlE,YAAYmE,GAEhB,IAAI,MAAM/I,KAAK4I,EACX,GAAG5I,EAAG,CACF,IAAIgJ,EAAI7E,SAASW,cAAc,OAG/B,GAFAkE,EAAEZ,UAAY,2BAEXpI,EAAEwI,KACD,IAAI,IAAIS,KAAM1B,EAAgBvH,EAAEwI,MAC5BS,EAAGC,UAAUC,IAAI,4BACjBH,EAAEpE,YAAYqE,GAQtB,IAAIG,EAAIjF,SAASW,cAAc,QAC/BsE,EAAEhB,UAAY,gCACdgB,EAAExE,YAAYT,SAAS0B,eAAe7F,EAAEuI,OACxCS,EAAEpE,YAAYwE,GAEXpJ,EAAEyI,WACDO,EAAEK,QAAU,WACR,OAAOrJ,EAAEyI,SAASI,KAI1BC,EAAIlE,YAAYoE,OACb,CACH,IAAIA,EAAI7E,SAASW,cAAc,MAC/BkE,EAAEZ,UAAY,4BACdU,EAAIlE,YAAYoE,GAIxB,OAAOF,E,aC1FJ,SAASQ,EAASC,EAAYC,GACjC,OAAO5I,OAAO2I,GAAKE,SAASD,EAAQ,KAGxC,IAAIE,EAAS,EACN,SAASC,EAAUC,EAAO,SAE7B,OADAF,IACO,GAAGE,IAASF,IAGhB,SAASG,EAA4BC,GAMxC,IAAIC,EAAiB,EACrB,IAAK,IAAI/J,EAAI,EAAGA,EAAI8J,EAAOhK,OAAS,EAAGE,IAAK,CACxC,MAAMgK,EAAKF,EAAO9J,GACZiK,EAAKH,EAAO9J,EAAE,GACdkK,EAAKF,EAAGG,SACRC,EAAKH,EAAGE,OAAOD,EAAGG,MAClBrB,EAAIkB,EAAGI,cAAcF,GAErBG,EAAQC,KAAKC,IAAID,KAAKE,IAAIV,EAAGW,SAAWV,EAAGU,UAAW,GAC5DZ,GAAkBS,KAAKI,KAAKJ,KAAKC,IAAIzB,EAAE,GAAKuB,GAGhD,OAAOR,EAGJ,SAASc,EAA0BC,GACtC,MAAMC,EAAMP,KAAKQ,MAAMF,EAAW,MAC5BG,EAAMT,KAAKQ,MAAMF,EAAW,KAAO,IACnCI,EAAMV,KAAKQ,MAAMF,EAAW,KAAO,IAEzC,MAAO,GAAGxB,EAASyB,EAAI,MAAMzB,EAAS2B,EAAI,MAAM3B,EAAS4B,EAAI,KAG1D,SAASC,EAASC,GAErB,OAAQA,EAAK,KAAQ/G,OAAOgH,iBADR,GCtCxB,SAASC,EAAwBjB,EAAakB,GAC1C,MAAMC,EAAKhB,KAAKQ,MAAMX,GACtB,GAAImB,GAAM,GAAKA,EAAK,GAChB,MAAM,IAAI7G,MAAM,sBAAsB0F,KAAQmB,MAElD,MAAO,WAAWlC,EAASkC,EAAI,KAAKD,EAAW,IAAM,MAKzD,IAAI,IAAIvL,EAAI,EAAGA,GAAK,GAAIA,IAAK,CACzB,IAAIyL,EAAa,mBAAmBzL,IACpC,SAAWsL,EAAwBtL,GAAG,GAAQyL,GAC9C,SAAWH,EAAwBtL,GAAG,GAAOyL,EAAa,WAG9D,SAASC,EAAiBC,GACtB,OAAQA,EAAmB,EAWxB,MAAMC,EAMTtD,YAAYuD,EAAS,EAAKC,EAAS,EAAKzB,EAAY,EAAK0B,EAAW,IAChEvM,KAAKqM,EAAIA,EACTrM,KAAKsM,EAAIA,EACTtM,KAAK6K,KAAOA,EACZ7K,KAAKuM,IAAMA,EAGfC,OAAOC,EAAcC,GAAoB,GACrC,OAAQ1M,KAAKqM,GAAKI,EAAMJ,GAAOrM,KAAKsM,GAAKG,EAAMH,GAAOtM,KAAK6K,MAAQ4B,EAAM5B,QAAW6B,GAAc1M,KAAKuM,KAAOE,EAAMF,KAGxHI,KAAKJ,EAAW,MACZ,OAAO,IAAIH,EAAOpM,KAAKqM,EAAGrM,KAAKsM,EAAGtM,KAAK6K,KAAM0B,GAAYvM,KAAKuM,KAGlEK,iCAAiCC,EAAgBC,EAAiBP,EAAa,IAC3E,IAAIQ,EAAO,GAAKF,EACZE,EAAO,IACPA,GAAQ,KAEZ,MAAMC,EAAUhC,KAAKiC,GAAG,IAExB,OAAO,IAAIb,EACPpM,KAAKqM,EAAIS,EAAW9B,KAAKkC,IAAIH,EAAOC,GACpChN,KAAKsM,EAAIQ,EAAW9B,KAAKmC,IAAIJ,EAAOC,GACpChN,KAAK6K,KACL0B,GAIRzB,cAAcsC,GACV,OAAOpC,KAAKI,KAAKJ,KAAKC,IAAID,KAAKE,IAAIlL,KAAKqM,EAAIe,EAAEf,GAAI,GAAKrB,KAAKC,IAAID,KAAKE,IAAIlL,KAAKsM,EAAIc,EAAEd,GAAI,IAG5Fe,0BACI,IAAIC,GAAI,OACJxB,EACId,KAAKE,IAAIlL,KAAK6K,MACdqB,EAAiBlM,KAAK6K,OAC1B0C,EAAqBC,kBACrB,CAACxN,KAAKqM,EAAGrM,KAAKsM,IAIlB,OAAO,IAAIiB,EAAqBD,EAAE,GAAIA,EAAE,GAAI,EAAK,EAAKtN,KAAKuM,KAQ/DkB,iCAAiCC,EAA4B7C,EAAc,MAClEA,IACDA,EApEZ,SAAsB8C,EAAiBC,GACnC,IAAI/C,EAAOG,KAAKQ,OAAOoC,IAAa,KAAS,GAI7C,OAHI1B,EAAiByB,KACjB9C,IAAS,GAENA,EA+DQgD,CAAaH,EAAMC,SAAUD,EAAME,YAE9C,IAAIN,GAAI,OACJC,EAAqBC,kBACrB1B,EACId,KAAKE,IAAIL,GACTqB,EAAiBrB,IACrB,CAAC6C,EAAME,UAAWF,EAAMC,WAI5B,OAAO,IAAIvB,EAAOkB,EAAE,GAAIA,EAAE,GAAIzC,EAAM6C,EAAMnB,MAI3C,MAAMuB,EAQThF,YAAY0B,EAAWC,EAAWsD,GAC9B/N,KAAKwK,GAAKA,EACVxK,KAAKyK,GAAKA,EACVzK,KAAK+N,SAAWA,GCnHxB,IAAYC,EAyQAC,GAzQZ,SAAYD,GAER,+BACA,yBACA,iCACA,2BALJ,CAAYA,IAAAA,EAAa,KASlB,MAAME,EAwBTpF,YAAYqF,EAAY,EAAKC,EAAW,EAAKC,EAAa,EAAKC,EAAc,GAEzEtO,KAAKmO,KAAOA,EACZnO,KAAKoO,IAAMA,EACXpO,KAAKuO,MAAQJ,EAAOE,EACpBrO,KAAKwO,OAASJ,EAAME,EAtBxBD,QACI,OAAOrO,KAAKuO,MAAQvO,KAAKmO,KAG7BG,SACI,OAAOtO,KAAKwO,OAASxO,KAAKoO,IAI9BK,WACI,OAASzO,KAAKuO,MAAQvO,KAAKmO,MAAQ,EAAKnO,KAAKmO,KAGjDO,YACI,OAAS1O,KAAKoO,IAAMpO,KAAKwO,QAAU,EAAKxO,KAAKwO,OAWjDG,gBAGI,OAAO3D,KAAKI,KAAKJ,KAAKC,IAAIjL,KAAKqO,QAAS,GAAKrD,KAAKC,IAAIjL,KAAKsO,SAAU,KAK7E,SAASM,EAAuBC,EAAa3O,GACzC,MAAMgE,EAAQ2K,EAAMC,QAAQ5O,GACxBgE,GAAS,GACT2K,EAAMnL,OAAOQ,EAAO,GAc5B,SAAS6K,EAAqBC,EAAeC,EAAaC,EAAeC,GACrE,IAAIC,GAAUH,EAAK5C,EAAI2C,EAAO3C,IAAM8C,EAAK7C,EAAI4C,EAAO5C,IAAQ2C,EAAK3C,EAAI0C,EAAO1C,IAAM6C,EAAK9C,EAAI6C,EAAO7C,GAElG,GAAa,GAAT+C,EACA,OAAO,IAAIhD,EACf,IACIiD,IADcL,EAAO1C,EAAI4C,EAAO5C,IAAM6C,EAAK9C,EAAI6C,EAAO7C,IAAQ2C,EAAO3C,EAAI6C,EAAO7C,IAAM8C,EAAK7C,EAAI4C,EAAO5C,IACtF8C,EAEhBxF,IADeoF,EAAO1C,EAAI4C,EAAO5C,IAAM2C,EAAK5C,EAAI2C,EAAO3C,IAAQ2C,EAAO3C,EAAI6C,EAAO7C,IAAM4C,EAAK3C,EAAI0C,EAAO1C,IACtF8C,EACrB,OAAKC,EAAI,GAAKA,EAAI,GAAOzF,EAAI,GAAKA,EAAI,EAC3B,IAAIwC,EAER,IAAIA,EACP4C,EAAO3C,EAAKgD,GAAKJ,EAAK5C,EAAI2C,EAAO3C,GACjC2C,EAAO1C,EAAK+C,GAAKJ,EAAK3C,EAAI0C,EAAO1C,GACjC0C,EAAOnE,MAwBf,SAASyE,EAAehC,EAAUiC,GAC9B,IAAI/E,EAAK,IAAI4B,EACT3B,EAAK,IAAI2B,EACToD,GAAS,EAEb,GAAID,EAAKjP,OAAS,EAEd,OAAOkP,EAEX,IAAIC,EAAWF,EAAKA,EAAKjP,OAAS,GAAGqM,OAErC,IAAK,IAAInM,EAAI,EAAGA,EAAI+O,EAAKjP,OAAQE,IACjC,CAEI,IAAIkP,EAAWH,EAAK/O,GAAGmM,OAEnB+C,EAASpD,EAAImD,EAASnD,GAEtB9B,EAAKiF,EACLhF,EAAKiF,IAILlF,EAAKkF,EACLjF,EAAKgF,GAGJC,EAASpD,EAAIgB,EAAEhB,GAAOgB,EAAEhB,GAAKmD,EAASnD,IACnCgB,EAAEjB,EAAI7B,EAAG6B,IAAM5B,EAAG6B,EAAI9B,EAAG8B,IAC1B7B,EAAG4B,EAAI7B,EAAG6B,IAAMiB,EAAEhB,EAAI9B,EAAG8B,KAE5BkD,GAAUA,GAEdC,EAAWC,EAEf,OAAOF,EAGX,SAASG,EAA8BX,EAAeC,EAAaC,EAAeC,GAC9E,IAAIC,GAAUH,EAAK5C,EAAI2C,EAAO3C,IAAM8C,EAAK7C,EAAI4C,EAAO5C,IAAQ2C,EAAK3C,EAAI0C,EAAO1C,IAAM6C,EAAK9C,EAAI6C,EAAO7C,GAElG,GAAa,GAAT+C,EACA,OAAO,IAAIhD,EACf,IACIiD,IADcL,EAAO1C,EAAI4C,EAAO5C,IAAM6C,EAAK9C,EAAI6C,EAAO7C,IAAQ2C,EAAO3C,EAAI6C,EAAO7C,IAAM8C,EAAK7C,EAAI4C,EAAO5C,IACtF8C,EAcpB,OAbmBJ,EAAO1C,EAAI4C,EAAO5C,EAAM2C,EAAK5C,EAAI2C,EAAO3C,EAAQ2C,EAAO3C,EAAI6C,EAAO7C,EAAM4C,EAAK3C,EAAI0C,EAAO1C,EAO9F,IAAIF,EACb4C,EAAO3C,EAAKgD,GAAKJ,EAAK5C,EAAI2C,EAAO3C,GACjC2C,EAAO1C,EAAK+C,GAAKJ,EAAK3C,EAAI0C,EAAO1C,GACjC0C,EAAOnE,MAMf,SAAS+E,EAAiBC,EAAc/P,GAEpC,IAAIgQ,EAAS,IAAI1D,EACb2D,EAAeC,OAAOC,UAE1B,IAAI,MAAMC,KAAOpQ,EAAM,CACnB,MAAMqQ,EAAQN,EAAM/E,cAAcoF,GAE9BC,EAAQJ,IACRD,EAASI,EACTH,EAAeI,GAIvB,OAAOL,EAGX,SAASM,EAAgBP,EAAc/P,EAAgBuQ,EAAqBC,GACxE,GAAoB,GAAhBD,EAAmB,CAEnB,IAAIE,EAAmB,IACnBC,EAnIZ,SAAkBF,EAAcG,GAO5B,OANAH,GAkImD,IAjInDA,GAAgB,KAEJ,IACRA,GAAS,KAENA,EA4H4BI,CAASJ,GAapCK,EAA2Bd,EAAMjD,iCAAiC4D,GAA2BD,GAC7FK,EAA0Bf,EAAMjD,iCAAiC4D,EAA0BD,GAG3FM,EAAwC,IAAIC,IAE5CC,EAAwC,IAAID,IAEhD,IAAI,MAAME,KAAQlR,EAAM,CAEpB,IAAIwN,EAAIqC,EAA8BqB,EAAKxG,GAAIwG,EAAKvG,GAAIkG,EAA0BC,GAGlFC,EAAkBI,IAAI3D,EAAG0D,GAGzB,IAAIE,EAAarB,EAAM/E,cAAcwC,GAEhCyD,EAAmBI,IAAID,IACxBH,EAAmBE,IAAIC,EAAY5D,GAI3C,IAAI8D,EAAeC,MAAMC,KAAKP,EAAmBQ,QACjDH,EAAaI,MAAK,SAASC,EAAGrE,GAC1B,OAAOqE,EAAIrE,KAKf,IAAIsE,EAAM1B,OAAOC,UACbzP,EAAI,EACR,KAAOkR,GAAO1B,OAAOC,WAAazP,EAAI4Q,EAAa9Q,QAC3C8Q,EAAa5Q,IAAM6P,IACnBqB,EAAMN,EAAa5Q,IACvBA,IAIAkR,GAAO1B,OAAOC,YACdyB,EAAMN,EAAaA,EAAa9Q,OAAS,IAE7C,IACIqR,EADeN,MAAMC,KAAKT,EAAkBe,WAAWC,QAAOJ,GAAKA,EAAE,GAAG3G,cAAc+E,IAAU6B,IAClEzR,KAAIwR,GAAKA,EAAE,KAE7C,OAAOrB,EAAgBP,EAAO8B,EAAgB,EAAGrB,GAC9C,CACH,IAAIR,EAAShQ,EAAK,GACdgS,EAAW9B,OAAOC,UAEtB,IAAI,MAAMe,KAAQlR,EAAM,CACpB,IAEIiS,EAFOlC,EAAM/E,cAAckG,EAAKxG,IACzBqF,EAAM/E,cAAckG,EAAKvG,IACJuG,EAAKxG,GAAKwG,EAAKvG,GAE3CqH,EAAWjC,EAAM/E,cAAciH,KAC/BjC,EAASkB,EACTc,EAAWjC,EAAM/E,cAAciH,IAIvC,OAAOjC,IAIf,SAAY7B,GACR,YACA,UACA,aACA,oBACA,kBALJ,CAAYA,IAAAA,EAAa,K,kTC7PlB,MAAMV,EASTzE,YAAY6E,EAAgB,EAAKC,EAAiB,EAAKzC,EAAgB,EAAK6G,EAAe,EAAKzF,EAAW,I,YACvGvM,KAAK2N,SAAWA,EAChB3N,KAAK4N,UAAYA,EACjB5N,KAAKmL,SAAWA,EAChBnL,KAAKgS,QAAUA,EACfhS,KAAKuM,IAAMA,EAGfkB,yBACI,MAAO,QAGXjB,OAAOC,GACH,OAAOzM,KAAK2N,UAAYlB,EAAMkB,UACvB3N,KAAK4N,WAAanB,EAAMmB,WACxB5N,KAAKmL,UAAYsB,EAAMtB,UACvBnL,KAAKgS,SAAWvF,EAAMuF,QAGjCC,aACI,OAAO,SAAS,CAACjS,KAAK2N,SAAU3N,KAAK4N,YAGzCH,oBAAoByE,GAChB,OAAO,IAAI3E,EAAqB2E,EAAOC,IAAKD,EAAOE,KAGvDzH,OAAOE,EAAc,MACjB,OAAOuB,EAAOiG,0BAA0BrS,KAAM6K,GAGlD4C,gBAAgB6E,GACZ,OAAOA,EAAIjF,0BAGfI,iBAAiB8E,GACb,OAAOA,EAAUtS,KAAIqN,GAAKA,EAAED,4BAGhCI,0BAA0B+E,GAOtB,OALIxC,OAAOyC,SAASD,EAAO7E,WACvBqC,OAAOyC,SAASD,EAAO5E,YACvBoC,OAAOyC,SAASD,EAAOrH,iBACNrK,IAAf0R,EAAOjG,KAAsC,OAAfiG,EAAOjG,KAK/CkB,iBAAiBiF,GACb,IAAInF,EAAqBoF,mBAAmBD,GACxC,MAAM,IAAIvN,MAAM,8DAEpB,OAAO,IAAIoI,EACPyC,OAAO4C,MAAMF,EAAE/E,UAAY,EAAM+E,EAAE/E,SACnCqC,OAAO4C,MAAMF,EAAE9E,WAAa,EAAM8E,EAAE9E,UACpCoC,OAAO4C,MAAMF,EAAEvH,UAAY,EAAMuH,EAAEvH,SACnC6E,OAAO4C,MAAMF,EAAEV,SAAW,EAAMU,EAAEV,QAClCU,EAAEnG,IAAMmG,EAAEnG,IAAIxM,WAAa,IAInC8S,UACI,MAAiC,CAC7BlF,SAAU3N,KAAK2N,SACfC,UAAW5N,KAAK4N,UAChBzC,SAASnL,KAAKmL,SACd6G,QAAQhS,KAAKgS,QACbzF,IAAIvM,KAAKuM,KAajBxM,SAAS+S,GAAuB,EAAMC,GAAsB,GACxD,MAAO,IAAI/S,KAAKgT,iBAAiBD,OAAiB/S,KAAKgT,iBAAiBD,OAAiB/S,KAAKiT,iBAAiBH,MAGlHE,iBAAiBD,GAAsB,GACpC,OAAOA,EAAc/S,KAAK2N,SAASuF,QAAQ,GAAK,IAAM,EAAAlT,KAAI,SAAc,KAAlBA,KAAmBA,KAAK2N,UAAU,GAG3FwF,kBAAkBJ,GAAsB,GACrC,OAAOA,EAAc/S,KAAK4N,UAAUsF,QAAQ,GAAK,IAAM,EAAAlT,KAAI,SAAc,KAAlBA,KAAmBA,KAAK4N,WAAW,GAG7FqF,iBAAiBH,GAAuB,GACrC,OAAOA,GAAgB9S,KAAKmL,SAAWoC,EAAqB6F,iBAAkBF,QAAQ,GAAK,IAAMlT,KAAKmL,SAAS+H,QAAQ,GAAK,K,yBAtBlHG,EAAWC,GACrB,MAAMC,EAAMF,EAAK,EAAKC,EAAS,IAAM,IAAOA,EAAS,IAAM,IACrDE,EAAM,GAAKH,EAAK,EAAKA,GAAMA,EAAMA,GACjCI,EAAM,GAAOJ,GAAM,MAAQ,EAAK,GAChCK,GAAO,EAAY,GAALL,EAAW,EAAK,KAAS,IAE7C,MAAO,GAAGG,EAAIN,QAAQ,OAAOO,EAAIP,QAAQ,OAAOQ,EAAIR,QAAQ,OAAOK,KAhFhE,EAAAH,gBAAkB,MA6GtB,MAAMO,EAWT7K,YAAY8K,EAAY,SAAUC,EAAsB,EAAKC,EAAsB,EAAKC,EAAuB,EAAKC,EAAqB,EAAGC,EAAsB,GAC9JjU,KAAK4T,KAAOA,EACZ5T,KAAK6T,aAAeA,EACpB7T,KAAK8T,aAAeA,EACpB9T,KAAK+T,cAAgBA,EACrB/T,KAAKgU,YAAcA,EACnBhU,KAAKiU,aAAeA,EAGxBtH,OACI,OAAO,IAAIgH,EACP3T,KAAK4T,KACL5T,KAAK6T,aACL7T,KAAK8T,aACL9T,KAAK+T,cACL/T,KAAKgU,YACLhU,KAAKiU,cAIbzH,OAAOC,GACH,OAAQzM,KAAK4T,MAAQnH,EAAMmH,MACnB5T,KAAK6T,cAAgBpH,EAAMoH,cAC3B7T,KAAK8T,cAAgBrH,EAAMqH,cAC3B9T,KAAK+T,eAAiBtH,EAAMsH,eAC5B/T,KAAKgU,aAAevH,EAAMuH,aAC1BhU,KAAKiU,cAAgBxH,EAAMwH,aAGvCC,WACI,OAAQlU,KAAK6T,aAAe,GACpB7T,KAAK8T,aAAe,GACpB9T,KAAK+T,cAAgB,GACrB/T,KAAKgU,YAAc,GACnBhU,KAAKiU,aAAe,EAGhCE,sBAAsBrH,GAClB,IAAIsH,EAAa,KAEjB,GAAGpU,KAAKkU,YAAcpH,EAAW,EAAG,CAEhC,MAAMb,EAAajM,KAAKqU,mBAAmBvH,GACxCb,IACCmI,EAAMnI,EAAWoC,QAAUrO,KAAKgU,aAIxC,OAAOI,EAGXE,aAAaC,GACT,IAAIH,EAAa,KAEjB,GAAGpU,KAAKkU,YAAcK,EAAoB,EAAG,CAEzC,MAAMC,EAAcxU,KAAKgU,YAAcO,EACjCE,EAASzJ,KAAK0J,MAAM1U,KAAK8T,aAAc,EAAE9T,KAAK6T,cAGpDO,EAAOI,EAAc,EAAKxJ,KAAK2J,IAAIF,GAGvC,OAAOL,EAGXQ,eAAe9H,GACX,IAAI+H,EAAY,KAEhB,GAAG7U,KAAKkU,YAAcpH,EAAW,EAAG,CAEhC,MAAMgI,EAAS9J,KAAK0J,MAAM1U,KAAK+T,cAAe,EAAE/T,KAAK6T,cAC/CY,EAASzJ,KAAK0J,MAAM1U,KAAK8T,aAAc,EAAE9T,KAAK6T,cAG9CkB,EAAK/J,KAAK2J,IAAIG,GAAUhI,EACxBkI,EAAKhK,KAAK2J,IAAIF,GAAU3H,EAE9B+H,EAAO,IAAI3G,GAAM8G,GAAKD,EAAI,EAAEC,EAAI,EAAED,GAGtC,OAAOF,EAGXR,mBAAmBvH,GACf,IAAI+H,EAAY,KAEhB,GAAG7U,KAAKkU,YAAcpH,EAAW,EAAG,CAEhC,MAAMgI,EAAS9J,KAAK0J,MAAM1U,KAAK+T,cAAe,EAAE/T,KAAK6T,cAC/CY,EAASzJ,KAAK0J,MAAM1U,KAAK8T,aAAc,EAAE9T,KAAK6T,cAG9CkB,EAAK/J,KAAK2J,IAAIG,GAAUhI,EACxBkI,EAAKhK,KAAK2J,IAAIF,GAAU3H,EAE9B+H,EAAO,IAAI3G,GAAM8G,GAAKD,EAAI,EAAEC,EAAI,EAAED,GAGtC,OAAOF,EAKXpH,0BAA0B+E,GAKtB,OAHKA,EAAOyC,MAAQtB,EAA2BuB,MAC1C1C,EAAO2C,SAAWxB,EAA2ByB,QAMtD3H,iBAAiBiF,GAEb,IAAIiB,EAA2BhB,mBAAmBD,GAC9C,MAAM,IAAIvN,MAAM,oEAEpB,OAAO,IAAIwO,EACPjB,EAAEkB,KACFlB,EAAEmB,aACFnB,EAAEoB,aACFpB,EAAEqB,cACFrB,EAAEsB,YACFtB,EAAEuB,cAIVpB,UACI,MAAuC,CACnCsC,QAASxB,EAA2ByB,QACpCH,KAAMtB,EAA2BuB,KACjCtB,KAAM5T,KAAK4T,KACXC,aAAc7T,KAAK6T,aACnBC,aAAc9T,KAAK8T,aACnBC,cAAe/T,KAAK+T,cACpBC,YAAahU,KAAKgU,YAClBC,aAAcjU,KAAKiU,eAnJpB,EAAAiB,KAAO,6BACP,EAAAE,QAAU,uC,0BCjITC,GAKAC,GAUAC,G,4SAfZ,SAAYF,GACR,6BADJ,CAAYA,KAAAA,GAAoB,KAKhC,SAAYC,GACR,qCACA,iDACA,+CACA,iDACA,iDACA,mDANJ,CAAYA,KAAAA,GAAmB,KAU/B,SAAYC,GACR,iCADJ,CAAYA,KAAAA,GAAmB,KAexB,MAAMC,GAgBT/H,cACIzN,KAAKyV,mBAAmBJ,GAAqBK,WAAW,GAAM,GAAO,GACrE1V,KAAK2V,kBAAkBL,GAAoBM,cAAe,GAAK,GAAO,GACtE5V,KAAK6V,WAAWL,GAAcM,sBAAsB,GAAO,GAG/DrI,wBAAwBxE,I,+VACpB,CAAAjJ,KAAI,EAAiBiJ,EAAQ,QAGjCwE,oBAAoBxE,GAChB,MAAMtJ,EAAKwK,EAAU,UAErB,OADA,GAAAnK,KAAI,UAAoBiR,IAAItR,EAAIsJ,GACzB,GAAAjJ,KAAI,UAAkB+V,KAAK/V,KAAML,GAmB5C8N,0BAA0BiE,EAA0BsE,EAAeC,GAA4B,EAAMC,GAAsB,GACvH,GAAAlW,KAAI,SAAuBiR,IAAIS,EAAKsE,GACpC,GAAAhW,KAAI,UAAkB,KAAtBA,KAAuBiW,EAAmBC,GAG9CzI,yBAAyBiE,EAAyBsE,EAAcC,GAA4B,EAAMC,GAAsB,GACpH,GAAAlW,KAAI,UAAsBiR,IAAIS,EAAKsE,GACnC,GAAAhW,KAAI,UAAkB,KAAtBA,KAAuBiW,EAAmBC,GAG9CzI,yBAAyBiE,EAAyBsE,EAAcC,GAA4B,EAAMC,GAAsB,GACpH,GAAAlW,KAAI,UAAsBiR,IAAIS,EAAKsE,GACnC,GAAAhW,KAAI,UAAkB,KAAtBA,KAAuBiW,EAAmBC,GAG9CzI,kBAAkBuI,EAAkCC,GAA4B,EAAOC,GAAsB,GACzGlW,KAAKmW,kBAAkBZ,GAAoBa,YAAaJ,EAAMpC,MAAM,GAAO,GAC3E5T,KAAK2V,kBAAkBL,GAAoBe,oBAAqBL,EAAMnC,cAAc,GAAO,GAC3F7T,KAAK2V,kBAAkBL,GAAoBgB,mBAAoBN,EAAMhC,aAAa,GAAO,GACzFhU,KAAK2V,kBAAkBL,GAAoBiB,oBAAqBP,EAAM/B,cAAc,GAAO,GAC3FjU,KAAK2V,kBAAkBL,GAAoBkB,oBAAqBR,EAAMlC,cAAc,GAAO,GAC3F9T,KAAK2V,kBAAkBL,GAAoBmB,qBAAsBT,EAAMjC,eAAe,GAAO,GAE7F,GAAA/T,KAAI,UAAkB,KAAtBA,KAAuBiW,EAAmBC,GAG9CzI,0BAA0BiE,GACtB,OAAO,GAAA1R,KAAI,SAAuB0W,IAAIhF,GAG1CjE,yBAAyBiE,GACrB,OAAO,GAAA1R,KAAI,UAAsB0W,IAAIhF,GAGzCjE,yBAAyBiE,GACrB,OAAO,GAAA1R,KAAI,UAAsB0W,IAAIhF,GAGzCjE,oBACI,OAAO,IAAIkG,EACP3T,KAAK2W,kBAAkBpB,GAAoBa,aAC3CpW,KAAK4W,kBAAkBtB,GAAoBe,qBAC3CrW,KAAK4W,kBAAkBtB,GAAoBkB,qBAC3CxW,KAAK4W,kBAAkBtB,GAAoBmB,sBAC3CzW,KAAK4W,kBAAkBtB,GAAoBgB,oBAC3CtW,KAAK4W,kBAAkBtB,GAAoBiB,sBAInD9I,iBACI,MAA0B,CACtBiI,UAAW1V,KAAK6W,mBAAmBxB,GAAqBK,WACxDE,cAAe5V,KAAK4W,kBAAkBtB,GAAoBM,eAC1DS,oBAAqBrW,KAAK4W,kBAAkBtB,GAAoBe,qBAChEG,oBAAqBxW,KAAK4W,kBAAkBtB,GAAoBkB,qBAChEC,qBAAsBzW,KAAK4W,kBAAkBtB,GAAoBmB,sBACjEH,mBAAoBtW,KAAK4W,kBAAkBtB,GAAoBgB,oBAC/DC,oBAAqBvW,KAAK4W,kBAAkBtB,GAAoBiB,qBAChEH,YAAapW,KAAK2W,kBAAkBpB,GAAoBa,cAIhE3I,YAAYiF,GACR1S,KAAKyV,mBAAmBJ,GAAqBK,UAAWoB,QAAQpE,EAAEgD,YAAY,GAAO,GACrF1V,KAAK2V,kBAAkBL,GAAoBM,cAAe5F,OAAO4C,MAAMF,EAAEkD,eAAiB,EAAIlD,EAAEkD,eAAe,GAAO,GACtH5V,KAAK2V,kBAAkBL,GAAoBe,oBAAqBrG,OAAO4C,MAAMF,EAAE2D,qBAAuB,EAAI3D,EAAE2D,qBAAqB,GAAO,GACxIrW,KAAK2V,kBAAkBL,GAAoBgB,mBAAoBtG,OAAO4C,MAAMF,EAAE4D,oBAAsB,EAAI5D,EAAE4D,oBAAoB,GAAO,GACrItW,KAAK2V,kBAAkBL,GAAoBiB,oBAAqBvG,OAAO4C,MAAMF,EAAE6D,qBAAuB,EAAI7D,EAAE6D,qBAAqB,GAAO,GACxIvW,KAAK2V,kBAAkBL,GAAoBkB,oBAAqBxG,OAAO4C,MAAMF,EAAE8D,qBAAuB,EAAI9D,EAAE8D,qBAAqB,GAAO,GACxIxW,KAAK2V,kBAAkBL,GAAoBmB,qBAAsBzG,OAAO4C,MAAMF,EAAE+D,sBAAwB,EAAI/D,EAAE+D,sBAAsB,GAAO,GAC3IzW,KAAKmW,kBAAkBZ,GAAoBa,YAAa1D,EAAE0D,YAAYrW,YAAY,GAAO,GAEzF,GAAAC,KAAI,UAAkB,KAAtBA,MAAuB,GAAM,I,iBAxFTL,GACjB,GAAAK,KAAI,UAAoBmR,IAAIxR,IAC3B,GAAAK,KAAI,UAAoB+W,OAAOpX,IAEtC,YAEwBsW,EAA2BC,GAChD,GAAGD,EACC,IAAI,MAAMe,KAAM,GAAAhX,KAAI,UAAoBiX,SACpCD,IAGLd,GAAe,GAAAlW,KAAI,WAClB,GAAAA,KAAI,UAAc,KAAlBA,OA3CD,GAAA8V,qBAAuB,IAAInC,EAC3B,GAAAuD,eAA6C,CAChD1B,GAAcM,qBACd,IAAInC,EAA2B,QAAS,GAAI,KAAO,KAAO,IAAM,MAIpE,SAAiE,IAAI7C,KACrE,UAA8D,IAAIA,KAClE,UAA8D,IAAIA,KAElE,UAAwC,MACxC,UAAyD,IAAIA,K,kTC9C1D,MAAMqG,GAGTrO,YAAasO,GAFb,oB,+VAGI,CAAApX,KAAI,GAAWoX,EAAU,KAG7BC,kBAAkBtO,EAAauO,EAAgFC,EAAqB,KAAMC,GAAmB,GAIpJF,EAAM3X,KACP2X,EAAM3X,GAAKwK,KAEf,IAAIsN,EAAI9S,SAASW,cAAc,SAiB/B,OAhBAmS,EAAE7O,UAAY,GAAG,GAAA5I,KAAI,wBACrByX,EAAEC,QAAUJ,EAAM3X,GACf4X,IACCE,EAAEE,MAAQJ,GACXC,IACCC,EAAEjT,MAAMoT,WAAa,UAEzBH,EAAErS,YAAYT,SAAS0B,eAAe0C,IAS/B0O,EAGXI,mBAAmB7B,EAAa,MAC5B,IAAI1M,EAAM3E,SAASW,cAAc,UAIjC,OAHAgE,EAAIV,UAAY,GAAG,GAAA5I,KAAI,yBAA0B,GAAAA,KAAI,8BACzC,MAATgW,IACC1M,EAAI0M,MAAQA,GACT1M,EAGXwO,uBAAuBC,EAAeC,EAAiB,MACnD,IAAI1O,EAAM3E,SAASW,cAAc,SAMjC,OALAgE,EAAI2L,KAAO,OACG,MAAX+C,IACC1O,EAAI2O,OAASD,GACjB1O,EAAIV,UAAY,GAAG,GAAA5I,KAAI,wBACvBsJ,EAAI4O,SAAWH,EACRzO,EAGX6O,yBAAyBpP,EAAagP,GAClC,IAAIzO,EAAM3E,SAASW,cAAc,UAIjC,OAHAgE,EAAIV,UAAY,GAAG,GAAA5I,KAAI,yBAA0B,GAAAA,KAAI,+BACrDsJ,EAAIO,QAAUkO,EACdzO,EAAIlE,YAAYT,SAAS0B,eAAe0C,IACjCO,EAGX8O,0BAA0BpC,EAAc+B,GACpC,IAAIzO,EAAM3E,SAASW,cAAc,SAKjC,OAJAgE,EAAI2L,KAAO,OACX3L,EAAI0M,MAAQA,EAAMjW,WAClBuJ,EAAIV,UAAY,GAAG,GAAA5I,KAAI,wBACvBsJ,EAAI4O,SAAWH,EACRzO,EAGX+O,yBAAyBrC,EAAc+B,EAAetE,EAAa,KAAM6E,EAAa,KAAMC,EAAY,MACpG,IAAIjP,EAAM3E,SAASW,cAAc,SAWjC,OAVAgE,EAAI2L,KAAO,SACD,MAAPxB,IACCnK,EAAImK,IAAMA,EAAI1T,YACR,MAAPuY,IACChP,EAAIgP,IAAMA,EAAIvY,YACP,MAARwY,IACCjP,EAAIiP,KAAOA,EAAKxY,YACpBuJ,EAAI0M,MAAQA,EAAMjW,WAClBuJ,EAAIV,UAAY,GAAG,GAAA5I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDsJ,EAAI4O,SAAWH,EACRzO,EAGXkP,wBAAwBxC,EAAc+B,EAAetE,EAAY6E,EAAYC,EAAY,MACrF,IAAIjP,EAAM3E,SAASW,cAAc,SAUjC,OATAgE,EAAI2L,KAAO,QACX3L,EAAImK,IAAMA,EAAI1T,WACduJ,EAAIgP,IAAMA,EAAIvY,WACH,MAARwY,IACCA,GAAQD,EAAM7E,GAAO,KACzBnK,EAAIiP,KAAOA,EAAKxY,WAChBuJ,EAAI0M,MAAQA,EAAMjW,WAClBuJ,EAAIV,UAAY,GAAG,GAAA5I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDsJ,EAAI4O,SAAWH,EACRzO,EAGXmP,2BAA2BC,EAAiBX,GACxC,IAAIzO,EAAM3E,SAASW,cAAc,SAKjC,OAJAgE,EAAI2L,KAAO,WACX3L,EAAIoP,QAAUA,EACdpP,EAAIV,UAAY,GAAG,GAAA5I,KAAI,yBAA0B,GAAAA,KAAI,8BACrDsJ,EAAI4O,SAAWH,EACRzO,EAGXqP,yBAAyBxX,EAAkByX,EAAiBb,EAAec,EAAuB,MAC9F,IAAIvP,EAAM3E,SAASW,cAAc,UAEjC,GAAGnE,EAAQb,QAAUsY,EAAOtY,OACxB,MAAM,IAAI6E,MAAM,4CAA4ChE,EAAQb,aAAasY,EAAOtY,WAG5F,IAAK,IAAIE,EAAI,EAAGA,EAAIW,EAAQb,OAAQE,IAAK,CACrC,IAAIsY,EAASnU,SAASW,cAAc,UACpCwT,EAAO9C,MAAQ7U,EAAQX,GACvBsY,EAAO/P,KAAO6P,EAAOpY,GAClBqY,GAAmBA,GAAiB1X,EAAQX,KAC3CsY,EAAOC,UAAW,GACtBzP,EAAIlE,YAAY0T,GAIpB,OAFAxP,EAAIV,UAAY,GAAG,GAAA5I,KAAI,wBACvBsJ,EAAI4O,SAAWH,EACRzO,G,stBCnHR,MAAM0P,WAA0B7B,GA2BnCrO,YAAY7I,GACRgZ,MAAM,mB,aApBV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBAaI,GAAAjZ,KAAI,IAAY,EAAI,KACpB,GAAAA,KAAI,GAAa,GAAE,KACnB,GAAAA,KAAI,GAAoB,GAAE,KAC1B,GAAAA,KAAI,GAAQC,EAAG,KACf,GAAAD,KAAI,GAA2B,GAAE,KACjC,GAAAA,KAAI,GAAQ,KAAI,KAChBA,KAAKkZ,oBAAoB,MACzBlZ,KAAKmZ,oBAAoB,MACzBnZ,KAAKoZ,kBAAkB,MAG3BC,sBACO,GAAArZ,KAAI,SACH,GAAAA,KAAI,QAAW,KAAfA,KAAgBA,MAGxBsZ,kBAAkBC,GACX,GAAAvZ,KAAI,QACA,GAAAA,KAAI,SACHuZ,EAAEC,MAAM,GAAAxZ,KAAI,SASZ,GAAAA,KAAI,QAAWP,KAAK8Z,IAEpB,GAAAvZ,KAAI,QAAkBP,KAAK8Z,GAI/BE,QAAQC,MAAM,+BAItBC,uBAAuBJ,GACnB,IAAIK,EAAgB,GAAA5Z,KAAI,QAAW8O,QAAQyK,IACrB,IAAnBK,IACC,GAAA5Z,KAAI,QAAW0D,OAAOkW,EAAe,GACrCL,EAAExV,UAGN,IAAI8V,EAAe,GAAA7Z,KAAI,QAAkB8O,QAAQyK,IAC5B,IAAlBM,GACC,GAAA7Z,KAAI,QAAW0D,OAAOmW,EAAc,GAoC5CC,SAAS/Q,EAAY,mBACjB,GAAA/I,KAAI,GAAQ2E,SAASW,cAAc,OAAM,KACzC,GAAAtF,KAAI,QAAML,GAAK,gBAAgBwK,MAC/B,GAAAnK,KAAI,QAAM4I,UAAY,kBAEtB,IAAI+O,EAAQhT,SAASW,cAAc,OACnCqS,EAAM/O,UAAY,wBAElB,IAAIW,EAAI5E,SAASW,cAAc,OAC/BiE,EAAEX,UAAY,6BACdW,EAAEnE,YAAYT,SAAS0B,eAAe0C,IACtC4O,EAAMvS,YAAYmE,GAElB,IAAIC,EAAI7E,SAASW,cAAc,OAC/BkE,EAAEZ,UAAY,yCAEd,GAAA5I,KAAI,GAA2B,GAAE,KACjC,IAAI,MAAM+Z,KAAgBf,GAAkBgB,cAAe,CACvD,MAAMhS,EAAW,GAAAhI,KAAI,WAAgB,KAApBA,KAAqB+Z,GAEtC,IAAIE,EAAKtV,SAASW,cAAc,UAChC2U,EAAGrR,UAAYmR,EACfE,EAAGtC,MAAQ,kBACXsC,EAAGpQ,QAAU7J,KAAKka,gBAAgBnE,KAAK/V,MACvC,IAAI,MAAMQ,KAAKuH,EAAgBzB,EAAYe,SAAUW,GACjDiS,EAAG7U,YAAY5E,GAInBgJ,EAAEpE,YAAY6U,GAEd,IAAIE,EAAKxV,SAASW,cAAc,UAChC6U,EAAGvR,UAAYmR,EACfI,EAAGxC,MAAQ,4BACXwC,EAAGtQ,QAAU7J,KAAKoa,kBAAkBrE,KAAK/V,MACzCwJ,EAAEpE,YAAY+U,GACd,GAAAna,KAAI,QAAyBP,KAAK0a,GAElC,IAAIE,EAAK1V,SAASW,cAAc,UAChC+U,EAAGzR,UAAYmR,EACfM,EAAG1C,MAAQ,UACX0C,EAAGxQ,QAAU,GAAA7J,KAAI,WAAe+V,KAAK/V,MAAO,GAI5C,IAAI,MAAMQ,KAAKuH,EAAgBzB,EAAYU,SAAUgB,GACjDqS,EAAGjV,YAAY5E,GACnBgJ,EAAEpE,YAAYiV,GAEd,IAAIC,EAAK3V,SAASW,cAAc,UAChCgV,EAAG1R,UAAYmR,EACfO,EAAG3C,MAAQ,YACX2C,EAAGzQ,QAAU,GAAA7J,KAAI,WAAe+V,KAAK/V,KAAM,GAC3C,IAAI,MAAMQ,KAAKuH,EAAgBzB,EAAYW,WAAYe,GACnDsS,EAAGlV,YAAY5E,GACnBgJ,EAAEpE,YAAYkV,GAEd,IAAIC,EAAK5V,SAASW,cAAc,UAChCiV,EAAG3R,UAAYmR,EACfQ,EAAG5C,MAAQ,OACX4C,EAAG1Q,QAAU7J,KAAKwa,UAAUzE,KAAK/V,MACjC,IAAI,MAAMQ,KAAKuH,EAAgBzB,EAAYS,KAAMiB,GAC7CuS,EAAGnV,YAAY5E,GACnBgJ,EAAEpE,YAAYmV,GAEd,IAAIE,EAAK9V,SAASW,cAAc,UAChCmV,EAAG7R,UAAYmR,EACfU,EAAG9C,MAAQ,SACX8C,EAAG5Q,QAAU7J,KAAK0a,eAAe3E,KAAK/V,MACtC,IAAI,MAAMQ,KAAKuH,EAAgBzB,EAAYc,OAAQY,GAC/CyS,EAAGrV,YAAY5E,GACnBgJ,EAAEpE,YAAYqV,GASlB,OAPA9C,EAAMvS,YAAYoE,GAElB,GAAAxJ,KAAI,WAAyB,KAA7BA,MACA,GAAAA,KAAI,WAAuB,KAA3BA,MAEA,GAAAA,KAAI,QAAMoF,YAAYuS,GAEf,GAAA3X,KAAI,QAqDfkZ,oBAAoByB,GAChB,GAAA3a,KAAI,GAAc2a,EAAS,KAG/BxB,oBAAoBpB,GAChB,GAAA/X,KAAI,GAAc+X,EAAS,KAG/BqB,kBAAkBwB,GACd,GAAA5a,KAAI,GAAY4a,EAAO,KAG3BC,eACI,OAAO,GAAA7a,KAAI,QAGfoa,oBAEI,GADA,GAAApa,KAAI,IAAa,GAAAA,KAAI,QAAS,KAC3B,GAAAA,KAAI,QAAW,CAEd,GAAAA,KAAI,GAAa,GAAGK,OAAO,GAAAL,KAAI,SAAkB,KACjD,GAAAA,KAAI,GAAoB,GAAE,KAE1B,IAAI,IAAI8a,KAAW,GAAA9a,KAAI,QACnB8a,EAAQtB,MAAM,GAAAxZ,KAAI,aACnB,CAEH,GAAAA,KAAI,GAAoB,GAAGK,OAAO,GAAAL,KAAI,SAAW,KACjD,GAAAA,KAAI,GAAa,GAAE,KAEnB,IAAI,IAAI8a,KAAW,GAAA9a,KAAI,QACnB8a,EAAQ/W,SAGhB,GAAA/D,KAAI,WAAyB,KAA7BA,MACA,GAAAA,KAAI,WAAuB,KAA3BA,MAGJka,kBACI,MAAMa,EAAQ,eAAe,GAAA/a,KAAI,SACjC,GAAAA,KAAI,QAAMgb,UAAUD,EAAME,YAAa,CACnCC,QAAS,CAAC,GAAI,MAKtBV,YAGI3V,OAAOsW,WAAWC,eAAc,GAGpCV,iBAEO,GAAA1a,KAAI,SACH,GAAAA,KAAI,QAAW,KAAfA,KAAgBA,MAGxBqb,aACI,OAAOrC,GAAkBsC,WAG7BC,kBAGI,MADsC,GAI1CC,UAEI,OAAOxb,KAAK8Z,WAGhBrM,0BAA0B+E,GAKtB,OAHKA,EAAOyC,MAAQ+D,GAAkB9D,MACjC1C,EAAO2C,SAAW6D,GAAkB5D,QAK7C3H,iBAAiBiF,EAAyBzS,GAEtC,IAAI+Y,GAAkBrG,mBAAmBD,GACrC,MAAM,IAAIvN,MAAM,2DAEpB,OAAO,IAAI6T,GAAkB/Y,GAGjC4S,UAEI,MAA8B,CAC1BsC,QAAS6D,GAAkB5D,QAC3BH,KAAM+D,GAAkB9D,O,oKAhQzB,GAAAlV,KAAI,UACA,GAAAA,KAAI,QACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,0BAE3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,4BAGnC,cAGG,IAAI,IAAI8R,KAAO,GAAAzb,KAAI,QAA0B,CACzC,MAAMgI,EAAW,GAAAhI,KAAI,WAAgB,KAApBA,KAAqByb,EAAI7S,WAC1C6S,EAAIC,UAAY,GAChB,MAAMC,EAAQ5T,EAAgB,GAAA/H,KAAI,QAAYsG,EAAYiB,KAAOjB,EAAYgB,OAAQU,GACrF,IAAI,MAAMxH,KAAKmb,EACXF,EAAIrW,YAAY5E,KAE3B,YAEeuZ,GACZ,OAAQA,EAAa6B,SAAS,UACjC,cAGM,GAAA5b,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,6BAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,sCAE/B,YA6GakS,EAAmB,GAC1B,GAAA7b,KAAI,SAA0B,GAAb6b,IACb,GAAA7b,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,oCAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,6BACxBmS,WAAW,GAAA9b,KAAI,WAAmC+V,KAAK/V,MAAO,MAMlE,GAAAA,KAAI,QAAS,KAAbA,KAAcA,KAAM6b,GAEjB,GAAA7b,KAAI,SACH,GAAAA,KAAI,QAAM+b,mBAxOf,GAAAC,KAAO,iBACP,GAAA9G,KAAO,oBACP,GAAAE,QAAU,uCACV,GAAA6G,SAAW,OACX,GAAAX,YAAa,EAab,GAAAlI,gBAAkB,MAGlB,GAAA4G,cAAgB,CACnB,+BACA,sC,+qBClCD,MAAMkC,GAaTpT,YAAYqT,EAA0BC,EAA2B,I,aAVjE,oBACA,oBAEA,oBAQI,GAAApc,KAAI,GAAsBmc,EAAiB,KAC3C,GAAAnc,KAAI,GAAe,IAAIqc,gBAAiB,KACxC,GAAArc,KAAI,GAA6Boc,EAAe,KAgCpDE,OAEI,GAAAtc,KAAI,QAAauc,QAGrBC,QACIxc,KAAKsc,OAKL,IAAIG,EAFqBpL,MAAMC,KAAK3M,SAAS+X,iBAAiB,YAEzB7K,QACjCxF,GAAKA,EAAE1M,GAAGic,SAAS,GAAA5b,KAAI,UAAyBqM,EAAE1M,GAAGW,OAAS,GAAAN,KAAI,QAAoBM,SAI1F,IAAI,MAAME,KAAK,GAAAR,KAAI,QACfyc,EAAgBA,EAAc5K,QAAOxF,IAAMA,EAAE1M,GAAGic,SAAS,GAAG,GAAA5b,KAAI,WAAuBQ,QAG3F,IAAI,IAAIyE,KAAKwX,EACT,GAAAzc,KAAI,WAAoC,KAAxCA,KAAyCiF,I,wEAlDtC0X,EAA6BC,GAEpCA,EAAelT,UAAUC,IAAIuS,GAAWW,kBAC3C,YAEaF,EAA6BC,GACvCA,EAAelT,UAAU3F,OAAOmY,GAAWW,kBAE9C,YAEmCF,GAChC,IAAGA,EAAgBhd,GAcf,MAAM,IAAIwF,MAAM,sCAdG,CACnB,MAAM2X,EAAqBH,EAAgBhd,GAAGod,MAAM,GAAA/c,KAAI,QAAsB,KACxEgd,EAAoBF,EAAmBxc,OAAS,EAAIwc,EAAmB,GAAK,KAClF,IAAIF,EAAiBI,EAAoBrY,SAASsY,eAAeD,GAAqB,KAEtF,IAAGJ,EAMC,MAAM,IAAIzX,MAAM,8CAAgD6X,GAHhEL,EAAgBO,iBAAiBhB,GAAWiB,gBAAiB,GAAAnd,KAAI,WAAY+V,KAAK/V,KAAM2c,EAAiBC,IACzGD,EAAgBO,iBAAiBhB,GAAWkB,cAAe,GAAApd,KAAI,WAAe+V,KAAK/V,KAAM2c,EAAiBC,MAtC/G,GAAAS,oBAAsB,kBAOtB,GAAAF,gBAAyB,aACzB,GAAAC,cAAuB,aAEvB,GAAAP,gBAAyB,iB,8uBCI7B,MAAMS,WAA8BtE,GA0BvClQ,YAAY7I,EAAWyN,EAA2B,MAC9CuL,MAAMhZ,G,aApBV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBAOI,GAAAD,KAAI,GAAW,KAAI,KACnB,GAAAA,KAAI,GAAU,KAAI,KAClB,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAa,KAAI,KACrB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAA0B,KAAI,KAElC,GAAAA,KAAI,GAAkB,EAAC,KACvB,GAAAA,KAAI,IAAkB,EAAK,KAC3B,GAAAA,KAAI,GAAsB,EAAC,KAExB0N,GACC1N,KAAKud,UAAU7P,GAEnB,GAAA1N,KAAI,GAAoBwV,GAAcgI,aAAa,GAAAxd,KAAI,WAAkB+V,KAAK/V,OAAM,KAGxFyd,yBACO,GAAAzd,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBwV,GAAcgI,aAAa,GAAAxd,KAAI,WAAkB+V,KAAK/V,OAAM,KAYxF0d,wBAAwBC,GACjB,GAAA3d,KAAI,SAAY2d,EACf3d,KAAK0a,iBAELjB,QAAQmE,KAAK,yCAerBL,UAAU7P,GACN,IAAI,GAAA1N,KAAI,QAAU,CACd,GAAAA,KAAI,GAAW,SAAS0N,EAAMuE,aAAa,CACvC4L,WAAW,EACXC,SAAS,EACT9U,KAAMN,EAAsB,4BAC9B,KAEF,GAAA1I,KAAI,QAAS+d,GAAG,OAAQ,GAAA/d,KAAI,WAA6B+V,KAAK/V,OAC9D,GAAAA,KAAI,QAAS+d,GAAG,WAAY,GAAA/d,KAAI,WAAwB+V,KAAK/V,OAE7D,MAAMge,EAAa,CACf,IAAInV,EAAuB,eAAgBvC,EAAYQ,UAAW9G,KAAKie,aAAalI,KAAK/V,OACzF,KACA,IAAI6I,EAAuB,SAAUvC,EAAYc,OAAQpH,KAAK0d,wBAAwB3H,KAAK/V,QAE/F,GAAAA,KAAI,QAASke,UAAUhV,EAAyB,WAAY8U,EAAY,GAAAhe,KAAI,UAE5EA,KAAKsZ,kBAAkB,GAAAtZ,KAAI,SAG/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyB0N,GAG7BuQ,eACO,GAAAje,KAAI,UACH,GAAAA,KAAI,QAAM+b,iBACV,GAAA/b,KAAI,QAAM0J,UAAU3F,OAAO,oCAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,6BACxBmS,WAAW,GAAA9b,KAAI,WAAuB+V,KAAK/V,MAAO,MA4C1Dme,oBACI,OAAO,GAAAne,KAAI,QAGfoe,kBAAkBC,GACd,GAAAre,KAAI,GAAkBqe,EAAa,KAEhC,GAAAre,KAAI,UACH,GAAAA,KAAI,QAAWgW,MAAQ,GAAAhW,KAAI,QAAgBD,YAE/CC,KAAKqZ,sBAGTiF,kBACI,OAAO,GAAAte,KAAI,QAAkB,EAAI,EAGrCue,oBACI,OAAO,GAAAve,KAAI,QAGfwe,kBAAkBC,GACd,GAAAze,KAAI,GAAkBye,EAAa,KAEhC,GAAAze,KAAI,UACH,GAAAA,KAAI,QAAc0Y,QAAU,GAAA1Y,KAAI,SAEpCA,KAAKqZ,sBA+CAmB,YACL3V,OAAOsW,WAAWC,eAAc,EAAM,GAAGc,GAAWmB,uBAAuBC,GAAsBrB,YAG5FvB,iBACF,GAAA1a,KAAI,SACHA,KAAK2Z,uBAAuB,GAAA3Z,KAAI,SAEpCiZ,MAAMyB,iBAGDa,kBACL,OAAO,GAAAvb,KAAI,QAAU,CAAC,GAAAA,KAAI,SAAW,GAGhCqb,aACL,OAAOiC,GAAsBhC,WAGxBE,UACL,IAAI,GAAAxb,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAK8Z,SAAS,YAAW,KAErC,IAAI4E,EAAI/Z,SAASW,cAAc,OAC/BoZ,EAAE9V,UAAY,0BAEd,MAAM+V,EAAK,wDACX,GAAA3e,KAAI,GAAYA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQ2N,SAAW,EAAK,GAAA3N,KAAI,WAA2B+V,KAAK/V,OAAQ,GAAI,GAAI,MAAO,KACnJ,GAAAA,KAAI,QAAU2X,MAAQgH,EACtBD,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAW2e,IACjED,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM4e,EAAK,yDACX,GAAA5e,KAAI,GAAYA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQ4N,UAAY,EAAK,GAAA5N,KAAI,WAA4B+V,KAAK/V,OAAQ,IAAK,IAAK,MAAO,KACvJ,GAAAA,KAAI,QAAU2X,MAAQiH,EACtBF,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAW4e,IAClEF,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM6e,EAAK,+EACX,GAAA7e,KAAI,GAAYA,KAAKqY,0BAA0B,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQmL,SAAW,GAAO6N,GAAkB5F,gBAAiB,GAAApT,KAAI,WAA2B+V,KAAK/V,OAAM,KACxK,GAAAA,KAAI,QAAU2X,MAAQkH,EACtBH,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAW6e,IACjEH,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM8e,EAAK,wDACX,GAAA9e,KAAI,GAAYA,KAAKqY,yBAA0B,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQgS,QAAU,EAAM,GAAAhS,KAAI,WAA0B+V,KAAK/V,OAAQ,IAAK,KAAI,KAC7I,GAAAA,KAAI,QAAU2X,MAAQmH,EACtBJ,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAW8e,IAChEJ,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM+e,EAAK,wEACX,GAAA/e,KAAI,GAAaA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAiB,GAAAA,KAAI,WAAgC+V,KAAK/V,MAAO,GAAE,KACtH,GAAAA,KAAI,QAAW2X,MAAQoH,EACvBL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,QAAS,GAAArX,KAAI,QAAY+e,IAC9DL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMgf,EAAK,6DACX,GAAAhf,KAAI,GAAgBA,KAAKyY,2BAA2B,GAAAzY,KAAI,QAAiB,GAAAA,KAAI,WAAgC+V,KAAK/V,OAAM,KACxH,GAAAA,KAAI,QAAc2X,MAAQqH,EAC1BN,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAegf,IACpEN,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMif,EAAM,2EACZ,GAAAjf,KAAI,GAA0BA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAsBsd,GAAsB4B,WAAY,GAAAlf,KAAI,WAAoC+V,KAAK/V,MAAO,EAAG,KAAM,IAAI,KACzL,GAAAA,KAAI,QAAwB2X,MAAQsH,EACpCP,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,OAAQ,GAAArX,KAAI,QAAyBif,IAC1EP,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,GAAAA,KAAI,QAAMmf,OAAOT,GAGrB,OAAO,GAAA1e,KAAI,QAGfof,sBAAsB7K,GAClB,GAAAvU,KAAI,WAAuB,KAA3BA,KAA4BuU,GAoBhCJ,wBACI,OAAO,GAAAnU,KAAI,QAGfyN,0BAAmC+E,GAK/B,OAHKA,EAAOyC,MAAQqI,GAAsBpI,MACrC1C,EAAO2C,SAAWmI,GAAsBlI,QAKjD3H,iBAA0BiF,EAA0BzS,GAEhD,IAAIqd,GAAsB3K,mBAAmBD,GACzC,MAAM,IAAIvN,MAAM,4DAEpB,MAAMuI,EAAQH,EAAqB8R,UAAU3M,EAAEhF,OACzCJ,EAAI,IAAIgQ,GAAsBrd,EAAKyN,GAIzC,OAHAJ,EAAE8Q,kBAAkBpO,OAAO4C,MAAMF,EAAE2L,eAAiB,EAAM3L,EAAE2L,eAC5D/Q,EAAEkR,kBAAkB1H,QAAQpE,EAAE+L,gBAC9BnR,EAAE8R,sBAAsBpP,OAAO4C,MAAMF,EAAE6B,mBAAqB,EAAM7B,EAAE6B,mBAC7DjH,EAGFuF,UAEL,MAA+B,CAC3BsC,QAASmI,GAAsBlI,QAC/BH,KAAMqI,GAAsBpI,KAC5BxH,MAAO,GAAA1N,KAAI,QAAQ6S,UACnBwL,cAAe,GAAAre,KAAI,QACnBye,cAAe,GAAAze,KAAI,QACnBuU,kBAAmB,GAAAvU,KAAI,U,+OA7SxB,GAAAA,KAAI,QACHA,KAAKof,sBAAsB,GAAApf,KAAI,SAE/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAO,GAAO,IAE3D,YAUsBsf,GACnBtf,KAAK0d,wBAAwB4B,EAAM7a,SACtC,YAE2B6a,GACxB,IAAI5R,EAAQH,EAAqBgS,aAAaD,EAAM7a,OAAO+a,aACvD,GAAAxf,KAAI,UACJ0N,EAAMvC,SAAW,GAAAnL,KAAI,QAAQmL,UACjC,GAAAnL,KAAI,WAAoB,KAAxBA,KAAyB0N,IAC5B,cAoCM,GAAA1N,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,6BAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,sCAE/B,YAEmB+D,EAA4B+R,GAAwB,EAAMC,GAAmB,EAAMC,GAAqB,GAoBxH,GAnBA,GAAA3f,KAAI,GAAU0N,EAAK,KAEhB+R,GAAiB,GAAAzf,KAAI,SACpB,GAAAA,KAAI,QAAS4f,UAAUlS,EAAMuE,cAE9ByN,IACI,GAAA1f,KAAI,UACH,GAAAA,KAAI,QAAUgW,MAAQtI,EAAMC,SAAS5N,YAEtC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUgW,MAAQtI,EAAME,UAAU7N,YAEvC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUgW,OAAStI,EAAMvC,SAAW6N,GAAkB5F,iBAAiBrT,YAE5E,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUgW,MAAQtI,EAAMsE,QAAQjS,aAGzC4f,EAAc,CACb,IAAIE,EAAarK,GAAcsK,aAAa3L,sBAAsB,GAAAnU,KAAI,QAAQmL,UAC3E0U,IACI,GAAA7f,KAAI,UACH,GAAAA,KAAI,QAAwBgW,OAAS6J,EAAavC,GAAsB4B,YAAYnf,YAExF,GAAAC,KAAI,WAAuB,KAA3BA,KAA4B6f,GAAY,GAAO,IAIvD7f,KAAKqZ,uBACR,cAiCM,GAAArZ,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQ2N,SAAW,GAAA3N,KAAI,QAAU+f,eAEzC,GAAA/f,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQ4N,UAAY,GAAA5N,KAAI,QAAU+f,eAE1C,GAAA/f,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQmL,SAAW,GAAAnL,KAAI,QAAU+f,cAAgB/G,GAAkB5F,iBAE3E,GAAApT,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAO,IACtD,cAGM,GAAAA,KAAI,SAAW,GAAAA,KAAI,UAClB,GAAAA,KAAI,QAAQgS,QAAU,GAAAhS,KAAI,QAAU+f,eAExC,GAAA/f,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGG,GAAAA,KAAI,GAAkB,GAAAA,KAAI,QAAW+f,cAAa,KAElD/f,KAAKqZ,uBACR,cAGG,GAAArZ,KAAI,GAAkB,GAAAA,KAAI,QAAc0Y,QAAO,KAE/C1Y,KAAKqZ,uBACR,cAGG,GAAArZ,KAAI,WAAuB,KAA3BA,KAA4B,GAAAA,KAAI,QAAwB+f,cAAgBzC,GAAsB4B,aACjG,YAgFsB3K,EAA0BoL,GAAuB,EAAM1J,GAA4B,GAGtG,GAFA,GAAAjW,KAAI,GAAsBuU,EAAiB,KAExCoL,EAAc,CACb,IAAIxU,EAAWqK,GAAcsK,aAAaxL,aAAatU,KAAKmU,yBAExDhJ,GAAYA,GAAY,GAAAnL,KAAI,QAAQmL,WACpC,GAAAnL,KAAI,QAAQmL,SAAWA,EACvB,GAAAnL,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,GAAM,IAIvDiW,GACCjW,KAAKqZ,uBAlUG,GAAA2C,KAAO,WACP,GAAA9G,KAAO,wBACP,GAAAE,QAAU,uCACV,GAAA6G,SAAW,WACX,GAAAX,YAAa,EAmBtB,GAAA4D,WAAa,ICxCjB,SAASc,GAAaC,GACzB,MAAO,iBAAiBC,KAAKC,SAASF,IAGnC,SAAeG,GAAcC,EAAiBle,G,qCACjD,IAAIkD,EAAUV,SAASW,cAAc,KACrC,MAAMgb,EAAOphB,IAAIqhB,gBAAgBpe,GACjCkD,EAAQM,aAAa,OAAQ2a,GAC7Bjb,EAAQM,aAAa,WAAY0a,GAEjChb,EAAQb,MAAMgc,QAAU,OACxB7b,SAAS8b,KAAKrb,YAAYC,GAE1BA,EAAQqb,QAER/b,SAAS8b,KAAKza,YAAYX,I,olBCX9B,MAAMsb,GAAW,uCACXC,GAAW,mCAyDV,SAAeC,GAAqBC,G,0CAEvC,IACIC,GADS,IAAIC,WACGC,gBAAgBH,EAAgB,YAChDI,EAAoB,KAExB,GAAuC,OAAnCH,EAAOI,gBAAgBC,SAAmB,CAC1C,IAAIC,EAAiC,GACjCC,EAAiC,GACjCC,EAAoC,GAExC,IAAK,MAAMrhB,KAAQ6gB,EAAOS,qBAAqB,aAAc,CACzD,IAAIC,EAAgB,UACpB,IACIA,EAAgBvhB,EAAKshB,qBAAqB,QAAQ,GAAGE,WAAW,GAAGC,UAAUC,OAEjF,UACA,IAAIC,EAAexQ,MAAMC,KAAKpR,EAAKshB,qBAAqB,YACpDM,EAAczQ,MAAMC,KAAKpR,EAAKshB,qBAAqB,UACnDO,EAAY1Q,MAAMC,KAAKpR,EAAKshB,qBAAqB,eAErD,IAAI,MAAMQ,KAAS9hB,EAAKshB,qBAAqB,iBACzCK,EAAeA,EAAaxhB,OAAOgR,MAAMC,KAAK0Q,EAAMR,qBAAqB,aACzEM,EAAcA,EAAYzhB,OAAOgR,MAAMC,KAAK0Q,EAAMR,qBAAqB,WACvEO,EAAYA,EAAU1hB,OAAOgR,MAAMC,KAAK0Q,EAAMR,qBAAqB,gBAIvE,IAAK,MAAMS,KAAUH,EAAa,CAC9B,IACIxU,EAAI4U,GADID,EAAOT,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OACnD7E,MAAM,MACrCzP,EAAEf,IAAMkV,EACRJ,EAAQ5hB,KAAK6N,GAIjB,IAAK,MAAM6U,KAAQJ,EAAW,CAC1B,IACIK,EADSD,EAAKX,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OACzD7E,MAAM,KAE1BsF,EAAgC,GACpC,IAAK,MAAM3U,KAAS0U,EAChBC,EAAO5iB,KAAKyiB,GAAiBxU,EAAMqP,MAAM,OAG7CuE,EAAM7hB,KAAK4iB,GAIf,IAAK,MAAMC,KAAWT,EAAc,CAChC,IACIO,EADSE,EAAQd,qBAAqB,eAAe,GAAGE,WAAW,GAAGC,UAAUC,OAC5D7E,MAAM,KAE1BsF,EAAgC,GACpC,IAAK,MAAM3U,KAAS0U,EAChBC,EAAO5iB,KAAKyiB,GAAiBxU,EAAMqP,MAAM,OAG7CwE,EAAS9hB,KAAK4iB,IAItBnB,EAAM,CAAEG,QAASA,EAASC,MAAOA,EAAOC,SAAUA,QAElD9H,QAAQC,MAAM,kCAGlB,OAAOwH,KAGX,SAASgB,GAAiB5X,GAEtB,IAAI6H,EAAM7H,EAAOhK,QAAU,EAAI0P,OAAOuS,WAAWjY,EAAO,IAAM,EAC1DkY,EAAMlY,EAAOhK,QAAU,EAAI0P,OAAOuS,WAAWjY,EAAO,IAAM,EAC1DmY,EAAMnY,EAAOhK,QAAU,EAAI0P,OAAOuS,WAAWjY,EAAO,IAAM,EAE9D,OAAO,IAAIiD,EACPyC,OAAO4C,MAAMT,GAAO,EAAMA,EAC1BnC,OAAO4C,MAAM4P,GAAO,EAAMA,EAC1BxS,OAAO4C,MAAM6P,GAAO,EAAMA,GAe3B,SAAeC,GAA8BrB,EAAgCsB,EAAkCpB,G,0CAClH,MAAMqB,QAAgBC,GAA0BxB,EAASsB,EAAWpB,GAC9DuB,QAIV,SAAqC3gB,G,0CAEjC,MAAM4gB,EAAa,IAAI,MAAenC,IAChCoC,EAAS,IAAI,MAAcD,GASjC,aANMC,EAAOrZ,IAAI,UAAW,IAAI,MAAexH,UAGzC6gB,EAAOC,QAGNF,EAAWG,aAhBAC,CAAsBP,GACxCxC,GAAcJ,GAAa,OAAQ8C,MAkBhC,SAAeD,GAA0BxB,EAAgCsB,EAAkCpB,G,0CAC9G,IAAI6B,EAAcze,SAAS0e,eAAeC,eAAe,GAAI,GAAI,MACjE,MAAMC,EAAUH,EAAY9d,cAAc,OAC1Cie,EAAQ5d,aAAa,QAAS,kCAC9B,MAAM6d,EAAeJ,EAAY9d,cAAc,YAC/Cie,EAAQne,YAAYoe,GACpBJ,EAAYhe,YAAYme,GAGxB,IAAI,IAAI/iB,EAAE,EAAGA,EAAE6gB,EAAQ/gB,OAAQE,IAC3BgjB,EAAape,YACTqe,GAAsBL,EAAa/B,EAAQ7gB,GAAG+L,IAAM8U,EAAQ7gB,GAAG+L,IAAM,WAAW/L,EAAE,IAAK6gB,EAAQ7gB,GAAGmN,SAAU0T,EAAQ7gB,GAAGoN,YAK/H4V,EAAape,YA8BjB,SAA8Bge,EAA0BxP,EAAa8P,GACjE,MAAMC,EAAgBP,EAAY9d,cAAc,aAC1Cse,EAAWR,EAAY9d,cAAc,QAC3Cse,EAASlI,UAjCkD,cAkC3D,MAAMmI,EAAkBT,EAAY9d,cAAc,eAC5Cwe,EAAiBV,EAAY9d,cAAc,cAC3Cye,EAAkBX,EAAY9d,cAAc,eAC5C0e,EAAQN,EAAYzjB,KAAIoM,GAAK,GAAGA,EAAEuB,aAAavB,EAAEsB,aAMvD,OALAoW,EAAgBrI,UAAYsI,EAAMzjB,KAAK,KACvCojB,EAAcve,YAAYwe,GAC1BD,EAAcve,YAAYye,GAC1BF,EAAcve,YAAY0e,GAC1BA,EAAe1e,YAAY2e,GACpBJ,EA3CkBM,CAAqBb,EAAa,EAAeT,IAG1E,IAAI,IAAIniB,EAAE,EAAGA,EAAE+gB,EAASjhB,OAAQE,IAC5BgjB,EAAape,YAAY8e,GAAwBd,EAAa,WAAW5iB,EAAE,IAAK+gB,EAAS/gB,KAG7F,OAGG,SAAgC4iB,GAEnC,MAAO,0CADO,IAAIe,eAAgBC,kBAAkBhB,GAJ7CiB,CAAuBjB,MAQlC,SAASK,GAAsBL,EAA0BxP,EAAazB,EAAYC,GAC9E,MAAMuR,EAAgBP,EAAY9d,cAAc,aAC1Cse,EAAWR,EAAY9d,cAAc,QAC3Cse,EAASlI,UAAY9H,EACrB,MAAMiQ,EAAkBT,EAAY9d,cAAc,eAC5Cgf,EAAYlB,EAAY9d,cAAc,SACtCye,EAAkBX,EAAY9d,cAAc,eAMlD,OALAye,EAAgBrI,UAAY,GAAGtJ,KAAOD,IACtCwR,EAAcve,YAAYwe,GAC1BD,EAAcve,YAAYye,GAC1BF,EAAcve,YAAYkf,GAC1BA,EAAUlf,YAAY2e,GACfJ,EAmBX,SAASO,GAAwBd,EAA0BxP,EAAa8P,GACpE,MAAMC,EAAgBP,EAAY9d,cAAc,aAC1Cse,EAAWR,EAAY9d,cAAc,QAC3Cse,EAASlI,UAAY9H,EACrB,MAAMiQ,EAAkBT,EAAY9d,cAAc,eAC5Cif,EAAcnB,EAAY9d,cAAc,WACxCkf,EAAepB,EAAY9d,cAAc,mBACzCmf,EAAWrB,EAAY9d,cAAc,cACrCye,EAAkBX,EAAY9d,cAAc,eAC5C0e,EAAQN,EAAYzjB,KAAIoM,GAAK,GAAGA,EAAEuB,aAAavB,EAAEsB,aAQvD,OAPAoW,EAAgBrI,UAAYsI,EAAMzjB,KAAK,KACvCojB,EAAcve,YAAYwe,GAC1BD,EAAcve,YAAYye,GAC1BF,EAAcve,YAAYmf,GAC1BA,EAAYnf,YAAYof,GACxBA,EAAapf,YAAYqf,GACzBA,EAASrf,YAAY2e,GACdJ,E,2uBCjPJ,MAAMe,WAA6B1L,GAsBtClQ,YAAY7I,EAAW0kB,EAA+B,GAAIC,EAAwB,MAC9E3L,MAAMhZ,G,aAjBV,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAII,GAAAD,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAU,GAAE,KAEhBA,KAAK6kB,YAAYD,GAEjB,GAAA5kB,KAAI,GAAiB2kB,EAAQrkB,OAAS,GAAE,KACxC,GAAAN,KAAI,GAAoB,EAAC,KACzB,GAAAA,KAAI,GAAY,GAAE,KACf2kB,EAAQrkB,QACc,GAAlBqkB,EAAQrkB,QACPmZ,QAAQmE,KAAK,gFAEjB5d,KAAK8kB,YAAYH,IAGjB3kB,KAAK+kB,iBAIbC,kBACI,OAAO,GAAAhlB,KAAI,QAGfilB,oBAAoBC,GAGhB,GAFA,GAAAllB,KAAI,GAAiBklB,EAAY,KAE9B,GAAAllB,KAAI,QAEH,IAAI,IAAI8a,KAAW,GAAA9a,KAAI,QACnBA,KAAKsZ,kBAAkBwB,QAG3B,IAAI,IAAIA,KAAW,GAAA9a,KAAI,QACnBA,KAAK2Z,uBAAuBmB,GAIxC+J,YAAYD,GACR,GAAA5kB,KAAI,GAAY4kB,EAAO,KAG3BO,wBAAwBpN,EAA2B,MAC/C,GAAA/X,KAAI,GAAuB+X,EAAS,KAsBxCqN,qBAAqBC,GACjB,MAAMC,EAAM,GAAAtlB,KAAI,QAAU8O,QAAQuW,GAE/BC,GAAO,GACN,GAAAtlB,KAAI,WAAmB,KAAvBA,KAAwB,GAAAA,KAAI,QAAWslB,GAAM,GAC7CtlB,KAAK+kB,kBAELtL,QAAQmE,KAAK,gDAIrB2H,sBAAsBF,GAClB,MAAMC,EAAM,GAAAtlB,KAAI,QAAU8O,QAAQuW,GAC/BC,GAAO,GACN,GAAAtlB,KAAI,WAAmB,KAAvBA,KAAwB,GAAAA,KAAI,QAAWslB,EAAK,GAC5CtlB,KAAK+kB,kBAELtL,QAAQmE,KAAK,gDAIrB4H,cAAcH,GACV,MAAMC,EAAM,GAAAtlB,KAAI,QAAU8O,QAAQuW,GAE/BC,GAAO,EACN,GAAAtlB,KAAI,GAAoBslB,EAAG,KAE3B7L,QAAQmE,KAAK,gDAQrB6H,cACI,OAAO,GAAAzlB,KAAI,QAGf0lB,WAAWL,EAA6BN,GAAe,IAChD,GAAA/kB,KAAI,QAAoB,GAAK,GAAAA,KAAI,SAAqB,GAAAA,KAAI,QAAUM,SACnE,GAAAN,KAAI,GAAoBgL,KAAKyI,IAAI,GAAAzT,KAAI,QAAUM,OAAS,EAAG,GAAE,KAEjE,IAAIiZ,EAAI,SAAS,CAAC8L,EAAO1X,SAAU0X,EAAOzX,WAAY,CAClDiQ,WAAW,EACXC,SAAS,EACT9U,KAAMN,EAAsB,0BAGhC,MAAMsV,EAAa,CACf,IAAInV,EAAuB,eAAgBvC,EAAYQ,UAAW9G,KAAKie,aAAalI,KAAK/V,OACzF,KACA,IAAI6I,EAAuB,eAAgBvC,EAAYY,WAAYlH,KAAKolB,qBAAqBrP,KAAK/V,OAClG,IAAI6I,EAAuB,gBAAiBvC,EAAYa,YAAanH,KAAKulB,sBAAsBxP,KAAK/V,OACrG,KACA,IAAI6I,EAAuB,SAAUvC,EAAYc,OAAQpH,KAAK2lB,uBAAuB5P,KAAK/V,QAE9FuZ,EAAE2E,UAAUhV,EAAyB,iBAAkB8U,EAAYzE,IAEnEA,EAAEwE,GAAG,OAAQ/d,KAAK+kB,eAAehP,KAAK/V,OACtCuZ,EAAEwE,GAAG,QAAS,GAAA/d,KAAI,WAAyB+V,KAAK/V,OAChDuZ,EAAEwE,GAAG,WAAY,GAAA/d,KAAI,WAAwB+V,KAAK/V,OAElD,GAAAA,KAAI,QAAU0D,OAAO,GAAA1D,KAAI,QAAmB,EAAGuZ,GAC5C,GAAAvZ,KAAI,SACHA,KAAKsZ,kBAAkBC,GAExBwL,GACC/kB,KAAK+kB,iBAGb9G,eACO,GAAAje,KAAI,UACH,GAAAA,KAAI,QAAM+b,iBACV,GAAA/b,KAAI,QAAM0J,UAAU3F,OAAO,oCAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,6BACxBmS,WAAW,GAAA9b,KAAI,WAAuB+V,KAAK/V,MAAO,MAW1D8kB,YAAYH,EAA+B,IACvC,IAAI,MAAMjG,KAAKiG,EACX3kB,KAAK0lB,WAAWhH,GAAG,GAGvB1e,KAAK+kB,iBAGTa,cACI,OAAO,GAAA5lB,KAAI,QAGf6lB,wBACI,OAAO,GAAA7lB,KAAI,QAAUC,KAAIqN,GAAKC,EAAqBgS,aAAajS,EAAEkS,eAOtEmG,uBAAuBN,GACnB,MAAMC,EAAM,GAAAtlB,KAAI,QAAU8O,QAAQuW,GAC/BC,GAAO,GACNtlB,KAAK2Z,uBAAuB0L,GAC5B,GAAArlB,KAAI,QAAU0D,OAAO4hB,EAAK,GAC1BtlB,KAAK+kB,kBAELtL,QAAQmE,KAAK,gDAgBrBkI,wBACI,GAAG,GAAA9lB,KAAI,QAAW,CACd,MAAMoN,EAAI,GAAApN,KAAI,QAAUib,YAClB8K,EAAK3Y,EAAE4Y,eACPC,EAAK7Y,EAAE8Y,eACPC,EAAKJ,EAAG3T,IAAM6T,EAAG7T,IACjBgU,EAAKL,EAAG5T,IAAM8T,EAAG9T,IACjB7E,EAAI,IAAIC,EAAqB0Y,EAAG9T,IAAMiU,EAAK,EAAGH,EAAG7T,IAAM+T,EAAK,GAElEnmB,KAAK0lB,WAAWpY,IAIxByX,iBACI,GAAG,GAAA/kB,KAAI,QAAUM,OAAS,EAAG,CACzB,IAAIqkB,EAAU,GAEd,IAAI,MAAMjG,KAAK,GAAA1e,KAAI,QACf2kB,EAAQllB,KAAKif,EAAEc,aAGhB,GAAAxf,KAAI,QAGH,GAAAA,KAAI,QAAUqmB,WAAW1B,IAGzB,GAAA3kB,KAAI,GAAY,UAAU2kB,EAAS,CAAC2B,MAAO,QAAO,KAClD,GAAAtmB,KAAI,QAAU+d,GAAG,QAAS,GAAA/d,KAAI,WAA0B+V,KAAK/V,OAC7DA,KAAKsZ,kBAAkB,GAAAtZ,KAAI,eAG/BA,KAAK0a,iBAGN,GAAA1a,KAAI,SACH,GAAAA,KAAI,QAAoB,KAAxBA,MACJA,KAAKqZ,sBAEL,GAAArZ,KAAI,WAAgB,KAApBA,MAwBKwa,YACL3V,OAAOsW,WAAWC,eAAc,EAAM,GAAGc,GAAWmB,uBAAuBqH,GAAqBzI,YAG3FvB,iBACL,IAAI,MAAMgE,KAAK,GAAA1e,KAAI,QACfA,KAAK2Z,uBAAuB+E,GAEhC,GAAA1e,KAAI,GAAY,GAAE,KAEf,GAAAA,KAAI,UACHA,KAAK2Z,uBAAuB,GAAA3Z,KAAI,SAChC,GAAAA,KAAI,GAAY,KAAI,MAGxBiZ,MAAMyB,iBAKDc,UACL,IAAI,GAAAxb,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAK8Z,SAAS,WAAU,KAEpC,IAAI4E,EAAI/Z,SAASW,cAAc,OAC/BoZ,EAAE9V,UAAY,0BAGd,MAAMmW,EAAK,0DACX,GAAA/e,KAAI,GAAqBA,KAAK6X,qBAAoB,KAClD,GAAA7X,KAAI,QAAmB2X,MAAQoH,EAC/BL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAoB+e,IACzEL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,GAAAA,KAAI,WAAgB,KAApBA,MAGA,MAAMumB,EAAM,kCACZ,GAAAvmB,KAAI,GAAqBA,KAAKyY,2BAA2BzY,KAAKglB,kBAAmB,GAAAhlB,KAAI,WAA+B+V,KAAK/V,OAAM,KAC/H,GAAAA,KAAI,QAAmB2X,MAAQ4O,EAC/B7H,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,gBAAiB,GAAArX,KAAI,QAAoBumB,IAC9E7H,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMwmB,EAAM,+CACZ,GAAAxmB,KAAI,GAAcA,KAAKoY,0BAA0B,GAAApY,KAAI,QAAS,GAAAA,KAAI,WAAwB+V,KAAK/V,OAAM,KACrG,GAAAA,KAAI,QAAY2X,MAAQ6O,EACxB9H,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,SAAU,GAAArX,KAAI,QAAawmB,IAChE9H,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM2e,EAAK,2CACX,GAAA3e,KAAI,GAAuBA,KAAKmY,yBAAyB,SAAU,GAAAnY,KAAI,WAAoB+V,KAAK/V,OAAM,KACtG,GAAAA,KAAI,QAAqB2X,MAAQgH,EACjCD,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,cAAe,GAAArX,KAAI,QAAsB2e,IAC9ED,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM4e,EAAK,4CACL6H,EAAM,wCACNC,EAAM,wCACZ,GAAA1mB,KAAI,GAAmBA,KAAKmY,yBAAyB,MAAO,GAAAnY,KAAI,WAAgB+V,KAAK/V,OAAM,KAC3F,GAAAA,KAAI,QAAiB2X,MAAQ8O,EAC7B/H,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAkB4e,IACzEF,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,GAAAA,KAAI,GAAmBA,KAAKmY,yBAAyB,MAAO,GAAAnY,KAAI,WAAgB+V,KAAK/V,OAAM,KAC3F,GAAAA,KAAI,QAAiB2X,MAAQ+O,EAC7BhI,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAkB4e,GAAI,IAC7EF,EAAEtZ,YAAY,GAAApF,KAAI,SAKlB,GAAAA,KAAI,QAAMmf,OAAOT,GAGrB,OAAO,GAAA1e,KAAI,QAWf2mB,YACI,OAAO,GAAA3mB,KAAI,QAGf4mB,UAAUC,EAAcnH,GAAqB,GACzC,GAAA1f,KAAI,GAAU6mB,EAAK,KAChB,GAAA7mB,KAAI,SAAe0f,IAClB,GAAA1f,KAAI,QAAYgW,MAAQ6Q,GAGhCpZ,0BAAmC+E,GAK/B,OAHKA,EAAOyC,MAAQyP,GAAqBxP,MACpC1C,EAAO2C,SAAWuP,GAAqBtP,QAKhD3H,iBAAiBiF,EAA4BzS,GAEzC,IAAIykB,GAAqB/R,mBAAmBD,GACxC,MAAM,IAAIvN,MAAM,8DAEpB,MAAMwf,EAAUjS,EAAEiS,QAAQ1kB,KAAIoM,GAAKkB,EAAqB8R,UAAUhT,KAClE,IAAIiB,EAAI,IAAIoX,GAAqBzkB,EAAK0kB,GAEtC,OADArX,EAAEsZ,UAAUlU,EAAEmU,MAAM9mB,YACbuN,EAGFuF,UAEL,MAAiC,CAC7BsC,QAASuP,GAAqBtP,QAC9BH,KAAMyP,GAAqBxP,KAC3ByP,QAAS3kB,KAAK6lB,wBAAwB5lB,KAAIoM,GAAKA,EAAEwG,YACjDgU,MAAO,GAAA7mB,KAAI,U,6OA5UP8mB,EAAWC,EAAkBC,GACrC,GAAIA,GAAaF,EAAIxmB,OAEjB,IADA,IAAIU,EAAIgmB,EAAYF,EAAIxmB,OAAS,EAC1BU,KACH8lB,EAAIrnB,UAAKqB,GAGjBgmB,EAAIpjB,OAAOsjB,EAAW,EAAGF,EAAIpjB,OAAOqjB,EAAW,GAAG,KAErD,YAEkBD,EAAWC,EAAkBE,GAC5C,IAAID,GAAaD,EAAYE,GAAQH,EAAIxmB,OACtC0mB,EAAY,IACXA,GAAaF,EAAIxmB,QAErB,GAAAN,KAAI,WAAY,KAAhBA,KAAiB,GAAAA,KAAI,QAAW+mB,EAAWC,IAC9C,YAiCuB1H,GACpBtf,KAAKwlB,cAAclG,EAAM7a,SAC5B,cAgDM,GAAAzE,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,6BAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,sCAE/B,YAkBsB2V,GACnBtf,KAAK2lB,uBAAuBrG,EAAM7a,SACrC,YAawB6a,GACrB,GAAG,GAAAtf,KAAI,SAAa,GAAAA,KAAI,QAAgB,CAKpC,MAAMsN,EAAIC,EAAqBgS,aAAaD,EAAMpN,QAElDlS,KAAK0lB,WAAWpY,KAEvB,cA6CM,GAAAtN,KAAI,UACH,GAAAA,KAAI,QAAmBgW,MAAQ,GAAAhW,KAAI,QAAUM,OAAO4S,QAAQ,KACnE,cAGM,GAAAlT,KAAI,QACH,GAAAA,KAAI,QAAUknB,4BAA4BlnB,MAE1CyZ,QAAQmE,KAAK,qDAEpB,cAGG8E,GAA8B,GAAI,GAAI,CAAC1iB,KAAK6lB,2BAC/C,cAGGnD,GAA8B,GAAI,GAAI,CAAC1iB,KAAK6lB,2BAC/C,cAgFG7lB,KAAKilB,oBAAoB,GAAAjlB,KAAI,QAAmB0Y,UACnD,cAGG1Y,KAAK4mB,UAAU,GAAA5mB,KAAI,QAAYgW,OAAO,IA/W1B,GAAAgG,KAAO,UACP,GAAA9G,KAAO,uBACP,GAAAE,QAAU,uCACV,GAAA6G,SAAW,U,61BCaxB,MAAMkL,WAA4BzC,GA0DrC5b,YAAY7I,EAAW0kB,EAA+B,GAAIyC,GAAe,GACrEnO,MAAMhZ,EAAK0kB,G,aApDf,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBAQI,GAAA3kB,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAoB,GAAE,KAE1B,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAyB,KAAI,KACjC,GAAAA,KAAI,GAAoB,KAAI,KAE5B,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAc,KAAI,KACtB,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAmB,KAAI,KAC3B,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAA0B,KAAI,KAClC,GAAAA,KAAI,GAAe,KAAI,KAEvB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAA0B,KAAI,KAElC,GAAAA,KAAI,GAAmBonB,EAAc,KACrC,GAAApnB,KAAI,GAAa,IAAG,KACpB,GAAAA,KAAI,GAAa,GAAE,KACnB,GAAAA,KAAI,GAAY,EAAC,KACjB,GAAAA,KAAI,GAAU,EAAG,KACjB,GAAAA,KAAI,GAAe,EAAG,KACtB,GAAAA,KAAI,GAAe,EAAG,KACtB,GAAAA,KAAI,GAAagO,EAAcqZ,QAAO,KACtC,GAAArnB,KAAI,GAAsB,EAAC,KAC3B,GAAAA,KAAI,GAAW,EAAG,KAElB,GAAAA,KAAI,GAAY,GAAG,KACnB,GAAAA,KAAI,GAAY,GAAG,KACnB,GAAAA,KAAI,GAAsB,EAAG,KAE7BA,KAAKmlB,wBAAwBnlB,KAAKsnB,cAAcvR,KAAK/V,OACrD,GAAAA,KAAI,WAAgB,KAApBA,MAAqB,GAErB,GAAAA,KAAI,GAAoBwV,GAAcgI,aAAa,GAAAxd,KAAI,WAAkB+V,KAAK/V,OAAM,KAG/Eie,eACF,GAAAje,KAAI,UACH,GAAAA,KAAI,QAAM+b,iBACV,GAAA/b,KAAI,QAAM0J,UAAU3F,OAAO,oCAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,6BACxBmS,WAAW,GAAA9b,KAAI,WAAuB+V,KAAK/V,MAAO,MAW1Dyd,yBACO,GAAAzd,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBwV,GAAcgI,aAAa,GAAAxd,KAAI,WAAkB+V,KAAK/V,OAAM,KAkCxFunB,sBAAsBH,GAClB,GAAApnB,KAAI,GAAmBonB,EAAc,KACrCpnB,KAAKsnB,gBAGTE,aAAarc,GACT,GAAAnL,KAAI,WAAc,KAAlBA,KAAmBmL,GAAU,GAmBjCsc,aAAa3a,GACT,GAAA9M,KAAI,WAAc,KAAlBA,KAAmB8M,GAsBvB4a,YAAYC,GACR,GAAA3nB,KAAI,GAAY2nB,EAAO,KACvB3nB,KAAKsnB,gBAGTM,UAAUtX,GACN,GAAAtQ,KAAI,GAAUsQ,EAAK,KACnBtQ,KAAKsnB,gBAGTO,eAAeC,GACX,GAAA9nB,KAAI,GAAe8nB,EAAU,KAC7B9nB,KAAKsnB,gBAGTS,eAAeC,GACX,GAAAhoB,KAAI,GAAegoB,EAAU,KAC7BhoB,KAAKsnB,gBAGTW,aAAaC,GACT,GAAAloB,KAAI,GAAakoB,EAAQ,KACzBloB,KAAKsnB,gBAGTa,sBAAsBC,GAClB,GAAApoB,KAAI,GAAsBooB,EAAiB,KAC3CpoB,KAAKsnB,gBAGTe,WAAWC,GACP,GAAAtoB,KAAI,GAAWsoB,EAAM,KACrBtoB,KAAKsnB,gBAGTiB,qBACI,OAAO,GAAAvoB,KAAI,QAGfwoB,eACI,OAAO,GAAAxoB,KAAI,QAGfsU,eACI,OAAO,GAAAtU,KAAI,QAGfyoB,cACI,OAAO,GAAAzoB,KAAI,QAGf0oB,YACI,OAAO,GAAA1oB,KAAI,QAGf2oB,iBACI,OAAO,GAAA3oB,KAAI,QAGf4oB,iBACI,OAAO,GAAA5oB,KAAI,QAGf6oB,eACI,OAAO,GAAA7oB,KAAI,QAGf8oB,wBACI,OAAO,GAAA9oB,KAAI,QAGf+oB,aACI,OAAO,GAAA/oB,KAAI,QAGfsnB,gBAEI,GAAAtnB,KAAI,WAAoB,KAAxBA,MAGA,GAAAA,KAAI,WAAiB,KAArBA,MAGA,GAAAA,KAAI,GAAiB8b,WAAW,GAAA9b,KAAI,WAAiB+V,KAAK/V,MAAM,GAAO,GAAAA,KAAI,SAAkB,KAuEjGse,kBACI,IAAIrb,EAAQ,KACRgJ,EAAauJ,GAAcsK,aAAazL,mBAAmB,GAAArU,KAAI,SAEnE,GAAGiM,GAAe,GAAAjM,KAAI,SAAa,GAAO,GAAAA,KAAI,SAAa,EAAI,CAC3D,IAAIgpB,EAAc,EAElB,MAAMC,EAAiB,EAAI,GAAAjpB,KAAI,QACzBkpB,EAAiBle,KAAKE,IAAIe,EAAWqC,UAAU2a,EAErD,IAAI,MAAME,KAAQnpB,KAAKopB,kBAAmB,CACtC,MAAMC,EAAKF,EAAKtZ,MAAMlF,SAChB2e,EAAKH,EAAKI,IAAI5e,OAAO0e,EAAGxe,MAExB2e,EAAgBH,EAAGve,cAAcwe,GACvCN,GAAehe,KAAKye,KAAKD,EAAgBN,GAG7CjmB,EAAQ+lB,EAGZ,OAAO/lB,EA4DFuX,YACL3V,OAAOsW,WAAWC,eAAc,EAAM,GAAGc,GAAWmB,uBAAuB8J,GAAoBlL,YAG1FvB,iBACL,GAAA1a,KAAI,WAAiB,KAArBA,MAEAiZ,MAAMyB,iBAGDW,aACL,OAAO8L,GAAoB7L,WAGtBC,kBACL,MAAMoJ,EAAU3kB,KAAK6lB,wBACrB,OAAO,GAAA7lB,KAAI,QAAYM,OAAS,GAAAN,KAAI,QAAe2kB,EAAQrkB,OAAS,CAACqkB,EAAQ,IAAM,GAGvFyE,kBACI,MAAM9e,EAAStK,KAAKub,kBACpB,IAAImO,EAAkC,GAClC7Z,EAA6B,KAEjC,IAAI,IAAIrP,EAAI,EAAGA,EAAI8J,EAAOhK,OAAQE,IAAK,CACnC,MAAM8M,EAAIhD,EAAO9J,IACZqP,GAASvC,EAAEf,KAAO0B,EAAc0b,OAAW9Z,GAASvC,EAAEf,KAAO0B,EAAc2b,aAE5E/Z,EAAQvC,GACDuC,GAAWvC,EAAEf,KAAO0B,EAAc4b,YAAgBvc,EAAEf,KAAO0B,EAAc6b,MAGhFJ,EAAMjqB,KAAK,CACPoQ,MAAOA,EACP0Z,IAAKjc,IAGTuC,EAAQ,MAOhB,OAHGA,GACC4J,QAAQmE,KAAK,4CAEV8L,EAGFlO,UACL,IAAI,GAAAxb,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAK8Z,SAAS,UAAS,KAEnC,IAAI4E,EAAI/Z,SAASW,cAAc,OAC/BoZ,EAAE9V,UAAY,0BAGd,MAAMmhB,EAAM,yDACZ,GAAA/pB,KAAI,GAAqBA,KAAK6X,qBAAoB,KAClD,GAAA7X,KAAI,QAAmB2X,MAAQoS,EAC/BrL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAoB+pB,IACzErL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMgqB,EAAM,uEACZ,GAAAhqB,KAAI,GAAuBA,KAAK6X,qBAAoB,KACpD,GAAA7X,KAAI,QAAqB2X,MAAQqS,EACjCtL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAsBgqB,IAC7EtL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMiqB,EAAM,8CACZ,GAAAjqB,KAAI,GAAyBA,KAAK6X,qBAAoB,KACtD,GAAA7X,KAAI,QAAuB2X,MAAQsS,EACnCvL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAwBiqB,IAC9EvL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMkqB,EAAM,8FACZ,GAAAlqB,KAAI,GAAoBA,KAAK6X,qBAAoB,KACjD,GAAA7X,KAAI,QAAkB2X,MAAQuS,EAC9BxL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,UAAW,GAAArX,KAAI,QAAmBkqB,IACvExL,EAAEtZ,YAAY,GAAApF,KAAI,SAGlB,MAAM6e,EAAK,+DACX,GAAA7e,KAAI,GAAqBA,KAAKyY,2BAA2BzY,KAAKglB,kBAAmB,GAAAhlB,KAAI,WAA+B+V,KAAK/V,OAAM,KAC/H,GAAAA,KAAI,QAAmB2X,MAAQkH,EAC/BH,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,gBAAiB,GAAArX,KAAI,QAAoB6e,IAC9EH,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMumB,EAAM,8FACZ,GAAAvmB,KAAI,GAAuBA,KAAKyY,2BAA2B,GAAAzY,KAAI,QAAkB,GAAAA,KAAI,WAAiC+V,KAAK/V,OAAM,KACjI,GAAAA,KAAI,QAAqB2X,MAAQ4O,EACjC7H,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAsB6e,IAC7EH,EAAEtZ,YAAY,GAAApF,KAAI,SAMlB,MAAMmqB,EAAM,sEACZ,IAAIC,EAAapqB,KAAK6X,qBACtBuS,EAAWzS,MAAQwS,EACnB,IAAIE,EAAmBrqB,KAAKqX,kBAAkB,kBAAmB+S,EAAYD,GAC7EE,EAAiB3gB,UAAUC,IAAI,oCAC/B+U,EAAEtZ,YAAYilB,GACd3L,EAAEtZ,YAAYglB,GAEd,MAAMnL,EAAM,2EACZ,GAAAjf,KAAI,GAA0BA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAsBmnB,GAAoBjI,WAAY,GAAAlf,KAAI,WAAoC+V,KAAK/V,MAAO,EAAG,KAAM,IAAI,KACvL,GAAAA,KAAI,QAAwB2X,MAAQsH,EACpCP,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,OAAQ,GAAArX,KAAI,QAAyBif,IAC1EP,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMsqB,EAAM,uDACZ,GAAAtqB,KAAI,GAAgBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAYmnB,GAAoBoD,YAAa,GAAAvqB,KAAI,WAA0B+V,KAAK/V,MAAO,EAAG,KAAI,KACpJ,GAAAA,KAAI,QAAc2X,MAAQ2S,EAC1B5L,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAesqB,IACpE5L,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMwqB,EAAM,yDACZ,GAAAxqB,KAAI,GAAgBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAYmnB,GAAoBoD,YAAa,GAAAvqB,KAAI,WAA0B+V,KAAK/V,MAAO,EAAG,KAAI,KACpJ,GAAAA,KAAI,QAAc2X,MAAQ6S,EAC1B9L,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAewqB,IACpE9L,EAAEtZ,YAAY,GAAApF,KAAI,SAKlB,MAAMyqB,EAAM,uEACZ,IAAIC,EAAa1qB,KAAK6X,qBACtB6S,EAAW/S,MAAQ8S,EACnB,IAAIE,EAAmB3qB,KAAKqX,kBAAkB,eAAgBqT,EAAYD,GAC1EE,EAAiBjhB,UAAUC,IAAI,oCAC/B+U,EAAEtZ,YAAYulB,GACdjM,EAAEtZ,YAAYslB,GAGd,MAAM5L,EAAK,6EACX,GAAA9e,KAAI,GAAiBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAamnB,GAAoB/T,gBAAiB,GAAApT,KAAI,WAA2B+V,KAAK/V,OAAM,KACnJ,GAAAA,KAAI,QAAe2X,MAAQmH,EAC3BJ,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAgB8e,IACtEJ,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM+e,EAAK,uEACX,GAAA/e,KAAI,GAAiBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAY,GAAAA,KAAI,WAA2B+V,KAAK/V,MAAO,IAAI,KAClH,GAAAA,KAAI,QAAe2X,MAAQoH,EAC3BL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAgB+e,IACrEL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMgf,EAAK,6FACX,GAAAhf,KAAI,GAAiBA,KAAK2Y,yBACtB,CACI3K,EAAcqZ,QACdrZ,EAAc4c,SACd5c,EAAc6c,WACd7c,EAAc8c,aAChB7qB,KAAIoM,GAAKA,EAAEtM,aACb,CACI,WACA,YACA,cACA,gBAEJ,GAAAC,KAAI,WAA2B+V,KAAK/V,MACpC,GAAAA,KAAI,QAAWD,YAAW,KAC9B,GAAAC,KAAI,QAAe2X,MAAQqH,EAC3BN,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,SAAU,GAAArX,KAAI,QAAgBgf,IACnEN,EAAEtZ,YAAY,GAAApF,KAAI,SAKlB,MAAM+qB,EAAK,2DACX,GAAA/qB,KAAI,GAAcA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAS,GAAAA,KAAI,WAAwB+V,KAAK/V,OAAQ,IAAK,KAAI,KAC/G,GAAAA,KAAI,QAAY2X,MAAQoT,EACxBrM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,SAAU,GAAArX,KAAI,QAAa+qB,IAChErM,EAAEtZ,YAAY,GAAApF,KAAI,SAGlB,GAAAA,KAAI,GAAqBA,KAAKwY,wBAAwB,GAAAxY,KAAI,QAAS,GAAAA,KAAI,WAA+B+V,KAAK/V,OAAQ,IAAK,IAAK,GAAE,KAC/H,GAAAA,KAAI,QAAmB2X,MAAQoT,EAC/BrM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,SAAU,GAAArX,KAAI,QAAoB+qB,GAAI,IAC3ErM,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMgrB,EAAK,2HACX,GAAAhrB,KAAI,GAAeA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAU,GAAAA,KAAI,WAAyB+V,KAAK/V,MAAO,GAAE,KAC1G,GAAAA,KAAI,QAAa2X,MAAQqT,EACzBtM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAcgrB,IACnEtM,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMirB,EAAK,gJACX,GAAAjrB,KAAI,GAAmBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAc,GAAAA,KAAI,WAA6B+V,KAAK/V,OAAM,KACnH,GAAAA,KAAI,QAAiB2X,MAAQsT,EAC7BvM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAkBirB,IACzEvM,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMkrB,EAAK,iJACX,GAAAlrB,KAAI,GAAmBA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAc,GAAAA,KAAI,WAA6B+V,KAAK/V,OAAM,KACnH,GAAAA,KAAI,QAAiB2X,MAAQuT,EAC7BxM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAkBkrB,IACzExM,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAMmrB,EAAM,kEACZ,GAAAnrB,KAAI,GAA0BA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAqB,GAAAA,KAAI,WAAoC+V,KAAK/V,MAAO,GAAE,KAC3I,GAAAA,KAAI,QAAwB2X,MAAQwT,EACpCzM,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAyBmrB,IAChFzM,EAAEtZ,YAAY,GAAApF,KAAI,SAGlB,GAAAA,KAAI,WAAwC,KAA5CA,MACA,GAAAA,KAAI,WAAsB,KAA1BA,MAEA,GAAAA,KAAI,QAAMmf,OAAOT,GAGrB,OAAO,GAAA1e,KAAI,QAGforB,cACI,OAAO,GAAAprB,KAAI,QAGfqrB,cACI,OAAO,GAAArrB,KAAI,QAGfmU,wBACI,OAAO,GAAAnU,KAAI,QAGfsrB,YAAYC,GACR,GAAAvrB,KAAI,WAAa,KAAjBA,KAAkBurB,GAStBC,YAAYC,GACR,GAAAzrB,KAAI,GAAYyrB,EAAO,KACvB,GAAAzrB,KAAI,WAAsB,KAA1BA,MAGJof,sBAAsB7K,GAClB,GAAAvU,KAAI,WAAuB,KAA3BA,KAA4BuU,GAuDhC9G,0BAAmC+E,GAK/B,OAHKA,EAAOyC,MAAQkS,GAAoBjS,MACnC1C,EAAO2C,SAAWgS,GAAoB/R,QAK/C3H,iBAAiBiF,EAA2BzS,GAExC,IAAIknB,GAAoBxU,mBAAmBD,GACvC,MAAM,IAAIvN,MAAM,6DAEpB,MAAMwf,EAAUjS,EAAEiS,QAAQ1kB,KAAIoM,GAAKkB,EAAqB8R,UAAUhT,KAClE,IAAIzC,EAAI,IAAIud,GAAoBlnB,EAAK0kB,GAiBrC,OAfA/a,EAAE4d,aAAaxX,OAAO4C,MAAMF,EAAEvH,UAAY,EAAMuH,EAAEvH,UAClDvB,EAAE6d,aAAazX,OAAO4C,MAAMF,EAAE5F,UAAY,EAAM4F,EAAE5F,UAClDlD,EAAE8d,YAAY1X,OAAO4C,MAAMF,EAAEiV,SAAW,EAAMjV,EAAEiV,SAChD/d,EAAEge,UAAU5X,OAAO4C,MAAMF,EAAEpC,OAAS,EAAMoC,EAAEpC,OAC5C1G,EAAEie,eAAe7X,OAAO4C,MAAMF,EAAEoV,YAAc,EAAMpV,EAAEoV,YACtDle,EAAEme,eAAe/X,OAAO4C,MAAMF,EAAEsV,YAAc,EAAMtV,EAAEsV,YACtDpe,EAAEqe,aAAajY,OAAO4C,MAAMF,EAAEwV,UAAY,EAAMxV,EAAEwV,UAClDte,EAAEue,sBAAsBnY,OAAO4C,MAAMF,EAAE0V,mBAAqB,EAAM1V,EAAE0V,mBACpExe,EAAEye,WAAWrY,OAAO4C,MAAMF,EAAE4V,QAAU,EAAM5V,EAAE4V,QAC9C1e,EAAE4hB,YAAYxb,OAAO4C,MAAMF,EAAE+Y,SAAW,EAAM/Y,EAAE+Y,SAChD,GAAA7hB,EAAC,WAAa,KAAdA,EAAeoG,OAAO4C,MAAMF,EAAE6Y,SAAW,EAAM7Y,EAAE6Y,SAAS,GAC1D,GAAA3hB,EAAC,WAAuB,KAAxBA,EAAyBoG,OAAO4C,MAAMF,EAAE6B,mBAAqB,EAAM7B,EAAE6B,mBAAmB,GAExF,GAAA3K,EAAC,WAAwC,KAAzCA,GAEOA,EAGFiJ,UAEL,MAAgC,CAC5BsC,QAASgS,GAAoB/R,QAC7BH,KAAMkS,GAAoBjS,KAC1ByP,QAAS3kB,KAAK6lB,wBAAwB5lB,KAAIoM,GAAKA,EAAEwG,YACjD1H,SAAUnL,KAAKwoB,eACf1b,SAAU9M,KAAKsU,eACfqT,QAAS3nB,KAAKyoB,cACdnY,MAAOtQ,KAAK0oB,YACZZ,WAAY9nB,KAAK2oB,iBACjBX,WAAYhoB,KAAK4oB,iBACjBV,SAAUloB,KAAK6oB,eACfT,kBAAmBpoB,KAAK8oB,wBACxBR,OAAQtoB,KAAK+oB,aACb0C,QAASzrB,KAAKqrB,cACdE,QAASvrB,KAAKorB,cACd7W,kBAAmBvU,KAAKmU,wBACxB0S,MAAO7mB,KAAK2mB,c,ulBArqBb,GAAA3mB,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,6BAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,sCAE/B,cAWM,GAAA3J,KAAI,WAAwC,KAA5CA,OACCA,KAAKsnB,iBACZ,YAEa5Z,EAA4BkG,EAAc,mBACpD,GAAG,GAAA5T,KAAI,QAAkB,CACrB,IAAIuZ,EAAI,SAAS,CAAC7L,EAAMC,SAAUD,EAAME,WAAY,CAEhDkQ,SAAS,IASbvE,EAAE2E,UAAUhV,EAAyB0K,EAAM,GAAI2F,IAK/CvZ,KAAKsZ,kBAAkBC,GACvB,GAAAvZ,KAAI,QAAYP,KAAK8Z,GAGzB,GAAAvZ,KAAI,QAAYP,KAAKiO,IACxB,YAWavC,EAAiBwU,GAAqB,GAGhD,GAFA,GAAA3f,KAAI,GAAamL,EAAQ,KAEtBwU,EAAc,CACb,IAAIE,EAAarK,GAAcsK,aAAa3L,sBAAsB,GAAAnU,KAAI,SACnE6f,IACI,GAAA7f,KAAI,UACH,GAAAA,KAAI,QAAwBgW,OAAS6J,EAAasH,GAAoBjI,YAAYnf,YAEtF,GAAAC,KAAI,WAAuB,KAA3BA,KAA4B6f,GAAY,IAIhD7f,KAAKsnB,iBACR,YAMaxa,EAAiB6S,GAAqB,GAGhD,GAFA,GAAA3f,KAAI,GAAa8M,EAAQ,KAEtB6S,EAAc,CACb,IAAI1T,EAAauJ,GAAcsK,aAAazL,mBAAmB,GAAArU,KAAI,SACnE,GAAGiM,GAAea,GAAY,EAAI,CAC9B,MAAM4e,EAAiB5e,EAASb,EAAWoC,QACrCkd,EAAUvgB,KAAKsN,IAAItN,KAAKyI,IAAI,EAAIiY,EAAgB,GAAM,GAEzD,GAAA1rB,KAAI,UACH,GAAAA,KAAI,QAAcgW,OAASuV,EAAUpE,GAAoBoD,aAAaxqB,YAE1E,GAAAC,KAAI,WAAa,KAAjBA,KAAkBurB,GAAS,IAInCvrB,KAAKsnB,iBACR,cAyFM,GAAAtnB,KAAI,UACH2rB,aAAa,GAAA3rB,KAAI,SACjB,GAAAA,KAAI,GAAiB,KAAI,OAEhC,YAEe4rB,GAAyB,GACrC,GAAA5rB,KAAI,WAAiB,KAArBA,MAEA,MAAM2kB,EAAU3kB,KAAK6lB,wBACflD,EAAagC,EAAQrkB,QAAU,EAEjCqkB,EVrDL,SACHrC,EACAnX,EACA2B,EACA6a,EACArX,EACAwX,EACAE,EACAE,EAEAE,EACAE,GAUA,GANIX,EAAU,IAAkB,GAAXA,IACjBA,EAAU,IAEV7a,EA/Ba,KAgCbA,EAhCa,IAkCK,GAAlBwV,EAAQhiB,OACR,MAAO,GAIc,GAArB8nB,IACAA,GAAqB,IAGzB,MAAMyD,EAA4BzD,EAAoBtb,EAEhDgf,EAAWxJ,EAAQ,GAAG3X,SAASE,KAErC,IAAIkhB,EAAgBzJ,EAAQriB,KAAIoM,GAAKA,EAAE1B,OAAOmhB,KAMzCC,EAAc,GAAGvf,OAAOuf,EAAcA,EAAczrB,OAAS,KAC9DyrB,EAActsB,KAAKssB,EAAc,IAGrC,IAAIC,EArPR,SAAuBC,GACnB,GAAqB,GAAjBA,EAAO3rB,OACP,OAAO,IAAI4N,EAEf,IAAIge,EAAOC,EAAOC,EAAOC,EAAQ,EAEjCH,EAAQE,EAAQH,EAAO,GAAG5f,EAC1B8f,EAAQE,EAAQJ,EAAO,GAAG3f,EAE1B,IAAI,MAAM4D,KAAO+b,EACbC,EAAQlhB,KAAKyI,IAAIyY,EAAOhc,EAAI7D,GAC5B+f,EAAQphB,KAAKsN,IAAI8T,EAAOlc,EAAI7D,GAE5B8f,EAAQnhB,KAAKyI,IAAI0Y,EAAOjc,EAAI5D,GAC5B+f,EAAQrhB,KAAKsN,IAAI+T,EAAOnc,EAAI5D,GAGhC,OAAO,IAAI4B,EAAKge,EAAOG,EAAOD,EAAQF,EAAOC,EAAQE,GAoO1CC,CAAcP,GAKrBQ,EAAYP,EAAKrd,gBAGjB6d,EAAiB,GAEjBC,EAAQ,EAGRpgB,EAAI2f,EAAKvd,WACTnC,EAAI0f,EAAKtd,YAcTge,EAbU,IAAItgB,EAAOC,EAAEC,EAAEwf,GAaVlf,iCAAiC0D,EAAQ,GAAIic,EAAY,EAAIzf,GAAUF,iCAAiC0D,EAAQ,IAAKic,EAAY,EAAIzf,GAsBxJ,IAJAT,EAAIqgB,EAAKrgB,EACTC,EAAIogB,EAAKpgB,EAGFmgB,GAAUF,EAAuB,EAAXzf,GAAgBA,GAC7C,CAEI,IAAI6f,EAAU,IAAIvgB,EAAOC,EAAGC,EAAGwf,GAC3Bc,EAAQD,EAAQ/f,iCAAiC0D,EAAOic,EAAuB,EAAXzf,GAKpEkE,EAAO,IAAIlD,EAAQ6e,EAASC,EAAOD,EAAQhgB,QAI/C6f,EAAK/sB,KAAKuR,GAKV,IAAI6b,EAASF,EAAQ/f,iCAAiC0D,EAAQ,GAAIxD,GAClET,EAAIwgB,EAAOxgB,EACXC,EAAIugB,EAAOvgB,EACXmgB,IAMJ,IAAI1oB,EAAmB,GAEnB+oB,EAAUN,EAAKlsB,OAGnB,IAAK,IAAImR,EAAI,EAAGA,EAAIqb,EAASrb,IAAK,CAC9B,IAAIsb,EAAmB/c,OAAOC,UAC1B+c,EAAoBhd,OAAOid,UAE3BC,EAAgB,IAAI9gB,EACpB+gB,EAAiB,IAAI/gB,EAGrBghB,EAAmB,GAEnBC,EAAU,EACd,IAAK,IAAIjgB,EAAI,EAAGA,EAAI2e,EAAczrB,OAAQ8M,IAAK,CAI3C,IAAIkgB,EAAave,EAHFgd,EAAc3e,EAAE,GAChB2e,EAAc3e,GAEyBof,EAAK/a,GAAGjH,GAAIgiB,EAAK/a,GAAGhH,IACpE6iB,EAAW9gB,OAAO,IAAIJ,KACxBihB,IACAD,EAAQ3tB,KAAK6tB,GACTP,EAAmBP,EAAK/a,GAAGjH,GAAGM,cAAcwiB,KAE5CJ,EAAc5gB,EAAIghB,EAAWhhB,EAC7B4gB,EAAc7gB,EAAIihB,EAAWjhB,EAC7B6gB,EAAcriB,KAAOyiB,EAAWziB,KAChCkiB,EAAmBP,EAAK/a,GAAGjH,GAAGM,cAAcwiB,IAE5CN,EAAoBR,EAAK/a,GAAGjH,GAAGM,cAAcwiB,KAE7CH,EAAe7gB,EAAIghB,EAAWhhB,EAC9B6gB,EAAe9gB,EAAIihB,EAAWjhB,EAC9B8gB,EAAetiB,KAAOyiB,EAAWziB,KACjCmiB,EAAoBR,EAAK/a,GAAGjH,GAAGM,cAAcwiB,KAIzD,GAAe,GAAXD,EAEK/d,EAAekd,EAAK/a,GAAGjH,GAAIuhB,IAAmBzc,EAAekd,EAAK/a,GAAGhH,GAAIshB,IAC1EhoB,EAAOtE,KAAK+sB,EAAK/a,SAEpB,GAAe,GAAX4b,QAIJ,GAAe,GAAXA,EACT,CACI,IAAIrc,EAAOwb,EAAK/a,GAChBT,EAAKxG,GAAK0iB,EACVlc,EAAKvG,GAAK0iB,EACVX,EAAK/a,GAAKT,MAGd,CACI,IAAIA,EAAOwb,EAAK/a,GAGhB,IAFA1N,EAAOtE,KAAKuR,GAELoc,EAAQ9sB,OAAS,GACxB,CACI4sB,EAAgBtd,EAAiBsd,EAAeE,GAChD,MAAM5iB,EAAK0iB,EACXte,EAAuBwe,EAASF,GAEhCA,EAAgBtd,EAAiBsd,EAAeE,GAChD,MAAM3iB,EAAKyiB,EACXte,EAAuBwe,EAASF,GAEhC,IAAIK,EAAU,IAAIzf,EACdtD,EACAC,EACAuG,EAAKjD,SAASpB,QAGlB6f,EAAK/sB,KAAK8tB,KAatB,IAAI,MAAMvc,KAAQjN,EACd6K,EAAuB4d,EAAMxb,GAEjC,GAAmB,GAAfwb,EAAKlsB,OACL,MAAO,GAIX,IAAIktB,EAAuB,KAE3B,OAAQtF,GAEJ,QAIA,KAAKla,EAAc6c,WACf2C,EAAgB,IAAIphB,EAAO4f,EAAK7d,KAAM6d,EAAKxd,OAAQsd,GACnD,MACJ,KAAK9d,EAAc8c,YACf0C,EAAgB,IAAIphB,EAAO4f,EAAKzd,MAAOyd,EAAKxd,OAAQsd,GACpD,MACJ,KAAK9d,EAAcqZ,QACfmG,EAAgB,IAAIphB,EAAO4f,EAAK7d,KAAM6d,EAAK5d,IAAK0d,GAChD,MACJ,KAAK9d,EAAc4c,SACf4C,EAAgB,IAAIphB,EAAO4f,EAAKzd,MAAOyd,EAAK5d,IAAK0d,GASzD0B,EAAgB5d,EAAiB4d,EAAezB,GAGhD,IAAI0B,EAAUrd,EAAgBod,EAAehB,EAAM,EAAwDlc,GAEvGod,EAAW,IAAIthB,EAKfshB,EAFAD,EAAQjjB,GAAGM,cAAc0iB,GAAiBC,EAAQhjB,GAAGK,cAAc0iB,GAExDC,EAAQjjB,GAIRijB,EAAQhjB,GAGvB,IAAIkjB,EAAe,GACnB,KAAOnB,EAAKlsB,OAAS,GAEjB,GAAImtB,EAAQjjB,GAAGM,cAAc4iB,GAAYD,EAAQhjB,GAAGK,cAAc4iB,GAClE,CACI,IAAIE,EAAYH,EAAQjjB,GAAGoC,iCAAiC0D,GAAQgY,GAgBpE,GAfAsF,EAAUrhB,IAAM0B,EAAc0b,MAE9BgE,EAAIluB,KAAKmuB,GAELtF,EAAS,IACL7d,EAAKmjB,EAAUjhB,QAChBJ,IAAM0B,EAAc2b,aAEvB+D,EAAIluB,KAAKgL,IACF6d,EAAS,IAChBmF,EAAQjjB,GAAG+B,IAAM0B,EAAc2b,aAE/B+D,EAAIluB,KAAKguB,EAAQjjB,KAGjBmd,EAAU,EACV,IAAK,IAAIne,EAAKme,EAAY8F,EAAQ1f,SAASjD,cAAc2iB,EAAQjjB,IAAOmd,EACpEne,EAAKikB,EAAQjjB,GAAGM,cAAc2iB,EAAQhjB,IACtCjB,GAAKme,EAAS,CAEd,IAAIkG,EAAU,IAAIzhB,EAAOqhB,EAAQjjB,GAAG6B,EAAGohB,EAAQjjB,GAAG8B,EAAGwf,EAAU7d,EAAc6f,QAE7EH,EAAIluB,KAAKouB,GAIjB,IAAIE,EAAUN,EAAQhjB,GAAGmC,iCAAiC0D,EAAOwX,EAAY7Z,EAAc6b,KAoB3F,GAlBIhC,EAAa,IACTrd,EAAKsjB,EAAQphB,QACdJ,IAAM0B,EAAc4b,WAEvB8D,EAAIluB,KAAKgL,IACFqd,EAAa,IACpB2F,EAAQhjB,GAAG8B,IAAM0B,EAAc4b,WAE/B8D,EAAIluB,KAAKguB,EAAQhjB,KAKrBkjB,EAAIluB,KAAKsuB,GAETL,EAAWD,EAAQhjB,GAEnBmE,EAAuB4d,EAAMiB,GACV,GAAfjB,EAAKlsB,OACL,MAEJmtB,EAAUrd,EAAgB2d,EAASvB,EAAMX,EAA2Bvb,OACjE,CACH,IAAIsd,EAAYH,EAAQhjB,GAAGmC,iCAAiC0D,EAAOgY,GAM/D,IAAI7d,EAUR,GAfAmjB,EAAUrhB,IAAM0B,EAAc0b,MAE9BgE,EAAIluB,KAAKmuB,GAELtF,EAAS,IACL7d,EAAKmjB,EAAUjhB,QAChBJ,IAAM0B,EAAc2b,aAEvB+D,EAAIluB,KAAKgL,IACH6d,EAAS,IACfmF,EAAQhjB,GAAG8B,IAAM0B,EAAc2b,aAE/B+D,EAAIluB,KAAKguB,EAAQhjB,KAGjBkd,EAAU,EACV,IAAK,IAAIne,EAAMikB,EAAQ1f,SAASjD,cAAc2iB,EAAQhjB,IAAOkd,EACzDne,EAAKikB,EAAQjjB,GAAGM,cAAc2iB,EAAQhjB,IACtCjB,GAAKme,EAAS,CAGd,IAAIlW,EAAIgc,EAAQhjB,GAAGmC,iCAAiC0D,GAAQ9G,GAG5D,IAAIwkB,EAAU,IAAI5hB,EAAOqF,EAAEpF,EAAGoF,EAAEnF,EAAGwf,EAAU7d,EAAc6f,QAE3DH,EAAIluB,KAAKuuB,GAIjB,IAAID,EAAUN,EAAQjjB,GAAGoC,iCAAiC0D,GAAQ0X,EAAY/Z,EAAc6b,KAqB5F,GAlBI9B,EAAa,EAGb2F,EAAIluB,KAAKsuB,EAAQphB,KAAKsB,EAAc4b,aAC7B7B,EAAa,GAGpB2F,EAAIluB,KAAKguB,EAAQjjB,GAAGmC,KAAKsB,EAAc4b,aAK3C8D,EAAIluB,KAAKsuB,GAETL,EAAWD,EAAQjjB,GAGnBoE,EAAuB4d,EAAMiB,GACV,GAAfjB,EAAKlsB,OACL,MACJmtB,EAAUrd,EAAgB2d,EAASvB,EAAMX,EAA2Bvb,GAI5E,MAAM+R,EAAS9U,EAAqB0gB,UAAUN,GAG9C,IAAI,IAAIrgB,KAAK+U,EACT/U,EAAEnC,SAAWA,EAEjB,OAAOkX,EUzUC6L,CACIluB,KAAK6lB,wBACL,GAAA7lB,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,QACJ,GAAAA,KAAI,SAGZ,IAAI,IAAIQ,EAAI,EAAGA,EAAImiB,EAAUriB,OAAQE,IACjC,GAAAR,KAAI,WAAc,KAAlBA,KAAmB2iB,EAAUniB,GAAI,qBAAqBA,MAE1D,GAAAR,KAAI,WAAsB,KAA1BA,MAEG4rB,GACC5rB,KAAKqZ,uBACZ,cAGG,IAAI,MAAME,KAAK,GAAAvZ,KAAI,QACfA,KAAK2Z,uBAAuBJ,GAEhC,GAAAvZ,KAAI,GAAc,GAAE,KACpB,GAAAA,KAAI,GAAc,GAAE,MACvB,cAGG,MAAMsK,EAAStK,KAAKub,kBASpB,GAPG,GAAAvb,KAAI,UACH,GAAAA,KAAI,QAAmBgW,MAAQhW,KAAK4lB,cAActlB,OAAO4S,QAAQ,IAElE,GAAAlT,KAAI,UACH,GAAAA,KAAI,QAAqBgW,MAAQ1L,EAAOhK,OAAO4S,QAAQ,IAGxD,GAAAlT,KAAI,QAAwB,CAE3B,MACMsL,EADWjB,EAA4BC,GACjBkL,GAAcoB,kBAAkBtB,GAAoBM,eAChF,GAAA5V,KAAI,QAAuBgW,MAAQ3K,EAA0BC,GAGjE,GAAG,GAAAtL,KAAI,QAAmB,CACtB,IAAIiD,EAAQjD,KAAKse,kBACjB,GAAAte,KAAI,QAAkBgW,MAAQ/S,EAAQ,EAAIA,EAAMlD,WAAa,QAEpE,cA2BGC,KAAKilB,oBAAoB,GAAAjlB,KAAI,QAAmB0Y,UACnD,cAGG1Y,KAAKunB,sBAAsB,GAAAvnB,KAAI,QAAqB0Y,UACvD,cAGG1Y,KAAKwnB,aAAa,GAAAxnB,KAAI,QAAe+f,cAAgBoH,GAAoB/T,kBAC5E,cAGGpT,KAAKynB,aAAa,GAAAznB,KAAI,QAAe+f,gBAKxC,cAGG,MAAMoO,EAAM,GAAAnuB,KAAI,QAAY+f,cAC5B,GAAA/f,KAAI,QAAmBgW,MAAQmY,EAAIpuB,WACnCC,KAAK4nB,UAAU,GAAA5nB,KAAI,QAAY+f,gBAClC,cAGG,MAAMoO,EAAM,GAAAnuB,KAAI,QAAmB+f,cACnC,GAAA/f,KAAI,QAAYgW,MAAQmY,EAAIpuB,WAC5BC,KAAK4nB,UAAUuG,IAClB,cAGGnuB,KAAK6nB,eAAe,GAAA7nB,KAAI,QAAiB+f,gBAC5C,cAGG/f,KAAK+nB,eAAe,GAAA/nB,KAAI,QAAiB+f,gBAC5C,cAGG,MAAMqO,EAAIpe,OAAOqe,SAAS,GAAAruB,KAAI,QAAegW,OAE7C,IADesY,OAAOrX,OAAOjJ,GACjB4N,SAASwS,GACjB,MAAM,IAAIjpB,MAAM,mBAAmBipB,gCAEvCpuB,KAAKioB,aAAamG,IACrB,cAGGpuB,KAAKmoB,sBAAsB,GAAAnoB,KAAI,QAAwB+f,gBAC1D,cAGG/f,KAAKqoB,WAAW,GAAAroB,KAAI,QAAa+f,gBACpC,YAyOYwL,EAAgB5L,GAAuB,GAChD,GAAA3f,KAAI,GAAYurB,EAAO,KACpB5L,GACC,GAAA3f,KAAI,WAAwC,KAA5CA,OACP,YAWsBuU,EAA0BoL,GAAuB,GACpE,GAAA3f,KAAI,GAAsBuU,EAAiB,KAExCoL,GACC,GAAA3f,KAAI,WAAwC,KAA5CA,OACP,cAGGA,KAAKsrB,YAAY,GAAAtrB,KAAI,QAAc+f,cAAgBoH,GAAoBoD,cAC1E,cAGGvqB,KAAKwrB,YAAY,GAAAxrB,KAAI,QAAc+f,cAAgBoH,GAAoBoD,cAC1E,cAGG,GAAAvqB,KAAI,WAAuB,KAA3BA,KAA4B,GAAAA,KAAI,QAAwB+f,cAAgBoH,GAAoBjI,aAC/F,cAGG,IAAIqP,GAAmB,EACvB,MAAMC,EAAShZ,GAAcsK,aAE7B,IAAI3U,EAAWqjB,EAAOla,aAAatU,KAAKmU,yBAErChJ,GAAYA,GAAYnL,KAAKwoB,iBAC5B+F,GAAmB,EAEhB,GAAAvuB,KAAI,UACH,GAAAA,KAAI,QAAegW,OAAS7K,EAAWgc,GAAoB/T,iBAAiBrT,YAChF,GAAAC,KAAI,WAAc,KAAlBA,KAAmBmL,GAAU,IAGjC,IAAIc,EAAauiB,EAAOna,mBAAmB,GAAArU,KAAI,SAE/C,GAAGiM,GAAe,GAAAjM,KAAI,SAAa,GAAO,GAAAA,KAAI,SAAa,EAAI,CAC3D,MAAM0rB,EAAiB,EAAI,GAAA1rB,KAAI,QACzB8M,EAAWb,EAAWoC,QAAQqd,EAEjC5e,GAAY9M,KAAKsU,iBAChBia,GAAmB,EAEhB,GAAAvuB,KAAI,UACP,GAAAA,KAAI,QAAegW,MAAQhL,KAAKsN,IAAItI,OAAOuS,WAAW,GAAAviB,KAAI,QAAeyT,KAAM3G,GAAU/M,YAEzF,GAAAC,KAAI,WAAc,KAAlBA,KAAmB8M,GAAU,IAIrC,OAAOyhB,GApuBK,GAAAvS,KAAO,SACP,GAAA9G,KAAO,sBACP,GAAAE,QAAU,uCACV,GAAA6G,SAAW,SACX,GAAAX,YAAa,EAkDtB,GAAA4D,WAAa,IACb,GAAAqL,YAAc,I,mtBC3ElB,MAAMkE,WAA2BzV,GAgBpClQ,YAAY7I,EAAWyN,EAA2B,KAAMkX,EAAwB,MAC5E3L,MAAMhZ,G,aAXV,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAKI,GAAAD,KAAI,GAAW,KAAI,KACnB,GAAAA,KAAI,GAAU,KAAI,KAClB,GAAAA,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAc,KAAI,KACtB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAY,KAAI,KACpB,GAAAA,KAAI,GAAyB,KAAI,KAEjCA,KAAK6kB,YAAYD,GAEdlX,GACC1N,KAAKud,UAAU7P,GAGvBghB,YACI,OAAO,GAAA1uB,KAAI,QAGf6kB,YAAYD,GACR,GAAA5kB,KAAI,GAAY4kB,EAAO,KAG3BlH,wBAAwBC,GACjB,GAAA3d,KAAI,SAAY2d,EACf3d,KAAK0a,iBAELjB,QAAQmE,KAAK,yCAerBL,UAAU7P,GACN,IAAI,GAAA1N,KAAI,QAAU,CACd,GAAAA,KAAI,GAAW,SAAS0N,EAAMuE,aAAa,CACvC4L,WAAW,EACXC,SAAS,EACT9U,KAAMN,EAAsB,uBAC9B,KAEF,GAAA1I,KAAI,QAAS+d,GAAG,OAAQ,GAAA/d,KAAI,WAA6B+V,KAAK/V,OAC9D,GAAAA,KAAI,QAAS+d,GAAG,WAAY,GAAA/d,KAAI,WAAwB+V,KAAK/V,OAE7D,MAAMge,EAAa,CACf,IAAInV,EAAuB,eAAgBvC,EAAYQ,UAAW9G,KAAKie,aAAalI,KAAK/V,OACzF,KACA,IAAI6I,EAAuB,SAAUvC,EAAYc,OAAQpH,KAAK0d,wBAAwB3H,KAAK/V,QAE/F,GAAAA,KAAI,QAASke,UAAUhV,EAAyB,QAAS8U,EAAY,GAAAhe,KAAI,UAEzEA,KAAKsZ,kBAAkB,GAAAtZ,KAAI,SAG/B,GAAAA,KAAI,WAAoB,KAAxBA,KAAyB0N,GAG7BuQ,eACO,GAAAje,KAAI,UACH,GAAAA,KAAI,QAAM+b,iBACV,GAAA/b,KAAI,QAAM0J,UAAU3F,OAAO,oCAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,6BACxBmS,WAAW,GAAA9b,KAAI,WAAuB+V,KAAK/V,MAAO,MAyDjDwa,YACL3V,OAAOsW,WAAWC,eAAc,EAAM,GAAGc,GAAWmB,uBAAuBoR,GAAmBxS,YAGzFvB,iBACF,GAAA1a,KAAI,SACHA,KAAK2Z,uBAAuB,GAAA3Z,KAAI,SAEpCiZ,MAAMyB,iBAQDc,UACL,IAAI,GAAAxb,KAAI,QAAO,CACX,GAAAA,KAAI,GAAQA,KAAK8Z,SAAS,SAAQ,KAElC,IAAI4E,EAAI/Z,SAASW,cAAc,OAC/BoZ,EAAE9V,UAAY,0BAEd,MAAMohB,EAAM,2CACZ,GAAAhqB,KAAI,GAAyBA,KAAKmY,yBAAyB,WAAY,GAAAnY,KAAI,WAAsB+V,KAAK/V,OAAM,KAC5G,GAAAA,KAAI,QAAuB2X,MAAQqS,EACnCtL,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,cAAe,GAAArX,KAAI,QAAwBgqB,IAChFtL,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM8e,EAAK,6CACX,GAAA9e,KAAI,GAAcA,KAAKoY,0BAA2B,GAAApY,KAAI,QAAU,GAAAA,KAAI,QAAQuM,IAAM,GAAK,GAAAvM,KAAI,WAAsB+V,KAAK/V,OAAM,KAC5H,GAAAA,KAAI,QAAY2X,MAAQmH,EACxBJ,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,SAAU,GAAArX,KAAI,QAAa8e,IAChEJ,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM2e,EAAK,qDACX,GAAA3e,KAAI,GAAYA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQ2N,SAAW,EAAK,GAAA3N,KAAI,WAA2B+V,KAAK/V,OAAQ,GAAI,GAAI,MAAO,KACnJ,GAAAA,KAAI,QAAU2X,MAAQgH,EACtBD,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAW2e,IACjED,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM4e,EAAK,sDACX,GAAA5e,KAAI,GAAYA,KAAKqY,yBAAyB,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQ4N,UAAY,EAAK,GAAA5N,KAAI,WAA4B+V,KAAK/V,OAAQ,IAAK,IAAK,MAAO,KACvJ,GAAAA,KAAI,QAAU2X,MAAQiH,EACtBF,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAW4e,IAClEF,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,MAAM6e,EAAK,4EACX,GAAA7e,KAAI,GAAYA,KAAKqY,0BAA0B,GAAArY,KAAI,QAAU,GAAAA,KAAI,QAAQmL,SAAW,GAAO6N,GAAkB5F,gBAAiB,GAAApT,KAAI,WAA2B+V,KAAK/V,OAAM,KACxK,GAAAA,KAAI,QAAU2X,MAAQkH,EACtBH,EAAEtZ,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAW6e,IACjEH,EAAEtZ,YAAY,GAAApF,KAAI,SAElB,GAAAA,KAAI,QAAMmf,OAAOT,GAGrB,OAAO,GAAA1e,KAAI,QAWfyN,0BAAmC+E,GAK/B,OAHKA,EAAOyC,MAAQwZ,GAAmBvZ,MAClC1C,EAAO2C,SAAWsZ,GAAmBrZ,QAK9C3H,iBAA0BiF,EAA0BzS,GAEhD,IAAIwuB,GAAmB9b,mBAAmBD,GACtC,MAAM,IAAIvN,MAAM,4DAEpB,MAAMuI,EAAQH,EAAqB8R,UAAU3M,EAAEhF,OAC/C,OAAO,IAAI+gB,GAAmBxuB,EAAKyN,GAG9BmF,UAEL,MAA+B,CAC3BsC,QAASsZ,GAAmBrZ,QAC5BH,KAAMwZ,GAAmBvZ,KACzBxH,MAAO,GAAA1N,KAAI,QAAQ6S,Y,kKA1LJyM,GACnBtf,KAAK0d,wBAAwB4B,EAAM7a,SACtC,YAE2B6a,GACxB,IAAI5R,EAAQH,EAAqBgS,aAAaD,EAAM7a,OAAO+a,aACvD,GAAAxf,KAAI,UACJ0N,EAAMvC,SAAW,GAAAnL,KAAI,QAAQmL,UACjC,GAAAnL,KAAI,WAAoB,KAAxBA,KAAyB0N,IAC5B,cAoCM,GAAA1N,KAAI,UACH,GAAAA,KAAI,QAAM0J,UAAU3F,OAAO,6BAC3B,GAAA/D,KAAI,QAAM0J,UAAUC,IAAI,sCAE/B,YAEmB+D,EAA4B+R,GAAwB,EAAMC,GAAmB,GAC7F,GAAA1f,KAAI,GAAU0N,EAAK,KAEhB+R,GAAiB,GAAAzf,KAAI,SACpB,GAAAA,KAAI,QAAS4f,UAAUlS,EAAMuE,cAE9ByN,IACI,GAAA1f,KAAI,UACH,GAAAA,KAAI,QAAUgW,MAAQtI,EAAMC,SAAS5N,YAEtC,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAUgW,MAAQtI,EAAME,UAAU7N,aAG9CC,KAAKqZ,uBACR,cAGM,GAAArZ,KAAI,UACH,GAAAA,KAAI,QAAQ2N,SAAW,GAAA3N,KAAI,QAAU+f,eAEzC,GAAA/f,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQuM,IAAM,GAAAvM,KAAI,QAAYgW,OAEtC,GAAAhW,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQ4N,UAAY,GAAA5N,KAAI,QAAU+f,eAE1C,GAAA/f,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cAGM,GAAAA,KAAI,UACH,GAAAA,KAAI,QAAQmL,SAAW,GAAAnL,KAAI,QAAU+f,cAAgB/G,GAAkB5F,iBAE3E,GAAApT,KAAI,WAAoB,KAAxBA,KAAyB,GAAAA,KAAI,SAAS,GAAM,IAC/C,cA+DM,GAAAA,KAAI,QACH,GAAAA,KAAI,QAAU2uB,4BAA4B3uB,MAE1CyZ,QAAQmE,KAAK,mDAjNL,GAAA5B,KAAO,QACP,GAAA9G,KAAO,qBACP,GAAAE,QAAU,uCACV,GAAA6G,SAAW,Q,6/BC0BxB,MAAM2S,GAiBT9lB,YAAY+lB,EAA0B5uB,EAAgB,M,aAbtD,oBAEA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBAEA,oBAII,GAAAD,KAAI,GAAQC,EAAG,KAEf,GAAAD,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAsB6uB,EAAiB,KAE3C,GAAA7uB,KAAI,GAAkB,GAAE,KACxB,GAAAA,KAAI,GAAwB,IAAI8Q,IAAK,KACrC,GAAA9Q,KAAI,GAAqB,EAAC,KAC1B,GAAAA,KAAI,GAA0B,EAAG,KACjC,GAAAA,KAAI,IAAqB,EAAK,KAWlC8uB,oBACI,OAAO,GAAA9uB,KAAI,QAGf+uB,sBACI,IAAIC,EAAoC,GACxC,IAAI,MAAM9uB,KAAQ,GAAAF,KAAI,QAClBgvB,EAAavvB,KAAKS,EAAK2S,WAE3B,OAAOmc,EAGXvhB,0BAA0B+E,GAKtB,OAHKA,EAAOyC,MAAQ2Z,GAAc1Z,MAC7B1C,EAAO2C,SAAWyZ,GAAcxZ,QAKzC6Z,sBAAsBvc,GAClB,IAAIkc,GAAcjc,mBAAmBD,GACjC,MAAM,IAAIvN,MAAM,6DAEjBuN,EAAEwc,UACD1Z,GAAc2Z,KAAKzc,EAAEwc,UAEtBxc,EAAE0c,eAAiB1c,EAAE0c,cAAc9uB,OAClC,GAAAN,KAAI,WAAgC,KAApCA,KAAqC0S,EAAE0c,eACjC1c,EAAEiQ,WAAajQ,EAAEiQ,UAAUriB,SACjCmZ,QAAQmE,KAAK,wDACb,GAAA5d,KAAI,WAAiC,KAArCA,KAAsC0S,EAAEiQ,YAG5C3iB,KAAKqvB,qBA6EHC,oB,0CACF,IAAI5c,EAA6B,CAC7ByC,QAASyZ,GAAcxZ,QACvBH,KAAM2Z,GAAc1Z,KACpBga,SAAU1Z,GAAc+Z,UACxBH,cAAepvB,KAAK+uB,sBACpBpM,UAAW3iB,KAAKwvB,wBAAwBvvB,KAAIoM,GAAKA,EAAEwG,aAGvD,MAAM4c,EAAO,IAAIC,KACb,CAACztB,KAAKC,UAAUwQ,EAAG,KAAM,IACzB,CACIuC,KAAM,qBAIRoL,EAAWL,GAAa,cACxBI,GAAcC,EAAUoP,MAG5BE,kBAAkBF,G,0CACpB,MAAM/c,EAA8BzQ,KAAK2tB,YAAYH,EAAK1mB,QAC1D/I,KAAKivB,sBAAsBvc,MAGzB2c,mBAAmBQ,GAAsB,EAAMC,EAAgB,GAAGC,EAAe,GAAGC,EAAiB,GAAGC,EAAkB,I,0CAC5H,OAAO,IAAIC,SAAQC,IAEf,GAAG,GAAAnwB,KAAI,QAAO,CACV,IAAIuZ,EAAI,GAAAvZ,KAAI,QAAMowB,kBAClB,GAAG7W,EAAG,CACF,IAAI8W,EAAqB,GACzB,IAAI,MAAMnwB,KAAQ,GAAAF,KAAI,QAClBqwB,EAAS5wB,QAAQS,EAAK2a,gBAE1B,GAAGwV,EAAS/vB,OAAQ,CAChB,IAAIgwB,EAAK,eAAeD,GACxB,MAAME,EAAWhX,EAAEpY,QAAQqvB,SAC3BjX,EAAEpY,QAAQqvB,SAAW,EACrB,IAAIxZ,EAAMyZ,IAENlX,EAAEpY,QAAQqvB,SAAWD,EACrBhX,EAAEmX,IAAI,UAAW1Z,GACjBmZ,GAAQ,IAIZ5W,EAAEwE,GAAG,UAAW/G,GAChBuC,EAAEyB,UAAUsV,EAAGrV,YAAa,CACxB0V,eAAgB,CAACb,EAAUC,GAC3Ba,mBAAoB,CAACZ,EAAWC,GAChCY,QAAShB,SAUbM,GAAQ,QAGZA,GAAQ,QAGZA,GAAQ,SAKpBW,qBACI,IAAIzP,EAAiC,GACjCE,EAAoC,GACxC,IAAI,MAAM/gB,KAAK,GAAAR,KAAI,QACXQ,aAAaiuB,GACbpN,EAAQ5hB,KAAKe,EAAEkuB,cACRluB,aAAakkB,IAA0BlkB,aAAa2mB,KAC3D5F,EAAS9hB,KAAKe,EAAEqlB,0BJ9HzB,SAA6CxE,EAAgCsB,EAAkCpB,G,mCAClH,MAAMqB,QAAgBC,GAA0BxB,EAASsB,EAAWpB,GAC9DkO,EAAO,IAAIC,KACb,CAAC9M,GACD,CACI3N,KAAM0L,KAGdP,GAAcJ,GAAa,OAAQyP,MI0H/BsB,CAA8B1P,EAASrhB,KAAKwvB,wBAAyBjO,GAGzEyP,QAAQ/wB,GACJ,GAAAD,KAAI,GAAQC,EAAG,KAanBgxB,kBAAkBja,G,QACd,MAAMrX,GAAK,GAAAK,KAAA,SAAAA,KAAA,cAAwB,WAGnC,OAFA,GAAAA,KAAI,QAAsBiR,IAAItR,EAAIqX,GAE3B,GAAAhX,KAAI,WAA2B+V,KAAK/V,KAAML,GAuCrDuxB,yBACI,OAAO,GAAAlxB,KAAI,QAuBfmxB,iBAAiBjxB,EAAwBgE,GAAe,GACpD,GAAAlE,KAAI,WAAkB,KAAtBA,KAAuBE,EAAMgE,GAGjCktB,kBAAkBC,EAA2BntB,GAAe,GACxD,IAAIjB,EAAQ,EACZ,IAAI,MAAM/C,KAAQmxB,EAAO,CACrB,MAAMC,GAAoB,GAAVptB,GACX,EACDA,EAAQjB,EACZ,GAAAjD,KAAI,WAAkB,KAAtBA,KAAuBE,EAAMoxB,GAAS,GACtCruB,IAGDouB,EAAM/wB,QACL,GAAAN,KAAI,WAA6B,KAAjCA,MAGRuxB,oBAAoBrxB,GAEhB,IAAIgE,EAAQ,GAAAlE,KAAI,QAAgB8O,QAAQ5O,GACrCgE,GAAS,EACR,GAAAlE,KAAI,QAAgB0D,OAAOQ,EAAO,GAElCuV,QAAQmE,KAAK,wCAGb,GAAA5d,KAAI,UACJA,KAAK6D,SACL,GAAA7D,KAAI,WAAuB,KAA3BA,OAIRwxB,gBAEI,IADA,GAAAxxB,KAAI,IAAqB,EAAI,KACvB,GAAAA,KAAI,QAAgBM,OAAS,GAC/B,GAAAN,KAAI,QAAgB,GAAG0a,iBAC3B,GAAA1a,KAAI,IAAqB,EAAK,KAG9BA,KAAK6D,SACL,GAAA7D,KAAI,WAAuB,KAA3BA,MAGJ6D,SACI,MAAM4tB,EAAe,GAAAzxB,KAAI,QAAgBC,KAAIoM,GAAKA,EAAEmP,YAC9CkW,EAAcD,EAAaxxB,KAAIoM,GAAKA,EAAE1M,KAEtCgyB,EAAetgB,MAAMC,KAAK,GAAAtR,KAAI,QAAe4xB,UAAU/f,QAAOxF,IAAMqlB,EAAY9V,SAASvP,EAAE1M,MAEjG,IAAI,MAAMkyB,KAAMF,EACZE,EAAG9tB,SAMP,IAAI,IAAI2O,EAAI,EAAGA,EAAI+e,EAAanxB,OAAQoS,IAAK,CACzC,MAAMlS,EAAIixB,EAAa/e,GACjBof,EAASpf,EAAE,EAAI+e,EAAanxB,OAAS,KAAOmxB,EAAa/e,EAAE,GAEjE,IAAIqf,EAAQ1gB,MAAMC,KAAK,GAAAtR,KAAI,QAAe4xB,UAC1C,MAAMI,EAAQD,EAAMjjB,QAAQtO,GACtByxB,EAASF,EAAMjjB,QAAQgjB,GAG1BE,GAAStf,IAGLof,GAAUG,GAAU,EAInB,GAAAjyB,KAAI,QAAekyB,aAAa1xB,EAAGsxB,IAGnC,GAAA9xB,KAAI,QAAeoF,YAAY5E,GAC/BA,EAAEub,kBAGHiW,EAAQ,IACPxxB,EAAEkJ,UAAU3F,OAAO,oCACnBvD,EAAEkJ,UAAUC,IAAI,6BAChBmS,WAAW,GAAA9b,KAAI,WAAmC+V,KAAK/V,KAAMQ,GAAI,QAyCjFmuB,4BAA4BwD,GACxB,MAAM7M,EAAM,GAAAtlB,KAAI,QAAgB8O,QAAQqjB,GACxC,GAAG7M,GAAO,EAAG,CACT,MAAM8M,EAAW,IAAI9U,GAAsB,GAAAtd,KAAI,QAAMowB,kBAAmB+B,EAASzD,aACjFyD,EAASzX,iBACT1a,KAAKmxB,iBAAiBiB,EAAU9M,QAEhC7L,QAAQmE,KAAK,2CAIrBsJ,4BAA4BiL,GACxB,MAAM7M,EAAM,GAAAtlB,KAAI,QAAgB8O,QAAQqjB,GACxC,GAAG7M,GAAO,EAAG,CACT,MAAM+M,EAAS,IAAIlL,GAAoB,GAAAnnB,KAAI,QAAMowB,kBAAmB+B,EAAStM,yBAC7EsM,EAASzX,iBACT1a,KAAKmxB,iBAAiBkB,EAAQ/M,QAE9B7L,QAAQmE,KAAK,2CAIrB0U,kCAAkCC,GAC9B,IAAI,MAAM9C,KAAQ8C,EACdvyB,KAAKwyB,yBAAyB/C,GAItC+C,yBAAyB/C,IJ9etB,SAA6BA,EAAWgD,G,mCAC3C,IAAI7vB,EAAS,KAEb,OADA6W,QAAQiZ,IAAI,8BAA8BjD,EAAKxa,cACxCwa,EAAKxa,MACR,KAAK0L,GAAU,CACX,MAAM5X,QAAa0mB,EAAK1mB,OACxBnG,QAAeie,GAAqB9X,GACpC,MAEJ,KAAK6X,GAAU,CACX,MAAM+R,EAAS,IAAI,MAAc,IAAI,MAAelD,IAC9C7d,QAAgB+gB,EAAOC,aAC7B,IAAIC,GAAW,EACXxR,EAAiC,GACjCC,EAAiC,GACjCC,EAAoC,GAExC,IAAI,MAAMtc,KAAK2M,EAAS,CACpB,MAAM7I,QAAoB9D,EAAEie,QAAQ,IAAI,OAClC7T,QAAUwR,GAAqB9X,IAElCsG,EAAEgS,QAAQ/gB,QAAU+O,EAAEiS,MAAMhhB,QAAU+O,EAAEkS,SAASjhB,UAChDuyB,GAAW,EACXxR,EAAQ5hB,QAAQ4P,EAAEgS,SAClBC,EAAM7hB,QAAQ4P,EAAEiS,OAChBC,EAAS9hB,QAAQ4P,EAAEkS,WAIxBsR,IACCjwB,EAAS,CACLye,QAASA,EACTC,MAAOA,EACPC,SAAUA,IAIlB,OAKRkR,EAAe7vB,MIqcXkwB,CAAcrD,EAAM,GAAAzvB,KAAI,WAAa+V,KAAK/V,OAG9Cwc,QAEI,GAAAxc,KAAI,GAAiB2E,SAASsY,eAAe,GAAAjd,KAAI,SAAoB,KAGrEA,KAAK6D,SACL,GAAA7D,KAAI,WAAuB,KAA3BA,MAGJwvB,wBACI,IAAIllB,EAAgC,GAEpC,IAAI,MAAM9J,KAAK,GAAAR,KAAI,QACfsK,EAASA,EAAOjK,OAAOG,EAAE+a,mBAE7B,OAAOjR,G,mJA5ZqB8kB,GAC5B,IAAIiB,EAA+B,GAEnC,IAAI,MAAMnwB,KAAQkvB,EAAe,CAC7B,IAAItU,EAA4B,KAEhC,GAAG9B,GAAkBrG,mBAAmBzS,GACpC4a,EAAU9B,GAAkBqG,UAAUnf,EAAM,GAAAF,KAAI,QAAMowB,wBACnD,GAAG3B,GAAmB9b,mBAAmBzS,GAAO,CACnD,IAAIoN,EAAImhB,GAAmBpP,UAAUnf,EAAM,GAAAF,KAAI,QAAMowB,mBACrD9iB,EAAEuX,YAAY7kB,MACd8a,EAAUxN,OACP,GAAGgQ,GAAsB3K,mBAAmBzS,GAC/C4a,EAAUwC,GAAsB+B,UAAUnf,EAAM,GAAAF,KAAI,QAAMowB,wBACvD,GAAG1L,GAAqB/R,mBAAmBzS,GAAO,CACrD,IAAIoN,EAAIoX,GAAqBrF,UAAUnf,EAAM,GAAAF,KAAI,QAAMowB,mBACvD9iB,EAAEuX,YAAY7kB,MACd8a,EAAUxN,OACJ6Z,GAAoBxU,mBAAmBzS,GAC7C4a,EAAUqM,GAAoB9H,UAAUnf,EAAM,GAAAF,KAAI,QAAMowB,oBAExD3W,QAAQmE,KAAK,iCACbnE,QAAQmE,KAAK1d,IAGd4a,GACCuV,EAAS5wB,KAAKqb,GAGtB9a,KAAKoxB,kBAAkBf,IAC1B,YAEgC1N,GAC7B,IAAI0N,EAA+B,GAEnC,IAAI,MAAMnwB,KAAQyiB,EAAW,CACzB,IAAI7H,EAA4B,KAEhC,GAAGvN,EAAqBoF,mBAAmBzS,GAAO,CAC9C,MAAMwN,EAAQH,EAAqB8R,UAAUnf,GAC7C4a,EAAU,IAAIwC,GAAsB,GAAAtd,KAAI,QAAMowB,kBAAmB1iB,QAEjE+L,QAAQmE,KAAK,kCACbnE,QAAQmE,KAAK1d,GAGd4a,GACCuV,EAAS5wB,KAAKqb,GAGtB9a,KAAKoxB,kBAAkBf,IAsB1B,cA6FG,MAAM/lB,EAAStK,KAAKwvB,wBACpB,GAAAxvB,KAAI,GAA0BsK,EAAOhK,OACjCgK,EAAOA,EAAOhK,OAAS,GAAG6K,SAC1B,EAAG,KAEP,IAAI,MAAM6L,KAAM,GAAAhX,KAAI,QAAsBiX,SACtCD,KACP,YASyBtF,GACnB,GAAA1R,KAAI,QAAsBmR,IAAIO,IAC7B,GAAA1R,KAAI,QAAsB+W,OAAOrF,IAExC,YAEqBxR,GAClB,GAAAF,KAAI,WAAuB,KAA3BA,OACH,YAEW8mB,EAAWC,EAAkBC,GACrC,GAAIA,GAAaF,EAAIxmB,OAEjB,IADA,IAAIU,EAAIgmB,EAAYF,EAAIxmB,OAAS,EAC1BU,KACH8lB,EAAIrnB,UAAKqB,GAIjB,OADAgmB,EAAIpjB,OAAOsjB,EAAW,EAAGF,EAAIpjB,OAAOqjB,EAAW,GAAG,IAC3CD,GACV,YAEkB5mB,EAAwB2b,GACvC,IAAIyJ,EAAM,GAAAtlB,KAAI,QAAgB8O,QAAQ5O,GACtC,GAAGolB,GAAO,EAAG,CAET,IAAIgM,EAAUhM,GAAOzJ,EAAY,EAAI,GAAK,GAC1CyV,EAAUtmB,KAAKsN,IAAItN,KAAKyI,IAAI6d,EAAU,GAAAtxB,KAAI,QAAgBM,OAAS,GAAK,GACxE,GAAAN,KAAI,WAAY,KAAhBA,KAAiB,GAAAA,KAAI,QAAiBslB,EAAKgM,GAE3CtxB,KAAK6D,SACL,GAAA7D,KAAI,WAAuB,KAA3BA,WAEAyZ,QAAQmE,KAAK,sCAEpB,cAOG5d,KAAK6D,SACL,GAAA7D,KAAI,WAAuB,KAA3BA,OACH,YAEiBE,EAAwBgE,GAAe,EAAI6uB,GAAqB,GAC9E7yB,EAAKgZ,oBAAoBlZ,KAAKuxB,oBAAoBxb,KAAK/V,OACvDE,EAAKiZ,oBAAoB,GAAAnZ,KAAI,WAAuB+V,KAAK/V,OACzDE,EAAKkZ,kBAAkB,GAAApZ,KAAI,WAAoB+V,KAAK/V,OACjDkE,EAAQ,GAAKA,GAAS,GAAAlE,KAAI,QAAgBM,OACzC,GAAAN,KAAI,QAAgBP,KAAKS,GAEzB,GAAAF,KAAI,QAAgB0D,OAAOQ,EAAO,EAAGhE,GAGtC6yB,GACC,GAAA/yB,KAAI,WAA6B,KAAjCA,OAEP,YA2FiCsJ,GAC9BA,EAAII,UAAU3F,OAAO,6BACrBuF,EAAII,UAAUC,IAAI,qCACrB,YAEW/G,GAGR,IAAIytB,EAA+B,GAEnC,IAAI,MAAM/iB,KAAK1K,EAAOye,QAAS,CAE3B,MAAM2R,EAAI,IAAIvE,GAAmB,GAAAzuB,KAAI,QAAMowB,kBAAmB9iB,GAC9D0lB,EAAEnO,YAAY7kB,MACdqwB,EAAS5wB,KAAKuzB,GAGlB,IAAI,MAAM7Q,KAAQvf,EAAO0e,MACrB,IAAI,MAAMhU,KAAK6U,EAAM,CAEjB,MAAM6Q,EAAI,IAAI1V,GAAsB,GAAAtd,KAAI,QAAMowB,kBAAmB9iB,GACjE+iB,EAAS5wB,KAAKuzB,GAItB,IAAI,MAAM1lB,KAAK1K,EAAO2e,SAAU,CAC5B,MAAMyR,EAAI,IAAItO,GAAqB,GAAA1kB,KAAI,QAAMowB,kBAAmB9iB,GAChE0lB,EAAEnO,YAAY7kB,MACdqwB,EAAS5wB,KAAKuzB,GAGlBhzB,KAAKoxB,kBAAkBf,GACvBrwB,KAAKqvB,sBApbF,GAAAna,KAAO,gBACP,GAAAE,QAAU,uC,m4BCmGb,IAAI6d,EAAgC,GACpC,GAAG,GAAAjzB,KAAI,QAAO,CACV,MAAMoN,EAAI,GAAApN,KAAI,QAAMib,YACd8K,EAAK3Y,EAAE4Y,eACPC,EAAK7Y,EAAE8Y,eACPC,EAAKJ,EAAG3T,IAAM6T,EAAG7T,IACjBgU,EAAKL,EAAG5T,IAAM8T,EAAG9T,IAEvB8gB,EAAS,CACL,IAAI1lB,EAAqB0Y,EAAG9T,IAAUiU,EAAK,EAAGH,EAAG7T,IAAU+T,EAAK,GAChE,IAAI5Y,EAAqB0Y,EAAG9T,IAAM,EAAIiU,EAAK,EAAGH,EAAG7T,IAAU+T,EAAK,GAChE,IAAI5Y,EAAqB0Y,EAAG9T,IAAM,EAAIiU,EAAK,EAAGH,EAAG7T,IAAM,EAAI+T,EAAK,GAChE,IAAI5Y,EAAqB0Y,EAAG9T,IAAUiU,EAAK,EAAGH,EAAG7T,IAAM,EAAI+T,EAAK,IAIxE,OAAO8M,G,mqBC7HR,MAAMC,GAQTpqB,YAAY8b,EAAuBuO,GAJnC,oBACA,oBACA,oBAGI,GAAAnzB,KAAI,GAAY4kB,EAAO,KACvB,GAAA5kB,KAAI,GAAkB,KAAI,KAC1B,GAAAA,KAAI,GAAuBmzB,EAAkB,KAKjD3W,QACI,GAAAxc,KAAI,GAAkB2E,SAASsY,eAAe,GAAAjd,KAAI,SAAqB,KAK3EozB,uBACI,MAAMC,EAAmB,GAAArzB,KAAI,QAAU8uB,oBACjCwE,EAAWtzB,KAAKuzB,qBAAqBF,GACrCG,EAAUxzB,KAAKyzB,oBAAoBJ,GAEzC,GAAArzB,KAAI,QAAgB0b,UAAY,GAChC,IAAI/D,EAAQhT,SAASW,cAAc,MACnCqS,EAAMvS,YAAYT,SAAS0B,eAAe,kBAC1C,GAAArG,KAAI,QAAgBoF,YAAYuS,GAGhC,IAAI+b,EAAQ/uB,SAASW,cAAc,OAGnC,GAFAouB,EAAM9qB,UAAY,cAEf0qB,EAAShzB,OAAQ,CAChB,IAAIse,EAAKja,SAASW,cAAc,MAChCsZ,EAAGhW,UAAY,oBACfgW,EAAGxZ,YAAYT,SAAS0B,eAAe,uBACvCqtB,EAAMtuB,YAAYwZ,GAElB,MAAM+U,EAAW,CACb,OACA,OACA,cACA,WACA,GACA,GACA,GACA,IAKJ,IAAI,MAAMC,KAAKD,EAAU,CACrB,IAAIE,EAAKlvB,SAASW,cAAc,OAChCuuB,EAAGjrB,UAAY,qBACfirB,EAAGzuB,YAAYT,SAAS0B,eAAeutB,IACvCF,EAAMtuB,YAAYyuB,GAWtB,IAAI5wB,EAAQ,EACZ,IAAI,MAAM/C,KAAQozB,EAAU,CACxBrwB,IAEA,MAAM9C,EAAU,CACZD,EAAK+U,KAAOhS,EAAMlD,WAAa,GAC/BG,EAAK+U,KACL/U,EAAKqX,YACLrX,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGC,OAAS,IACrD7zB,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGE,OAAS,IACrD9zB,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGG,OAAS,IACrD,GACA,IAGEC,EAAmB,EACzB,IAAI,IAAIxhB,EAAE,EAAGA,EAAEvS,EAAQG,OAAQoS,IAAK,CAChC,IAAIyhB,EAAKxvB,SAASW,cAAc,OAChC6uB,EAAG/uB,YAAYT,SAAS0B,eAAelG,EAAQuS,MACtC,GAALA,GAAYA,GAAKwhB,IACjBC,EAAGzqB,UAAUC,IAAI,2BACjBzJ,EAAK+U,MACLkf,EAAGzqB,UAAUC,IAAI,0BACrBwqB,EAAGzqB,UAAUC,IAAI,qBACjB+pB,EAAMtuB,YAAY+uB,GAItB,IAAI,IAAI3zB,EAAI,EAAGA,EAAEN,EAAK4zB,WAAWxzB,OAAQE,IAAK,CAC1C,MAAML,EAAU,CACZ,GACA,GACA,GACAD,EAAK4zB,WAAWtzB,GAAGuzB,OACnB7zB,EAAK4zB,WAAWtzB,GAAGwzB,OACnB9zB,EAAK4zB,WAAWtzB,GAAGyzB,OACnB,GACA,IAGJ,IAAI,MAAML,KAAKzzB,EAAS,CACpB,IAAIg0B,EAAKxvB,SAASW,cAAc,OAChC6uB,EAAG/uB,YAAYT,SAAS0B,eAAeutB,IACvCO,EAAGvrB,UAAY,4CACf8qB,EAAMtuB,YAAY+uB,MAMlC,GAAGX,EAAQY,MAAM9zB,OAAQ,CACrB,IAAIue,EAAKla,SAASW,cAAc,MAChCuZ,EAAGjW,UAAY,oBACfiW,EAAGzZ,YAAYT,SAAS0B,eAAe,gBACvCqtB,EAAMtuB,YAAYyZ,GAElB,MAAM8U,EAAW,CACb,OACA,OACA,cACA,WACA,GACA,GACA,UACA,YAKJ,IAAI,MAAMC,KAAKD,EAAU,CACrB,IAAIE,EAAKlvB,SAASW,cAAc,OAChCuuB,EAAGjrB,UAAY,qBACfirB,EAAGzuB,YAAYT,SAAS0B,eAAeutB,IACvCF,EAAMtuB,YAAYyuB,GAWtB,IAAI5wB,EAAQ,EACZ,IAAI,MAAM/C,KAAQszB,EAAQY,MAAO,CAC7BnxB,IAEA,MAAM9C,EAAU,CACZD,EAAK+U,KAAOhS,EAAMlD,WAAa,GAC/BG,EAAK+U,KACL/U,EAAKqX,YACLrX,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGC,OAAS,IACrD7zB,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGE,OAAS,IACrD9zB,EAAK4zB,WAAWxzB,OAASJ,EAAK4zB,WAAW,GAAGG,OAAS,IACrD/zB,EAAKm0B,aACLn0B,EAAKo0B,eAGHJ,EAAmB,EACzB,IAAI,IAAIxhB,EAAE,EAAGA,EAAEvS,EAAQG,OAAQoS,IAAK,CAChC,IAAIyhB,EAAKxvB,SAASW,cAAc,OAChC6uB,EAAG/uB,YAAYT,SAAS0B,eAAelG,EAAQuS,MACtC,GAALA,GAAYA,GAAKwhB,IACjBC,EAAGzqB,UAAUC,IAAI,2BACjBzJ,EAAK+U,MACLkf,EAAGzqB,UAAUC,IAAI,0BACrBwqB,EAAGzqB,UAAUC,IAAI,qBACjB+pB,EAAMtuB,YAAY+uB,GAItB,IAAI,IAAI3zB,EAAI,EAAGA,EAAEN,EAAK4zB,WAAWxzB,OAAQE,IAAK,CAC1C,MAAML,EAAU,CACZ,GACA,GACA,GACAD,EAAK4zB,WAAWtzB,GAAGuzB,OACnB7zB,EAAK4zB,WAAWtzB,GAAGwzB,OACnB9zB,EAAK4zB,WAAWtzB,GAAGyzB,OACnB,GACA,IAGJ,IAAI,MAAML,KAAKzzB,EAAS,CACpB,IAAIg0B,EAAKxvB,SAASW,cAAc,OAChC6uB,EAAG/uB,YAAYT,SAAS0B,eAAeutB,IACvCO,EAAGvrB,UAAY,4CACf8qB,EAAMtuB,YAAY+uB,MAQlC,GAFA,GAAAn0B,KAAI,QAAgBoF,YAAYsuB,IAE5BJ,EAAShzB,SAAWkzB,EAAQY,MAAM9zB,OAAO,CACzC,IAAI6zB,EAAKxvB,SAASW,cAAc,OAChC6uB,EAAG/uB,YAAYT,SAAS0B,eAAe,gCACvC,GAAArG,KAAI,QAAgBoF,YAAY+uB,IAIxC1mB,iCAAiCC,GAC7B,MAA8B,CAC1BqmB,OAAQrmB,EAAMsF,mBACdghB,OAAQtmB,EAAMyF,oBACd8gB,OAAQvmB,EAAMuF,oBAKtBsgB,qBAAqBF,GACjB,IAAIC,EAA8B,GAElC,IAAI,MAAMpzB,KAAQmzB,EAAkB,CAChC,IAAI9a,EAAwB,KAE5B,IAAIrY,EAAKmb,aACL,GAAGnb,aAAgBuuB,GAAoB,CACnC,MAAM/gB,EAAQxN,EAAKwuB,YACnBnW,EAAO,CACHtD,KAAMwZ,GAAmBzS,KACzBzE,YAAc7J,GAASA,EAAMnB,IAAOmB,EAAMnB,IAAM,oBAChDunB,WAAY,CAACpmB,EAAQwlB,GAAYqB,0BAA0B7mB,GAAS,CAChEqmB,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZK,cAAe,GACfD,aAAc,SAGf,GAAGn0B,aAAgBwkB,GAAsB,CAC5C,MAAMC,EAAUzkB,EAAK2lB,wBACftZ,EAAMrM,EAAKymB,YACjBpO,EAAO,CACHtD,KAAMyP,GAAqB1I,KAC3BzE,YAAa,GAAc,mBAC3Buc,WAAYnP,EAAQ1kB,KAAIoM,GAAK6mB,GAAYqB,0BAA0BloB,KACnEioB,cAAe,GACfD,aAAc,IAKxB9b,GACE+a,EAAS7zB,KAAK8Y,GAGtB,OAAO+a,EAGXG,oBAAoBJ,GAChB,IAAIG,EAAyB,CACzBY,MAAO,GACP7pB,eAAgB,EAChBiqB,eAAgB,EAChBC,aAAc,GAElB,MAAMC,EAAQ,GAAA10B,KAAI,QAAUwvB,wBAC5B,IAAImF,EAAmB,EACnBC,EAAgB,EAChBC,EAAyB,EACzBC,EAAmB,EACnBC,EAAgB,EAEpB,GAAGL,EAAMp0B,OAAQ,CAEb,MAAMsJ,EAAI4L,GAAcoB,kBAAkBtB,GAAoBM,eACxDof,EAAehqB,KAAKsN,IAAI1O,GAAQ,EAAK,IAE3C,IAAIqrB,EAAa,KAEbC,EAAgBR,EAAM,GACG,GAA1BQ,EAAc/pB,WACb+pB,EAAgB,IAAI3nB,EAAqBmnB,EAAM,GAAG/mB,SAAU+mB,EAAM,GAAG9mB,UAAW,GAEhFknB,EAAmBzqB,EADI,CAAC6qB,EAAeR,EAAM,KAE7CC,EAAmBG,EAAiBE,EACpCC,EAAaC,GAIjB,IAAIC,EAAyB,CACzBlgB,KAAMqI,GAAsBtB,KAC5BzE,YAAa,uBACbuc,WAAY,CAACZ,GAAYqB,0BAA0BW,IACnDZ,cAAe,IACfD,aAAc,KAGlBb,EAAQY,MAAM30B,KAAK01B,GAEnB,IAAI,MAAMj1B,KAAQmzB,EAAkB,CAChC,IAAIlR,EAAOjiB,EAAKqb,kBAEZ8Y,EAAe,IAChBlS,EAAK7hB,QAAU20B,IAGdZ,EAAe,IAAMhpB,EADIhB,EADF,CAAC4qB,EAAY9S,EAAK,KAEuB6S,IAGpE,IAAIzc,EAAwB,KAC5B,GAAGrY,EAAKmb,aACJ,GAAGnb,aAAgBod,GAAuB,CACtC,MAAM8X,EAAOl1B,EAAKie,oBAClB0W,GAA0BO,EAC1B,MAAMC,EAAcn1B,EAAKoe,kBACzB/F,EAAO,CACHtD,KAAMqI,GAAsBtB,KAC5BzE,YAAa,mBAAqB8d,EAAc,qBAAuB,IACvEvB,WAAY3R,EAAKliB,KAAIoM,GAAK6mB,GAAYqB,0BAA0BloB,KAChEioB,cAAec,EAAO,EAAI,IAAM/pB,EAA0B+pB,GAAQ,IAClEf,aAAcA,GAElBb,EAAQiB,cAAgBY,OACrB,GAAGn1B,aAAgBinB,GAAqB,CAC3C,IAAIxC,EAAUzkB,EAAK2lB,wBACnB,MACMyP,EAAgB,IAAMjqB,EADNhB,EAA4B8X,GACkB6S,GACpEzc,EAAO,CACHtD,KAAMkS,GAAoBnL,KAC1BzE,YAAa,0BACbuc,WAAYnP,EAAQ1kB,KAAIoM,GAAK6mB,GAAYqB,0BAA0BloB,KACnEioB,cAAegB,EACfjB,aAAcA,GAElBb,EAAQiB,cAAgBv0B,EAAKoe,kBAIlC6D,EAAK7hB,SACJ20B,EAAa9S,EAAKA,EAAK7hB,OAAS,IAEjCiY,GACHib,EAAQY,MAAM30B,KAAK8Y,GAGvB,IAAIgd,EAAY,IACZC,EAAaP,EACbQ,EAAuC,CACvC1B,OAAQ,IACRC,OAAQ,IACRC,OAAQ,KAETuB,GAAqC,GAAvBA,EAAWrqB,WACxBqqB,EAAa,IAAIjoB,EAAqB0nB,EAAWtnB,SAAUsnB,EAAWrnB,UAAW,GACjF6nB,EAAiBvC,GAAYqB,0BAA0BiB,GAEvDT,EAAgB1qB,EADI,CAAC4qB,EAAYO,IAEjCZ,EAAgBG,EAAcC,EAC9BO,EAAY,IAAMlqB,EAA0BupB,IAGhD,IAAIc,EAA0B,CAC1BzgB,KAAMqI,GAAsBtB,KAC5BzE,YAAa,mBACbuc,WAAY,CAAC2B,GACbnB,cAAeiB,EACflB,aAAc,KAElBb,EAAQY,MAAM30B,KAAKi2B,GAEnBlC,EAAQjpB,eAAiBF,EAA4BqqB,GAASI,EAAmBC,EACjF,MAAMY,EAAyBnC,EAAQjpB,eAAeyqB,EACtDxB,EAAQgB,eAAiBmB,EAAyBhB,EAAmBC,EAAgBC,EAGrF,IAAIe,EAAkC,CAClC3gB,KAAM,GACNsC,YAAa,GACbuc,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,YACdC,cAXejpB,EAA0BmoB,EAAQgB,iBAarDhB,EAAQY,MAAM30B,KAAKm2B,GAEnB,IAAIC,EAAuC,CACvC5gB,KAAM,GACNsC,YAAa,GACbuc,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,YACdC,cAAe,IAAId,EAAQjpB,eAAiB,KAAM2I,QAAQ,QAE9DsgB,EAAQY,MAAM30B,KAAKo2B,GAEnB,IAAIC,EAAqC,CACrC7gB,KAAM,GACNsC,YAAa,GACbuc,WAAY,CAAC,CACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAEZI,aAAc,UACdC,cAAed,EAAQiB,aAAe,EAAIjB,EAAQiB,aAAa10B,WAAa,KAEhFyzB,EAAQY,MAAM30B,KAAKq2B,GAGvB,OAAOtC,G,mzBC/bR,MAAMuC,WAAyB5e,GAqClCrO,YAAY8b,EAAuBwP,EAAmB4B,GAClD/c,MAAM+c,G,aArCV,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAGA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAEA,oBACA,oBACA,oBACA,oBAQA,oBAKI,GAAAh2B,KAAI,GAAY4kB,EAAO,KACvB,GAAA5kB,KAAI,GAAUo0B,EAAK,KAEnB,GAAAp0B,KAAI,GAAyB,KAAI,KACjC,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAA2B,KAAI,KACnC,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAkC,KAAI,KAC1C,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAmC,KAAI,KAC3C,GAAAA,KAAI,GAAoC,KAAI,KAE5C,GAAAA,KAAI,GAA0B,KAAI,KAClC,GAAAA,KAAI,GAA0B,KAAI,KAClC,GAAAA,KAAI,GAA+B,KAAI,KACvC,GAAAA,KAAI,GAA+B,KAAI,KACvC,GAAAA,KAAI,GAAgC,KAAI,KACxC,GAAAA,KAAI,GAAgC,KAAI,KACxC,GAAAA,KAAI,GAAyBg2B,EAAoB,KACjD,GAAAh2B,KAAI,GAA+B,OAAM,KAEzC,GAAAA,KAAI,GAAuB,KAAI,KAC/B,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAoB,KAAI,KAE5BA,KAAKyd,yBAGTA,yBACO,GAAAzd,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBwV,GAAcgI,aAAaxd,KAAKi2B,kBAAkBlgB,KAAK/V,OAAM,KACrFwV,GAAc0gB,iBAAiB,GAAAl2B,KAAI,WAA0B+V,KAAK/V,OAWtEi2B,oBACI,MAAM3rB,EAAS,GAAAtK,KAAI,QAAUwvB,wBACvBgE,EAAU,GAAAxzB,KAAI,QAAQyzB,oBAAoB,GAAAzzB,KAAI,QAAU8uB,qBAMxDqH,EAAU3C,EAAQjpB,eAAiB,IAMtC,GAAAvK,KAAI,UACH,GAAAA,KAAI,QAAqBgW,MAAQ1L,EAAOhK,OAAO4S,QAAQ,IAExD,GAAAlT,KAAI,UACH,GAAAA,KAAI,QAAoBgW,MAAQ,GAAG,EAAU9C,QAAQ,QAEtD,GAAAlT,KAAI,UACH,GAAAA,KAAI,QAAoBgW,MAAQ3K,EAA0BmoB,EAAQgB,iBAEnE,GAAAx0B,KAAI,UACH,GAAAA,KAAI,QAAkBgW,MAAQwd,EAAQiB,aAAe,EAAIjB,EAAQiB,aAAa10B,WAAa,OAiKnG8V,WAAW2Y,EAAmC4H,GAA0B,GACjEA,GACC5gB,GAAcK,WAAW2Y,GAAQ,GAAM,GAE3C,GAAAxuB,KAAI,WAAqB,KAAzBA,KAA0BwuB,GAEvB,GAAAxuB,KAAI,UACH,GAAAA,KAAI,QAAiCgW,MAAQhL,KAAKsN,IAAIyd,GAAiBM,yBAA0B7H,EAAO3a,cAAc9T,YACvH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAiCgW,MAAQhL,KAAKsN,IAAIyd,GAAiBO,yBAA0B9H,EAAO1a,cAAc/T,YACvH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAkCgW,MAAQhL,KAAKsN,IAAIyd,GAAiBQ,0BAA2B/H,EAAOza,eAAehU,YAC1H,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAgCgW,MAAQhL,KAAKsN,IAAIyd,GAAiBS,wBAAyBhI,EAAOxa,aAAajU,YACpH,GAAAC,KAAI,UACH,GAAAA,KAAI,QAAiCgW,MAAQhL,KAAKsN,IAAIyd,GAAiBU,yBAA0BjI,EAAOva,cAAclU,YAoE9Hyc,QACI,GAAAxc,KAAI,WAAS,KAAbA,MAGAA,KAAKi2B,qB,sXApPF,GAAAj2B,KAAI,SACHwV,GAAcG,kBAAkBL,GAAoBM,cAAe,GAAA5V,KAAI,QAAmB+f,eAAe,GAAM,IACtH,cAGM,GAAA/f,KAAI,SACHwV,GAAcC,mBAAmBJ,GAAqBK,UAAW,GAAA1V,KAAI,QAAuB0Y,SAAS,GAAM,IAClH,cAGM,GAAA1Y,KAAI,UACH,GAAAA,KAAI,QAAuB0Y,QAAUlD,GAAcqB,mBAAmBxB,GAAqBK,YAE5F,GAAA1V,KAAI,UACH,GAAAA,KAAI,QAAmBgW,MAAQR,GAAcoB,kBAAkBtB,GAAoBM,eAAe7V,YAEtGC,KAAK6V,WAAWL,GAAcsK,cAAc,IAC/C,cAIG,GAAA9f,KAAI,GAA0B2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,mBAAiC,KAC9F,GAAAA,KAAI,QAAwB0b,UAAY,GAExC,MAAMsD,EAAK,gDACX,GAAAhf,KAAI,GAAyBA,KAAKyY,2BAA2BjD,GAAcqB,mBAAmBxB,GAAqBK,WAAY,GAAA1V,KAAI,WAA0B+V,KAAK/V,OAAM,KACxK,GAAAA,KAAI,QAAuB2X,MAAQqH,EACnC,GAAAhf,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAwBgf,IACzG,GAAAhf,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM2e,EAAK,mEACX,GAAA3e,KAAI,GAAqBA,KAAKqY,yBAAyB7C,GAAcoB,kBAAkBtB,GAAoBM,eAAgB,GAAA5V,KAAI,WAA0B+V,KAAK/V,MAAO,IAAI,KACzK,GAAAA,KAAI,QAAmB2X,MAAQgH,EAC/B,GAAA3e,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,eAAgB,GAAArX,KAAI,QAAoB2e,IACvG,GAAA3e,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM02B,EAAK,8CACX,IAAIC,EAAY32B,KAAK6X,qBACrB8e,EAAUhf,MAAQ+e,EAClB,IAAIE,EAAkB52B,KAAKqX,kBAAkB,iBAAkBsf,EAAWD,GAC1EE,EAAgBltB,UAAUC,IAAI,oCAC9B,GAAA3J,KAAI,QAAwBoF,YAAYwxB,GACxC,GAAA52B,KAAI,QAAwBoF,YAAYuxB,GAExC,IAAInI,EAAShZ,GAAcsK,aAC3B,MAAM2G,EAAM,kFACNoQ,EAAerhB,GAAc0B,eAAejX,KAAIoM,GAAKA,EAAEuH,OAC7D,GAAA5T,KAAI,GAA2BA,KAAK2Y,yBAAyBke,EAAcA,EAAc,GAAA72B,KAAI,WAAyB+V,KAAK/V,OAAM,KACjI,GAAAA,KAAI,QAAyB2X,MAAQ8O,EACrC,GAAAzmB,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,UAAW,GAAArX,KAAI,QAA0BymB,IACxG,GAAAzmB,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,GAAAA,KAAI,WAAqB,KAAzBA,KAA0BwuB,GAE1B,MAAM9H,EAAM,qCACZ,GAAA1mB,KAAI,GAAmCA,KAAKqY,yBAAyBmW,EAAO3a,aAAc,GAAA7T,KAAI,WAAsC+V,KAAK/V,MAAO+1B,GAAiBM,0BAAyB,KAC1L,GAAAr2B,KAAI,QAAiC2X,MAAQ+O,EAC7C,GAAA1mB,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAkC0mB,IAClH,GAAA1mB,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM82B,EAAM,qCACZ,GAAA92B,KAAI,GAAmCA,KAAKqY,yBAAyBmW,EAAO1a,aAAc,GAAA9T,KAAI,WAAsC+V,KAAK/V,MAAO+1B,GAAiBO,0BAAyB,KAC1L,GAAAt2B,KAAI,QAAiC2X,MAAQmf,EAC7C,GAAA92B,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAkC82B,IACjH,GAAA92B,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM+2B,EAAM,sCACZ,GAAA/2B,KAAI,GAAoCA,KAAKqY,yBAAyBmW,EAAOza,cAAe,GAAA/T,KAAI,WAAuC+V,KAAK/V,MAAO+1B,GAAiBQ,2BAA0B,KAC9L,GAAAv2B,KAAI,QAAkC2X,MAAQof,EAC9C,GAAA/2B,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAmC+2B,IACnH,GAAA/2B,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAMg3B,EAAM,+BACZ,GAAAh3B,KAAI,GAAkCA,KAAKqY,yBAAyBmW,EAAOxa,YAAa,GAAAhU,KAAI,WAAqC+V,KAAK/V,MAAO+1B,GAAiBS,yBAAwB,KACtL,GAAAx2B,KAAI,QAAgC2X,MAAQqf,EAC5C,GAAAh3B,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,WAAY,GAAArX,KAAI,QAAiCg3B,IAChH,GAAAh3B,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAMi3B,EAAM,gCACZ,GAAAj3B,KAAI,GAAmCA,KAAKqY,yBAAyBmW,EAAOva,aAAc,GAAAjU,KAAI,WAAsC+V,KAAK/V,MAAO+1B,GAAiBU,0BAAyB,KAC1L,GAAAz2B,KAAI,QAAiC2X,MAAQsf,EAC7C,GAAAj3B,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAkCi3B,IAClH,GAAAj3B,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAI5C,GAAAA,KAAI,GAA0B2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,mBAAiC,KAC9F,GAAAA,KAAI,QAAwB0b,UAAY,GAExC,MAAMkD,EAAK,gDACX,GAAA5e,KAAI,GAAuBA,KAAK6X,qBAAoB,KACpD,GAAA7X,KAAI,QAAqB2X,MAAQiH,EACjC,GAAA5e,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,aAAc,GAAArX,KAAI,QAAsB4e,IACvG,GAAA5e,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM6e,EAAK,kDACX,GAAA7e,KAAI,GAAsBA,KAAK6X,qBAAoB,KACnD,GAAA7X,KAAI,QAAoB2X,MAAQkH,EAChC,GAAA7e,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAqB6e,IACrG,GAAA7e,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM8e,EAAK,2CACX,GAAA9e,KAAI,GAAsBA,KAAK6X,qBAAoB,KACnD,GAAA7X,KAAI,QAAoB2X,MAAQmH,EAChC,GAAA9e,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,YAAa,GAAArX,KAAI,QAAqB8e,IACrG,GAAA9e,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAE5C,MAAM+e,EAAK,uDACX,GAAA/e,KAAI,GAAoBA,KAAK6X,qBAAoB,KACjD,GAAA7X,KAAI,QAAkB2X,MAAQoH,EAC9B,GAAA/e,KAAI,QAAwBoF,YAAYpF,KAAKqX,kBAAkB,UAAW,GAAArX,KAAI,QAAmB+e,IACjG,GAAA/e,KAAI,QAAwBoF,YAAY,GAAApF,KAAI,SAG5C,GAAAA,KAAI,GAA+B2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,wBAAsC,KACxG,GAAAA,KAAI,GAAgC2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,yBAAuC,KAC1G,GAAAA,KAAI,QAA8BwE,MAAM0yB,OAAS,UACjD,GAAAl3B,KAAI,QAA8B6J,QAAU,GAAA7J,KAAI,WAAsB+V,KAClE/V,KAEA,GAAAA,KAAI,QACJ,GAAAA,KAAI,SAER,GAAAA,KAAI,GAA+B2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,wBAAsC,KACxG,GAAAA,KAAI,GAAgC2E,SAASsY,eAAe,GAAG,GAAAjd,KAAI,yBAAuC,KAC1G,GAAAA,KAAI,QAA8BwE,MAAM0yB,OAAS,UACjD,GAAAl3B,KAAI,QAA8B6J,QAAU,GAAA7J,KAAI,WAAsB+V,KAClE/V,KAEA,GAAAA,KAAI,QACJ,GAAAA,KAAI,UAEX,YAEoBwuB,EAAoChZ,GAAcM,sBACnE,GAAG,GAAA9V,KAAI,QAA0B,CAC7B,IAAIm3B,GAAyB,EAG7B,MAAMC,EAAiB5hB,GAAc0B,eAAerF,QAAOxF,GAAKA,EAAEuH,MAAQ4a,EAAO5a,OAC9EwjB,EAAe92B,SAEd62B,EADqBC,EAAevlB,QAAOxF,GAAKA,EAAEG,OAAOgiB,KAC3BluB,OAAS,GAK3C,GAAAN,KAAI,QAAyBgW,MAAQmhB,EAAiB3I,EAAO5a,KAAO4B,GAAcM,qBAAqBlC,OAE9G,cA2BG,MAAMoC,EAAQ,GAAAhW,KAAI,QAAyBgW,MAErC6gB,EAAerhB,GAAc0B,eAAejX,KAAIoM,GAAKA,EAAEuH,OAC7D,IAAI4a,EAAShZ,GAAcM,qBAAqBnJ,OAEhD,GAAGkqB,EAAajb,SAAS5F,GAAQ,CAC7B,MAAMoX,EAAU5X,GAAc0B,eAAerF,QAAOxF,GAAKA,EAAEuH,MAAQoC,IAChEoX,EAAQ9sB,OAAS,IAChBkuB,EAASpB,EAAQ,GAAGzgB,QAI5B3M,KAAK6V,WAAW2Y,IAEnB,cAGG,IAAIA,EAAShZ,GAAcsK,aAC3B0O,EAAO3a,aAAe,GAAA7T,KAAI,QAAiC+f,cAC3D/f,KAAK6V,WAAW2Y,IACnB,cAGG,IAAIA,EAAShZ,GAAcsK,aAC3B0O,EAAO1a,aAAe,GAAA9T,KAAI,QAAiC+f,cAC3D/f,KAAK6V,WAAW2Y,IACnB,cAGG,IAAIA,EAAShZ,GAAcsK,aAC3B0O,EAAOza,cAAgB,GAAA/T,KAAI,QAAkC+f,cAC7D/f,KAAK6V,WAAW2Y,IACnB,cAGG,IAAIA,EAAShZ,GAAcsK,aAC3B0O,EAAOxa,YAAc,GAAAhU,KAAI,QAAgC+f,cACzD/f,KAAK6V,WAAW2Y,IACnB,cAGG,IAAIA,EAAShZ,GAAcsK,aAC3B0O,EAAOva,aAAe,GAAAjU,KAAI,QAAiC+f,cAC3D/f,KAAK6V,WAAW2Y,IACnB,YAEoB6I,EAAoBC,GACT,QAAzBA,EAAQ9yB,MAAMgc,QAEb8W,EAAQ9yB,MAAMgc,QAAU,OAGxB8W,EAAQ9yB,MAAMgc,QAAU,GAAAxgB,KAAI,QAGhCq3B,EAAO3b,UAAY,GAInB,MAAMC,EAAQ5T,EAAyC,QAAzBuvB,EAAQ9yB,MAAMgc,QAAoBla,EAAYmB,OAASnB,EAAYkB,UACjG,IAAI,MAAMhH,KAAKmb,EACX0b,EAAOjyB,YAAY5E,IAjUpB,GAAA61B,yBAAkC,EAClC,GAAAC,yBAAkC,EAClC,GAAAC,0BAAmC,EACnC,GAAAC,wBAAiC,EACjC,GAAAC,yBAAkC,E,cC9BzC,GAAU,GAEd,GAAQ5wB,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,cCf9C,GAAU,GAEd,GAAQC,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,cCf9C,GAAU,GAEd,GAAQC,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,cCf9C,GAAU,GAEd,GAAQC,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,cCf9C,GAAU,GAEd,GAAQC,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,cCf9C,GAAU,GAEd,GAAQC,kBAAoB,IAC5B,GAAQN,cAAgB,IAElB,GAAQhB,OAAS,SAAc,KAAM,QAE3C,GAAQX,OAAS,IACjB,GAAQgC,mBAAqB,IAEhB,IAAI,KAAS,IAKJ,MAAW,aAAiB,Y,2SCUlD6T,QAAQiZ,IAAI,+CAGZld,GAAc+hB,OAGd,MAIMC,GAAmB,qBAanBC,GACK9rB,EAJA,KAGL8rB,GAEM9rB,EAJA,OAqBZ,SAAS+rB,GAAgBpY,GAIrBA,EAAMqY,iBAGV,SAASC,GAAgBtY,GACrBA,EAAMqY,iBACN,MAAME,Ed/EC,CAAClX,GAAUC,IcgFlB,IAAI,MAAM6O,KAAQnQ,EAAMwY,aAAazG,MACjB,oBAAb5B,EAAKxa,KACJpQ,OAAOkzB,eAAepI,kBAAkBF,EAAKuI,aACtCH,EAAUjc,SAAS6T,EAAKxa,OAC/BpQ,OAAOkzB,eAAevF,yBAAyB/C,EAAKuI,aA3BhEnzB,OAAOkzB,eAAiB,IAAInJ,GArBF,WAsB1B/pB,OAAOsW,WAAa,ITnDb,MAaHrS,YAAYmvB,EAAyB9b,EAA0ByI,G,aAZ/D,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBAGI,GAAA5kB,KAAI,GAAY4kB,EAAO,KACvB,GAAA5kB,KAAI,GAAQ,KAAI,KAChB,GAAAA,KAAI,GAAsB,KAAI,KAC9B,GAAAA,KAAI,GAAqB,KAAI,KAC7B,GAAAA,KAAI,GAAe,KAAI,KACvB,GAAAA,KAAI,GAAgB,KAAI,KACxB,GAAAA,KAAI,GAAiB,KAAI,KACzB,GAAAA,KAAI,GAAqBi4B,EAAgB,KACzC,GAAAj4B,KAAI,GAAsBmc,EAAiB,KAE3C,GAAAnc,KAAI,QAAUixB,kBAAkBjxB,KAAKk4B,YAAYniB,KAAK/V,OACtDA,KAAKyd,yBAGTA,yBACO,GAAAzd,KAAI,SACH,GAAAA,KAAI,QAAiB,KAArBA,MAEJ,GAAAA,KAAI,GAAoBwV,GAAcgI,aAAaxd,KAAKk4B,YAAYniB,KAAK/V,OAAM,KAGnFob,cAAc+c,EAAcC,EAAkB,I,MACvCD,GACC,GAAAn4B,KAAI,QAAcwE,MAAMgc,QAAU,OAClC,GAAAxgB,KAAI,QAAewE,MAAMgc,QAAU,QAEhC4X,IACkC,QAAjC,EAAAzzB,SAASsY,eAAemb,UAAS,SAAErc,oBAEvC,GAAA/b,KAAI,QAAcwE,MAAMgc,QAAU,QAClC,GAAAxgB,KAAI,QAAewE,MAAMgc,QAAU,OACnCxgB,KAAKwc,SAIb6b,kBACIr4B,KAAKob,cAAiD,QAAnC,GAAApb,KAAI,QAAcwE,MAAMgc,SAG/C4P,kBACI,OAAO,GAAApwB,KAAI,QAGfs4B,aAAaC,EAA+BC,EAAK,IAC1C,GAAAx4B,KAAI,SACH,GAAAA,KAAI,QAAMy4B,QAAQF,EAAStmB,aAAcumB,GAIjDE,QAAQC,GACD,GAAA34B,KAAI,SACH,GAAAA,KAAI,QAAMgb,UAAU2d,EAAc1d,aAI1C2d,YAAY9d,GACL,GAAA9a,KAAI,SACH8a,EAAQtB,MAAM,GAAAxZ,KAAI,SAI1B64B,aAAaxI,GACT,IAAI,MAAM2C,KAAK3C,EACXrwB,KAAK44B,YAAY5F,GAGzB8F,gBAAgBxZ,GAMR,MAAM7H,EAAIlK,EAAqBgS,aAAaD,EAAMpN,QAClDuF,EAAEtM,SAAW,GAAAnL,KAAI,QAAUkxB,yBAC3B,MAAM5jB,EAAI,IAAIgQ,GAAsB,GAAAtd,KAAI,QAAOyX,GAC/C,GAAAzX,KAAI,QAAUmxB,iBAAiB7jB,GAIvCyrB,uBACI,GAAG,GAAA/4B,KAAI,QAAO,CACV,MAAMoN,EAAI,GAAApN,KAAI,QAAMib,YACd8K,EAAK3Y,EAAE4Y,eACPC,EAAK7Y,EAAE8Y,eACPC,EAAKJ,EAAG3T,IAAM6T,EAAG7T,IACjBgU,EAAKL,EAAG5T,IAAM8T,EAAG9T,IAEjB7E,EAAI,IAAImhB,GAAmB,GAAAzuB,KAAI,QAAO,IAAIuN,EAC5C0Y,EAAG9T,IAAMiU,EAAK,EACdH,EAAG7T,IAAM+T,EAAK,EACd,GAAAnmB,KAAI,QAAUkxB,2BAElB5jB,EAAEuX,YAAY,GAAA7kB,KAAI,SAClB,GAAAA,KAAI,QAAUmxB,iBAAiB7jB,IAIvC0rB,0BACI,GAAG,GAAAh5B,KAAI,QAAO,CACV,MAAMoN,EAAI,GAAApN,KAAI,QAAMib,YACd8K,EAAK3Y,EAAE4Y,eACPC,EAAK7Y,EAAE8Y,eACPC,EAAKJ,EAAG3T,IAAM6T,EAAG7T,IACjBgU,EAAKL,EAAG5T,IAAM8T,EAAG9T,IAEjB7E,EAAI,IAAIgQ,GAAsB,GAAAtd,KAAI,QAAO,IAAIuN,EAC/C0Y,EAAG9T,IAAMiU,EAAK,EACdH,EAAG7T,IAAM+T,EAAK,EACd,GAAAnmB,KAAI,QAAUkxB,2BAElB,GAAAlxB,KAAI,QAAUmxB,iBAAiB7jB,IAwBvC2rB,yBACI,MAAMhG,EAAS,GAAAjzB,KAAI,WAA2B,KAA/BA,MAEf,GAAG,GAAAA,KAAI,SAASizB,EAAO3yB,OAAQ,CAC3B,MAAMgN,EAAI,IAAIoX,GAAqB,GAAA1kB,KAAI,QAAOizB,GAC9C3lB,EAAEuX,YAAY,GAAA7kB,KAAI,SAClB,GAAAA,KAAI,QAAUmxB,iBAAiB7jB,IAIvC4rB,wBACI,MAAMjG,EAAS,GAAAjzB,KAAI,WAA2B,KAA/BA,MAEf,GAAG,GAAAA,KAAI,SAASizB,EAAO3yB,OAAQ,CAC3B,MAAMgN,EAAI,IAAI6Z,GAAoB,GAAAnnB,KAAI,QAAOizB,GAC7C3lB,EAAEka,aAAa,GAAAxnB,KAAI,QAAUkxB,0BAC7B,GAAAlxB,KAAI,QAAUmxB,iBAAiB7jB,IAIvC4qB,cACI,GAAG,GAAAl4B,KAAI,QAAQ,CACX,MACMm5B,EADO3jB,GAAcqB,mBAAmBxB,GAAqBK,WACxC,GAAA1V,KAAI,QAAUwvB,wBAAwBvvB,KAAIoM,GAAKA,EAAE4F,eAAgB,GAC5F,GAAAjS,KAAI,QAAOqmB,WAAW8S,IAI9BC,iBAAiBjB,GAEV,GAAAn4B,KAAI,UAEC,GAAAA,KAAI,SACJ,GAAAA,KAAI,QAAMq5B,aAGVlB,GAAQ,GAAAn4B,KAAI,SACZ,GAAAA,KAAI,QAAmB+D,SACvB,GAAA/D,KAAI,GAAqB,KAAI,MACtB,GAAAA,KAAI,UACX,GAAAA,KAAI,GAAqB,iBAAgB,KACzC,GAAAA,KAAI,QAAmBwZ,MAAM,GAAAxZ,KAAI,WAGjCm4B,GAAQ,GAAAn4B,KAAI,SACZ,GAAAA,KAAI,QAAoB+D,SACxB,GAAA/D,KAAI,GAAsB,KAAI,MACvB,GAAAA,KAAI,UACX,GAAAA,KAAI,GAAsB,iBAAiB,GAAAA,KAAI,SAAa,KAC5D,GAAAA,KAAI,QAAoBwZ,MAAM,GAAAxZ,KAAI,WAKjDwc,QAIC,GAHM,GAAAxc,KAAI,GAAgB2E,SAASsY,eAAe,GAAAjd,KAAI,SAAmB,KACnE,GAAAA,KAAI,GAAiB2E,SAASsY,eAAe,GAAAjd,KAAI,SAAoB,KAEvE,GAAAA,KAAI,QAsCP,GAAAA,KAAI,QAAMs5B,qBAtCI,CACd,MAAMC,EAAa,YAAY,qFAAsF,CACpHC,YAAa,2JACbC,QAAS,GACT95B,GAAI,qBACJ+5B,SAAU,IACVC,YAAa,EACbC,YAAa,iGAERC,EAAkB,YAAY,qFAAsF,CACzHL,YAAa,2JACbC,QAAS,GACT95B,GAAI,sBACJ+5B,SAAU,IACVC,YAAa,EACbC,YAAa,iGAGL,GAAA55B,KAAI,GAAe,CACf85B,OAAQP,EACRQ,UAAWF,GACd,KAEV,GAAA75B,KAAI,GAAQ,MAAM,GAAAA,KAAI,QAAoB,CAC7Bg6B,iBAAiB,EACjBC,OAAQ,CACJV,EACAM,GAEJR,aAAa,IACf,KACFr5B,KAAKo5B,kBAAiB,GACtB,GAAAp5B,KAAI,QAAM+d,GAAG,WAAY/d,KAAK84B,gBAAgB/iB,KAAK/V,OAGnDA,KAAKs4B,aAAa,IAAI/qB,GAAsB,WAAY,aAAc,IAMtE,GAAAvN,KAAI,SACJ,GAAAA,KAAI,GAAS,WAAW,GAAI,CAACsmB,MAAO,WAAW9M,MAAM,GAAAxZ,KAAI,SAAM,OSrMzCw3B,GAnBR,cAmB6C3yB,OAAOkzB,gBAC9ElzB,OAAOq1B,aAAe,IAAIhH,GAAYruB,OAAOkzB,eAnBlB,iBAoB3BlzB,OAAOs1B,kBAAoB,IAAIpE,GAAiBlxB,OAAOkzB,eAAgBlzB,OAAOq1B,aAvBjD,YAwB7Br1B,OAAOu1B,YAAc,IAAIle,GApBG,OACC,CACzB,eAwEJvX,SAASuY,iBAAiB,oBA1BN,IAAY,sC1BwCzB,WAEH,IAAI,MAAMmd,KAAa/zB,EAAa,CAChC,MAAMg0B,EAAUtqB,OAAOqqB,GACvB,IAAKznB,MAAM0nB,GAAU,CAEjB,MAAM95B,EAAI+F,EAAoB+zB,GAC3B95B,GACC,SAAYA,IAIxB,a0BlDA+5B,GA5BJ,SAAqBpC,GACjB,MAAMqC,EAAY71B,SAASsY,eA9BH,UA+BlBwd,EAAS91B,SAASsY,eA9BH,OA+BrBud,EAAUh2B,MAAMgc,QAA0B,OAC1Cia,EAAOj2B,MAAMgc,QAA0B,OA2BvCka,GAEA71B,OAAOkzB,eAAevb,QACtB3X,OAAOsW,WAAWqB,QAClB3X,OAAOs1B,kBAAkB3d,QACzB3X,OAAOq1B,aAAa1d,QACpB3X,OAAOu1B,YAAY5d,QAEnB3X,OAAOkzB,eAAe/G,QAAQnsB,OAAOsW,YACrCtW,OAAOkzB,eAAe9G,kBAAkBpsB,OAAOs1B,kBAAkBlE,kBAAkBlgB,KAAKlR,OAAOs1B,oBAE/F,IAAIM,EAAS91B,SAASsY,eAAeua,IACrCiD,EAAOE,OAAS/C,GAChB6C,EAAOG,WAAalD,GAGpBmD,UAAUC,YAAYC,oBAA2BxC,GAAa,qCAC1D1zB,OAAOsW,WAAWmd,aAAa,IAAI/qB,EAAqBgrB,EAASjuB,OAAOqD,SAAU4qB,EAASjuB,OAAOsD,sBAI7C,GAC7D/I,OAAOqY,iBAAiB,eAAgBoC,IAEpCza,OAAOsW,WAAWie,kBAAiB,GAEnCv0B,OAAOsW,WAAWC,eAAc,GAEhC,MAAMnb,EAAM0E,SAASsY,eAAeua,IAK9BwD,EAAW,GAEjB,IACIC,EAAKD,EAGLC,EAFDxD,GAAkCx3B,EAAIi7B,cACxBzD,GAAkCx3B,EAAIi7B,aACtCF,EAERA,GAAY/6B,EAAIi7B,YAAczD,IAGvC,IACI0D,EAAKH,EAGLG,EAFD1D,GAAmCx3B,EAAIm7B,eACzB3D,GAAmCx3B,EAAIm7B,cACvCJ,EAERA,GAAY/6B,EAAIm7B,aAAe3D,IAGxC5yB,OAAOkzB,eAAe1I,oBAAmB,EAlBhC2L,GASAA,GAS8CC,EAAIE,GAG3Dt2B,OAAOq1B,aAAa9G,0BAGxBvuB,OAAOqY,iBAAiB,cAAeoC,IAEnCza,OAAOsW,WAAWie,kBAAiB,GAEnC,MAAMn5B,EAAM0E,SAASsY,eAAeua,IACpCv3B,EAAIuE,MAAM62B,MAAQ,OAClBp7B,EAAIuE,MAAM82B,OAAS,OACnBz2B,OAAOsW,WAAWqB,Y","sources":["webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css","webpack://neuron-planner/./src/css/brief.css","webpack://neuron-planner/./src/css/index.css","webpack://neuron-planner/./src/css/map.css","webpack://neuron-planner/./src/css/plan.css","webpack://neuron-planner/./src/css/responsive.css","webpack://neuron-planner/./src/css/stats_options.css","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/api.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://neuron-planner/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://neuron-planner/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://neuron-planner/./node_modules/leaflet/dist/leaflet.css?b9a3","webpack://neuron-planner/./src/js/interface_fontawesome.ts","webpack://neuron-planner/./src/js/interface_leaflet.ts","webpack://neuron-planner/./src/js/neuron_tools_common.ts","webpack://neuron-planner/./src/js/interface_proj4.ts","webpack://neuron-planner/./src/js/neuron_tools_survey.ts","webpack://neuron-planner/./src/js/neuron_interfaces.ts","webpack://neuron-planner/./src/js/neuron_options.ts","webpack://neuron-planner/./src/js/neuron_dom_factory.ts","webpack://neuron-planner/./src/js/neuron_feature_base.ts","webpack://neuron-planner/./src/js/neuron_help.ts","webpack://neuron-planner/./src/js/neuron_feature_waypoint.ts","webpack://neuron-planner/./src/js/neuron_tools_files.ts","webpack://neuron-planner/./src/js/neuron_tools_kml.ts","webpack://neuron-planner/./src/js/neuron_feature_polygon.ts","webpack://neuron-planner/./src/js/neuron_feature_survey.ts","webpack://neuron-planner/./src/js/neuron_feature_point.ts","webpack://neuron-planner/./src/js/neuron_planner.ts","webpack://neuron-planner/./src/js/neuron_map.ts","webpack://neuron-planner/./src/js/neuron_brief.ts","webpack://neuron-planner/./src/js/neuron_statistics.ts","webpack://neuron-planner/./src/css/index.css?f7ea","webpack://neuron-planner/./src/css/map.css?9a45","webpack://neuron-planner/./src/css/stats_options.css?667b","webpack://neuron-planner/./src/css/plan.css?e090","webpack://neuron-planner/./src/css/brief.css?d739","webpack://neuron-planner/./src/css/responsive.css?0bb5","webpack://neuron-planner/./src/js/index.ts"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"images/layers.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_1___ = new URL(\"images/layers-2x.png\", import.meta.url);\nvar ___CSS_LOADER_URL_IMPORT_2___ = new URL(\"images/marker-icon.png\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \");\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/leaflet/dist/leaflet.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Prevents IE11 from highlighting tiles in blue */\\r\\n.leaflet-tile::selection {\\r\\n\\tbackground: transparent;\\r\\n}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\twidth: auto;\\r\\n\\tpadding: 0;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\nsvg.leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive,\\r\\nsvg.leaflet-image-layer.leaflet-interactive path {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline-offset: 1px;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont-family: \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\tfont-size: 12px;\\r\\n\\tfont-size: 0.75rem;\\r\\n\\tline-height: 1.5;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover,\\r\\n.leaflet-bar a:focus {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers.png);\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(images/layers-2x.png);\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path { /* used only in path-guessing heuristic, see L.Icon.Default */\\r\\n\\tbackground-image: url(images/marker-icon.png);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.8);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover,\\r\\n.leaflet-control-attribution a:focus {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-control-attribution svg {\\r\\n\\tdisplay: inline !important;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 24px 13px 20px;\\r\\n\\tline-height: 1.3;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-size: 1.08333em;\\r\\n\\tmin-height: 1px;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 17px 0;\\r\\n\\tmargin: 1.3em 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-top: -1px;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\tpointer-events: auto;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 24px;\\r\\n\\theight: 24px;\\r\\n\\tfont: 16px/24px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #757575;\\r\\n\\ttext-decoration: none;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover,\\r\\n.leaflet-container a.leaflet-popup-close-button:focus {\\r\\n\\tcolor: #585858;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\t-ms-zoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \\\"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\\\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \\\"\\\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n\\r\\n/* Printing */\\r\\n\\t\\r\\n@media print {\\r\\n\\t/* Prevent printers from removing background-images of controls. */\\r\\n\\t.leaflet-control {\\r\\n\\t\\t-webkit-print-color-adjust: exact;\\r\\n\\t\\tcolor-adjust: exact;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".brief-table {\\n    display: grid;\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\n    font-size: x-small;\\n}\\n\\n.brief-table-title {\\n    grid-column: 1 / 9;\\n}\\n\\n.brief-table-entry {\\n    text-align: left;\\n    margin-left: 1em;\\n    margin-right: 1em;\\n    /* display: grid;\\n    grid-template-columns: auto auto auto auto auto auto; */\\n}\\n\\n.brief-table-entry-right {\\n    text-align: right;\\n}\\n\\n/* .brief-table-entry-center {\\n    text-align: center;\\n} */\\n\\n.brief-table-entry-bold {\\n    font-weight: bold;\\n}\\n\\n.brief-table-header {\\n    font-weight: bold;\\n    text-align: center;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/brief.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,oFAAoF;IACpF,8DAA8D;IAC9D,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,gBAAgB;IAChB,iBAAiB;IACjB;2DACuD;AAC3D;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;GAEG;;AAEH;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB\",\"sourcesContent\":[\".brief-table {\\n    display: grid;\\n    /* Step, Type, Description, Features A, Features B, Features C, Transit, Duration  */\\n    grid-template-columns: auto auto auto auto auto auto auto auto;\\n    font-size: x-small;\\n}\\n\\n.brief-table-title {\\n    grid-column: 1 / 9;\\n}\\n\\n.brief-table-entry {\\n    text-align: left;\\n    margin-left: 1em;\\n    margin-right: 1em;\\n    /* display: grid;\\n    grid-template-columns: auto auto auto auto auto auto; */\\n}\\n\\n.brief-table-entry-right {\\n    text-align: right;\\n}\\n\\n/* .brief-table-entry-center {\\n    text-align: center;\\n} */\\n\\n.brief-table-entry-bold {\\n    font-weight: bold;\\n}\\n\\n.brief-table-header {\\n    font-weight: bold;\\n    text-align: center;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* html {\\n    height: 100%;\\n} */\\n\\n.fp-user-buttons-frame {\\n    display: flex;\\n    flex: 0 1 1;\\n    flex-direction: row;\\n    background-color: var(--theme-bg-border);\\n    padding: 0.1em;\\n}\\n\\n.fp-user-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    padding: 0.5em;\\n    border-radius: 0;\\n}\\n\\n/* ========================== */\\n/*          Main View         */\\n/* ========================== */\\n\\n#fp-main {\\n    display: flex;\\n    flex-direction: row;\\n    flex: 1 0 0;\\n    overflow: hidden;\\n}\\n\\n#fp-map {\\n    flex: 1 0 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-map-sub {\\n    flex: 1 0 0;\\n}\\n\\n#fp-map-help {\\n    display: none;\\n    overflow: scroll;\\n    padding: 1em;\\n}\\n\\n#fp-summary {\\n    flex: auto;\\n    flex-grow: 0;\\n    width: 25%;\\n    display: flex;\\n    flex-direction: column;\\n    border-left: 2px solid black;\\n}\\n\\n#fp-advanced {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n/* ========================== */\\n/*       Drawing Toolbar      */\\n/* ========================== */\\n/*\\n#fp-draw {\\n    display: flex;\\n    flex: 1 0 0;\\n    flex-direction: row;\\n    background-color: black;\\n    padding: 0.1em;\\n}\\n\\n.fp-draw-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    border-radius: 0;\\n}\\n*/\\n\\n/* ========================== */\\n/*     Management Toolbar     */\\n/* ========================== */\\n/*\\n#fp-manage {\\n    display: flex;\\n    flex: auto;\\n    flex-direction: row;\\n    padding: 0.1em;\\n    background-color: black;\\n}\\n\\n.fp-manage-buttons {\\n    flex: 1 0 0;\\n    border-radius: 0;\\n}\\n*/\\n\\n.fp-long-name {\\n    margin-left: 0.5em;\\n}\\n\\n#print-section {\\n    display: none;\\n}\\n\\n.help-highlight {\\n    background-color: var(--theme-highlight);\\n}\\n\\nbody{counter-reset: section}\\nh2{counter-reset: sub-section}\\nh3{counter-reset: composite}\\nh4{counter-reset: detail}\\n\\nh2:before{\\n  counter-increment: section;\\n  content: counter(section) \\\". \\\";\\n}\\nh3:before{\\n  counter-increment: sub-section;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\n}\\nh4:before{\\n  counter-increment: composite;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\n}\\nh5:before{\\n  counter-increment: detail;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/index.css\"],\"names\":[],\"mappings\":\"AAAA;;GAEG;;AAEH;IACI,aAAa;IACb,WAAW;IACX,mBAAmB;IACnB,wCAAwC;IACxC,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,cAAc;IACd,gBAAgB;AACpB;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;;AAE/B;IACI,aAAa;IACb,mBAAmB;IACnB,WAAW;IACX,gBAAgB;AACpB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;;CAcC;;AAED,+BAA+B;AAC/B,+BAA+B;AAC/B,+BAA+B;AAC/B;;;;;;;;;;;;;CAaC;;AAED;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA,KAAK,sBAAsB;AAC3B,GAAG,0BAA0B;AAC7B,GAAG,wBAAwB;AAC3B,GAAG,qBAAqB;;AAExB;EACE,0BAA0B;EAC1B,8BAA8B;AAChC;AACA;EACE,8BAA8B;EAC9B,uDAAuD;AACzD;AACA;EACE,4BAA4B;EAC5B,8EAA8E;AAChF;AACA;EACE,yBAAyB;EACzB,kGAAkG;AACpG\",\"sourcesContent\":[\"/* html {\\n    height: 100%;\\n} */\\n\\n.fp-user-buttons-frame {\\n    display: flex;\\n    flex: 0 1 1;\\n    flex-direction: row;\\n    background-color: var(--theme-bg-border);\\n    padding: 0.1em;\\n}\\n\\n.fp-user-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    padding: 0.5em;\\n    border-radius: 0;\\n}\\n\\n/* ========================== */\\n/*          Main View         */\\n/* ========================== */\\n\\n#fp-main {\\n    display: flex;\\n    flex-direction: row;\\n    flex: 1 0 0;\\n    overflow: hidden;\\n}\\n\\n#fp-map {\\n    flex: 1 0 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-map-sub {\\n    flex: 1 0 0;\\n}\\n\\n#fp-map-help {\\n    display: none;\\n    overflow: scroll;\\n    padding: 1em;\\n}\\n\\n#fp-summary {\\n    flex: auto;\\n    flex-grow: 0;\\n    width: 25%;\\n    display: flex;\\n    flex-direction: column;\\n    border-left: 2px solid black;\\n}\\n\\n#fp-advanced {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n/* ========================== */\\n/*       Drawing Toolbar      */\\n/* ========================== */\\n/*\\n#fp-draw {\\n    display: flex;\\n    flex: 1 0 0;\\n    flex-direction: row;\\n    background-color: black;\\n    padding: 0.1em;\\n}\\n\\n.fp-draw-buttons {\\n    flex: 1 0 0;\\n    margin: 0.1em;\\n    border-radius: 0;\\n}\\n*/\\n\\n/* ========================== */\\n/*     Management Toolbar     */\\n/* ========================== */\\n/*\\n#fp-manage {\\n    display: flex;\\n    flex: auto;\\n    flex-direction: row;\\n    padding: 0.1em;\\n    background-color: black;\\n}\\n\\n.fp-manage-buttons {\\n    flex: 1 0 0;\\n    border-radius: 0;\\n}\\n*/\\n\\n.fp-long-name {\\n    margin-left: 0.5em;\\n}\\n\\n#print-section {\\n    display: none;\\n}\\n\\n.help-highlight {\\n    background-color: var(--theme-highlight);\\n}\\n\\nbody{counter-reset: section}\\nh2{counter-reset: sub-section}\\nh3{counter-reset: composite}\\nh4{counter-reset: detail}\\n\\nh2:before{\\n  counter-increment: section;\\n  content: counter(section) \\\". \\\";\\n}\\nh3:before{\\n  counter-increment: sub-section;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\". \\\";\\n}\\nh4:before{\\n  counter-increment: composite;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\". \\\";\\n}\\nh5:before{\\n  counter-increment: detail;\\n  content: counter(section) \\\".\\\" counter(sub-section) \\\".\\\" counter(composite) \\\".\\\" counter(detail) \\\". \\\";\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".neuron-marker-popup {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.neuron-marker-popup-title {\\n    flex: auto;\\n    justify-content: center;\\n    display: flex;\\n\\n    font-weight: bold;\\n    text-decoration: underline;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item {\\n    flex: auto;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item:hover {\\n    background-color: #b0b0fd;\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.neuron-marker-popup-icon {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-item-text {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-break {\\n    width: 100%;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/map.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,UAAU;IACV,uBAAuB;IACvB,aAAa;;IAEb,iBAAiB;IACjB,0BAA0B;IAC1B,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,0BAA0B;IAC1B,eAAe;AACnB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,WAAW;AACf\",\"sourcesContent\":[\".neuron-marker-popup {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.neuron-marker-popup-title {\\n    flex: auto;\\n    justify-content: center;\\n    display: flex;\\n\\n    font-weight: bold;\\n    text-decoration: underline;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item {\\n    flex: auto;\\n    padding: 0.5em;\\n}\\n\\n.neuron-marker-popup-item:hover {\\n    background-color: #b0b0fd;\\n    text-decoration: underline;\\n    cursor: pointer;\\n}\\n\\n.neuron-marker-popup-icon {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-item-text {\\n    margin-left: 0.2em;\\n    margin-right: 0.2em;\\n}\\n\\n.neuron-marker-popup-break {\\n    width: 100%;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#fp-mission {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n}\\n\\n#fp-plan-container {\\n    flex: auto;\\n    overflow: scroll;\\n    padding-top: 0.25em;\\n    padding-bottom: 0.25em;\\n    scroll-behavior: smooth;\\n}\\n\\n#fp-plan {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#fp-plan-title {\\n    text-align: center;\\n    font-weight: bold;\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\n}\\n\\n.mission-feature {\\n    display: flex;\\n    flex-direction: column;\\n    background-color: var(--theme-background);\\n    border: 2px solid var(--theme-bg-border);\\n    border-radius: 0.5em;\\n    margin-top: 0.25em;\\n    margin-bottom: 0.25em;\\n    margin-left: 0.5em;\\n    margin-right: 0.5em;\\n    scroll-margin: 0.25em;\\n    padding: 0.5em;\\n    box-shadow: 4px 4px 4px var(--theme-shadow);\\n}\\n\\n.mission-feature-highlight {\\n    background-color: var(--theme-highlight);\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-highlight-remove {\\n    background-color: inherit;\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-hidden {\\n    background: var(--theme-shadow);\\n}\\n\\n.mission-feature-title {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: flex-end;\\n}\\n\\n.mission-feature-title-button-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n}\\n\\n.mission-feature-title-button,\\n.mission-feature-title-button-small {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.1em;\\n    margin-right: 0.1em;\\n}\\n\\n\\n.mission-feature-title-button-small {\\n    display: none;\\n}\\n\\n.mission-feature-title-text {\\n    font-weight: bold;\\n    flex: auto;\\n}\\n.mission-feature-content {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    /* overflow: scroll; */\\n}\\n\\n.mission-feature-content-label, .mission-feature-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.mission-feature-content-value-center {\\n    text-align: center;\\n}\\n\\n.mission-feature-content-subtitle {\\n    font-weight: bold;\\n}\\n\\n.mission-feature-content-value-right {\\n    text-align: right;\\n}\\n\\n.neuron-marker-poi {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-corner {\\n    filter: hue-rotate(145deg);\\n}\\n\\n.neuron-marker-waypoint {\\n    filter: hue-rotate(180deg);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/plan.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,UAAU;IACV,gBAAgB;IAChB,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,2CAA2C;AAC/C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yCAAyC;IACzC,wCAAwC;IACxC,oBAAoB;IACpB,kBAAkB;IAClB,qBAAqB;IACrB,kBAAkB;IAClB,mBAAmB;IACnB,qBAAqB;IACrB,cAAc;IACd,2CAA2C;AAC/C;;AAEA;IACI,wCAAwC;IACxC,4BAA4B;AAChC;;AAEA;IACI,yBAAyB;IACzB,4BAA4B;AAChC;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,yBAAyB;AAC7B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;;AAEA;;IAEI,UAAU;IACV,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;AACvB;;;AAGA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,UAAU;AACd;AACA;IACI,UAAU;IACV,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,0BAA0B;AAC9B\",\"sourcesContent\":[\"#fp-mission {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n}\\n\\n#fp-plan-container {\\n    flex: auto;\\n    overflow: scroll;\\n    padding-top: 0.25em;\\n    padding-bottom: 0.25em;\\n    scroll-behavior: smooth;\\n}\\n\\n#fp-plan {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#fp-plan-title {\\n    text-align: center;\\n    font-weight: bold;\\n    box-shadow: 0px 4px 4px var(--theme-shadow);\\n}\\n\\n.mission-feature {\\n    display: flex;\\n    flex-direction: column;\\n    background-color: var(--theme-background);\\n    border: 2px solid var(--theme-bg-border);\\n    border-radius: 0.5em;\\n    margin-top: 0.25em;\\n    margin-bottom: 0.25em;\\n    margin-left: 0.5em;\\n    margin-right: 0.5em;\\n    scroll-margin: 0.25em;\\n    padding: 0.5em;\\n    box-shadow: 4px 4px 4px var(--theme-shadow);\\n}\\n\\n.mission-feature-highlight {\\n    background-color: var(--theme-highlight);\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-highlight-remove {\\n    background-color: inherit;\\n    transition: 250ms linear all;\\n}\\n\\n.mission-feature-hidden {\\n    background: var(--theme-shadow);\\n}\\n\\n.mission-feature-title {\\n    flex: auto;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: flex-end;\\n}\\n\\n.mission-feature-title-button-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n}\\n\\n.mission-feature-title-button,\\n.mission-feature-title-button-small {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.1em;\\n    margin-right: 0.1em;\\n}\\n\\n\\n.mission-feature-title-button-small {\\n    display: none;\\n}\\n\\n.mission-feature-title-text {\\n    font-weight: bold;\\n    flex: auto;\\n}\\n.mission-feature-content {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    /* overflow: scroll; */\\n}\\n\\n.mission-feature-content-label, .mission-feature-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.mission-feature-content-value-center {\\n    text-align: center;\\n}\\n\\n.mission-feature-content-subtitle {\\n    font-weight: bold;\\n}\\n\\n.mission-feature-content-value-right {\\n    text-align: right;\\n}\\n\\n.neuron-marker-poi {\\n    filter: hue-rotate(0deg);\\n}\\n\\n.neuron-marker-corner {\\n    filter: hue-rotate(145deg);\\n}\\n\\n.neuron-marker-waypoint {\\n    filter: hue-rotate(180deg);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n/* Prefer portrait mode for very small screen sizes */\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\n    #fp-main {\\n        flex-direction: column;\\n    }\\n\\n    #fp-map {\\n        max-height: 50%;\\n    }\\n\\n    #fp-summary {\\n        height: 50%;\\n        width: 100%;\\n        border-left: 0px;\\n        border-top: 2px solid black;\\n    }\\n}\\n\\n@media only screen and (max-width: 820px) {\\n    .fp-long-name {\\n        display: none;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\\n@media only screen and ((orientation: portrait) or (max-height: 620px)) and (max-width: 800px) {\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n\\n    #fp-summary > * {\\n        font-size: x-small;\\n    }\\n\\n    .mission-feature-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .fp-stats-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .mission-feature-title-button {\\n        display: none;\\n    }\\n\\n    .mission-feature-title-button-small {\\n        display: block;\\n    }\\n}\\n\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\n    #fp-summary {\\n        height: 100%;\\n        width: 100%;\\n    }\\n}\\n\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\n    #fp-map {\\n        max-height: 100%;\\n    }\\n\\n    #fp-summary {\\n        display: none;\\n    }\\n}\\n\\n@media print {\\n    @page {\\n        size: A4;\\n        margin: 10mm;\\n    }\\n\\n    /* body > * {\\n        display: none;\\n    } */\\n    html {\\n        /* height: auto; */\\n        /*\\n        Manually set our height and width\\n        to make sure that we can scale the map\\n        properly for display later.\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\n        */\\n        width: 190mm;   /* 210 */\\n        height: 276mm;   /* 297 */\\n    }\\n\\n    body {\\n        height: auto;\\n        width: auto;\\n    }\\n\\n    #app {\\n        height: auto;\\n        width: auto;\\n        display: block;\\n        overflow-x: auto;\\n    }\\n\\n    #fp-main {\\n        overflow: initial;\\n    }\\n    #fp-manage {\\n        display: none;\\n    }\\n    #fp-summary {\\n        display: none;\\n    }\\n    #fp-draw {\\n        display: none;\\n    }\\n    #fp-map {\\n        width: calc(190mm);\\n        height: calc(277mm/2);\\n    }\\n    #fp-map-interactive {\\n        display: block;\\n    }\\n    #fp-map-help {\\n        display: none;\\n    }\\n    #print-section {\\n        display: block;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/responsive.css\"],\"names\":[],\"mappings\":\";AACA,qDAAqD;AACrD;IACI;QACI,sBAAsB;IAC1B;;IAEA;QACI,eAAe;IACnB;;IAEA;QACI,WAAW;QACX,WAAW;QACX,gBAAgB;QAChB,2BAA2B;IAC/B;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,aAAa;IACjB;;IAEA;QACI,cAAc;IAClB;AACJ;;AAEA;IACI;QACI,YAAY;QACZ,WAAW;IACf;AACJ;;AAEA;IACI;QACI,gBAAgB;IACpB;;IAEA;QACI,aAAa;IACjB;AACJ;;AAEA;IACI;QACI,QAAQ;QACR,YAAY;IAChB;;IAEA;;OAEG;IACH;QACI,kBAAkB;QAClB;;;;;SAKC;QACD,YAAY,IAAI,QAAQ;QACxB,aAAa,IAAI,QAAQ;IAC7B;;IAEA;QACI,YAAY;QACZ,WAAW;IACf;;IAEA;QACI,YAAY;QACZ,WAAW;QACX,cAAc;QACd,gBAAgB;IACpB;;IAEA;QACI,iBAAiB;IACrB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,aAAa;IACjB;IACA;QACI,kBAAkB;QAClB,qBAAqB;IACzB;IACA;QACI,cAAc;IAClB;IACA;QACI,aAAa;IACjB;IACA;QACI,cAAc;IAClB;;IAEA;QACI,aAAa;IACjB;AACJ\",\"sourcesContent\":[\"\\n/* Prefer portrait mode for very small screen sizes */\\n@media only screen and ((orientation: portrait) or (max-width: 620px)) {\\n    #fp-main {\\n        flex-direction: column;\\n    }\\n\\n    #fp-map {\\n        max-height: 50%;\\n    }\\n\\n    #fp-summary {\\n        height: 50%;\\n        width: 100%;\\n        border-left: 0px;\\n        border-top: 2px solid black;\\n    }\\n}\\n\\n@media only screen and (max-width: 820px) {\\n    .fp-long-name {\\n        display: none;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\\n@media only screen and ((orientation: portrait) or (max-height: 620px)) and (max-width: 800px) {\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n\\n    #fp-summary > * {\\n        font-size: x-small;\\n    }\\n\\n    .mission-feature-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .fp-stats-content-value {\\n        font-size: x-small;\\n    }\\n\\n    .mission-feature-title-button {\\n        display: none;\\n    }\\n\\n    .mission-feature-title-button-small {\\n        display: block;\\n    }\\n}\\n\\n@media only screen and (orientation: portrait) and (max-height: 400px) {\\n    #fp-summary {\\n        height: 100%;\\n        width: 100%;\\n    }\\n}\\n\\n@media only screen and (orientation: landscape) and (max-height: 400px) and (max-width: 620px) {\\n    #fp-map {\\n        max-height: 100%;\\n    }\\n\\n    #fp-summary {\\n        display: none;\\n    }\\n}\\n\\n@media print {\\n    @page {\\n        size: A4;\\n        margin: 10mm;\\n    }\\n\\n    /* body > * {\\n        display: none;\\n    } */\\n    html {\\n        /* height: auto; */\\n        /*\\n        Manually set our height and width\\n        to make sure that we can scale the map\\n        properly for display later.\\n        Also account for page margin and a slight inset to make sure there's no unneeded overflow.\\n        */\\n        width: 190mm;   /* 210 */\\n        height: 276mm;   /* 297 */\\n    }\\n\\n    body {\\n        height: auto;\\n        width: auto;\\n    }\\n\\n    #app {\\n        height: auto;\\n        width: auto;\\n        display: block;\\n        overflow-x: auto;\\n    }\\n\\n    #fp-main {\\n        overflow: initial;\\n    }\\n    #fp-manage {\\n        display: none;\\n    }\\n    #fp-summary {\\n        display: none;\\n    }\\n    #fp-draw {\\n        display: none;\\n    }\\n    #fp-map {\\n        width: calc(190mm);\\n        height: calc(277mm/2);\\n    }\\n    #fp-map-interactive {\\n        display: block;\\n    }\\n    #fp-map-help {\\n        display: none;\\n    }\\n    #print-section {\\n        display: block;\\n    }\\n\\n    .leaflet-control-attribution {\\n        display: none;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#fp-stats-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0.5em;\\n    border-bottom: 2px solid black;\\n}\\n\\n#fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-stats-title {\\n    text-align: center;\\n    font-weight: bold;\\n    background-color: black;\\n    color: white;\\n    display: flex;\\n    padding: 0.2em;\\n}\\n\\n.fp-stats-title-button {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.5em;\\n}\\n\\n.fp-stats-title-label {\\n    flex: auto;\\n}\\n\\n#fp-stats-options, #fp-stats-results {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    padding: 0.5em;\\n    overflow: scroll;\\n}\\n\\n.fp-stats-options-label, .fp-stats-options-value,\\n.fp-stats-content-label, .fp-stats-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\n    text-align: center;\\n}\\n\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\n    text-align: right;\\n}\\n\\n/* .fp-stats-option-label {\\n    flex: auto;\\n}\\n\\n.fp-stats-option-value {\\n    flex: auto;\\n    max-width: 5em;\\n} */\\n\\n.fp-stats-option-content-subtitle {\\n    font-weight: bold;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/css/stats_options.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,cAAc;IACd,8BAA8B;AAClC;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,UAAU;IACV,aAAa;IACb,4BAA4B;IAC5B,8BAA8B;IAC9B,cAAc;IACd,gBAAgB;AACpB;;AAEA;;IAEI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;;;;;;GAOG;;AAEH;IACI,iBAAiB;AACrB\",\"sourcesContent\":[\"#fp-stats-container {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n    padding: 0.5em;\\n    border-bottom: 2px solid black;\\n}\\n\\n#fp-stats {\\n    flex: auto;\\n    flex-grow: 0;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.fp-stats-title {\\n    text-align: center;\\n    font-weight: bold;\\n    background-color: black;\\n    color: white;\\n    display: flex;\\n    padding: 0.2em;\\n}\\n\\n.fp-stats-title-button {\\n    flex: auto;\\n    flex-grow: 0;\\n    margin-left: 0.5em;\\n}\\n\\n.fp-stats-title-label {\\n    flex: auto;\\n}\\n\\n#fp-stats-options, #fp-stats-results {\\n    flex: auto;\\n    display: grid;\\n    /* flex-direction: column; */\\n    grid-template-columns: 50% 50%;\\n    padding: 0.5em;\\n    overflow: scroll;\\n}\\n\\n.fp-stats-options-label, .fp-stats-options-value,\\n.fp-stats-content-label, .fp-stats-content-value {\\n    display: block;\\n    margin-top: 0.2em;\\n}\\n\\n.fp-stats-options-value-center, .fp-stats-content-value-center {\\n    text-align: center;\\n}\\n\\n.fp-stats-options-value-right, .fp-stats-content-value-right {\\n    text-align: right;\\n}\\n\\n/* .fp-stats-option-label {\\n    flex: auto;\\n}\\n\\n.fp-stats-option-value {\\n    flex: auto;\\n    max-width: 5em;\\n} */\\n\\n.fp-stats-option-content-subtitle {\\n    font-weight: bold;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../css-loader/dist/cjs.js!./leaflet.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n// import '@fortawesome/fontawesome-free/js/fontawesome'\n// import '@fortawesome/fontawesome-free/js/solid'\n\nimport { icon, dom, library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowDown, faArrowLeft, faArrowRight, faArrowUp, faBars, faClose, faDrawPolygon, faEye, faEyeSlash, faFile, faFileExport, faFileImport, faFolderOpen, faLocationCrosshairs, faLocationDot, faMinimize, faMinus, faPlus, faQuestionCircle, faSave, faTrash, faUpload } from '@fortawesome/free-solid-svg-icons'\n\n// const faPlusIcon = icon(faFolderOpen)\n\n// // Get the first element out of the HTMLCollection\n// document.appendChild(faPlusIcon.node[0])\n\nexport enum NeuronIcons {\n    LOAD_PLAN,\n    SAVE_PLAN,\n    CLEAR_PLAN,\n    UPLOAD_PLAN,\n    CREATE_BRIEF,\n    PLAN_LIST,\n    HELP,\n    MINIMIZE,\n    EXPAND,\n    ARROW_UP,\n    ARROW_DOWN,\n    ARROW_LEFT,\n    ARROW_RIGHT,\n    DELETE,\n    IDENTIFY,\n    REVEAL,\n    HIDE,\n    FIT_ZOOM,\n    POINT,\n    POLYGON,\n    IMPORT_FILE,\n    EXPORT_FILE,\n}\n\nfunction _neuron_get_icon_fa(neuron_icon:NeuronIcons) {\n    let i = null;\n\n    switch(neuron_icon) {\n        case NeuronIcons.LOAD_PLAN: {\n            i = faFolderOpen;\n            break\n        }\n        case NeuronIcons.SAVE_PLAN: {\n            i = faSave;\n            break;\n        }\n        case NeuronIcons.CLEAR_PLAN: {\n            i = faTrash;\n            break;\n        }\n        case NeuronIcons.UPLOAD_PLAN: {\n            i = faUpload;\n            break;\n        }\n        case NeuronIcons.CREATE_BRIEF: {\n            i = faFile;\n            break;\n        }\n        case NeuronIcons.PLAN_LIST: {\n            i = faBars;\n            break;\n        }\n        case NeuronIcons.HELP: {\n            i = faQuestionCircle;\n            break;\n        }\n        case NeuronIcons.ARROW_UP: {\n            i = faArrowUp;\n            break;\n        }\n        case NeuronIcons.ARROW_DOWN: {\n            i = faArrowDown;\n            break;\n        }\n        case NeuronIcons.ARROW_LEFT: {\n            i = faArrowLeft;\n            break;\n        }\n        case NeuronIcons.ARROW_RIGHT: {\n            i = faArrowRight;\n            break;\n        }\n        case NeuronIcons.DELETE: {\n            i = faClose;\n            break;\n        }\n        case NeuronIcons.IDENTIFY: {\n            i = faLocationCrosshairs;\n            break;\n        }\n        case NeuronIcons.REVEAL: {\n            i = faEye;\n            break;\n        }\n        case NeuronIcons.HIDE: {\n            i = faEyeSlash;\n            break;\n        }\n        case NeuronIcons.MINIMIZE: {\n            i = faMinus;\n            break;\n        }\n        case NeuronIcons.EXPAND: {\n            i = faPlus;\n            break;\n        }\n        case NeuronIcons.FIT_ZOOM: {\n            i = faMinimize;\n            break;\n        }\n        case NeuronIcons.POINT: {\n            i = faLocationDot;\n            break;\n        }\n        case NeuronIcons.POLYGON: {\n            i = faDrawPolygon;\n            break;\n        }\n        case NeuronIcons.IMPORT_FILE: {\n            i = faFileImport;\n            break;\n        }\n        case NeuronIcons.EXPORT_FILE: {\n            i = faFileExport;\n            break;\n        }\n        default: {\n            break;\n        }\n    }\n\n    return i;\n}\n\nexport function neuron_load_dom_icons() {\n    //Handle the DOM conversions for hard-coded icons\n    for(const icon_name in NeuronIcons) {\n        const icon_id = Number(icon_name);\n        if (!isNaN(icon_id)) {\n            //XXX: Slight abuse of the enum, but it gets results!\n            const i = _neuron_get_icon_fa(icon_id);\n            if(i)\n                library.add(i);\n        }\n    }\n\n    dom.i2svg();\n}\n\nexport function neuron_get_icon(neuron_icon:NeuronIcons, is_small:boolean = false) {\n    let i = _neuron_get_icon_fa(neuron_icon);\n    let opts = {\n        transform: {\n          size: is_small ? 10 : 16,     // small is fa-2xs\n        }\n    }\n    return i ? icon(i, opts).node : new HTMLCollection();\n}\n","import * as L from \"leaflet\";\nimport 'leaflet/dist/leaflet.css';\nimport { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\n// @ts-ignore\n//import * as ContextMenu from \"leaflet-contextmenu\";\n// import 'leaflet-contextmenu/dist/leaflet.contextmenu.css';\\\n// @ts-ignore\n// import * as FileLoader from 'leaflet-filelayer'\n\n// delete L.Icon.Default.prototype._getIconUrl;\n//XXX: Fix the image paths loaded by leaflet\n\nconst default_icon_options = {\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n}\nL.Icon.Default.mergeOptions(default_icon_options);\n\nexport function get_neuron_map_marker(class_name:string) {\n    return new L.Icon({\n        ...L.Icon.Default.prototype.options,\n        className: class_name\n    });\n}\n\n//require('leaflet/dist/images/layers.png')\n//require('leaflet/dist/images/layers-2x.png')\n\n//const cm = ContextMenu;\n// const fl = FileLoader;\n\nexport { L };\n\nexport class LeafletContextMenuItem {\n    text:string = \"\";\n    icon:NeuronIcons;\n    callback: (contextTarget:L.Marker) => null;\n\n    constructor(text:string = \"\", icon:NeuronIcons = null, callback:(contextTarget:L.Marker) => null = null) {\n        this.text = text;\n        this.icon = icon;\n\n        if(callback)\n            this.callback = callback;\n    }\n}\n\nexport function create_popup_context_dom(popup_title:string = \"Marker\", context_items:LeafletContextMenuItem[] = [], marker_context:L.Marker = null) {\n    let dom = document.createElement(\"div\");\n    dom.className = 'neuron-marker-popup';\n\n    let t = document.createElement(\"div\");\n    t.className = 'neuron-marker-popup-title';\n    t.appendChild(document.createTextNode(popup_title));\n    dom.appendChild(t);\n\n    for(const i of context_items) {\n        if(i) {\n            let d = document.createElement(\"div\");\n            d.className = 'neuron-marker-popup-item';\n\n            if(i.icon) {\n                for(let ic of neuron_get_icon(i.icon)) {\n                    ic.classList.add('neuron-marker-popup-icon');\n                    d.appendChild(ic);\n                }\n                // let o = document.createElement('i');\n                // o.className = `fas ${i.icon} neuron-marker-popup-icon`;\n                // o.appendChild(document.createTextNode(i.text));\n                // d.appendChild(o);\n            }\n\n            let s = document.createElement('span');\n            s.className = 'neuron-marker-popup-item-text';\n            s.appendChild(document.createTextNode(i.text));\n            d.appendChild(s);\n\n            if(i.callback) {\n                d.onclick = function() {\n                    return i.callback(marker_context);\n                };\n            }\n\n            dom.appendChild(d);\n        } else {\n            let d = document.createElement(\"hr\");\n            d.className = 'neuron-marker-popup-break';\n            dom.appendChild(d);\n        }\n    }\n\n    return dom;\n}\n","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\n\nexport function zero_pad(num:number, places:number) {\n    return String(num).padStart(places, '0');\n}\n\nlet lastId = 0;\nexport function NeuronUID(prefix='nuid-') {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\n\nexport function flight_distance_from_coords(coords:NeuronInterfacePoint[]) {\n    //XXX:  Total distance calculated with the haversine method\n    //      This is a shortcut and is probably ok for small distances\n    //      but we should definitely look at a proper earth model to\n    //      do it properly in the future\n\n    let total_distance = 0.0;\n    for (var i = 0; i < coords.length - 1; i++) {\n        const p1 = coords[i];\n        const p2 = coords[i+1];\n        const u1 = p1.to_UTM();\n        const u2 = p2.to_UTM(u1.zone);\n        const d = u1.GetDistance2D(u2);\n        //Do some sneaky stuff to support altitude as well\n        const alt_d = Math.pow(Math.abs(p1.altitude - p2.altitude), 2);\n        total_distance += Math.sqrt(Math.pow(d,2) + alt_d);\n    }\n\n    return total_distance;\n}\n\nexport function flight_time_from_duration(duration:number) {\n    const t_h = Math.floor(duration / 3600);\n    const t_m = Math.floor(duration % 3600 / 60);\n    const t_s = Math.floor(duration % 3600 % 60);\n\n    return `${zero_pad(t_h,2)}:${zero_pad(t_m,2)}:${zero_pad(t_s,2)}`;\n}\n\nexport function mm_to_px(mm:number) {\n    const default_dpi = 96;\n    return (mm / 25.4) * window.devicePixelRatio * default_dpi;\n}","import proj4 from 'proj4';\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { zero_pad } from \"./neuron_tools_common\";\n\nfunction EPSG_code_from_utm_zone(zone:number, is_south:boolean) {\n    const zf = Math.floor(zone);\n    if (zf <= 0 || zf > 60)\n        throw new Error(`Zone out of range (${zone}|${zf})`);\n\n    return `EPSG:326${zero_pad(zf, 2)}${is_south ? 'S' : 'N'}`;\n}\n\n//Predefine all of our zones\n// https://epsg.io/32600\nfor(let i = 1; i <= 60; i++) {\n    let projection = `+proj=utm +zone=${i}`;\n    proj4.defs(EPSG_code_from_utm_zone(i, false), projection);\n    proj4.defs(EPSG_code_from_utm_zone(i, true), projection + \" +south\");\n}\n\nfunction get_UTM_is_south(latitude_or_zone:number) {\n    return (latitude_or_zone < 0);\n}\n\nfunction get_UTM_zone(latitude:number, longitude:number) {\n    let zone = Math.floor((longitude - -186.0) / 6.0);\n    if (get_UTM_is_south(latitude))\n        zone *= -1;\n\n    return zone;\n}\n\nexport class UTMPos {\n    x:number;\n    y:number;\n    zone:number;\n    tag:string;\n\n    constructor(x:number=0.0, y:number=0.0, zone:number=0.0, tag:string=\"\") {\n        this.x = x;\n        this.y = y;\n        this.zone = zone;\n        this.tag = tag;\n    }\n\n    equals(other:UTMPos, match_tag:boolean = false) {\n        return (this.x == other.x) && (this.y == other.y) && (this.zone == other.zone) && (!match_tag || (this.tag == other.tag));\n    }\n\n    copy(tag:string=null) {\n        return new UTMPos(this.x, this.y, this.zone, tag ? tag : this.tag);\n    }\n\n    relative_point_from_dist_bearing(bearing:number, distance:number, tag:string = \"\") {\n        let degN = 90 - bearing;\n        if (degN < 0)\n            degN += 360;\n\n        const deg2rad = Math.PI/180.0;\n\n        return new UTMPos(\n            this.x + distance * Math.cos(degN * deg2rad),\n            this.y + distance * Math.sin(degN * deg2rad),\n            this.zone,\n            tag\n        );\n    }\n\n    GetDistance2D(b:UTMPos) {\n        return Math.sqrt(Math.pow(Math.abs(this.x - b.x), 2) + Math.pow(Math.abs(this.y - b.y), 2));\n    }\n\n    to_NeuronInterfacePoint() {\n        let p = proj4(\n            EPSG_code_from_utm_zone(\n                Math.abs(this.zone),\n                get_UTM_is_south(this.zone)),\n            NeuronInterfacePoint.projection_code(),\n            [this.x, this.y]\n        );\n\n        //p given as [lng, lat]\n        return new NeuronInterfacePoint(p[1], p[0], 0.0, 0.0, this.tag);\n    }\n\n    /**\n     * @param  {NeuronInterfacePoint} point Point to create the transformation from\n     * @param  {number=null} zone Zone override to use during the projection\n     * @param  {string=\"\"} tag Additional tag information for this point\n     */\n    static from_NeuronInterfacePoint(point:NeuronInterfacePoint, zone:number = null) {\n        if (!zone)\n            zone = get_UTM_zone(point.latitude, point.longitude);\n\n        let p = proj4(\n            NeuronInterfacePoint.projection_code(),\n            EPSG_code_from_utm_zone(\n                Math.abs(zone),\n                get_UTM_is_south(zone)),\n            [point.longitude, point.latitude]\n        );\n\n        //p given as [x, y]\n        return new UTMPos(p[0], p[1], zone, point.tag);\n    }\n}\n\nexport class UTMLine {\n    // start of line\n    p1:UTMPos;\n    // end of line\n    p2:UTMPos;\n    // used as a base for grid along line (initial setout)\n    base_pnt:UTMPos;\n\n    constructor(p1:UTMPos, p2:UTMPos, base_pnt:UTMPos) {\n        this.p1 = p1;\n        this.p2 = p2;\n        this.base_pnt = base_pnt;\n    }\n}\n","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { UTMPos, UTMLine } from \"./interface_proj4\";\n\nexport enum StartPosition {\n    // Home = 0,\n    BottomLeft = 1,\n    TopLeft = 2,\n    BottomRight = 3,\n    TopRight = 4,\n    // Point = 5\n}\n\nexport class Rect\n{\n    Top:number;\n    Bottom:number;\n    Left:number;\n    Right:number;\n\n    Width() {\n        return this.Right - this.Left;\n    }\n\n    Height() {\n        return this.Bottom - this.Top;\n    }\n\n\n    MidWidth() {\n        return ((this.Right - this.Left) / 2) + this.Left;\n    }\n\n    MidHeight() {\n        return ((this.Top - this.Bottom) / 2) + this.Bottom;\n    }\n\n    constructor(Left:number=0.0, Top:number=0.0, Width:number=0.0, Height:number=0.0)\n    {\n        this.Left = Left;\n        this.Top = Top;\n        this.Right = Left + Width;\n        this.Bottom = Top + Height;\n    }\n\n    diag_distance()\n    {\n        // Pythagoras\n        return Math.sqrt(Math.pow(this.Width(), 2) + Math.pow(this.Height(), 2));\n    }\n\n}\n\nfunction remove_item_from_array(array:any[], item:any) {\n    const index = array.indexOf(item);\n    if (index > -1)\n        array.splice(index, 1);\n}\n\n// Add an angle while normalizing output in the range 0...360\nfunction AddAngle(angle:number, degrees:number) {\n    angle += degrees;\n    angle = angle % 360;\n\n    if (angle < 0)\n        angle += 360;\n\n    return angle;\n}\n\nfunction FindLineIntersection(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n    //  AB & CD are parallel\n    if (denom == 0)\n        return new UTMPos();\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n    let r = numerator / denom;\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n    let s = numerator2 / denom;\n    if ((r < 0 || r > 1) || (s < 0 || s > 1))\n        return new UTMPos();\n    // Find intersection point\n    return new UTMPos(\n        start1.x + (r * (end1.x - start1.x)),\n        start1.y + (r * (end1.y - start1.y)),\n        start1.zone\n    );\n}\n\nfunction getPolyMinMax(utmpos:UTMPos[]) {\n    if (utmpos.length == 0)\n        return new Rect();\n\n    let min_x, min_y, max_x, max_y = 0.0;\n\n    min_x = max_x = utmpos[0].x;\n    min_y = max_y = utmpos[0].y;\n\n    for(const pnt of utmpos) {\n        min_x = Math.min(min_x, pnt.x);\n        max_x = Math.max(max_x, pnt.x);\n\n        min_y = Math.min(min_y, pnt.y);\n        max_y = Math.max(max_y, pnt.y);\n    }\n\n    return new Rect(min_x, max_y, max_x - min_x, min_y - max_y);\n}\n\nfunction PointInPolygon(p:UTMPos, poly:UTMPos[]) {\n    let p1 = new UTMPos()\n    let p2 = new UTMPos();\n    let inside = false;\n\n    if (poly.length < 3)\n    {\n        return inside;\n    }\n    let oldPoint = poly[poly.length - 1].copy();\n\n    for (let i = 0; i < poly.length; i++)\n    {\n\n        let newPoint = poly[i].copy();\n\n        if (newPoint.y > oldPoint.y)\n        {\n            p1 = oldPoint;\n            p2 = newPoint;\n        }\n        else\n        {\n            p1 = newPoint;\n            p2 = oldPoint;\n        }\n\n        if ((newPoint.y < p.y) == (p.y <= oldPoint.y)\n            && (p.x - p1.x) * (p2.y - p1.y)\n            < (p2.x - p1.x) * (p.y - p1.y))\n        {\n            inside = !inside;\n        }\n        oldPoint = newPoint;\n    }\n    return inside;\n}\n\nfunction FindLineIntersectionExtension(start1:UTMPos, end1:UTMPos, start2:UTMPos, end2:UTMPos) {\n    let denom = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n    //  AB & CD are parallel\n    if (denom == 0)\n        return new UTMPos();\n    let numerator = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n    let r = numerator / denom;\n    let numerator2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n    let s = numerator2 / denom;\n    if ((r < 0 || r > 1) || (s < 0 || s > 1)) {\n        // line intersection is outside our lines.\n    }\n\n    // Find intersection point\n    let result = new UTMPos(\n        start1.x + (r * (end1.x - start1.x)),\n        start1.y + (r * (end1.y - start1.y)),\n        start1.zone\n    );\n\n    return result;\n}\n\nfunction findClosestPoint(start:UTMPos, list:UTMPos[])\n{\n    let answer = new UTMPos();\n    let current_best = Number.MAX_VALUE;\n\n    for(const pnt of list) {\n        const dist1 = start.GetDistance2D(pnt);\n\n        if (dist1 < current_best) {\n            answer = pnt;\n            current_best = dist1;\n        }\n    }\n\n    return answer;\n}\n\nfunction findClosestLine(start:UTMPos, list:UTMLine[], min_distance:number, angle:number):UTMLine {\n    if (min_distance != 0) {\n        // By now, just add 5.000 km to our lines so they are long enough to allow intersection\n        let METERS_TO_EXTEND = 5000;\n        let perpendicularOrientation = AddAngle(angle, 90);\n\n        // Calculation of a perpendicular line to the grid lines containing the \"start\" point\n        /*\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  -------------------------------------start---------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        *  --------------------------------------|------------------------------------------\n        */\n        let start_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, -METERS_TO_EXTEND);\n        let stop_perpendicular_line = start.relative_point_from_dist_bearing(perpendicularOrientation, METERS_TO_EXTEND);\n\n        // Store one intersection point per grid line\n        let intersectedPoints:Map<UTMPos,UTMLine> = new Map();\n        // lets order distances from every intersected point per line with the \"start\" point\n        let ordered_min_to_max:Map<number,UTMPos> = new Map();\n\n        for(const line of list) {\n            // Calculate intersection point\n            let p = FindLineIntersectionExtension(line.p1, line.p2, start_perpendicular_line, stop_perpendicular_line);\n\n            // Store it\n            intersectedPoints.set(p, line);\n\n            // Calculate distances between intersect point and \"start\" (i.e. line and start)\n            let distance_p = start.GetDistance2D(p);\n\n            if (!ordered_min_to_max.has(distance_p))\n                ordered_min_to_max.set(distance_p, p);\n        }\n\n        // Acquire keys and sort them.\n        let ordered_keys = Array.from(ordered_min_to_max.keys());\n        ordered_keys.sort(function(a, b) {\n            return a - b;\n        });\n\n        // Lets select a line that is the closest to \"start\" point but \"min_distance\" away at least.\n        // If we have only one line, return that line whatever the minDistance says\n        let key = Number.MAX_VALUE;\n        let i = 0;\n        while (key == Number.MAX_VALUE && i < ordered_keys.length) {\n            if (ordered_keys[i] >= min_distance)\n                key = ordered_keys[i];\n            i++;\n        }\n\n        // If no line is selected (because all of them are closer than minDistance, then get the farthest one\n        if (key == Number.MAX_VALUE)\n            key = ordered_keys[ordered_keys.length - 1];\n\n        let filtered_map = Array.from(intersectedPoints.entries()).filter(a => a[0].GetDistance2D(start) >= key);\n        let filtered_lines = filtered_map.map(a => a[1]);\n\n        return findClosestLine(start, filtered_lines, 0, angle);\n    } else {\n        let answer = list[0];\n        let shortest = Number.MAX_VALUE;\n\n        for(const line of list) {\n            let ans1 = start.GetDistance2D(line.p1);\n            let ans2 = start.GetDistance2D(line.p2);\n            let shorter_pnt = ans1 < ans2 ? line.p1 : line.p2;\n\n            if (shortest > start.GetDistance2D(shorter_pnt)) {\n                answer = line;\n                shortest = start.GetDistance2D(shorter_pnt);\n            }\n        }\n\n        return answer;\n    }\n}\n\nexport enum GridPointTags {\n    START = \"S\",\n    END = \"E\",\n    MIDDLE = \"M\",\n    MIDDLE_START= \"MS\",\n    MIDDLE_END = \"ME\",\n}\n\nconst min_distance = 0.5;\n/**\n * @param  {NeuronInterfacePoint[]} polygon List of points that define the survey polygon\n * @param  {number} altitude altitude to map to the final points\n * @param  {number} distance distance between lines\n * @param  {number} spacing Additional spacing between polygon and turns?  TODO: Figure out what this is meant to do?\n * @param  {number} angle angle of the survey pattern to follow (lane angle)\n * @param  {number} overshoot1 overshoot distance at the first \"end\" of the survey pattern\n * @param  {number} overshoot2 overshoot distance at the second \"end\" of the survey pattern\n * @param  {StartPosition} startpos selector for where the starting position should be\n * @param  {number} minLaneSeparation minimum lane separation/skip parameter (causes the lanes to alternate)\n * @param  {number} leadin additional lead-in to assist with mission planning for planes (allows more time for the plane to complete the turn before entering the survey stretch)\n */\nexport function CreateGrid(\n    polygon:NeuronInterfacePoint[],\n    altitude:number,\n    distance:number,\n    spacing:number,\n    angle:number,\n    overshoot1:number,\n    overshoot2:number,\n    startpos:StartPosition,\n    // shutter:boolean,\n    minLaneSeparation:number,\n    leadin:number,\n    // HomeLocation:NeuronInterfacePoint\n    ) {\n\n    if (spacing < 0.1 && spacing != 0)\n        spacing = 0.1;\n\n    if (distance < min_distance)\n        distance = min_distance;\n\n    if (polygon.length == 0)\n        return [];\n\n\n    // Make a non round number in case of corner cases\n    if (minLaneSeparation != 0)\n        minLaneSeparation += 0.5;\n\n    // Lane Separation in meters\n    const minLaneSeparationINMeters = minLaneSeparation * distance;\n\n    const utm_zone = polygon[0].to_UTM().zone;\n    // utm position list\n    let utm_positions = polygon.map(x => x.to_UTM(utm_zone));\n    // utm zone distance calcs will be done in\n    // let utm_positions = utmpos.ToList(NeuronInterfacePoint.ToUTM(utm_zone, polygon), utm_zone);\n    // let utm_positions = polygon;\n\n    // close the loop if its not already\n    if (!utm_positions[0].equals(utm_positions[utm_positions.length - 1]))\n        utm_positions.push(utm_positions[0]); // make a full loop\n\n    // get min/max of coverage area\n    let area = getPolyMinMax(utm_positions);\n\n    // get initial grid\n\n    // used to determine the size of the outer grid area\n    let diag_dist = area.diag_distance();\n\n    // somewhere to store out generated lines\n    let grid:UTMLine[] = [];\n    // number of lines we need\n    let lines = 0;\n\n    // get start point middle\n    let x = area.MidWidth();\n    let y = area.MidHeight();\n    let start_p = new UTMPos(x,y,utm_zone);\n\n    // //UTMLine(new utmpos(x, y, utm_zone), \"Base\");\n\n    // // get left extent\n    // let xb1 = x;\n    // let yb1 = y;\n    // // to the left\n    // new_pos(ref xb1, ref yb1, angle - 90, diag_dist / 2 + distance);\n    // // backwards\n    // new_pos(ref xb1, ref yb1, angle + 180, diag_dist / 2 + distance);\n\n    // utmpos left = new utmpos(xb1, yb1, utm_zone);\n    let left = start_p.relative_point_from_dist_bearing(angle - 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\n\n    ////UTMLine(left, \"left\");\n\n    // get right extent\n    // // double xb2 = x;\n    // // double yb2 = y;\n    // // // to the right\n    // // new_pos(ref xb2, ref yb2, angle + 90, diag_dist / 2 + distance);\n    // // // backwards\n    // // new_pos(ref xb2, ref yb2, angle + 180, diag_dist / 2 + distance);\n\n    // // utmpos right = new utmpos(xb2, yb2, utm_zone);\n    // let right = start_p.relative_point_from_dist_bearing(angle + 90, diag_dist / 2 + distance).relative_point_from_dist_bearing(angle + 180, diag_dist / 2 + distance);\n\n    ////UTMLine(right, \"right\");\n\n    // set start point to left hand side\n    x = left.x;\n    y = left.y;\n\n    // draw the outer grid, this is a grid that cover the entire area of the rectangle plus more.\n    while (lines < ((diag_dist + distance * 2) / distance))\n    {\n        // copy the start point to generate the end point\n        let l_start = new UTMPos(x, y, utm_zone);\n        let l_end = l_start.relative_point_from_dist_bearing(angle, diag_dist + distance * 2);\n        // let nx = x;\n        // let ny = y;\n        // new_pos(ref nx, ref ny, angle, diag_dist + distance * 2);\n\n        let line = new UTMLine(l_start, l_end, l_start.copy());\n        // line.p1 = new utmpos(x, y, utm_zone);\n        // line.p2 = new utmpos(nx, ny, utm_zone);\n        // line.base_pnt = new utmpos(x, y, utm_zone);\n        grid.push(line);\n\n        // //UTMLine(line);\n\n        // new_pos(ref x, ref y, angle + 90, distance);\n        let l_next = l_start.relative_point_from_dist_bearing(angle + 90, distance);\n        x = l_next.x;\n        y = l_next.y;\n        lines++;\n    }\n\n    // find intersections with our polygon\n\n    // store lines that dont have any intersections\n    let remove:UTMLine[] = [];\n\n    let grid_no = grid.length;\n\n    // cycle through our grid\n    for (let a = 0; a < grid_no; a++) {\n        let closest_distance = Number.MAX_VALUE;\n        let farthest_distance = Number.MIN_VALUE;\n\n        let closest_point = new UTMPos();\n        let farthest_point = new UTMPos();\n\n        // somewhere to store our intersections\n        let matches:UTMPos[] = [];\n\n        let crosses = 0;\n        for (let b = 1; b < utm_positions.length; b++) {\n            const utm_p1 = utm_positions[b-1];\n            const utm_p2 = utm_positions[b];\n\n            let new_utmpos = FindLineIntersection(utm_p1, utm_p2, grid[a].p1, grid[a].p2);\n            if (!(new_utmpos.equals(new UTMPos()))) {\n                crosses++;\n                matches.push(new_utmpos);\n                if (closest_distance > grid[a].p1.GetDistance2D(new_utmpos))\n                {\n                    closest_point.y = new_utmpos.y;\n                    closest_point.x = new_utmpos.x;\n                    closest_point.zone = new_utmpos.zone;\n                    closest_distance = grid[a].p1.GetDistance2D(new_utmpos);\n                }\n                if (farthest_distance < grid[a].p1.GetDistance2D(new_utmpos))\n                {\n                    farthest_point.y = new_utmpos.y;\n                    farthest_point.x = new_utmpos.x;\n                    farthest_point.zone = new_utmpos.zone;\n                    farthest_distance = grid[a].p1.GetDistance2D(new_utmpos);\n                }\n            }\n        }\n        if (crosses == 0) // outside our polygon\n        {\n            if (!PointInPolygon(grid[a].p1, utm_positions) && !PointInPolygon(grid[a].p2, utm_positions))\n                remove.push(grid[a]);\n        }\n        else if (crosses == 1) // bad - shouldn't happen\n        {\n\n        }\n        else if (crosses == 2) // simple start and finish\n        {\n            let line = grid[a];\n            line.p1 = closest_point;\n            line.p2 = farthest_point;\n            grid[a] = line;\n        }\n        else // multiple intersections\n        {\n            let line = grid[a];\n            remove.push(line);\n\n            while (matches.length > 1)\n            {\n                closest_point = findClosestPoint(closest_point, matches);\n                const p1 = closest_point;\n                remove_item_from_array(matches, closest_point);\n\n                closest_point = findClosestPoint(closest_point, matches);\n                const p2 = closest_point;\n                remove_item_from_array(matches, closest_point);\n\n                let newline = new UTMLine(\n                    p1,\n                    p2,\n                    line.base_pnt.copy()\n                );\n\n                grid.push(newline);\n            }\n        }\n    }\n\n    // let grid_debug = [...grid];\n    // let debug_points = [];\n    // for(const line of grid_debug) {\n    //     debug_points.push(line.p1);\n    //     debug_points.push(line.p2);\n    // }\n\n    // cleanup and keep only lines that pass though our polygon\n    for(const line of remove)\n        remove_item_from_array(grid, line);\n\n    if (grid.length == 0)\n        return [];\n        // return NeuronInterfacePoint.from_UTMs(debug_points);\n\n    // pick start position based on initial point rectangle\n    let start_pos_utm:UTMPos = null;\n\n    switch (startpos)\n    {\n        default:\n        // case StartPosition.Home:\n        //     start_pos_utm = HomeLocation.to_UTM(utm_zone);\n        //     break;\n        case StartPosition.BottomLeft:\n            start_pos_utm = new UTMPos(area.Left, area.Bottom, utm_zone);\n            break;\n        case StartPosition.BottomRight:\n            start_pos_utm = new UTMPos(area.Right, area.Bottom, utm_zone);\n            break;\n        case StartPosition.TopLeft:\n            start_pos_utm = new UTMPos(area.Left, area.Top, utm_zone);\n            break;\n        case StartPosition.TopRight:\n            start_pos_utm = new UTMPos(area.Right, area.Top, utm_zone);\n            break;\n        // case StartPosition.Point:\n        //     start_pos_utm = new UTMPos();\n        //     start_pos_utm.zone = utm_zone;\n        //     break;\n    }\n\n    // find the closes polygon point based from our startpos selection\n    start_pos_utm = findClosestPoint(start_pos_utm, utm_positions);\n\n    // find closest line point to startpos\n    let closest = findClosestLine(start_pos_utm, grid, 0 /*Lane separation does not apply to starting point*/, angle);\n\n    let last_pnt = new UTMPos();\n\n    // get the closes point from the line we picked\n    if (closest.p1.GetDistance2D(start_pos_utm) < closest.p2.GetDistance2D(start_pos_utm))\n    {\n        last_pnt = closest.p1;\n    }\n    else\n    {\n        last_pnt = closest.p2;\n    }\n\n    let ans:UTMPos[] = [];\n    while (grid.length > 0) {\n        // for each line, check which end of the line is the next closest\n        if (closest.p1.GetDistance2D(last_pnt) < closest.p2.GetDistance2D(last_pnt))\n        {\n            let new_start = closest.p1.relative_point_from_dist_bearing(angle, -leadin);\n            new_start.tag = GridPointTags.START;\n            //UTMLine(new_start, \"S\");\n            ans.push(new_start);\n\n            if (leadin < 0) {\n                var p2 = new_start.copy();\n                p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(p2, \"SM\");\n                ans.push(p2);\n            } else if (leadin > 0) {\n                closest.p1.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(closest.p1, \"SM\");\n                ans.push(closest.p1);\n            }\n\n            if (spacing > 0) {\n                for (let d = (spacing - ((closest.base_pnt.GetDistance2D(closest.p1)) % spacing));\n                    d < (closest.p1.GetDistance2D(closest.p2));\n                    d += spacing) {\n                    // new_pos(ref ax, ref ay, angle, d);\n                    let utmpos1 = new UTMPos(closest.p1.x, closest.p1.y, utm_zone, GridPointTags.MIDDLE);\n                    //UTMLine(utmpos1, \"M\");\n                    ans.push(utmpos1);\n                }\n            }\n\n            let new_end = closest.p2.relative_point_from_dist_bearing(angle, overshoot1, GridPointTags.END);\n\n            if (overshoot1 < 0) {\n                var p2 = new_end.copy()\n                p2.tag = GridPointTags.MIDDLE_END;\n                //UTMLine(p2, \"ME\");\n                ans.push(p2);\n            } else if (overshoot1 > 0) {\n                closest.p2.tag = GridPointTags.MIDDLE_END;\n                //UTMLine(closest.p2, \"ME\");\n                ans.push(closest.p2);\n            }\n\n            // new_end.tag = GridPointTags.END;\n            //UTMLine(new_end, \"E\");\n            ans.push(new_end);\n\n            last_pnt = closest.p2;\n\n            remove_item_from_array(grid, closest);\n            if (grid.length == 0)\n                break;\n\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\n        } else {\n            let new_start = closest.p2.relative_point_from_dist_bearing(angle, leadin);\n            new_start.tag = GridPointTags.START;\n            //UTMLine(new_start, \"S\");\n            ans.push(new_start);\n\n            if (leadin < 0) {\n                var p2 = new_start.copy()\n                p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(p2, \"SM\");\n                ans.push(p2);\n            } else if(leadin > 0) {\n                closest.p2.tag = GridPointTags.MIDDLE_START;\n                //UTMLine(closest.p2, \"SM\");\n                ans.push(closest.p2);\n            }\n\n            if (spacing > 0) {\n                for (let d = ((closest.base_pnt.GetDistance2D(closest.p2)) % spacing);\n                    d < (closest.p1.GetDistance2D(closest.p2));\n                    d += spacing) {\n                    // let ax = closest.p2.x;\n                    // let ay = closest.p2.y;\n                    let a = closest.p2.relative_point_from_dist_bearing(angle, -d);\n\n                    // new_pos(ref ax, ref ay, angle, -d);\n                    var utmpos2 = new UTMPos(a.x, a.y, utm_zone, GridPointTags.MIDDLE);\n                    //UTMLine(utmpos2, \"M\");\n                    ans.push(utmpos2);\n                }\n            }\n\n            let new_end = closest.p1.relative_point_from_dist_bearing(angle, -overshoot2, GridPointTags.END);\n            // utmpos new_end = new_pos(closest.p1, angle, -overshoot2);\n\n            if (overshoot2 < 0) {\n                // var p2 = new_end.copy(\"ME\");\n                //UTMLine(p2, \"ME\");\n                ans.push(new_end.copy(GridPointTags.MIDDLE_END));\n            } else if (overshoot2 > 0) {\n                // closest.p1.tag = \"ME\";\n                //UTMLine(closest.p1, \"ME\");\n                ans.push(closest.p1.copy(GridPointTags.MIDDLE_END));\n            }\n\n            // new_end.tag = \"E\";\n            //UTMLine(new_end, \"E\");\n            ans.push(new_end);\n\n            last_pnt = closest.p1;\n\n            // grid.Remove(closest);\n            remove_item_from_array(grid, closest);\n            if (grid.length == 0)\n                break;\n            closest = findClosestLine(new_end, grid, minLaneSeparationINMeters, angle);\n        }\n    }\n\n    const points = NeuronInterfacePoint.from_UTMs(ans);\n\n    // set the altitude on all points\n    for(let p of points)\n        p.altitude = altitude;\n\n    return points;\n}\n","import { L } from \"./interface_leaflet\";\nimport { Rect } from \"./neuron_tools_survey\";\nimport { UTMPos } from \"./interface_proj4\";\n\n// @ts-ignore\n// import * as UTMConverter from \"utm-latlng\";\n\nexport interface NeuronInterfacePointData {\n    latitude: number;\n    longitude: number;\n    altitude:number;\n    heading:number;\n    tag:string;\n}\n\nexport class NeuronInterfacePoint {\n    latitude: number;\n    longitude: number;\n    altitude:number;\n    heading:number;\n    tag:string;\n\n    static _altitude_ratio = 0.3048;\n\n    constructor(latitude:number=0.0, longitude:number=0.0, altitude:number=0.0, heading:number=0.0, tag:string=\"\") {\n        this.latitude = latitude;\n        this.longitude = longitude;\n        this.altitude = altitude;\n        this.heading = heading;\n        this.tag = tag;\n    }\n\n    static projection_code() {\n        return 'WGS84';\n    }\n\n    equals(other:NeuronInterfacePoint) {\n        return this.latitude == other.latitude &&\n               this.longitude == other.longitude &&\n               this.altitude == other.altitude &&\n               this.heading == other.heading;\n    }\n\n    to_leaflet() {\n        return L.latLng([this.latitude, this.longitude]);\n    }\n\n    static from_leaflet(latlng:L.LatLng) {\n        return new NeuronInterfacePoint(latlng.lat, latlng.lng);\n    }\n\n    to_UTM(zone:number = null) {\n        return UTMPos.from_NeuronInterfacePoint(this, zone);\n    }\n\n    static from_UTM(utm:UTMPos) {\n        return utm.to_NeuronInterfacePoint();\n    }\n\n    static from_UTMs(positions:UTMPos[]) {\n        return positions.map(p => p.to_NeuronInterfacePoint());\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronInterfacePointData {\n        let is_valid =\n            Number.isFinite(object.latitude) &&\n            Number.isFinite(object.longitude) &&\n            Number.isFinite(object.altitude) &&\n            ((object.tag !== undefined) || (object.tag !== null)) ;\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronInterfacePointData) {\n        if(!NeuronInterfacePoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronInterfacePoint`);\n\n        return new NeuronInterfacePoint(\n            Number.isNaN(j.latitude) ? 0.0 : j.latitude,\n            Number.isNaN(j.longitude) ? 0.0 : j.longitude,\n            Number.isNaN(j.altitude) ? 0.0 : j.altitude,\n            Number.isNaN(j.heading) ? 0.0 : j.heading,\n            j.tag ? j.tag.toString() : \"\"\n        );\n    }\n\n    to_json() {\n        return <NeuronInterfacePointData>{\n            latitude: this.latitude,\n            longitude: this.longitude,\n            altitude:this.altitude,\n            heading:this.heading,\n            tag:this.tag,\n        }\n    }\n\n    #value_as_DMS(dd:number, is_lng:boolean) {\n        const dir = dd < 0 ? (is_lng ? \"W\" : \"S\") : is_lng ? \"E\" : \"N\";\n        const deg = 0 | (dd < 0 ? (dd = -dd) : dd);\n        const min = 0 | (((dd += 1e-9) % 1) * 60);\n        const sec = (0 | (((dd * 60) % 1) * 6000)) / 100;\n\n        return `${deg.toFixed(0)}° ${min.toFixed(0)}' ${sec.toFixed(2)}\" ${dir}`;\n    }\n\n    toString(use_imperial:boolean = true, use_decimal:boolean = false) {\n        return `[${this.toStringLatitude(use_decimal)}, ${this.toStringLatitude(use_decimal)}, ${this.toStringAltitude(use_imperial)}]`;\n     }\n\n     toStringLatitude(use_decimal:boolean = false) {\n        return use_decimal ? this.latitude.toFixed(8) + '°' : this.#value_as_DMS(this.latitude, false);\n     }\n\n     toStringLongitude(use_decimal:boolean = false) {\n        return use_decimal ? this.longitude.toFixed(8) + '°' : this.#value_as_DMS(this.longitude, true);\n     }\n\n     toStringAltitude(use_imperial:boolean = true) {\n        return use_imperial ? (this.altitude / NeuronInterfacePoint._altitude_ratio ).toFixed(2) + \"'\" : this.altitude.toFixed(2) + 'm';\n     }\n}\n\nexport interface NeuronCameraSpecificationsData {\n    name:string;\n    focal_length:number;    //mm\n    sensor_width:number;    //mm\n    sensor_height:number;   //mm\n    image_width:number;     //px\n    image_height:number;    //px\n}\n\nexport class NeuronCameraSpecifications {\n    static TYPE = \"NeuronCameraSpecifications\";\n    static VERSION = 'c5a01d00-d4fa-11ec-95ac-1b0aaa4d0e1e';\n\n    name:string;\n    focal_length:number;    //mm\n    sensor_width:number;    //mm\n    sensor_height:number;   //mm\n    image_width:number;     //px\n    image_height:number;    //px\n\n    constructor(name:string=\"Custom\", focal_length:number = 0.0, sensor_width:number = 0.0, sensor_height:number = 0.0, image_width:number = 0, image_height:number = 0) {\n        this.name = name;\n        this.focal_length = focal_length;\n        this.sensor_width = sensor_width;\n        this.sensor_height = sensor_height;\n        this.image_width = image_width;\n        this.image_height = image_height;\n    }\n\n    copy() {\n        return new NeuronCameraSpecifications(\n            this.name,\n            this.focal_length,\n            this.sensor_width,\n            this.sensor_height,\n            this.image_width,\n            this.image_height\n        );\n    }\n\n    equals(other:NeuronCameraSpecifications) {\n        return (this.name == other.name) &&\n               (this.focal_length == other.focal_length) &&\n               (this.sensor_width == other.sensor_width) &&\n               (this.sensor_height == other.sensor_height) &&\n               (this.image_width == other.image_width) &&\n               (this.image_height == other.image_height);\n    }\n\n    is_valid() {\n        return (this.focal_length > 0) &&\n               (this.sensor_width > 0) &&\n               (this.sensor_height > 0) &&\n               (this.image_width > 0) &&\n               (this.image_height > 0);\n    }\n\n    get_ground_resolution(distance:number) {\n        let res:number = null;\n\n        if(this.is_valid() && distance > 0) {\n            //XXX: Assume square pixels\n            const projection = this.get_projected_size(distance);\n            if(projection) {\n                res = projection.Width() / this.image_width;\n            }\n        }\n\n        return res;\n    }\n\n    get_distance(ground_resolution:number) {\n        let res:number = null;\n\n        if(this.is_valid() && ground_resolution > 0) {\n            //XXX: Assume square pixels\n            const ground_span = this.image_width * ground_resolution;\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate from half the ground span for half the AoV\n            res = (ground_span / 2) / Math.tan(fov2_w);\n        }\n\n        return res;\n    }\n\n    get_projection(distance:number) {\n        let proj:Rect = null;\n\n        if(this.is_valid() && distance > 0) {\n            //Calculate the half field of views\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate the half distances\n            const h2 = Math.tan(fov2_h) * distance;\n            const w2 = Math.tan(fov2_w) * distance;\n\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\n        }\n\n        return proj;\n    }\n\n    get_projected_size(distance:number) {\n        let proj:Rect = null;\n\n        if(this.is_valid() && distance > 0) {\n            //Calculate the half field of views\n            const fov2_h = Math.atan2(this.sensor_height, 2*this.focal_length);\n            const fov2_w = Math.atan2(this.sensor_width, 2*this.focal_length);\n\n            //Calculate the half distances\n            const h2 = Math.tan(fov2_h) * distance;\n            const w2 = Math.tan(fov2_w) * distance;\n\n            proj = new Rect(-w2, -h2, 2*w2, 2*h2);\n        }\n\n        return proj;\n    }\n\n\n\n    static isObjectOfDataType(object: any): object is NeuronCameraSpecificationsData {\n        let is_valid =\n            (object.type == NeuronCameraSpecifications.TYPE) &&\n            (object.version == NeuronCameraSpecifications.VERSION);\n\n        return is_valid;\n    }\n\n\n    static from_json(j:NeuronCameraSpecificationsData) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronCameraSpecifications.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronCameraSpecifications`);\n\n        return new NeuronCameraSpecifications(\n            j.name,\n            j.focal_length,\n            j.sensor_width,\n            j.sensor_height,\n            j.image_width,\n            j.image_height\n        );\n    }\n\n    to_json() {\n        return <NeuronCameraSpecificationsData>{\n            version: NeuronCameraSpecifications.VERSION,\n            type: NeuronCameraSpecifications.TYPE,\n            name: this.name,\n            focal_length: this.focal_length,\n            sensor_width: this.sensor_width,\n            sensor_height: this.sensor_height,\n            image_width: this.image_width,\n            image_height: this.image_height,\n        }\n    }\n}\n","import { NeuronCameraSpecifications } from \"./neuron_interfaces\";\nimport { NeuronUID } from \"./neuron_tools_common\";\n\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsBoolean {\n    SHOW_PATH,\n}\n\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsNumber {\n    MISSION_SPEED,\n    CAMERA_FOCAL_LENGTH,\n    CAMERA_IMAGE_WIDTH,\n    CAMERA_IMAGE_HEIGHT,\n    CAMERA_SENSOR_WIDTH,\n    CAMERA_SENSOR_HEIGHT,\n}\n\n//XXX: Keep in sync with NeuronStatistics NeuronOptionsData\nexport enum NeuronOptionsString {\n    CAMERA_NAME,\n}\n\nexport interface NeuronOptionsData {\n    SHOW_PATH:boolean,\n    MISSION_SPEED:number,\n    CAMERA_FOCAL_LENGTH:number,\n    CAMERA_IMAGE_WIDTH:number,\n    CAMERA_IMAGE_HEIGHT:number,\n    CAMERA_SENSOR_WIDTH:number,\n    CAMERA_SENSOR_HEIGHT:number,\n    CAMERA_NAME:string,\n}\n\nexport class NeuronOptions {\n    //XXX: Keys must be unique!\n    static camera_preset_custom = new NeuronCameraSpecifications();\n    static camera_presets:NeuronCameraSpecifications[]= [\n        NeuronOptions.camera_preset_custom,\n        new NeuronCameraSpecifications(\"A6000\", 20, 23.50, 15.60, 6000, 4000),\n    ];\n\n    //XXX: Keep in sync with NeuronStatisticsOptionKeys\n    static #stat_options_boolean:Map<NeuronOptionsBoolean,boolean> = new Map();\n    static #stat_options_number:Map<NeuronOptionsNumber,number> = new Map();\n    static #stat_options_string:Map<NeuronOptionsString,string> = new Map();\n\n    static #dom_callback:CallableFunction = null;\n    static #general_callbacks:Map<string,CallableFunction> = new Map();\n\n    static init() {\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, true, false, false);\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, 5.0, false, false);\n        this.set_camera(NeuronOptions.camera_preset_custom, false, false)\n    }\n\n    static set_dom_callback(callback:CallableFunction) {\n        this.#dom_callback = callback;\n    }\n\n    static add_callback(callback:CallableFunction) {\n        const id = NeuronUID('option');\n        this.#general_callbacks.set(id, callback);\n        return this.#remove_callback.bind(this, id);\n    }\n\n    static #remove_callback(id:string) {\n        if(this.#general_callbacks.has(id)) {\n            this.#general_callbacks.delete(id);\n        }\n    }\n\n    static #handle_callbacks(trigger_callbacks:boolean, trigger_dom:boolean) {\n        if(trigger_callbacks) {\n            for(const cb of this.#general_callbacks.values())\n                cb();\n        }\n\n        if(trigger_dom && this.#dom_callback)\n            this.#dom_callback();\n    }\n\n    static set_option_boolean(key:NeuronOptionsBoolean, value:boolean, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_boolean.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_option_number(key:NeuronOptionsNumber, value:number, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_number.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_option_string(key:NeuronOptionsString, value:string, trigger_callbacks:boolean = true, trigger_dom:boolean = true) {\n        this.#stat_options_string.set(key, value);\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    }\n\n    static set_camera(value:NeuronCameraSpecifications, trigger_callbacks:boolean = false, trigger_dom:boolean = true) {\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, value.name, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, value.focal_length, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, value.image_width, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, value.image_height, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, value.sensor_width, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, value.sensor_height, false, false);\n\n        this.#handle_callbacks(trigger_callbacks, trigger_dom);\n    };\n\n    static get_option_boolean(key:NeuronOptionsBoolean) {\n        return this.#stat_options_boolean.get(key);\n    }\n\n    static get_option_number(key:NeuronOptionsNumber) {\n        return this.#stat_options_number.get(key);\n    }\n\n    static get_option_string(key:NeuronOptionsString) {\n        return this.#stat_options_string.get(key);\n    }\n\n    static get_camera() {\n        return new NeuronCameraSpecifications(\n            this.get_option_string(NeuronOptionsString.CAMERA_NAME),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\n            this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT)\n        );\n    }\n\n    static as_json() {\n        return <NeuronOptionsData>{\n            SHOW_PATH: this.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH),\n            MISSION_SPEED: this.get_option_number(NeuronOptionsNumber.MISSION_SPEED),\n            CAMERA_FOCAL_LENGTH: this.get_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH),\n            CAMERA_SENSOR_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH),\n            CAMERA_SENSOR_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT),\n            CAMERA_IMAGE_WIDTH: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH),\n            CAMERA_IMAGE_HEIGHT: this.get_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT),\n            CAMERA_NAME: this.get_option_string(NeuronOptionsString.CAMERA_NAME),\n        };\n    }\n\n    static load(j:NeuronOptionsData) {\n        this.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, Boolean(j.SHOW_PATH), false, false);\n        this.set_option_number(NeuronOptionsNumber.MISSION_SPEED, Number.isNaN(j.MISSION_SPEED) ? 0 : j.MISSION_SPEED, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_FOCAL_LENGTH, Number.isNaN(j.CAMERA_FOCAL_LENGTH) ? 0 : j.CAMERA_FOCAL_LENGTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_WIDTH, Number.isNaN(j.CAMERA_IMAGE_WIDTH) ? 0 : j.CAMERA_IMAGE_WIDTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_IMAGE_HEIGHT, Number.isNaN(j.CAMERA_IMAGE_HEIGHT) ? 0 : j.CAMERA_IMAGE_HEIGHT, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_WIDTH, Number.isNaN(j.CAMERA_SENSOR_WIDTH) ? 0 : j.CAMERA_SENSOR_WIDTH, false, false);\n        this.set_option_number(NeuronOptionsNumber.CAMERA_SENSOR_HEIGHT, Number.isNaN(j.CAMERA_SENSOR_HEIGHT) ? 0 : j.CAMERA_SENSOR_HEIGHT, false, false);\n        this.set_option_string(NeuronOptionsString.CAMERA_NAME, j.CAMERA_NAME.toString(), false, false);\n\n        this.#handle_callbacks(true, true);\n    };\n}\n","import { NeuronUID } from \"./neuron_tools_common\";\n\nexport class NeuronDOMFactory {\n    #prefix:string;\n\n    constructor (css_prefix:string) {\n        this.#prefix = css_prefix;\n    }\n\n    _create_dom_label(text:string, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement|HTMLOutputElement), description:string = null, hide_label:boolean=false) {\n        // let dom = document.createElement(\"div\");\n        // dom.className = `${this.#prefix}-content-item';\n\n        if (!input.id)\n            input.id = NeuronUID();\n\n        let l = document.createElement(\"label\");\n        l.className = `${this.#prefix}-content-label`;\n        l.htmlFor = input.id;\n        if(description)\n            l.title = description;\n        if(hide_label)\n            l.style.visibility = 'hidden';\n\n        l.appendChild(document.createTextNode(text));\n\n        // if(label_first) {\n        //     dom.appendChild(l);\n        //     dom.appendChild(input);\n        // } else {\n        //     dom.appendChild(input);\n        //     dom.appendChild(l);\n        // }\n        return l;\n    }\n\n    _create_dom_output(value:string=null) {\n        let dom = document.createElement(\"output\");\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        if(value != null)\n            dom.value = value;\n        return dom;\n    }\n\n    _create_dom_input_file(on_change:any, accepts:string = null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"file\";\n        if(accepts != null)\n            dom.accept = accepts;\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    _create_dom_input_button(text:string, on_change:any) {\n        let dom = document.createElement(\"button\");\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-center`;\n        dom.onclick = on_change;\n        dom.appendChild(document.createTextNode(text));\n        return dom;\n    }\n\n    _create_dom_input_textbox(value:string, on_change:any) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"text\";\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    _create_dom_input_number(value:number, on_change:any, min:number = null, max:number = null, step:number=null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"number\";\n        if(min != null)\n            dom.min = min.toString();\n        if(max != null)\n            dom.max = max.toString();\n        if(step != null)\n            dom.step = step.toString();\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    _create_dom_input_range(value:number, on_change:any, min:number, max:number, step:number=null) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"range\";\n        dom.min = min.toString();\n        dom.max = max.toString();\n        if(step == null)\n            step = (max - min) / 100;\n        dom.step = step.toString();\n        dom.value = value.toString();\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    _create_dom_input_checkbox(checked:boolean, on_change:any) {\n        let dom = document.createElement(\"input\");\n        dom.type = \"checkbox\";\n        dom.checked = checked;\n        dom.className = `${this.#prefix}-content-value ${this.#prefix}-content-value-right`;\n        dom.onchange = on_change;\n        return dom;\n    }\n\n    _create_dom_input_select(options:string[], labels:string[], on_change:any, selected_option:string=null) {\n        let dom = document.createElement(\"select\");\n\n        if(options.length != labels.length)\n            throw new Error(`Options list does not match labels list (${options.length} != ${labels.length})`);\n\n        //Create and append the options\n        for (let i = 0; i < options.length; i++) {\n            let option = document.createElement(\"option\");\n            option.value = options[i];\n            option.text = labels[i];\n            if(selected_option && selected_option==options[i])\n                option.selected = true;\n            dom.appendChild(option);\n        }\n        dom.className = `${this.#prefix}-content-value`;\n        dom.onchange = on_change;\n        return dom;\n    }\n}\n","import { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\nimport { L } from \"./interface_leaflet\";\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\nimport { NeuronInterfacePoint} from \"./neuron_interfaces\";\nimport { NeuronUID } from \"./neuron_tools_common\";\n\nexport interface NeuronFeatureBaseData {\n    version:string,\n    type:string\n}\n\nexport class NeuronFeatureBase extends NeuronDOMFactory {\n    //XXX: Override this in any inherited classes\n    static NAME = \"[BASE FEATURE]\";\n    static TYPE = \"NeuronFeatureBase\";\n    static VERSION = '5caf31f0-d243-11ec-bbb3-df25a4f645e3';\n    static HELP_KEY = 'base';\n    static IS_FLYABLE = false;\n\n    #visible:boolean;\n    #map:L.Map;\n    #features:L.Layer[];\n    #hidden_features:L.Layer[];\n    #on_remove:CallableFunction;\n    #on_change:CallableFunction;\n    #on_move:CallableFunction;\n\n    #dom:HTMLDivElement;\n    #dom_buttons_visibility:HTMLButtonElement[];\n\n    static _altitude_ratio = 0.3048;   //ft -> m: `Alt = [DOM Value] * Ratio\n\n    //Add two sets of icons, one for each size button\n    static _button_sizes = [\n        'mission-feature-title-button',\n        'mission-feature-title-button-small'\n    ];\n\n    constructor(map:L.Map) {\n        super('mission-feature');\n\n        this.#visible = true;\n        this.#features = [];\n        this.#hidden_features = [];\n        this.#map = map;\n        this.#dom_buttons_visibility = [];\n        this.#dom = null;\n        this.set_remove_callback(null);\n        this.set_change_callback(null);\n        this.set_move_callback(null);\n    }\n\n    _trigger_on_changed() {\n        if(this.#on_change)\n            this.#on_change(this);\n    }\n\n    _add_layer_to_map(m:L.Layer) {\n        if(this.#map) {\n            if(this.#visible) {\n                m.addTo(this.#map);\n\n                // //XXX: Forbidden work to change the hue of the marker (must be done after adding to map)\n                // //@ts-ignore\n                // if(icon_adj && m._icon) {\n                //     //@ts-ignore\n                //     m._icon.classList.add(icon_adj);\n                // }\n\n                this.#features.push(m);\n            } else {\n                this.#hidden_features.push(m);\n            }\n            // m.on('remove', this._feature_removed.bind(this));\n        } else {\n            console.error('Error: no map reference set');\n        }\n    }\n\n    _remove_layer_from_map(m:L.Layer) {\n        let index_visible = this.#features.indexOf(m);\n        if(index_visible !== -1) {\n            this.#features.splice(index_visible, 1);\n            m.remove();\n        }\n\n        let index_hidden = this.#hidden_features.indexOf(m);\n        if(index_hidden !== -1) {\n            this.#features.splice(index_hidden, 1);\n            //XXX: These already do not exist on the map, so no need to remove!\n        }\n    }\n\n    #update_visibility_dom() {\n        if(this.#dom) {\n            if(this.#visible) {\n                this.#dom.classList.remove('mission-feature-hidden');\n            } else {\n                this.#dom.classList.add('mission-feature-hidden');\n            }\n        }\n    }\n\n    #update_visibility_icons() {\n        for(let but of this.#dom_buttons_visibility) {\n            const is_small = this.#use_small_icon(but.className);\n            but.innerHTML = '';\n            const icons = neuron_get_icon(this.#visible ? NeuronIcons.HIDE : NeuronIcons.REVEAL, is_small);\n            for(const i of icons)\n                but.appendChild(i);\n        }\n    }\n\n    #use_small_icon(button_class:string) {\n        return  button_class.includes('small');\n    }\n\n    #remove_mission_feature_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    _get_dom(text:string=\"Mission Feature\") {\n        this.#dom = document.createElement(\"div\");\n        this.#dom.id = `mission-item-${NeuronUID()}`;\n        this.#dom.className = 'mission-feature';\n\n        let title = document.createElement(\"div\");\n        title.className = 'mission-feature-title';\n\n        let t = document.createElement(\"div\");\n        t.className = 'mission-feature-title-text';\n        t.appendChild(document.createTextNode(text));\n        title.appendChild(t);\n\n        let d = document.createElement(\"div\");\n        d.className = 'mission-feature-title-button-container';\n\n        this.#dom_buttons_visibility = [];\n        for(const button_class of NeuronFeatureBase._button_sizes) {\n            const is_small = this.#use_small_icon(button_class);\n\n            let b0 = document.createElement(\"button\");\n            b0.className = button_class;\n            b0.title = \"Zoom to feature\";\n            b0.onclick = this.zoom_to_feature.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.IDENTIFY, is_small))\n                b0.appendChild(i);\n            // let b0i = document.createElement(\"i\");\n            // b0i.className = 'fas fa-location-crosshairs' + is_small;\n            // b0.appendChild(b0i);\n            d.appendChild(b0);\n\n            let bv = document.createElement(\"button\");\n            bv.className = button_class;\n            bv.title = \"Toggle feature visibility\";\n            bv.onclick = this.toggle_visibility.bind(this);\n            d.appendChild(bv);\n            this.#dom_buttons_visibility.push(bv);\n\n            let b1 = document.createElement(\"button\");\n            b1.className = button_class;\n            b1.title = \"Move up\";\n            b1.onclick = this.#request_move.bind(this, -1);\n            // let b1i = document.createElement(\"i\");\n            // b1i.className = 'fas fa-arrow-up' + is_small;\n            // b1.appendChild(b1i);\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_UP, is_small))\n                b1.appendChild(i);\n            d.appendChild(b1);\n\n            let b2 = document.createElement(\"button\");\n            b2.className = button_class;\n            b2.title = \"Move down\";\n            b2.onclick = this.#request_move.bind(this, 1);\n            for(const i of neuron_get_icon(NeuronIcons.ARROW_DOWN, is_small))\n                b2.appendChild(i);\n            d.appendChild(b2);\n\n            let b4 = document.createElement(\"button\");\n            b4.className = button_class;\n            b4.title = \"Help\";\n            b4.onclick = this.show_help.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.HELP, is_small))\n                b4.appendChild(i);\n            d.appendChild(b4);\n\n            let b3 = document.createElement(\"button\");\n            b3.className = button_class;\n            b3.title = \"Remove\";\n            b3.onclick = this.remove_feature.bind(this);\n            for(const i of neuron_get_icon(NeuronIcons.DELETE, is_small))\n                b3.appendChild(i);\n            d.appendChild(b3);\n        }\n        title.appendChild(d);\n\n        this.#update_visibility_icons();\n        this.#update_visibility_dom();\n\n        this.#dom.appendChild(title);\n\n        return this.#dom;\n    }\n\n    // _create_dom_labelled_input(text:string, input:(HTMLInputElement|HTMLSelectElement|HTMLButtonElement), label_first:boolean=true, hide_label:boolean=false) {\n    //     let dom = document.createElement(\"div\");\n    //     dom.className = 'mission-feature-content-item';\n\n    //     if (!input.id)\n    //         input.id = NeuronUID();\n\n    //     let l = document.createElement(\"label\");\n    //     l.className = 'mission-feature-content-label';\n    //     l.htmlFor = input.id;\n    //     l.appendChild(document.createTextNode(text));\n    //     if(hide_label)\n    //         l.style.visibility = 'hidden';\n\n    //     if(label_first) {\n    //         dom.appendChild(l);\n    //         dom.appendChild(input);\n    //     } else {\n    //         dom.appendChild(input);\n    //         dom.appendChild(l);\n    //     }\n    //     return dom;\n    // }\n\n    #request_move(direction:number = 0) {\n        if(this.#on_move && direction != 0) {\n            if(this.#dom) {\n                this.#dom.classList.remove('mission-feature-highlight-remove');\n                this.#dom.classList.add('mission-feature-highlight');\n                setTimeout(this.#remove_mission_feature_highlight.bind(this), 1000);\n\n                // this.#dom.classList.add('mission-feature-moved');\n                // setTimeout(this.#remove_mission_feature_moved.bind(this), 300);\n            }\n\n            this.#on_move(this, direction);\n\n            if(this.#dom)\n                this.#dom.scrollIntoView();\n        }\n    }\n\n    // #remove_mission_feature_moved() {\n    //     if(this.#dom) {\n    //         this.#dom.classList.remove('mission-feature-moved');\n    //         // dom.classList.remove('mission-feature-moved-down');\n    //         this.#dom.scrollIntoView();\n    //     }\n    // }\n\n    set_remove_callback(on_remove:CallableFunction) {\n        this.#on_remove = on_remove;\n    }\n\n    set_change_callback(on_change:CallableFunction) {\n        this.#on_change = on_change;\n    }\n\n    set_move_callback(on_move:CallableFunction) {\n        this.#on_move = on_move;\n    }\n\n    get_features() {\n        return this.#features;\n    }\n\n    toggle_visibility() {\n        this.#visible = !this.#visible;\n        if(this.#visible) {\n            //Show layers\n            this.#features = [].concat(this.#hidden_features);\n            this.#hidden_features = [];\n\n            for(let feature of this.#features)\n                feature.addTo(this.#map);\n        } else {\n            //Hide layers\n            this.#hidden_features = [].concat(this.#features);\n            this.#features = [];\n\n            for(let feature of this.#hidden_features)\n                feature.remove();\n        }\n\n        this.#update_visibility_icons();\n        this.#update_visibility_dom();\n    }\n\n    zoom_to_feature() {\n        const group = L.featureGroup(this.#features);\n        this.#map.fitBounds(group.getBounds(), {\n            padding: [20, 20]\n        });\n    }\n\n\n    show_help() {\n        //XXX: Implement this per inherited feature\n        //XXX: Explicitly do use \"base\" key for the base feature\n        window.neuron_map.show_map_help(true);\n    }\n\n    remove_feature() {\n        //XXX: Implement this per inherited feature\n        if(this.#on_remove)\n            this.#on_remove(this);\n    }\n\n    is_flyable() {\n        return NeuronFeatureBase.IS_FLYABLE;\n    }\n\n    get_path_coords() {\n        //XXX: Implement this per inherited feature\n        const coords:NeuronInterfacePoint[] = [];\n        return coords;\n    }\n\n    get_dom() {\n        //XXX: Implement this per inherited feature\n        return this._get_dom();\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronFeatureBaseData {\n        let is_valid =\n            (object.type == NeuronFeatureBase.TYPE) &&\n            (object.version == NeuronFeatureBase.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeatureBaseData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureBase.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeatureBase`);\n\n        return new NeuronFeatureBase(map);\n    }\n\n    to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeatureBaseData>{\n            version: NeuronFeatureBase.VERSION,\n            type: NeuronFeatureBase.TYPE\n        }\n    }\n}\n","\nexport class NeuronHelp {\n    static HELP_PREFIX_MISSION = 'help-fp-mission';\n\n    #help_element_name:string;\n    #help_element_ignore_subs:string[];\n\n    #controller :AbortController;\n\n    static key_hover_start:string = \"mouseenter\";\n    static key_hover_end:string = \"mouseleave\";\n\n    static class_highlight:string = \"help-highlight\";\n\n    constructor(help_element_name:string, ignore_sub_keys:string[] = []) {\n        this.#help_element_name = help_element_name;\n        this.#controller = new AbortController();\n        this.#help_element_ignore_subs = ignore_sub_keys;\n    }\n\n    #add_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\n        // console.log('mouse entered');\n        target_element.classList.add(NeuronHelp.class_highlight);\n    }\n\n    #remove_hover(trigger_element:HTMLElement, target_element:HTMLElement) {\n        target_element.classList.remove(NeuronHelp.class_highlight);\n        // console.log('mouse exit');\n    }\n\n    #configure_linked_element_callbacks(trigger_element:HTMLElement) {\n        if(trigger_element.id) {\n            const target_element_ids = trigger_element.id.split(this.#help_element_name + '-');\n            const target_element_id = target_element_ids.length > 1 ? target_element_ids[1] : null;\n            let target_element = target_element_id ? document.getElementById(target_element_id) : null;\n\n            if(target_element) {\n                // console.log(`Adding help hover display for ${trigger_element.id} -> ${target_element_id}`)\n\n                trigger_element.addEventListener(NeuronHelp.key_hover_start, this.#add_hover.bind(this, trigger_element, target_element));\n                trigger_element.addEventListener(NeuronHelp.key_hover_end, this.#remove_hover.bind(this, trigger_element, target_element));\n            } else {\n                throw new Error(\"Unable to identify target element with ID: \" + target_element_id);\n            }\n        } else {\n            throw new Error(\"Unable to link element without ID!\");\n        }\n    }\n\n    stop() {\n        // this.#undo_listeners();\n        this.#controller.abort();\n    }\n\n    reset() {\n        this.stop();\n\n        //Go through all the elements we can find and add in our hover callbacks\n        const section_elements = Array.from(document.querySelectorAll(\"section\"));\n        //Filter to any elements that have out key plus some extra stuff that could be the ID we need\n        let help_elements = section_elements.filter(\n            x => x.id.includes(this.#help_element_name) && (x.id.length > this.#help_element_name.length)\n        );\n\n        //Iteratively filter to remove any unwanted sub-IDs\n        for(const i of this.#help_element_ignore_subs)\n            help_elements = help_elements.filter(x => !x.id.includes(`${this.#help_element_name}-${i}-`))\n\n        //Add the hover function to remaining elements\n        for(let e of help_elements)\n            this.#configure_linked_element_callbacks(e);\n    }\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronOptions } from \"./neuron_options\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\nexport interface NeuronFeaturePointData {\n    version:string,\n    type:string,\n    point:NeuronInterfacePointData,\n    wait_duration:number,\n    capture_image:boolean,\n    ground_resolution:number,\n}\n\nexport class NeuronFeatureWaypoint extends NeuronFeatureBase {\n    static override NAME = \"Waypoint\";\n    static override TYPE = \"NeuronFeatureWaypoint\";\n    static override VERSION = '1066fce0-dd80-11ec-b085-f96e36263ede';\n    static override HELP_KEY = 'waypoint';\n    static override IS_FLYABLE = true;\n\n    #marker:L.Marker;\n    #point:NeuronInterfacePoint;\n    #dom:HTMLDivElement;\n    #dom_lat:HTMLInputElement;\n    #dom_lon:HTMLInputElement;\n    #dom_alt:HTMLInputElement;\n    #dom_hdg:HTMLInputElement;\n    #dom_wait:HTMLInputElement;\n    #dom_capture:HTMLInputElement;\n    #dom_ground_resolution:HTMLInputElement;\n\n    #wait_duration:number;\n    #capture_image:boolean;\n    #ground_resolution:number;\n\n    #unsub_option_cb:CallableFunction;\n\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\n\n    constructor(map:L.Map, point:NeuronInterfacePoint=null) {\n        super(map);\n\n        this.#marker = null;\n        this.#point = null;\n        this.#dom = null;\n        this.#dom_lat = null;\n        this.#dom_lon = null;\n        this.#dom_alt = null;\n        this.#dom_hdg = null;\n        this.#dom_wait = null;\n        this.#dom_capture = null;\n        this.#dom_ground_resolution = null;\n\n        this.#wait_duration = 0;\n        this.#capture_image = false;\n        this.#ground_resolution = 0;\n\n        if(point)\n            this.set_point(point);\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    #options_changed() {\n        //Give preference to update altitude from current ground resolution if we're capturing an image\n        if(this.#capture_image) {\n            this.set_ground_resolution(this.#ground_resolution);\n        } else {\n            this.#internal_set_point(this.#point, false, false, true);  //Only use this to trigger calcs, don't update other marker details\n        }\n    }\n\n    remove_point_by_context(context:L.Marker) {\n        if(this.#marker == context) {\n            this.remove_feature();\n        } else {\n            console.warn(\"Call to remove unknown marker context\");\n        }\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_context(event.target);\n    }\n\n    #update_position_from_event(event:L.LeafletEvent) {\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\n        if (this.#point)\n            point.altitude = this.#point.altitude;\n        this.#internal_set_point(point);\n    }\n\n    set_point(point:NeuronInterfacePoint) {\n        if(!this.#marker) {\n            this.#marker = L.marker(point.to_leaflet(),{\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-waypoint')\n            })\n\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n\n            const menu_items = [\n                new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n                null,\n                new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\n            ]\n            this.#marker.bindPopup(create_popup_context_dom(\"Waypoint\", menu_items, this.#marker));\n\n            this._add_layer_to_map(this.#marker);\n        }\n\n        this.#internal_set_point(point);\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true, update_calcs:boolean=true) {\n        this.#point = point;\n\n        if(update_marker && this.#marker)\n            this.#marker.setLatLng(point.to_leaflet());\n\n        if(update_dom) {\n            if(this.#dom_lat)\n                this.#dom_lat.value = point.latitude.toString();\n\n            if(this.#dom_lon)\n                this.#dom_lon.value = point.longitude.toString();\n\n            if(this.#dom_alt)\n                this.#dom_alt.value = (point.altitude / NeuronFeatureBase._altitude_ratio).toString();\n\n            if(this.#dom_hdg)\n                this.#dom_hdg.value = point.heading.toString();\n        }\n\n        if(update_calcs) {\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#point.altitude);\n            if(resolution) {\n                if(this.#dom_ground_resolution)\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureWaypoint._gsd_ratio).toString();\n\n                this.#set_ground_resolution(resolution, false, false);\n            }\n        }\n\n        this._trigger_on_changed();\n    }\n\n    get_wait_duration() {\n        return this.#wait_duration;\n    }\n\n    set_wait_duration(wait_duration:number) {\n        this.#wait_duration = wait_duration;\n\n        if(this.#dom_wait)\n            this.#dom_wait.value = this.#wait_duration.toString();\n\n        this._trigger_on_changed();\n    }\n\n    get_image_count() {\n        return this.#capture_image ? 1 : 0;\n    }\n\n    get_capture_image() {\n        return this.#capture_image;\n    }\n\n    set_capture_image(capture_image:boolean) {\n        this.#capture_image = capture_image;\n\n        if(this.#dom_capture)\n            this.#dom_capture.checked = this.#capture_image;\n\n        this._trigger_on_changed();\n    }\n\n    #update_latitude_from_dom() {\n        if(this.#point && this.#dom_lat)\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_longitude_from_dom() {\n        if(this.#point && this.#dom_lon)\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_altitude_from_dom() {\n        if(this.#point && this.#dom_alt)\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\n\n        this.#internal_set_point(this.#point, true, false, true);\n    }\n\n    #update_heading_from_dom() {\n        if(this.#point && this.#dom_hdg)\n            this.#point.heading = this.#dom_hdg.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_wait_duration_from_dom() {\n        this.#wait_duration = this.#dom_wait.valueAsNumber;\n\n        this._trigger_on_changed();\n    }\n\n    #update_capture_image_from_dom() {\n        this.#capture_image = this.#dom_capture.checked;\n\n        this._trigger_on_changed();\n    }\n\n    #update_ground_resolution_from_dom() {\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureWaypoint._gsd_ratio);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureWaypoint.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        if(this.#marker)\n            this._remove_layer_from_map(this.#marker);\n\n        super.remove_feature();\n    }\n\n    override get_path_coords() {\n        return this.#point ? [this.#point] : [];\n    }\n\n    override is_flyable() {\n        return NeuronFeatureWaypoint.IS_FLYABLE;\n    }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Waypoint\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            const t0 = \"Latitude location for the waypoint in decimal degrees\";\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\n            this.#dom_lat.title = t0;\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\n            c.appendChild(this.#dom_lat);\n\n            const t1 = \"Longitude location for the waypoint in decimal degrees\";\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\n            this.#dom_lon.title = t1;\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\n            c.appendChild(this.#dom_lon);\n\n            const t2 = \"Altitude for the waypoint in feet relative to take-off location ground level\";\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_alt.title = t2;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_alt, t2));\n            c.appendChild(this.#dom_alt);\n\n            const t3 = \"Heading for the waypoint in degrees relative to North\";\n            this.#dom_hdg = this._create_dom_input_number((this.#point ? this.#point.heading : 0.0), this.#update_heading_from_dom.bind(this), -180, 180);\n            this.#dom_hdg.title = t3;\n            c.appendChild(this._create_dom_label(\"Heading:\", this.#dom_hdg, t3));\n            c.appendChild(this.#dom_hdg);\n\n            const t4 = \"Duration in seconds for the aircraft to hold position at the waypoint\";\n            this.#dom_wait = this._create_dom_input_number(this.#wait_duration, this.#update_wait_duration_from_dom.bind(this), 0);\n            this.#dom_wait.title = t4;\n            c.appendChild(this._create_dom_label(\"Wait:\", this.#dom_wait, t4));\n            c.appendChild(this.#dom_wait);\n\n            const t5 = \"Capture an image when the aircraft arrives at the waypoint\";\n            this.#dom_capture = this._create_dom_input_checkbox(this.#capture_image, this.#update_capture_image_from_dom.bind(this));\n            this.#dom_capture.title = t5;\n            c.appendChild(this._create_dom_label(\"Capture:\", this.#dom_capture, t5));\n            c.appendChild(this.#dom_capture);\n\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureWaypoint._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\n            this.#dom_ground_resolution.title = t18;\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\n            c.appendChild(this.#dom_ground_resolution);\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    set_ground_resolution(ground_resolution:number) {\n        this.#set_ground_resolution(ground_resolution);\n    }\n\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true, trigger_callbacks:boolean = true) {\n        this.#ground_resolution = ground_resolution;\n\n        if(update_calcs) {\n            let altitude = NeuronOptions.get_camera().get_distance(this.get_ground_resolution());\n\n            if( altitude && altitude != this.#point.altitude) {\n                this.#point.altitude = altitude;\n                this.#internal_set_point(this.#point, true, true, false);\n            }\n        }\n\n        if(trigger_callbacks)\n            this._trigger_on_changed();\n    };\n\n\n    get_ground_resolution() {\n        return this.#ground_resolution;\n    };\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\n        let is_valid =\n            (object.type == NeuronFeatureWaypoint.TYPE) &&\n            (object.version == NeuronFeatureWaypoint.VERSION);\n\n        return is_valid;\n    }\n\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureWaypoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\n\n        const point = NeuronInterfacePoint.from_json(j.point);\n        const p = new NeuronFeatureWaypoint(map, point);\n        p.set_wait_duration(Number.isNaN(j.wait_duration) ? 0.0 : j.wait_duration);\n        p.set_capture_image(Boolean(j.capture_image));\n        p.set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution); //Also triggers update of calculations\n        return p;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePointData>{\n            version: NeuronFeatureWaypoint.VERSION,\n            type: NeuronFeatureWaypoint.TYPE,\n            point: this.#point.to_json(),\n            wait_duration: this.#wait_duration,\n            capture_image: this.#capture_image,\n            ground_resolution: this.#ground_resolution,\n        }\n    }\n}\n","export function get_filename(ext:string) {\n    return `neuron-planner${Date.now()}.${ext}`;\n}\n\nexport async function download_file(filename:string, data:Blob) {\n    var element = document.createElement('a');\n    const burl = URL.createObjectURL(data);\n    element.setAttribute('href', burl);\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n}","import { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { download_file, get_filename } from \"./neuron_tools_files\"\nimport * as zip from \"@zip.js/zip.js\";\n\nconst type_kml = \"application/vnd.google-earth.kml+xml\";\nconst type_kmz = \"application/vnd.google-earth.kmz\";\n\nexport function get_supported_kmx_types() {\n    return [type_kml, type_kmz];\n}\n\nexport interface NeuronKMLData {\n    markers:NeuronInterfacePoint[];\n    paths:NeuronInterfacePoint[][];\n    polygons:NeuronInterfacePoint[][];\n}\n\nexport async function kmx_load_file(file:Blob, cb_file_loaded:CallableFunction) {\n    let result = null;\n    console.log(`Loaded file identified as \"${file.type}\" type`);\n    switch(file.type) {\n        case type_kml: {\n            const text = await file.text();\n            result = await kml_extract_features(text);\n            break;\n        }\n        case type_kmz: {\n            const reader = new zip.ZipReader(new zip.BlobReader(file));\n            const entries = await reader.getEntries();\n            let got_data = false;\n            let markers:NeuronInterfacePoint[] = [];\n            let paths:NeuronInterfacePoint[][] = [];\n            let polygons:NeuronInterfacePoint[][] = [];\n\n            for(const e of entries) {\n                const text:string = await e.getData(new zip.TextWriter());\n                const r = await kml_extract_features(text);\n\n                if(r.markers.length || r.paths.length || r.polygons.length) {\n                    got_data = true;\n                    markers.push(...r.markers);\n                    paths.push(...r.paths);\n                    polygons.push(...r.polygons);\n                }\n            }\n\n            if(got_data) {\n                result = {\n                    markers: markers,\n                    paths: paths,\n                    polygons: polygons,\n                }\n            }\n\n            break;\n        }\n    }\n\n    // console.log(result);\n    cb_file_loaded(result);\n}\n\nexport async function kml_extract_features(kml_plain_text:string) {\n    //XXX: Only supports google marks/placemarks and polygons\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(kml_plain_text, \"text/xml\");\n    let ret:NeuronKMLData = null;\n\n    if (xmlDoc.documentElement.nodeName == \"kml\") {\n        let markers:NeuronInterfacePoint[] = [];\n        let paths:NeuronInterfacePoint[][] = [];\n        let polygons:NeuronInterfacePoint[][] = [];\n\n        for (const item of xmlDoc.getElementsByTagName('Placemark')) {\n            let placeMarkName = \"Unknown\";\n            try{\n                placeMarkName = item.getElementsByTagName('name')[0].childNodes[0].nodeValue.trim();\n            }\n            catch {}\n            let kml_polygons = Array.from(item.getElementsByTagName('Polygon'));\n            let kml_markers = Array.from(item.getElementsByTagName('Point'));\n            let kml_paths = Array.from(item.getElementsByTagName('LineString'));\n\n            for(const multi of item.getElementsByTagName('MultiGeometry')) {\n                kml_polygons = kml_polygons.concat(Array.from(multi.getElementsByTagName('Polygon')));\n                kml_markers = kml_markers.concat(Array.from(multi.getElementsByTagName('Point')));\n                kml_paths = kml_paths.concat(Array.from(multi.getElementsByTagName('LineString')));\n            }\n\n            /** MARKER PARSE **/\n            for (const marker of kml_markers) {\n                let point = marker.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                let p = point_from_coord(point.split(\",\"));\n                p.tag = placeMarkName;\n                markers.push(p);\n            }\n\n            /** PATH PARSE **/\n            for (const path of kml_paths) {\n                let coords = path.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                let kml_points = coords.split(\" \");\n\n                let points:NeuronInterfacePoint[] = [];\n                for (const point of kml_points) {\n                    points.push(point_from_coord(point.split(\",\")));\n                }\n\n                paths.push(points);\n            }\n\n            /** POLYGONS PARSE **/\n            for (const polygon of kml_polygons) {\n                let coords = polygon.getElementsByTagName('coordinates')[0].childNodes[0].nodeValue.trim();\n                let kml_points = coords.split(\" \");\n\n                let points:NeuronInterfacePoint[] = [];\n                for (const point of kml_points) {\n                    points.push(point_from_coord(point.split(\",\")));\n                }\n\n                polygons.push(points);\n            }\n        }\n\n        ret = { markers: markers, paths: paths, polygons: polygons };\n    } else {\n        console.error(\"Error while parsing KML string\");\n    }\n\n    return ret;\n}\n\nfunction point_from_coord(coords:string[]) {\n\n    let lat = coords.length >= 2 ? Number.parseFloat(coords[1]) : 0.0;\n    let lon = coords.length >= 1 ? Number.parseFloat(coords[0]) : 0.0;\n    let alt = coords.length >= 3 ? Number.parseFloat(coords[2]) : 0.0;\n\n    return new NeuronInterfacePoint(\n        Number.isNaN(lat) ? 0.0 : lat,\n        Number.isNaN(lon) ? 0.0 : lon,\n        Number.isNaN(alt) ? 0.0 : alt,\n    );\n}\n\nexport async function kml_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[], polygons:NeuronInterfacePoint[][]) {\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\n    const file = new Blob(\n        [textXML],\n        {\n            type: type_kml\n        }\n    );\n    download_file(get_filename('kml'), file);\n}\n\nexport async function kmz_download_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[], polygons:NeuronInterfacePoint[][]) {\n    const textXML = await kml_data_from_neuron_data(markers, waypoints, polygons);\n    const kmz = await get_kmz_from_kml_data(textXML);\n    download_file(get_filename('kmz'), kmz);\n}\n\nasync function get_kmz_from_kml_data(data:string) {\n    // use a BlobWriter to store with a ZipWriter the zip into a Blob object\n    const blobWriter = new zip.BlobWriter(type_kmz);\n    const writer = new zip.ZipWriter(blobWriter);\n\n    // use a TextReader to read the String to add\n    await writer.add(\"doc.kml\", new zip.TextReader(data));\n\n    // close the ZipReader\n    await writer.close();\n\n    // get the zip file as a Blob\n    return blobWriter.getData();\n}\n\nexport async function kml_data_from_neuron_data(markers:NeuronInterfacePoint[], waypoints:NeuronInterfacePoint[], polygons:NeuronInterfacePoint[][]) {\n    let xmlDocument = document.implementation.createDocument(\"\", \"\", null);\n    const kmlNode = xmlDocument.createElement('kml');\n    kmlNode.setAttribute('xmlns', 'http://www.opengis.net/kml/2.2');\n    const documentNode = xmlDocument.createElement('Document');\n    kmlNode.appendChild(documentNode);\n    xmlDocument.appendChild(kmlNode);\n\n    //Markers\n    for(let i=0; i<markers.length; i++) {\n        documentNode.appendChild(\n            kml_create_point_node(xmlDocument, markers[i].tag ? markers[i].tag : `Marker #${i+1}`, markers[i].latitude, markers[i].longitude)\n        );\n    }\n\n    //Paths\n    documentNode.appendChild(kml_create_path_node(xmlDocument, \"flight-path\", waypoints));\n\n    //Polygons\n    for(let i=0; i<polygons.length; i++) {\n        documentNode.appendChild(kml_create_polygon_node(xmlDocument, `polygon-${i+1}`, polygons[i]));\n    }\n\n    return kml_document_to_string(xmlDocument);\n}\n\nexport function kml_document_to_string(xmlDocument: XMLDocument) {\n    let textXML = new XMLSerializer().serializeToString(xmlDocument);\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + textXML;\n}\n\nfunction kml_create_point_node(xmlDocument: XMLDocument, name:string, lat:number, lng:number) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const pointNode = xmlDocument.createElement('Point');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    coordinatesNode.innerHTML = `${lng},${lat}`;\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(pointNode);\n    pointNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n\nfunction kml_create_path_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const lineStringNode = xmlDocument.createElement('LineString');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\n    coordinatesNode.innerHTML = plist.join(' ');\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(lineStringNode);\n    lineStringNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n\nfunction kml_create_polygon_node(xmlDocument: XMLDocument, name:string, coordinates:NeuronInterfacePoint[]) {\n    const placemarkNode = xmlDocument.createElement('Placemark');\n    const nameNode = xmlDocument.createElement('name');\n    nameNode.innerHTML = name;\n    const descriptionNode = xmlDocument.createElement('description');\n    const polygonNode = xmlDocument.createElement('Polygon');\n    const boundaryNode = xmlDocument.createElement('outerBoundaryIs');\n    const ringNode = xmlDocument.createElement('LinearRing');\n    const coordinatesNode = xmlDocument.createElement('coordinates');\n    const plist = coordinates.map(x => `${x.longitude},${x.latitude}`);\n    coordinatesNode.innerHTML = plist.join(' ');\n    placemarkNode.appendChild(nameNode);\n    placemarkNode.appendChild(descriptionNode);\n    placemarkNode.appendChild(polygonNode);\n    polygonNode.appendChild(boundaryNode);\n    boundaryNode.appendChild(ringNode);\n    ringNode.appendChild(coordinatesNode);\n    return placemarkNode;\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { kmz_download_from_neuron_data } from \"./neuron_tools_kml\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\nexport interface NeuronFeaturePolygonData {\n    version:string;\n    type:string;\n    corners:NeuronInterfacePointData[];\n    label:string;\n}\n\nexport class NeuronFeaturePolygon extends NeuronFeatureBase {\n    static override NAME = \"Polygon\";\n    static override TYPE = \"NeuronFeaturePolygon\";\n    static override VERSION = 'f0e9c050-e135-11ec-8ea0-c3c316816bb1';\n    static override HELP_KEY = 'polygon';\n\n    #show_corners:boolean\n\n    #label:string;\n    #corners:L.Marker[];\n    #polygon:L.Polygon;\n    #planner:NeuronPlanner;\n    #selected_corner:number;\n    #on_change_internal:CallableFunction;\n    #dom:HTMLDivElement;\n    #dom_corner_count:HTMLOutputElement;\n    #dom_show_corners:HTMLInputElement;\n    #dom_label:HTMLInputElement;\n    #dom_convert_survey:HTMLButtonElement;\n    #dom_export_kml:HTMLButtonElement;\n    #dom_export_kmz:HTMLButtonElement;\n\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], planner:NeuronPlanner = null) {\n        super(map);\n        this.#on_change_internal = null;\n        this.#dom = null;\n        this.#dom_corner_count = null;\n        this.#dom_convert_survey = null;\n        this.#dom_export_kml = null;\n        this.#dom_export_kmz = null;\n        this.#label = \"\";\n\n        this.set_planner(planner);\n\n        this.#show_corners = corners.length < 20;\n        this.#selected_corner = 0;\n        this.#corners = [];\n        if(corners.length) {\n            if(corners.length == 1)\n                console.warn(\"Insufficient number of corners to define polygon! May be removed immediately\");\n\n            this.add_corners(corners);\n            //XXX: This also calls update_polygon();\n        } else {\n            this.update_polygon();\n        }\n    }\n\n    corners_visible() {\n        return this.#show_corners;\n    }\n\n    update_show_corners(show_corners:boolean) {\n        this.#show_corners = show_corners;\n\n        if(this.#show_corners) {\n            //Show layers\n            for(let feature of this.#corners)\n                this._add_layer_to_map(feature);\n        } else {\n            //Hide layers\n            for(let feature of this.#corners)\n                this._remove_layer_from_map(feature);\n        }\n    }\n\n    set_planner(planner:NeuronPlanner) {\n        this.#planner = planner;\n    }\n\n    _set_on_change_internal(on_change:CallableFunction=null) {\n        this.#on_change_internal = on_change;\n    }\n\n    #array_move(arr:any[], old_index:number, new_index:number) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        // return arr; // for testing\n    }\n\n    #array_move_cyclic(arr:any[], old_index:number, diff:number) {\n        let new_index = (old_index + diff) % arr.length;\n        if(new_index < 0) {\n            new_index += arr.length;\n        }\n        this.#array_move(this.#corners, old_index, new_index);\n    }\n\n    move_corner_forwards(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n\n        if(ind >= 0) {\n            this.#array_move_cyclic(this.#corners, ind, -1);\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    move_corner_backwards(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n        if(ind >= 0) {\n            this.#array_move_cyclic(this.#corners, ind, 1);\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    select_corner(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n\n        if(ind >= 0) {\n            this.#selected_corner = ind;\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    #select_corner_by_event(event:L.LeafletEvent) {\n        this.select_corner(event.target);\n    }\n\n    get_polygon() {\n        return this.#polygon;\n    }\n\n    add_corner(corner:NeuronInterfacePoint, update_polygon=true) {\n        if(this.#selected_corner < 0 || this.#selected_corner >= this.#corners.length)\n            this.#selected_corner = Math.min(this.#corners.length - 1, 0)\n\n        let m = L.marker([corner.latitude, corner.longitude], {\n            draggable: true,\n            autoPan: true,\n            icon: get_neuron_map_marker('neuron-marker-corner')\n        })\n\n        const menu_items = [\n            new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Move forward\", NeuronIcons.ARROW_LEFT, this.move_corner_forwards.bind(this)),\n            new LeafletContextMenuItem(\"Move backward\", NeuronIcons.ARROW_RIGHT, this.move_corner_backwards.bind(this)),\n            null,\n            new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_corner.bind(this)),\n        ]\n        m.bindPopup(create_popup_context_dom(\"Polygon Corner\", menu_items, m));\n\n        m.on(\"drag\", this.update_polygon.bind(this));\n        m.on(\"click\", this.#select_corner_by_event.bind(this));\n        m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n\n        this.#corners.splice(this.#selected_corner, 0, m);\n        if(this.#show_corners)\n            this._add_layer_to_map(m);\n\n        if(update_polygon)\n            this.update_polygon();\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    add_corners(corners:NeuronInterfacePoint[]=[]) {\n        for(const c of corners)\n            this.add_corner(c, false);\n\n        //Do this manually at the end\n        this.update_polygon();\n    }\n\n    get_corners() {\n        return this.#corners;\n    }\n\n    get_corners_as_points() {\n        return this.#corners.map(p => NeuronInterfacePoint.from_leaflet(p.getLatLng()));\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_corner(event.target);\n    }\n\n    remove_point_by_corner(corner:L.Marker) {\n        const ind = this.#corners.indexOf(corner);\n        if(ind >= 0) {\n            this._remove_layer_from_map(corner); //Remove from map\n            this.#corners.splice(ind, 1);   //Remove from list\n            this.update_polygon();          //Redraw\n        } else {\n            console.warn(\"Provided corner is not part of this polygon!\");\n        }\n    }\n\n    #add_point_at_mouseevent(event:L.LeafletMouseEvent) {\n        if(this.#polygon && this.#show_corners) {\n            // const c = this.#polygon.getCenter();\n            // const dx = b._northEast.lng - b._southWest.lng;\n            // const dy = b._northEast.lat - b._southWest.lat;\n            // const p = new NeuronMapPoint(b._southWest.lat + dy / 2, b._southWest.lng + dx / 2);\n            const p = NeuronInterfacePoint.from_leaflet(event.latlng);\n\n            this.add_corner(p);\n        }\n    }\n\n    add_point_at_location() {\n        if(this.#polygon) {\n            const b = this.#polygon.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n            const p = new NeuronInterfacePoint(sw.lat + dy / 2, sw.lng + dx / 2);\n\n            this.add_corner(p);\n        }\n    }\n\n    update_polygon() {\n        if(this.#corners.length > 1) {\n            let corners = [];\n\n            for(const c of this.#corners) {\n                corners.push(c.getLatLng());\n            }\n\n            if(this.#polygon) {\n                //Update the existing polygon\n                // console.log(this.#polygon);\n                this.#polygon.setLatLngs(corners);\n            } else{\n                //Create a new polygon\n                this.#polygon = L.polygon(corners, {color: 'red'});\n                this.#polygon.on(\"click\", this.#add_point_at_mouseevent.bind(this));\n                this._add_layer_to_map(this.#polygon);\n            }\n        } else {\n            this.remove_feature();\n        }\n\n        if(this.#on_change_internal)\n            this.#on_change_internal();\n        this._trigger_on_changed();\n\n        this.#try_update_dom();\n    }\n\n    #try_update_dom() {\n        if(this.#dom_corner_count)\n            this.#dom_corner_count.value = this.#corners.length.toFixed(0);\n    }\n\n    #convert_to_survey() {\n        if(this.#planner) {\n            this.#planner.replace_polygon_with_survey(this);\n        } else {\n            console.warn(\"Planner not set, cannot convert polygon feature!\");\n        }\n    }\n\n    #export_as_kml() {\n        kmz_download_from_neuron_data([], [], [this.get_corners_as_points()]);\n    }\n\n    #export_as_kmz() {\n        kmz_download_from_neuron_data([], [], [this.get_corners_as_points()]);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePolygon.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        for(const c of this.#corners) {\n            this._remove_layer_from_map(c);\n        }\n        this.#corners = [];\n\n        if(this.#polygon) {\n            this._remove_layer_from_map(this.#polygon);\n            this.#polygon = null;\n        }\n\n        super.remove_feature();\n    }\n\n    //override get_path_coords() {} //XXX: No paths provided by this feature, use base return\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Polygon\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            //Output items\n            const t4 = \"Number of corners that define this polygon's boundaries\";\n            this.#dom_corner_count = this._create_dom_output();\n            this.#dom_corner_count.title = t4;\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t4));\n            c.appendChild(this.#dom_corner_count);\n\n            this.#try_update_dom();\n\n            //Input Items\n            const t21 = \"Show the corners of the polygon\";\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\n            this.#dom_show_corners.title = t21;\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t21));\n            c.appendChild(this.#dom_show_corners);\n\n            const t22 = \"Text label for identification of the polygon\";\n            this.#dom_label = this._create_dom_input_textbox(this.#label, this.#update_label_from_dom.bind(this));\n            this.#dom_label.title = t22;\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t22));\n            c.appendChild(this.#dom_label);\n\n            const t0 = \"Convert this polygon to a survey feature\";\n            this.#dom_convert_survey = this._create_dom_input_button(\"Survey\", this.#convert_to_survey.bind(this));\n            this.#dom_convert_survey.title = t0;\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_survey, t0));\n            c.appendChild(this.#dom_convert_survey);\n\n            const t1 = \"Export this polygon to a drawing document\";\n            const t11 = \"Export this polygon to a KML document\";\n            const t12 = \"Export this polygon to a KMZ document\";\n            this.#dom_export_kml = this._create_dom_input_button(\"KML\", this.#export_as_kml.bind(this));\n            this.#dom_export_kml.title = t11;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kml, t1));\n            c.appendChild(this.#dom_export_kml);\n\n            this.#dom_export_kmz = this._create_dom_input_button(\"KMZ\", this.#export_as_kmz.bind(this));\n            this.#dom_export_kmz.title = t12;\n            c.appendChild(this._create_dom_label(\"Export as:\", this.#dom_export_kmz, t1, true));\n            c.appendChild(this.#dom_export_kmz);\n\n            // c.appendChild(this._create_dom_labelled_input(\"\", this.#dom_export_shape.bind(this)));\n\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    #update_show_corners_from_dom() {\n        this.update_show_corners(this.#dom_show_corners.checked);\n    }\n\n    #update_label_from_dom() {\n        this.set_label(this.#dom_label.value, false);\n    }\n\n    get_label() {\n        return this.#label;\n    }\n\n    set_label(label:string, update_dom:boolean = true) {\n        this.#label = label;\n        if(this.#dom_label && update_dom)\n            this.#dom_label.value = label;\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePolygonData {\n        let is_valid =\n            (object.type == NeuronFeaturePolygon.TYPE) &&\n            (object.version == NeuronFeaturePolygon.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeaturePolygonData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeaturePolygon.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePolygon`);\n\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\n        let p = new NeuronFeaturePolygon(map, corners);\n        p.set_label(j.label.toString());\n        return p;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePolygonData>{\n            version: NeuronFeaturePolygon.VERSION,\n            type: NeuronFeaturePolygon.TYPE,\n            corners: this.get_corners_as_points().map(x => x.to_json()),\n            label: this.#label,\n        }\n    }\n}\n","import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { CreateGrid, GridPointTags, StartPosition } from \"./neuron_tools_survey\"\nimport { L, create_popup_context_dom } from \"./interface_leaflet\";\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronHelp } from \"./neuron_help\";\n\nexport interface NeuronFeatureSurveyData {\n    version:string,\n    type:string,\n    corners:NeuronInterfacePointData[],\n    altitude:number,\n    distance:number,\n    spacing:number,\n    angle:number,\n    overshoot1:number,\n    overshoot2:number,\n    startpos:number,\n    minLaneSeparation:number,\n    leadin:number,\n    sidelap:number,\n    overlap:number,\n    ground_resolution:number,\n    label:string\n}\n\nexport interface NeuronFeatureSurveyLane {\n    start:NeuronInterfacePoint,\n    end:NeuronInterfacePoint\n}\n\nexport class NeuronFeatureSurvey extends NeuronFeaturePolygon {\n    static override NAME = \"Survey\";\n    static override TYPE = \"NeuronFeatureSurvey\";\n    static override VERSION = '70bb75e0-d5a0-11ec-aaa0-9f86362bde1a';\n    static override HELP_KEY = 'survey';\n    static override IS_FLYABLE = true;\n\n    #waypoints:NeuronInterfacePoint[];\n    #mappoints:L.Marker[];\n\n    #altitude:number;\n    #distance:number;\n    #spacing:number;\n    #angle:number;\n    #overshoot1:number;\n    #overshoot2:number;\n    #startpos:StartPosition;\n    #minLaneSeparation:number;\n    #leadin:number;\n\n    #sidelap:number;\n    #overlap:number;\n    #ground_resolution:number;\n\n    #show_waypoints:boolean;\n\n    #dom:HTMLDivElement;\n    #dom_corner_count:HTMLOutputElement;\n    #dom_waypoint_count:HTMLOutputElement;\n    #dom_segment_duration:HTMLOutputElement;\n    #dom_photo_count:HTMLOutputElement;\n    //Display parameters\n    #dom_show_waypoints:HTMLInputElement;\n    #dom_show_corners:HTMLInputElement;\n    //Survey parameters\n    #dom_altitude:HTMLInputElement;\n    #dom_distance:HTMLInputElement;\n    #dom_spacing:HTMLInputElement;\n    #dom_angle:HTMLInputElement;\n    #dom_angle_slider:HTMLInputElement;\n    #dom_overshoot1:HTMLInputElement;\n    #dom_overshoot2:HTMLInputElement;\n    #dom_startpos:HTMLSelectElement;\n    #dom_minLaneSeparation:HTMLInputElement;\n    #dom_leadin:HTMLInputElement;\n    //Capture parameters\n    #dom_sidelap:HTMLInputElement;\n    #dom_overlap:HTMLInputElement;\n    #dom_ground_resolution:HTMLInputElement;\n\n    #update_timer:NodeJS.Timeout;\n    #update_interval:number;\n    #unsub_option_cb:CallableFunction;\n\n\n    static _gsd_ratio = 0.01;   //GSD = [DOM Value] * Ratio\n    static _xlap_ratio = 0.01;   //Sidelap = [DOM Value] * Ratio\n\n    constructor(map:L.Map, corners:NeuronInterfacePoint[]=[], show_waypoints=false) {\n        super(map, corners);\n        this.#waypoints = [];\n        this.#mappoints = [];\n        this.#update_timer = null;\n        this.#update_interval = 50; //ms\n\n        this.#dom = null;\n        this.#dom_corner_count = null;\n        this.#dom_waypoint_count = null;\n        this.#dom_segment_duration = null;\n        this.#dom_photo_count = null;\n\n        this.#dom_show_corners = null;\n        this.#dom_show_waypoints = null;\n        this.#dom_altitude = null;\n        this.#dom_distance = null;\n        this.#dom_spacing = null;\n        this.#dom_angle = null;\n        this.#dom_angle_slider = null;\n        this.#dom_overshoot1 = null;\n        this.#dom_overshoot2 = null;\n        this.#dom_startpos = null;\n        this.#dom_minLaneSeparation = null;\n        this.#dom_leadin = null;\n\n        this.#dom_sidelap = null;\n        this.#dom_overlap = null;\n        this.#dom_ground_resolution = null;\n\n        this.#show_waypoints = show_waypoints;\n        this.#altitude = 100;\n        this.#distance = 50;\n        this.#spacing = 0;\n        this.#angle = 0.0;\n        this.#overshoot1 = 0.0;\n        this.#overshoot2 = 0.0;\n        this.#startpos = StartPosition.TopLeft;\n        this.#minLaneSeparation = 0;\n        this.#leadin = 0.0;\n\n        this.#sidelap = 0.7;\n        this.#overlap = 0.7;\n        this.#ground_resolution = 0.0;\n\n        this._set_on_change_internal(this.update_survey.bind(this));\n        this.#_update_survey(false);\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    override show_on_plan() {\n        if(this.#dom) {\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.#options_changed.bind(this));\n    }\n\n    #options_changed() {\n        //Update our variables, and then the survey if there was a change\n        if(this.#calculate_and_update_capture_variables())\n            this.update_survey();\n    }\n\n    #add_waypoint(point:NeuronInterfacePoint, name:string = \"Survey Waypoint\") {\n        if(this.#show_waypoints) {\n            let m = L.marker([point.latitude, point.longitude], {\n                // draggable: true,\n                autoPan: true,\n            })\n\n            // const menu_items = [\n            //     new LeafletContextMenuItem(\"Move forward\", \"fa-arrow-left\", this.move_corner_forwards.bind(this)),\n            //     new LeafletContextMenuItem(\"Move backward\", \"fa-arrow-right\", this.move_corner_backwards.bind(this)),\n            //     null,\n            //     new LeafletContextMenuItem(\"Remove\", \"fa-trash\", this.remove_point_by_corner.bind(this)),\n            // ]\n            m.bindPopup(create_popup_context_dom(name, [], m));\n\n            // m.on(\"drag\", this.update_polygon.bind(this));\n            // m.on(\"click\", this.#select_corner_by_event.bind(this));\n            // m.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n            this._add_layer_to_map(m);\n            this.#mappoints.push(m);\n        }\n\n        this.#waypoints.push(point);\n    }\n\n    update_show_waypoints(show_waypoints:boolean) {\n        this.#show_waypoints = show_waypoints;\n        this.update_survey();\n    }\n\n    set_altitude(altitude:number) {\n        this.#set_altitude(altitude, true);\n    }\n\n    #set_altitude(altitude:number, update_calcs:boolean=true) {\n        this.#altitude = altitude;\n\n        if(update_calcs) {\n            let resolution = NeuronOptions.get_camera().get_ground_resolution(this.#altitude);\n            if(resolution) {\n                if(this.#dom_ground_resolution)\n                    this.#dom_ground_resolution.value = (resolution / NeuronFeatureSurvey._gsd_ratio).toString();\n\n                this.#set_ground_resolution(resolution, false);\n            }\n        }\n\n        this.update_survey();\n    }\n\n    set_distance(distance:number) {\n        this.#set_distance(distance);\n    }\n\n    #set_distance(distance:number, update_calcs:boolean=true) {\n        this.#distance = distance;\n\n        if(update_calcs) {\n            let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\n            if(projection && (distance >= 0)) {\n                const sidelap_factor = distance/projection.Width();\n                const sidelap = Math.max(Math.min(1 - sidelap_factor, 1.0), 0.0);\n\n                if(this.#dom_ground_resolution)\n                    this.#dom_sidelap.value = (sidelap / NeuronFeatureSurvey._xlap_ratio).toString();\n\n                this.#set_sidelap(sidelap, false);\n            }\n        }\n\n        this.update_survey();\n    }\n\n    set_spacing(spacing:number) {\n        this.#spacing = spacing;\n        this.update_survey();\n    }\n\n    set_angle(angle:number) {\n        this.#angle = angle;\n        this.update_survey();\n    }\n\n    set_overshoot1(overshoot1:number) {\n        this.#overshoot1 = overshoot1;\n        this.update_survey();\n    }\n\n    set_overshoot2(overshoot2:number) {\n        this.#overshoot2 = overshoot2;\n        this.update_survey();\n    }\n\n    set_startpos(startpos:StartPosition) {\n        this.#startpos = startpos;\n        this.update_survey();\n    }\n\n    set_minLaneSeparation(minLaneSeparation:number) {\n        this.#minLaneSeparation = minLaneSeparation;\n        this.update_survey();\n    }\n\n    set_leadin(leadin:number) {\n        this.#leadin = leadin;\n        this.update_survey();\n    }\n\n    get_show_waypoints() {\n        return this.#show_waypoints;\n    }\n\n    get_altitude() {\n        return this.#altitude;\n    }\n\n    get_distance() {\n        return this.#distance;\n    }\n\n    get_spacing() {\n        return this.#spacing;\n    }\n\n    get_angle() {\n        return this.#angle;\n    }\n\n    get_overshoot1() {\n        return this.#overshoot1;\n    }\n\n    get_overshoot2() {\n        return this.#overshoot2;\n    }\n\n    get_startpos() {\n        return this.#startpos;\n    }\n\n    get_minLaneSeparation() {\n        return this.#minLaneSeparation;\n    }\n\n    get_leadin() {\n        return this.#leadin;\n    }\n\n    update_survey() {\n        //Clear any queued updates\n        this.#clear_update_timer();\n\n        //Force clear the survey survey immediately for display\n        this.#clean_waypoints();\n\n        //Update survey with slight delay for processing\n        this.#update_timer = setTimeout(this.#_update_survey.bind(this, true), this.#update_interval);\n    }\n\n    #clear_update_timer() {\n        if(this.#update_timer) {\n            clearTimeout(this.#update_timer);\n            this.#update_timer = null;\n        }\n    }\n\n    #_update_survey(fire_on_change:boolean = true) {\n        this.#clean_waypoints();\n\n        const corners = this.get_corners_as_points();\n        const waypoints = (corners.length <= 2) ?\n            //There's only a line, so go end-to-end\n            corners :\n            //There is an actual polygon, so do a survey grid\n            CreateGrid(\n                this.get_corners_as_points(),\n                this.#altitude,\n                this.#distance,\n                this.#spacing,\n                this.#angle,\n                this.#overshoot1,\n                this.#overshoot2,\n                this.#startpos,\n                this.#minLaneSeparation,\n                this.#leadin\n            );\n\n        for(let i = 0; i < waypoints.length; i++)\n            this.#add_waypoint(waypoints[i], `Survey Waypoint (#${i})`);\n\n        this.#try_update_dom_stats();\n\n        if(fire_on_change)\n            this._trigger_on_changed();\n    }\n\n    #clean_waypoints() {\n        for(const m of this.#mappoints) {\n            this._remove_layer_from_map(m);\n        }\n        this.#mappoints = [];\n        this.#waypoints = [];\n    }\n\n    #try_update_dom_stats() {\n        const coords = this.get_path_coords();\n\n        if(this.#dom_corner_count)\n            this.#dom_corner_count.value = this.get_corners().length.toFixed(0);\n\n        if(this.#dom_waypoint_count)\n            this.#dom_waypoint_count.value = coords.length.toFixed(0);\n\n\n        if(this.#dom_segment_duration) {\n\n            const distance = flight_distance_from_coords(coords);\n            const duration = distance / NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n            this.#dom_segment_duration.value = flight_time_from_duration(duration);\n        }\n\n        if(this.#dom_photo_count) {\n            let count = this.get_image_count();\n            this.#dom_photo_count.value = count > 0 ? count.toString() : \"---\";\n        }\n    }\n\n    get_image_count() {\n        let count = null;\n        let projection = NeuronOptions.get_camera().get_projected_size(this.#altitude);\n\n        if(projection && (this.#overlap >= 0) && (this.#overlap <= 1)) {\n            let photo_count = 0;\n\n            const overlap_factor = 1 - this.#overlap;\n            const photo_distance = Math.abs(projection.Height())*overlap_factor;\n\n            for(const lane of this.get_lane_coords()) {\n                const ps = lane.start.to_UTM();\n                const pe = lane.end.to_UTM(ps.zone);\n\n                const lane_distance = ps.GetDistance2D(pe);\n                photo_count += Math.ceil(lane_distance / photo_distance);\n            }\n\n            count = photo_count;\n        }\n\n        return count;\n    }\n\n    #update_show_corners_from_dom() {\n        this.update_show_corners(this.#dom_show_corners.checked);\n    }\n\n    #update_show_waypoints_from_dom() {\n        this.update_show_waypoints(this.#dom_show_waypoints.checked);\n    }\n\n    #update_altitude_from_dom() {\n        this.set_altitude(this.#dom_altitude.valueAsNumber * NeuronFeatureSurvey._altitude_ratio);\n    }\n\n    #update_distance_from_dom() {\n        this.set_distance(this.#dom_distance.valueAsNumber);\n    }\n\n    #update_spacing_from_dom() {\n        this.set_spacing(this.#dom_spacing.valueAsNumber);\n    }\n\n    #update_angle_from_dom() {\n        const val = this.#dom_angle.valueAsNumber;\n        this.#dom_angle_slider.value = val.toString();\n        this.set_angle(this.#dom_angle.valueAsNumber);\n    }\n\n    #update_angle_slider_from_dom() {\n        const val = this.#dom_angle_slider.valueAsNumber;\n        this.#dom_angle.value = val.toString();\n        this.set_angle(val);\n    }\n\n    #update_overshoot1_from_dom() {\n        this.set_overshoot1(this.#dom_overshoot1.valueAsNumber);\n    }\n\n    #update_overshoot2_from_dom() {\n        this.set_overshoot2(this.#dom_overshoot2.valueAsNumber);\n    }\n\n    #update_startpos_from_dom() {\n        const v = Number.parseInt(this.#dom_startpos.value);\n        const values = Object.values(StartPosition);\n        if (!values.includes(v))\n            throw new Error(`Selected value (${v}) is not a StartingPosition`);\n\n        this.set_startpos(v);\n    }\n\n    #update_minLaneSeparation_from_dom() {\n        this.set_minLaneSeparation(this.#dom_minLaneSeparation.valueAsNumber);\n    }\n\n    #update_leadin_from_dom() {\n        this.set_leadin(this.#dom_leadin.valueAsNumber);\n    }\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeatureSurvey.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        this.#clean_waypoints();\n\n        super.remove_feature();\n    }\n\n    override is_flyable() {\n        return NeuronFeatureSurvey.IS_FLYABLE;\n    }\n\n    override get_path_coords() {\n        const corners = this.get_corners_as_points();\n        return this.#waypoints.length ? this.#waypoints : (corners.length ? [corners[0]] : []);\n    }\n\n    get_lane_coords() {\n        const coords = this.get_path_coords();\n        let lanes:NeuronFeatureSurveyLane[] = [];\n        let start:NeuronInterfacePoint = null;\n\n        for(let i = 0; i < coords.length; i++) {\n            const p = coords[i];\n            if((!start && p.tag == GridPointTags.START) || (start && p.tag == GridPointTags.MIDDLE_START)) {\n                //If we found a new start, or we are adjusting to a new middle start\n                start = p;\n            } else if (start && ((p.tag == GridPointTags.MIDDLE_END) || (p.tag == GridPointTags.END))) {\n                //If we have a valid start and we have found a valid end\n                //Add our finished lane\n                lanes.push({\n                    start: start,\n                    end: p\n                })\n                //And reset\n                start = null;\n            }\n        }\n\n        if(start)\n            console.warn(\"Unable to determine all lanes correctly!\");\n\n        return lanes;\n    }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Survey\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            //Output fields\n            const t00 = \"Number of corners that define this survey's boundaries\";\n            this.#dom_corner_count = this._create_dom_output();\n            this.#dom_corner_count.title = t00;\n            c.appendChild(this._create_dom_label(\"Corners:\", this.#dom_corner_count, t00));\n            c.appendChild(this.#dom_corner_count);\n\n            const t01 = \"Number of waypoints that have been calculated to perform this survey\";\n            this.#dom_waypoint_count = this._create_dom_output();\n            this.#dom_waypoint_count.title = t01;\n            c.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_waypoint_count, t01));\n            c.appendChild(this.#dom_waypoint_count);\n\n            const t03 = \"Estimated flight time of the survey feature\";\n            this.#dom_segment_duration = this._create_dom_output();\n            this.#dom_segment_duration.title = t03;\n            c.appendChild(this._create_dom_label(\"Duration:\", this.#dom_segment_duration, t03));\n            c.appendChild(this.#dom_segment_duration);\n\n            const t02 = \"Number of images that will be captured by the camera on the aircraft to perform this survey\";\n            this.#dom_photo_count = this._create_dom_output();\n            this.#dom_photo_count.title = t02;\n            c.appendChild(this._create_dom_label(\"Images:\", this.#dom_photo_count, t02));\n            c.appendChild(this.#dom_photo_count);\n\n            //Input fields\n            const t2 = \"Show the corners of the polygon that defines the survey area\";\n            this.#dom_show_corners = this._create_dom_input_checkbox(this.corners_visible(), this.#update_show_corners_from_dom.bind(this));\n            this.#dom_show_corners.title = t2;\n            c.appendChild(this._create_dom_label(\"Show corners:\", this.#dom_show_corners, t2));\n            c.appendChild(this.#dom_show_corners);\n\n            const t21 = \"Show the waypoints that have been calculated at the end of each lane to perform this survey\";\n            this.#dom_show_waypoints = this._create_dom_input_checkbox(this.#show_waypoints, this.#update_show_waypoints_from_dom.bind(this));\n            this.#dom_show_waypoints.title = t21;\n            c.appendChild(this._create_dom_label(\"Show ends:\", this.#dom_show_waypoints, t2));\n            c.appendChild(this.#dom_show_waypoints);\n\n\n            //=====================================\n            //Capture calculations\n            //=====================================\n            const tb2 = \"Image capture configuration and calculations for survey parameters.\";\n            let dom_break2 = this._create_dom_output();\n            dom_break2.title = tb2;\n            let dom_break_label2 = this._create_dom_label(\"Capture Config.\", dom_break2, tb2)\n            dom_break_label2.classList.add('mission-feature-content-subtitle');\n            c.appendChild(dom_break_label2);\n            c.appendChild(dom_break2);\n\n            const t18 = \"Ground sampling distance, or ground resolution, in centimeters per pixel\";\n            this.#dom_ground_resolution = this._create_dom_input_number(this.#ground_resolution / NeuronFeatureSurvey._gsd_ratio, this.#update_ground_resolution_from_dom.bind(this), 0, null, 0.2);\n            this.#dom_ground_resolution.title = t18;\n            c.appendChild(this._create_dom_label(\"GSD:\", this.#dom_ground_resolution, t18));\n            c.appendChild(this.#dom_ground_resolution);\n\n            const t17 = \"Image vertical overlap between lanes as a percentage\";\n            this.#dom_overlap = this._create_dom_input_number(this.#overlap / NeuronFeatureSurvey._xlap_ratio, this.#update_overlap_from_dom.bind(this), 0, 100);\n            this.#dom_overlap.title = t17;\n            c.appendChild(this._create_dom_label(\"Overlap:\", this.#dom_overlap, t17));\n            c.appendChild(this.#dom_overlap);\n\n            const t19 = \"Image horizontal overlap between lanes as a percentage\";\n            this.#dom_sidelap = this._create_dom_input_number(this.#sidelap / NeuronFeatureSurvey._xlap_ratio, this.#update_sidelap_from_dom.bind(this), 0, 100);\n            this.#dom_sidelap.title = t19;\n            c.appendChild(this._create_dom_label(\"Sidelap:\", this.#dom_sidelap, t19));\n            c.appendChild(this.#dom_sidelap);\n\n            //=====================================\n            //Flight calculations\n            //=====================================\n            const tb1 = \"Flight path parameter configuration and calculations for the survey.\";\n            let dom_break1 = this._create_dom_output();\n            dom_break1.title = tb1;\n            let dom_break_label1 = this._create_dom_label(\"Path Config.\", dom_break1, tb1)\n            dom_break_label1.classList.add('mission-feature-content-subtitle');\n            c.appendChild(dom_break_label1);\n            c.appendChild(dom_break1);\n\n\n            const t3 = \"Altitude for the survey in feet relative to take-off location ground level\";\n            this.#dom_altitude = this._create_dom_input_number(this.#altitude / NeuronFeatureSurvey._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_altitude.title = t3;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_altitude, t3));\n            c.appendChild(this.#dom_altitude);\n\n            const t4 = \"Spacing between the individual lanes of the survey pattern in meters\";\n            this.#dom_distance = this._create_dom_input_number(this.#distance, this.#update_distance_from_dom.bind(this), 0.5);\n            this.#dom_distance.title = t4;\n            c.appendChild(this._create_dom_label(\"Spacing:\", this.#dom_distance, t4));\n            c.appendChild(this.#dom_distance);\n\n            const t5 = \"Entry location on the survey pattern relative to the most Northwestern point of the survey\";\n            this.#dom_startpos = this._create_dom_input_select(\n                [\n                    StartPosition.TopLeft,\n                    StartPosition.TopRight,\n                    StartPosition.BottomLeft,\n                    StartPosition.BottomRight\n                ].map(x => x.toString()),\n                [\n                    \"Top left\",\n                    \"Top right\",\n                    \"Bottom left\",\n                    \"Bottom right\"\n                ],\n                this.#update_startpos_from_dom.bind(this),\n                this.#startpos.toString());\n            this.#dom_startpos.title = t5;\n            c.appendChild(this._create_dom_label(\"Entry:\", this.#dom_startpos, t5));\n            c.appendChild(this.#dom_startpos);\n\n            // this.#dom_spacing = this._create_dom_input_number(this.#spacing, this.#update_spacing_from_dom.bind(this), 0);\n            // c.appendChild(this._create_dom_labelled_input(\"Spacing:\", this.#dom_spacing));\n\n            const t6 = \"Angle of the survey pattern in degrees relative to North\";\n            this.#dom_angle = this._create_dom_input_number(this.#angle, this.#update_angle_from_dom.bind(this), -180, 180);\n            this.#dom_angle.title = t6;\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle, t6));\n            c.appendChild(this.#dom_angle);\n\n            //XXX: Same title as dom_angle\n            this.#dom_angle_slider = this._create_dom_input_range(this.#angle, this.#update_angle_slider_from_dom.bind(this), -180, 180, 5);\n            this.#dom_angle_slider.title = t6;\n            c.appendChild(this._create_dom_label(\"Angle:\", this.#dom_angle_slider, t6, true));\n            c.appendChild(this.#dom_angle_slider);\n\n            const t7 = \"Lane start waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary\";\n            this.#dom_leadin = this._create_dom_input_number(this.#leadin, this.#update_leadin_from_dom.bind(this), 0);\n            this.#dom_leadin.title = t7;\n            c.appendChild(this._create_dom_label(\"Lead-in:\", this.#dom_leadin, t7));\n            c.appendChild(this.#dom_leadin);\n\n            const t9 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for odd-numbered lanes\";\n            this.#dom_overshoot2 = this._create_dom_input_number(this.#overshoot2, this.#update_overshoot2_from_dom.bind(this));\n            this.#dom_overshoot2.title = t9;\n            c.appendChild(this._create_dom_label(\"Run-out A:\", this.#dom_overshoot2, t9));\n            c.appendChild(this.#dom_overshoot2);\n\n            const t8 = \"Lane end waypoint adjustment of the survey pattern in meters from the lane intersection point with the survey boundary for even-numbered lanes\";\n            this.#dom_overshoot1 = this._create_dom_input_number(this.#overshoot1, this.#update_overshoot1_from_dom.bind(this));\n            this.#dom_overshoot1.title = t8;\n            c.appendChild(this._create_dom_label(\"Run-out B:\", this.#dom_overshoot1, t8));\n            c.appendChild(this.#dom_overshoot1);\n\n            const t10 = \"Number of lanes to skip between each run across the survey area\";\n            this.#dom_minLaneSeparation = this._create_dom_input_number(this.#minLaneSeparation, this.#update_minLaneSeparation_from_dom.bind(this), 0);\n            this.#dom_minLaneSeparation.title = t10;\n            c.appendChild(this._create_dom_label(\"Lane Skip:\", this.#dom_minLaneSeparation, t10));\n            c.appendChild(this.#dom_minLaneSeparation);\n\n            //Try go back now and calculate other values if relevant\n            this.#calculate_and_update_capture_variables();\n            this.#try_update_dom_stats();\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    get_sidelap() {\n        return this.#sidelap;\n    };\n\n    get_overlap() {\n        return this.#overlap;\n    }\n\n    get_ground_resolution() {\n        return this.#ground_resolution;\n    };\n\n    set_sidelap(sidelap:number) {\n        this.#set_sidelap(sidelap);\n    }\n\n    #set_sidelap(sidelap:number, update_calcs:boolean = true) {\n        this.#sidelap = sidelap;\n        if(update_calcs)\n            this.#calculate_and_update_capture_variables();\n    };\n\n    set_overlap(overlap:number) {\n        this.#overlap = overlap;\n        this.#try_update_dom_stats();\n    }\n\n    set_ground_resolution(ground_resolution:number) {\n        this.#set_ground_resolution(ground_resolution);\n    }\n\n    #set_ground_resolution(ground_resolution:number, update_calcs:boolean = true) {\n        this.#ground_resolution = ground_resolution;\n\n        if(update_calcs)\n            this.#calculate_and_update_capture_variables();\n    };\n\n    #update_sidelap_from_dom() {\n        this.set_sidelap(this.#dom_sidelap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\n    }\n\n    #update_overlap_from_dom() {\n        this.set_overlap(this.#dom_overlap.valueAsNumber * NeuronFeatureSurvey._xlap_ratio)\n    }\n\n    #update_ground_resolution_from_dom() {\n        this.#set_ground_resolution(this.#dom_ground_resolution.valueAsNumber * NeuronFeatureSurvey._gsd_ratio)\n    }\n\n    #calculate_and_update_capture_variables() {\n        let settings_changed = false;\n        const camera = NeuronOptions.get_camera();\n\n        let altitude = camera.get_distance(this.get_ground_resolution());\n\n        if(altitude && altitude != this.get_altitude()) {\n            settings_changed = true;\n\n            if(this.#dom_altitude)\n                this.#dom_altitude.value = (altitude / NeuronFeatureSurvey._altitude_ratio).toString();\n            this.#set_altitude(altitude, false);\n        }\n\n        let projection = camera.get_projected_size(this.#altitude);\n\n        if(projection && (this.#sidelap >= 0) && (this.#sidelap <= 1)) {\n            const sidelap_factor = 1 - this.#sidelap;\n            const distance = projection.Width()*sidelap_factor;\n\n            if(distance != this.get_distance()) {\n                settings_changed = true;\n\n                if(this.#dom_distance)\n                this.#dom_distance.value = Math.max(Number.parseFloat(this.#dom_distance.min), distance).toString();\n\n                this.#set_distance(distance, false);\n            }\n        }\n\n        return settings_changed;\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeatureSurveyData {\n        let is_valid =\n            (object.type == NeuronFeatureSurvey.TYPE) &&\n            (object.version == NeuronFeatureSurvey.VERSION);\n\n        return is_valid;\n    }\n\n    static from_json(j:NeuronFeatureSurveyData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeatureSurvey.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeatureSurvey`);\n\n        const corners = j.corners.map(x => NeuronInterfacePoint.from_json(x));\n        let s = new NeuronFeatureSurvey(map, corners);\n\n        s.set_altitude(Number.isNaN(j.altitude) ? 0.0 : j.altitude);\n        s.set_distance(Number.isNaN(j.distance) ? 0.0 : j.distance);\n        s.set_spacing(Number.isNaN(j.spacing) ? 0.0 : j.spacing);\n        s.set_angle(Number.isNaN(j.angle) ? 0.0 : j.angle);\n        s.set_overshoot1(Number.isNaN(j.overshoot1) ? 0.0 : j.overshoot1);\n        s.set_overshoot2(Number.isNaN(j.overshoot2) ? 0.0 : j.overshoot2);\n        s.set_startpos(Number.isNaN(j.startpos) ? 0.0 : j.startpos);\n        s.set_minLaneSeparation(Number.isNaN(j.minLaneSeparation) ? 0.0 : j.minLaneSeparation);\n        s.set_leadin(Number.isNaN(j.leadin) ? 0.0 : j.leadin);\n        s.set_overlap(Number.isNaN(j.overlap) ? 0.0 : j.overlap);\n        s.#set_sidelap(Number.isNaN(j.sidelap) ? 0.0 : j.sidelap, false);\n        s.#set_ground_resolution(Number.isNaN(j.ground_resolution) ? 0.0 : j.ground_resolution, false);\n\n        s.#calculate_and_update_capture_variables();\n\n        return s;\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeatureSurveyData>{\n            version: NeuronFeatureSurvey.VERSION,\n            type: NeuronFeatureSurvey.TYPE,\n            corners: this.get_corners_as_points().map(x => x.to_json()),\n            altitude: this.get_altitude(),\n            distance: this.get_distance(),\n            spacing: this.get_spacing(),\n            angle: this.get_angle(),\n            overshoot1: this.get_overshoot1(),\n            overshoot2: this.get_overshoot2(),\n            startpos: this.get_startpos(),\n            minLaneSeparation: this.get_minLaneSeparation(),\n            leadin: this.get_leadin(),\n            overlap: this.get_overlap(),\n            sidelap: this.get_sidelap(),\n            ground_resolution: this.get_ground_resolution(),\n            label: this.get_label(),\n        }\n    }\n}\n","import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { L, create_popup_context_dom, LeafletContextMenuItem, get_neuron_map_marker } from \"./interface_leaflet\";\nimport { NeuronHelp } from \"./neuron_help\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronIcons } from \"./interface_fontawesome\";\n\nexport interface NeuronFeaturePointData {\n    version:string,\n    type:string,\n    point:NeuronInterfacePointData\n}\n\nexport class NeuronFeaturePoint extends NeuronFeatureBase {\n    static override NAME = \"Point\";\n    static override TYPE = \"NeuronFeaturePoint\";\n    static override VERSION = 'cd512a90-dd55-11ec-8a8a-23c90341eb99';\n    static override HELP_KEY = 'point';\n\n    #planner:NeuronPlanner;\n    #marker:L.Marker;\n    #point:NeuronInterfacePoint;\n    #dom:HTMLDivElement;\n    #dom_label:HTMLInputElement;\n    #dom_lat:HTMLInputElement;\n    #dom_lon:HTMLInputElement;\n    #dom_alt:HTMLInputElement;\n    #dom_convert_waypoint:HTMLButtonElement;\n\n    constructor(map:L.Map, point:NeuronInterfacePoint=null, planner:NeuronPlanner = null) {\n        super(map);\n\n        this.#marker = null;\n        this.#point = null;\n        this.#dom = null;\n        this.#dom_label = null;\n        this.#dom_lat = null;\n        this.#dom_lon = null;\n        this.#dom_alt = null;\n        this.#dom_convert_waypoint = null;\n\n        this.set_planner(planner);\n\n        if(point)\n            this.set_point(point);\n    }\n\n    get_point() {\n        return this.#point;\n    }\n\n    set_planner(planner:NeuronPlanner) {\n        this.#planner = planner;\n    }\n\n    remove_point_by_context(context:L.Marker) {\n        if(this.#marker == context) {\n            this.remove_feature();\n        } else {\n            console.warn(\"Call to remove unknown marker context\");\n        }\n    }\n\n    #remove_point_by_event(event:L.LeafletEvent) {\n        this.remove_point_by_context(event.target);\n    }\n\n    #update_position_from_event(event:L.LeafletEvent) {\n        let point = NeuronInterfacePoint.from_leaflet(event.target.getLatLng());\n        if (this.#point)\n            point.altitude = this.#point.altitude;\n        this.#internal_set_point(point);\n    }\n\n    set_point(point:NeuronInterfacePoint) {\n        if(!this.#marker) {\n            this.#marker = L.marker(point.to_leaflet(),{\n                draggable: true,\n                autoPan: true,\n                icon: get_neuron_map_marker('neuron-marker-poi')\n            })\n\n            this.#marker.on(\"drag\", this.#update_position_from_event.bind(this));\n            this.#marker.on(\"dblclick\", this.#remove_point_by_event.bind(this));\n\n            const menu_items = [\n                new LeafletContextMenuItem(\"Show in plan\", NeuronIcons.PLAN_LIST, this.show_on_plan.bind(this)),\n                null,\n                new LeafletContextMenuItem(\"Remove\", NeuronIcons.DELETE, this.remove_point_by_context.bind(this)),\n            ]\n            this.#marker.bindPopup(create_popup_context_dom(\"Point\", menu_items, this.#marker));\n\n            this._add_layer_to_map(this.#marker);\n        }\n\n        this.#internal_set_point(point);\n    }\n\n    show_on_plan() {\n        if(this.#dom) {\n            this.#dom.scrollIntoView();\n            this.#dom.classList.remove('mission-feature-highlight-remove');\n            this.#dom.classList.add('mission-feature-highlight');\n            setTimeout(this.#remove_dom_highlight.bind(this), 1000);\n        }\n    }\n\n    #remove_dom_highlight() {\n        if(this.#dom) {\n            this.#dom.classList.remove('mission-feature-highlight');\n            this.#dom.classList.add('mission-feature-highlight-remove');\n        }\n    }\n\n    #internal_set_point(point:NeuronInterfacePoint, update_marker:boolean = true, update_dom:boolean=true) {\n        this.#point = point;\n\n        if(update_marker && this.#marker)\n            this.#marker.setLatLng(point.to_leaflet());\n\n        if(update_dom) {\n            if(this.#dom_lat)\n                this.#dom_lat.value = point.latitude.toString();\n\n            if(this.#dom_lon)\n                this.#dom_lon.value = point.longitude.toString();\n        }\n\n        this._trigger_on_changed();\n    }\n\n    #update_latitude_from_dom() {\n        if(this.#point)\n            this.#point.latitude = this.#dom_lat.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_tag_from_dom() {\n        if(this.#point)\n            this.#point.tag = this.#dom_label.value;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_longitude_from_dom() {\n        if(this.#point)\n            this.#point.longitude = this.#dom_lon.valueAsNumber;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n    #update_altitude_from_dom() {\n        if(this.#point)\n            this.#point.altitude = this.#dom_alt.valueAsNumber * NeuronFeatureBase._altitude_ratio;\n\n        this.#internal_set_point(this.#point, true, false);\n    }\n\n\n    override show_help() {\n        window.neuron_map.show_map_help(true, `${NeuronHelp.HELP_PREFIX_MISSION}-${NeuronFeaturePoint.HELP_KEY}`);\n    }\n\n    override remove_feature() {\n        if(this.#marker)\n            this._remove_layer_from_map(this.#marker);\n\n        super.remove_feature();\n    }\n\n    //XXX: No paths provided by this feature, use base return\n    // override get_path_coords():NeuronInterfacePoint[] {\n    //     return [];\n    // }\n\n    override get_dom() {\n        if(!this.#dom) {\n            this.#dom = this._get_dom(\"Point\");\n\n            let c = document.createElement(\"div\");\n            c.className = 'mission-feature-content';\n\n            const t01 = \"Convert this point to a waypoint feature\";\n            this.#dom_convert_waypoint = this._create_dom_input_button(\"Waypoint\", this.#convert_to_waypoint.bind(this));\n            this.#dom_convert_waypoint.title = t01;\n            c.appendChild(this._create_dom_label(\"Convert to:\", this.#dom_convert_waypoint, t01));\n            c.appendChild(this.#dom_convert_waypoint);\n\n            const t3 = \"Text label for identification of the point\";\n            this.#dom_label = this._create_dom_input_textbox((this.#point ? this.#point.tag : \"\"), this.#update_tag_from_dom.bind(this));\n            this.#dom_label.title = t3;\n            c.appendChild(this._create_dom_label(\"Label:\", this.#dom_label, t3));\n            c.appendChild(this.#dom_label);\n\n            const t0 = \"Latitude location for the point in decimal degrees\";\n            this.#dom_lat = this._create_dom_input_number(this.#point ? this.#point.latitude : 0.0, this.#update_latitude_from_dom.bind(this), -90, 90, 0.0002);\n            this.#dom_lat.title = t0;\n            c.appendChild(this._create_dom_label(\"Latitude:\", this.#dom_lat, t0));\n            c.appendChild(this.#dom_lat);\n\n            const t1 = \"Longitude location for the point in decimal degrees\";\n            this.#dom_lon = this._create_dom_input_number(this.#point ? this.#point.longitude : 0.0, this.#update_longitude_from_dom.bind(this), -180, 180, 0.0002);\n            this.#dom_lon.title = t1;\n            c.appendChild(this._create_dom_label(\"Longitude:\", this.#dom_lon, t1));\n            c.appendChild(this.#dom_lon);\n\n            const t2 = \"Altitude for the point in feet relative to take-off location ground level\";\n            this.#dom_alt = this._create_dom_input_number((this.#point ? this.#point.altitude : 0.0) / NeuronFeatureBase._altitude_ratio, this.#update_altitude_from_dom.bind(this));\n            this.#dom_alt.title = t2;\n            c.appendChild(this._create_dom_label(\"Altitude:\", this.#dom_alt, t2));\n            c.appendChild(this.#dom_alt);\n\n            this.#dom.append(c);\n        }\n\n        return this.#dom;\n    }\n\n    #convert_to_waypoint() {\n        if(this.#planner) {\n            this.#planner.replace_point_with_waypoint(this);\n        } else {\n            console.warn(\"Planner not set, cannot convert point feature!\");\n        }\n    }\n\n    static override isObjectOfDataType(object: any): object is NeuronFeaturePointData {\n        let is_valid =\n            (object.type == NeuronFeaturePoint.TYPE) &&\n            (object.version == NeuronFeaturePoint.VERSION);\n\n        return is_valid;\n    }\n\n    static override from_json(j:NeuronFeaturePointData, map:L.Map) {\n        //XXX: Implement this per inherited feature\n        if(!NeuronFeaturePoint.isObjectOfDataType(j))\n            throw new Error(`Invalid type check during creation of NeuronFeaturePoint`);\n\n        const point = NeuronInterfacePoint.from_json(j.point);\n        return new NeuronFeaturePoint(map, point);\n    }\n\n    override to_json() {\n        //XXX: Implement this per inherited feature\n        return <NeuronFeaturePointData>{\n            version: NeuronFeaturePoint.VERSION,\n            type: NeuronFeaturePoint.TYPE,\n            point: this.#point.to_json()\n        }\n    }\n}\n","import { NeuronFeatureBase, NeuronFeatureBaseData } from \"./neuron_feature_base\";\nimport { NeuronFeatureWaypoint, NeuronFeaturePointData } from \"./neuron_feature_waypoint\";\nimport { NeuronFeaturePolygon, NeuronFeaturePolygonData } from \"./neuron_feature_polygon\";\nimport { NeuronFeatureSurvey, NeuronFeatureSurveyData } from \"./neuron_feature_survey\";\nimport { NeuronInterfacePoint, NeuronInterfacePointData } from \"./neuron_interfaces\";\nimport { NeuronMap } from \"./neuron_map\";\nimport { kml_download_from_neuron_data, kmx_load_file, NeuronKMLData } from \"./neuron_tools_kml\";\nimport { download_file, get_filename } from \"./neuron_tools_files\"\nimport { L } from \"./interface_leaflet\"\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\nimport { NeuronOptions, NeuronOptionsData } from \"./neuron_options\";\n// import { NeuronOptions } from \"./neuron_options\";\n\nexport type MissionFeatureData = (\n    NeuronFeatureBaseData |\n    NeuronFeaturePointData |\n    NeuronFeaturePolygonData |\n    NeuronFeatureSurveyData\n);\n\nexport type MissionFeature = (\n    NeuronFeatureBase |\n    NeuronFeatureWaypoint |\n    NeuronFeaturePolygon |\n    NeuronFeatureSurvey\n);\n\nexport interface NeuronPlannerMissionData {\n    version:string;\n    type:string;\n    settings:NeuronOptionsData;\n    mission_items:MissionFeatureData[],\n    waypoints: NeuronInterfacePointData[];\n}\n\nexport interface MissionBrief {\n    type:string,\n    description:string,\n    components:string[],\n    time_transit:string,\n    time_duration:string\n}\n\nexport class NeuronPlanner {\n    static TYPE = 'NeuronPlanner';\n    static VERSION = '48a24a80-d243-11ec-918e-9fd28348efc7';\n\n    #map:NeuronMap;\n\n    #plan_element:HTMLElement;\n    #mission_items:MissionFeature[];\n    #on_change_callbacks:Map<number,CallableFunction>;\n    #last_callback_id:number;\n    #clearing_mission:boolean;\n\n    #last_mission_altitude:number;\n\n    #plan_element_name:string;\n    // #unsub_option_cb:CallableFunction;\n\n    constructor(plan_element_name:string, map:NeuronMap = null) {\n        this.#map = map;\n\n        this.#plan_element = null;\n        this.#plan_element_name = plan_element_name;\n\n        this.#mission_items = [];\n        this.#on_change_callbacks = new Map();\n        this.#last_callback_id = 0;\n        this.#last_mission_altitude = 0.0;\n        this.#clearing_mission = false;\n        // this.#unsub_option_cb = null;\n    }\n\n    // set_options_subscriber() {\n    //     if(this.#unsub_option_cb)\n    //         this.#unsub_option_cb();\n\n    //     this.#unsub_option_cb = NeuronOptions.add_callback(this.#run_on_mission_change.bind(this));\n    // }\n\n    get_mission_items() {\n        return this.#mission_items;\n    }\n\n    get_mission_as_json() {\n        let mission_data:MissionFeatureData[] = [];\n        for(const item of this.#mission_items)\n            mission_data.push(item.to_json());\n\n        return mission_data;\n    }\n\n    static isObjectOfDataType(object: any): object is NeuronPlannerMissionData {\n        let is_valid =\n            (object.type == NeuronPlanner.TYPE) &&\n            (object.version == NeuronPlanner.VERSION);\n\n        return is_valid;\n    }\n\n    set_mission_from_json(j:NeuronPlannerMissionData) {\n        if(!NeuronPlanner.isObjectOfDataType(j))\n            throw new Error(\"Invalid version during import of NeuronPlannerMissionData\");\n\n        if(j.settings)\n            NeuronOptions.load(j.settings);\n\n        if(j.mission_items && j.mission_items.length) {\n            this.#add_mission_features_from_json(j.mission_items);\n        } else if(j.waypoints && j.waypoints.length) {\n            console.warn(\"No mission items found, importing waypoints instead!\");\n            this.#add_waypoint_features_from_json(j.waypoints);\n        }\n\n        this.fit_mission_on_map();\n    }\n\n    #add_mission_features_from_json(mission_items:MissionFeatureData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of mission_items) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronFeatureBase.isObjectOfDataType(item)) {\n                feature = NeuronFeatureBase.from_json(item, this.#map.get_leaflet_map());\n            } else if(NeuronFeaturePoint.isObjectOfDataType(item)) {\n                let p = NeuronFeaturePoint.from_json(item, this.#map.get_leaflet_map());\n                p.set_planner(this);\n                feature = p;\n            } else if(NeuronFeatureWaypoint.isObjectOfDataType(item)) {\n                feature = NeuronFeatureWaypoint.from_json(item, this.#map.get_leaflet_map());\n            } else if(NeuronFeaturePolygon.isObjectOfDataType(item)) {\n                let p = NeuronFeaturePolygon.from_json(item, this.#map.get_leaflet_map());\n                p.set_planner(this);\n                feature = p;\n            } else if(NeuronFeatureSurvey.isObjectOfDataType(item)) {\n                feature = NeuronFeatureSurvey.from_json(item, this.#map.get_leaflet_map());\n            } else {\n                console.warn(\"Unable to import mission item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    #add_waypoint_features_from_json(waypoints:NeuronInterfacePointData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of waypoints) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\n                const point = NeuronInterfacePoint.from_json(item);\n                feature = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), point);\n            } else {\n                console.warn(\"Unable to import waypoint item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    #add_point_features_from_json(points:NeuronInterfacePointData[]) {\n        let features:NeuronFeatureBase[] = [];\n\n        for(const item of points) {\n            let feature:NeuronFeatureBase = null;\n\n            if(NeuronInterfacePoint.isObjectOfDataType(item)) {\n                const point = NeuronInterfacePoint.from_json(item);\n                feature = new NeuronFeaturePoint(this.#map.get_leaflet_map(), point);\n            } else {\n                console.warn(\"Unable to import waypoint item\");\n                console.warn(item);\n            }\n\n            if(feature)\n                features.push(feature);\n        }\n\n        this.add_mission_items(features);\n    }\n\n    async save_mission_file() {\n        let j:NeuronPlannerMissionData = {\n            version: NeuronPlanner.VERSION,\n            type: NeuronPlanner.TYPE,\n            settings: NeuronOptions.as_json(),\n            mission_items: this.get_mission_as_json(),\n            waypoints: this.get_mission_as_points().map(x => x.to_json())\n        }\n\n        const file = new Blob(\n            [JSON.stringify(j, null, 4)],\n            {\n                type: 'application/json'\n            }\n        );\n\n        const filename = get_filename('json');\n        await download_file(filename, file);\n    }\n\n    async load_mission_file(file:Blob) {\n        const j = <NeuronPlannerMissionData>JSON.parse(await file.text());\n        this.set_mission_from_json(j);\n    }\n\n    async fit_mission_on_map(allow_animate:boolean=true, pad_left:number=50,pad_top:number=50,pad_right:number=50,pad_bottom:number=50) {\n        return new Promise(resolve => {\n            //Try to fit all the features on screen\n            if(this.#map) {\n                let m = this.#map.get_leaflet_map();\n                if(m) {\n                    let features:L.Layer[] = [];\n                    for(const item of this.#mission_items)\n                        features.push(...item.get_features());\n\n                    if(features.length) {\n                        let fg = L.featureGroup(features);\n                        const old_snap = m.options.zoomSnap;\n                        m.options.zoomSnap = 0;\n                        let cb = (ev:L.LayerEvent) => {\n                            // console.log(`Zoom ended at ${m.getZoom()}, disabling thing~`);\n                            m.options.zoomSnap = old_snap;\n                            m.off('moveend', cb);\n                            resolve(true);\n                        }\n                        //XXX:  we use moveend here because the map always moves to\n                        //      fit bounds, but it doesn't always zoom to fit bounds\n                        m.on('moveend', cb);\n                        m.fitBounds(fg.getBounds(), {\n                            paddingTopLeft: [pad_left, pad_top],\n                            paddingBottomRight: [pad_right, pad_bottom],\n                            animate: allow_animate,\n                            // duration: 0.001\n                        });\n\n                        // } else {\n                        //     console.log(\"Zoom not needed!\");\n                        //     resolve(true);\n                        // }\n                    } else {\n                        // console.log(\"No objects to zoom too!\");\n                        resolve(true);\n                    }\n                } else {\n                    resolve(false);\n                }\n            } else {\n                resolve(false);\n            }\n        });\n    }\n\n    export_mission_kml() {\n        let markers:NeuronInterfacePoint[] = [];\n        let polygons:NeuronInterfacePoint[][] = [];\n        for(const i of this.#mission_items) {\n            if((i instanceof NeuronFeaturePoint)) {\n                markers.push(i.get_point());\n            } else if((i instanceof NeuronFeaturePolygon) || (i instanceof NeuronFeatureSurvey)) {\n                polygons.push(i.get_corners_as_points());\n            }\n        }\n\n        kml_download_from_neuron_data(markers, this.get_mission_as_points(), polygons);\n    }\n\n    set_map(map:NeuronMap) {\n        this.#map = map;\n    }\n\n    #run_on_mission_change(){\n        const coords = this.get_mission_as_points();\n        this.#last_mission_altitude = coords.length ?\n            coords[coords.length - 1].altitude :\n            0.0;\n\n        for(const cb of this.#on_change_callbacks.values())\n            cb();\n    }\n\n    on_mission_change(cb:CallableFunction): CallableFunction {\n        const id = this.#last_callback_id++;\n        this.#on_change_callbacks.set(id, cb);\n\n        return this.#remove_on_mission_change.bind(this, id);\n    }\n\n    #remove_on_mission_change(key:number) {\n        if(this.#on_change_callbacks.has(key)) {\n            this.#on_change_callbacks.delete(key);\n        }\n    }\n\n    #mission_item_changed(item:NeuronFeatureBase) {\n        this.#run_on_mission_change();\n    }\n\n    #array_move(arr:any[], old_index:number, new_index:number) {\n        if (new_index >= arr.length) {\n            var k = new_index - arr.length + 1;\n            while (k--) {\n                arr.push(undefined);\n            }\n        }\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        return arr; // for testing\n    };\n\n    #move_mission_item(item:NeuronFeatureBase, direction:number) {\n        let ind = this.#mission_items.indexOf(item);\n        if(ind >= 0) {\n            //Move index and clamp to array size\n            let new_ind = ind + (direction > 0 ? 1 : -1)\n            new_ind = Math.max(Math.min(new_ind, (this.#mission_items.length - 1)), 0);\n            this.#array_move(this.#mission_items, ind, new_ind);\n\n            this.update();\n            this.#run_on_mission_change();\n        } else {\n            console.warn(\"Unknown mission item, cannot move\");\n        }\n    }\n\n    get_last_item_altitude() {\n        return this.#last_mission_altitude;\n    }\n\n    #on_add_mission_item_updates() {\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    #add_mission_item(item:NeuronFeatureBase, index:number = -1, run_update:boolean = true) {\n        item.set_remove_callback(this.remove_mission_item.bind(this));\n        item.set_change_callback(this.#mission_item_changed.bind(this));\n        item.set_move_callback(this.#move_mission_item.bind(this));\n        if(index < 0 || index >= this.#mission_items.length) {\n            this.#mission_items.push(item);\n        } else {\n            this.#mission_items.splice(index, 0, item);\n        }\n\n        if(run_update) {\n            this.#on_add_mission_item_updates();\n        }\n    }\n\n    add_mission_item(item:NeuronFeatureBase, index:number = -1) {\n        this.#add_mission_item(item, index)\n    }\n\n    add_mission_items(items:NeuronFeatureBase[], index:number = -1) {\n        let count = 0;\n        for(const item of items) {\n            const new_ind = index == -1 ?\n                -1 :    //add to end\n                index + count;\n            this.#add_mission_item(item, new_ind, false);\n            count ++;\n        }\n\n        if(items.length)\n            this.#on_add_mission_item_updates();\n    }\n\n    remove_mission_item(item:NeuronFeatureBase) {\n        // console.log(`Mission item removed: ${item}`);\n        let index = this.#mission_items.indexOf(item);\n        if(index >= 0) {\n            this.#mission_items.splice(index, 1);\n        } else {\n            console.warn(\"Unknown mission item, cannot remove!\")\n        }\n\n        if(!this.#clearing_mission) {\n            this.update();\n            this.#run_on_mission_change();\n        }\n    }\n\n    clear_mission() {\n        this.#clearing_mission = true;\n        while(this.#mission_items.length > 0)\n            this.#mission_items[0].remove_feature();\n        this.#clearing_mission = false;\n\n        //Do this in bulk at the end\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    update() {\n        const mission_doms = this.#mission_items.map(x => x.get_dom());\n        const mission_ids = mission_doms.map(x => x.id);\n\n        const old_elements = Array.from(this.#plan_element.children).filter(x => !mission_ids.includes(x.id));\n\n        for(const el of old_elements)\n            el.remove();\n        // for(let el of this.#plan_element.children) {\n        //     if(!mission_ids.includes(el.id))\n        //         this.#plan_element.removeChild(el);\n        // }\n\n        for(let j = 0; j < mission_doms.length; j++) {\n            const i = mission_doms[j];\n            const i_next = j+1 > mission_doms.length ? null : mission_doms[j+1];\n\n            let nodes = Array.from(this.#plan_element.children);\n            const ind_n = nodes.indexOf(i);\n            const ind_nn = nodes.indexOf(i_next);\n\n            //Check to see if our node is in the right location\n            if(ind_n != j) {\n                //It is not...\n                //Our next item is already in the list, so place it before that\n                if(i_next && ind_nn >= 0) {\n                    //Item is in the list, but is in the wrong spot\n                    //Or\n                    //Item is not in the list, insert before the next item\n                    this.#plan_element.insertBefore(i, i_next);\n                } else {\n                    //Item is not in the list, and there is no next item, append to end\n                    this.#plan_element.appendChild(i);\n                    i.scrollIntoView();\n                }\n\n                if(ind_n < 0) {\n                    i.classList.remove('mission-feature-highlight-remove');\n                    i.classList.add('mission-feature-highlight');\n                    setTimeout(this.#remove_mission_feature_highlight.bind(this, i), 1000);\n                }\n            }\n        }\n    }\n\n    #remove_mission_feature_highlight(dom:HTMLDivElement) {\n        dom.classList.remove('mission-feature-highlight');\n        dom.classList.add('mission-feature-highlight-remove');\n    }\n\n    #kml_loaded(result:NeuronKMLData) {\n        // console.log(\"Got file result:\");\n        // console.log(result);\n        let features:NeuronFeatureBase[] = [];\n\n        for(const p of result.markers) {\n            // p.altitude = this.get_last_item_altitude();\n            const f = new NeuronFeaturePoint(this.#map.get_leaflet_map(), p);\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\n            features.push(f);\n        }\n\n        for(const path of result.paths) {\n            for(const p of path) {\n                // p.altitude = this.get_last_item_altitude();\n                const f = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), p);\n                features.push(f);\n            }\n        }\n\n        for(const p of result.polygons) {\n            const f = new NeuronFeaturePolygon(this.#map.get_leaflet_map(), p);\n            f.set_planner(this);    //XXX: Enable functions for up-scaling polygon\n            features.push(f);\n        }\n\n        this.add_mission_items(features);\n        this.fit_mission_on_map();\n    }\n\n    replace_point_with_waypoint(old_item:NeuronFeaturePoint) {\n        const ind = this.#mission_items.indexOf(old_item);\n        if(ind >= 0) {\n            const waypoint = new NeuronFeatureWaypoint(this.#map.get_leaflet_map(), old_item.get_point());\n            old_item.remove_feature();\n            this.add_mission_item(waypoint, ind);\n        } else {\n            console.warn(\"Unknown mission feature, cannot replace\");\n        }\n    }\n\n    replace_polygon_with_survey(old_item:NeuronFeaturePolygon) {\n        const ind = this.#mission_items.indexOf(old_item);\n        if(ind >= 0) {\n            const survey = new NeuronFeatureSurvey(this.#map.get_leaflet_map(), old_item.get_corners_as_points());\n            old_item.remove_feature();\n            this.add_mission_item(survey, ind);\n        } else {\n            console.warn(\"Unknown mission feature, cannot replace\");\n        }\n    }\n\n    import_features_from_kmx_multiple(files:Blob[]) {\n        for(const file of files) {\n            this.import_features_from_kmx(file);\n        }\n    }\n\n    import_features_from_kmx(file:Blob) {\n        kmx_load_file(file, this.#kml_loaded.bind(this));\n    }\n\n    reset() {\n        //Collect our DOM elements\n        this.#plan_element = document.getElementById(this.#plan_element_name);\n\n        //Update the planner\n        this.update();\n        this.#run_on_mission_change();\n    }\n\n    get_mission_as_points() {\n        let coords:NeuronInterfacePoint[] = [];\n\n        for(const i of this.#mission_items)\n            coords = coords.concat(i.get_path_coords());\n\n        return coords;\n    }\n}\n","import {NeuronFeatureWaypoint} from \"./neuron_feature_waypoint\";\nimport {NeuronFeaturePolygon} from \"./neuron_feature_polygon\";\n\nimport { NeuronPlanner } from \"./neuron_planner\";\n\nimport {NeuronInterfacePoint} from \"./neuron_interfaces\";\nimport { L } from \"./interface_leaflet\";\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\nimport { NeuronOptions, NeuronOptionsBoolean } from \"./neuron_options\";\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\n\ninterface NeuronMapLayers {\n    [id: string]: L.TileLayer;\n}\n\nexport class NeuronMap {\n    #planner:NeuronPlanner\n    #map:L.Map;\n    #map_layer_control:L.Control.Layers;\n    #map_zoom_control:L.Control.Zoom;\n    #path:L.Polyline;\n    #map_element_name:string;\n    #help_element_name:string;\n    #map_element:HTMLElement;\n    #help_element:HTMLElement;\n    #map_layers:NeuronMapLayers;\n    #unsub_option_cb:CallableFunction;\n\n    constructor(map_element_name:string, help_element_name:string, planner:NeuronPlanner) {\n        this.#planner = planner;\n        this.#map = null;\n        this.#map_layer_control = null;\n        this.#map_zoom_control = null;\n        this.#map_layers = null;\n        this.#map_element = null;\n        this.#help_element = null;\n        this.#map_element_name = map_element_name;\n        this.#help_element_name = help_element_name;\n\n        this.#planner.on_mission_change(this.update_path.bind(this));\n        this.set_options_subscriber();\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_path.bind(this));\n    }\n\n    show_map_help(show:boolean, help_key:string = '') {\n        if(show) {\n            this.#map_element.style.display = 'none';\n            this.#help_element.style.display = 'block';\n\n            if(help_key)\n                document.getElementById(help_key)?.scrollIntoView();\n        } else {\n            this.#map_element.style.display = 'block';\n            this.#help_element.style.display = 'none';\n            this.reset();\n        }\n    }\n\n    toggle_map_help() {\n        this.show_map_help(this.#map_element.style.display != 'none');\n    }\n\n    get_leaflet_map() {\n        return this.#map;\n    }\n\n    set_location(location:NeuronInterfacePoint, zoom=13) {\n        if(this.#map) {\n            this.#map.setView(location.to_leaflet(), zoom);\n        }\n    }\n\n    zoom_to(feature_group:L.FeatureGroup) {\n        if(this.#map) {\n            this.#map.fitBounds(feature_group.getBounds());\n        }\n    }\n\n    add_feature(feature:L.Layer) {\n        if(this.#map) {\n            feature.addTo(this.#map);\n        }\n    }\n\n    add_features(features:L.Layer[]) {\n        for(const f of features)\n            this.add_feature(f);\n    }\n\n    on_double_click(event:L.LeafletMouseEvent) {\n        //Click modifier handlers\n        //CTRL+Click: Add new waypoint\n        // if(event.originalEvent.ctrlKey) {\n            //...\n        // } else {\n            const l = NeuronInterfacePoint.from_leaflet(event.latlng);\n            l.altitude = this.#planner.get_last_item_altitude();\n            const p = new NeuronFeatureWaypoint(this.#map, l);\n            this.#planner.add_mission_item(p);\n        // }\n    }\n\n    create_point_in_view() {\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            const p = new NeuronFeaturePoint(this.#map, new NeuronInterfacePoint(\n                sw.lat + dy / 2,\n                sw.lng + dx / 2,\n                this.#planner.get_last_item_altitude()\n            ));\n            p.set_planner(this.#planner);\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    create_waypoint_in_view() {\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            const p = new NeuronFeatureWaypoint(this.#map, new NeuronInterfacePoint(\n                sw.lat + dy / 2,\n                sw.lng + dx / 2,\n                this.#planner.get_last_item_altitude()\n            ));\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    #get_poly_bounds_from_view() {\n        let bounds:NeuronInterfacePoint[] = [];\n        if(this.#map) {\n            const b = this.#map.getBounds();\n            const ne = b.getNorthEast();\n            const sw = b.getSouthWest();\n            const dx = ne.lng - sw.lng;\n            const dy = ne.lat - sw.lat;\n\n            bounds = [\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng +     dx / 4),\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng +     dx / 4),\n                new NeuronInterfacePoint(sw.lat + 3 * dy / 4, sw.lng + 3 * dx / 4),\n                new NeuronInterfacePoint(sw.lat +     dy / 4, sw.lng + 3 * dx / 4)\n            ];\n        }\n\n        return bounds;\n    }\n\n    create_polygon_in_view() {\n        const bounds = this.#get_poly_bounds_from_view();\n\n        if(this.#map && bounds.length) {\n            const p = new NeuronFeaturePolygon(this.#map, bounds);\n            p.set_planner(this.#planner);\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    create_survey_in_view() {\n        const bounds = this.#get_poly_bounds_from_view();\n\n        if(this.#map && bounds.length) {\n            const p = new NeuronFeatureSurvey(this.#map, bounds);\n            p.set_altitude(this.#planner.get_last_item_altitude());\n            this.#planner.add_mission_item(p);\n        }\n    }\n\n    update_path() {\n        if(this.#path) {\n            const show = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\n            const path_points = show ? this.#planner.get_mission_as_points().map(x => x.to_leaflet()) : [];\n            this.#path.setLatLngs(path_points);\n        }\n    }\n\n    toggle_map_tools(show:boolean) {\n\n        if(this.#map) {\n\n            if(!this.#map_zoom_control) {\n                this.#map.zoomControl;\n            }\n\n            if(!show && this.#map_zoom_control) {\n                this.#map_zoom_control.remove();\n                this.#map_zoom_control = null;\n            } else if(!this.#map_zoom_control) {\n                this.#map_zoom_control = L.control.zoom();\n                this.#map_zoom_control.addTo(this.#map);\n            }\n\n            if(!show && this.#map_layer_control) {\n                this.#map_layer_control.remove();\n                this.#map_layer_control = null;\n            } else if(!this.#map_layer_control) {\n                this.#map_layer_control = L.control.layers(this.#map_layers); //, otherLayers...\n                this.#map_layer_control.addTo(this.#map);\n            }\n        }\n    }\n\n\treset() {\n        this.#map_element = document.getElementById(this.#map_element_name);\n        this.#help_element = document.getElementById(this.#help_element_name);\n\n\t\tif(!this.#map) {\n\t\t\tconst tiles_grey = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tid: 'mapbox/streets-v11',\n\t\t\t\ttileSize: 512,\n\t\t\t\tzoomOffset: -1,\n\t\t\t\taccessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\n\t\t\t});\n\t\t\tconst tiles_satellite = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\n\t\t\t\tattribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n\t\t\t\tmaxZoom: 18,\n\t\t\t\tid: 'mapbox/satellite-v9',\n\t\t\t\ttileSize: 512,\n\t\t\t\tzoomOffset: -1,\n\t\t\t\taccessToken: 'pk.eyJ1Ijoia3llbW9ydG9uIiwiYSI6ImNsMzJneXAybDAzcWwzY3BhNjB4OHJqMnoifQ.fue3o8Y3wWH4y_Wi50oUXw'\n\t\t\t});\n\n            this.#map_layers = {\n                Street: tiles_grey,\n                Satellite: tiles_satellite\n            };\n\n\t\t\tthis.#map = L.map(this.#map_element_name, {\n                doubleClickZoom: false,\n                layers: [\n                    tiles_grey,\n                    tiles_satellite\n                ],\n                zoomControl: false\n            });\n            this.toggle_map_tools(true);\n            this.#map.on(\"dblclick\", this.on_double_click.bind(this));\n\n            //Set an initial zoom\n            this.set_location(new NeuronInterfacePoint(-27.4771033, 153.0301422), 11);\n\t\t} else {\n\t\t\t//Already have a map, so just force a re-render\n\t\t\tthis.#map.invalidateSize();\n\t\t}\n\n        if(!this.#path) {\n            this.#path = L.polyline([], {color: 'orange'}).addTo(this.#map);\n        }\n\t}\n}\n","// import { NeuronFeatureBase } from \"./neuron_feature_base\";\nimport { NeuronFeatureWaypoint } from \"./neuron_feature_waypoint\";\n// import { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\nimport { NeuronFeatureSurvey } from \"./neuron_feature_survey\";\nimport { NeuronInterfacePoint } from \"./neuron_interfaces\";\nimport { NeuronOptions, NeuronOptionsNumber } from \"./neuron_options\";\n\nimport { MissionFeature, NeuronPlanner } from \"./neuron_planner\";\nimport { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronFeaturePoint } from \"./neuron_feature_point\";\nimport { NeuronFeaturePolygon } from \"./neuron_feature_polygon\";\n\n// const zeroPad = (num:number, places:number) => String(num).padStart(places, '0');\n\nexport interface MissionBriefComponent {\n    field1:string,\n    field2:string,\n    field3:string\n}\n\nexport interface MissionBriefItem {\n    type:string,\n    description:string,\n    components:MissionBriefComponent[],\n    time_transit:string,\n    time_duration:string\n}\n\nexport interface MissionSummary {\n    brief:MissionBriefItem[],\n    total_duration:number,\n    total_distance:number,\n    total_images:number\n}\n\nexport class NeuronBrief {\n    // static TYPE = 'NeuronBrief';\n    // static VERSION = 'bb92b580-d319-11ec-8818-bfb4bc4aa250';\n\n    #planner:NeuronPlanner;\n    #brief_element:HTMLElement;\n    #brief_element_name:string;\n\n    constructor(planner:NeuronPlanner, brief_element_name:string) {\n        this.#planner = planner;\n        this.#brief_element = null;\n        this.#brief_element_name = brief_element_name\n    }\n\n    /** Resets the internal state of this class and prepares any relevant variables\n     */\n    reset() {\n        this.#brief_element = document.getElementById(this.#brief_element_name);\n    }\n\n    /** Generates and updates the mission brief element in the document with the current mission brief details\n     */\n    update_mission_brief() {\n        const mission_features = this.#planner.get_mission_items();\n        const notables = this.get_mission_notables(mission_features);\n        const summary = this.get_mission_summary(mission_features);\n\n        this.#brief_element.innerHTML = '';\n        let title = document.createElement('h1');\n        title.appendChild(document.createTextNode(\"Mission Brief\"));\n        this.#brief_element.appendChild(title);\n\n\n        let table = document.createElement('div');\n        table.className = 'brief-table';\n\n        if(notables.length) {\n            let t1 = document.createElement('h2');\n            t1.className = 'brief-table-title';\n            t1.appendChild(document.createTextNode(\"Points of Interest\"));\n            table.appendChild(t1);\n\n            const headings = [\n                \"Item\",\n                \"Type\",\n                \"Description\",\n                \"Features\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n            ]\n\n            // let table = document.createElement('div');\n            // table.className = 'brief-table';\n            for(const h of headings) {\n                let th = document.createElement('div');\n                th.className = 'brief-table-header';\n                th.appendChild(document.createTextNode(h));\n                table.appendChild(th);\n            }\n\n            // for(let j = 0; j < row_step; j++) {\n            //     if(i + j >= rows.length)\n            //         break;\n\n            //     table.appendChild(rows[i + j]);\n            // }\n\n\n            let count = 0;\n            for(const item of notables) {\n                count++;\n                //XXX: Check item.type for special cases of bold tallies\n                const content = [\n                    item.type ? count.toString() : \"\",\n                    item.type,\n                    item.description,\n                    item.components.length ? item.components[0].field1 : \"—\",\n                    item.components.length ? item.components[0].field2 : \"—\",\n                    item.components.length ? item.components[0].field3 : \"—\",\n                    \"\",\n                    \"\"\n                ];\n\n                const ind_values_start = 3;\n                for(let j=0; j<content.length; j++) {\n                    let td = document.createElement('div');\n                    td.appendChild(document.createTextNode(content[j]));\n                    if((j == 0) || (j >= ind_values_start))\n                        td.classList.add('brief-table-entry-right');\n                    if(!item.type)\n                        td.classList.add('brief-table-entry-bold');\n                    td.classList.add('brief-table-entry');\n                    table.appendChild(td);\n                }\n\n                //Handle case of multiple components (skipped if one or less)\n                for(let i = 1; i<item.components.length; i++) {\n                    const content = [\n                        \"\",\n                        \"\",\n                        \"\",\n                        item.components[i].field1,\n                        item.components[i].field2,\n                        item.components[i].field3,\n                        \"\",\n                        \"\"\n                    ]\n\n                    for(const h of content) {\n                        let td = document.createElement('div');\n                        td.appendChild(document.createTextNode(h));\n                        td.className = 'brief-table-entry-right brief-table-entry';\n                        table.appendChild(td);\n                    }\n                }\n            }\n        }\n\n        if(summary.brief.length) {\n            let t2 = document.createElement('h2');\n            t2.className = 'brief-table-title';\n            t2.appendChild(document.createTextNode(\"Flight Plan\"));\n            table.appendChild(t2);\n\n            const headings = [\n                \"Step\",\n                \"Type\",\n                \"Description\",\n                \"Features\",\n                \"\",\n                \"\",\n                \"Transit\",\n                \"Duration\",\n            ]\n\n            // let table = document.createElement('div');\n            // table.className = 'brief-table';\n            for(const h of headings) {\n                let th = document.createElement('div');\n                th.className = 'brief-table-header';\n                th.appendChild(document.createTextNode(h));\n                table.appendChild(th);\n            }\n\n            // for(let j = 0; j < row_step; j++) {\n            //     if(i + j >= rows.length)\n            //         break;\n\n            //     table.appendChild(rows[i + j]);\n            // }\n\n\n            let count = 0;\n            for(const item of summary.brief) {\n                count++;\n                //XXX: Check item.type for special cases of bold tallies\n                const content = [\n                    item.type ? count.toString() : \"\",\n                    item.type,\n                    item.description,\n                    item.components.length ? item.components[0].field1 : \"—\",\n                    item.components.length ? item.components[0].field2 : \"—\",\n                    item.components.length ? item.components[0].field3 : \"—\",\n                    item.time_transit,\n                    item.time_duration\n                ];\n\n                const ind_values_start = 3;\n                for(let j=0; j<content.length; j++) {\n                    let td = document.createElement('div');\n                    td.appendChild(document.createTextNode(content[j]));\n                    if((j == 0) || (j >= ind_values_start))\n                        td.classList.add('brief-table-entry-right');\n                    if(!item.type)\n                        td.classList.add('brief-table-entry-bold');\n                    td.classList.add('brief-table-entry');\n                    table.appendChild(td);\n                }\n\n                //Handle case of multiple components (skipped if one or less)\n                for(let i = 1; i<item.components.length; i++) {\n                    const content = [\n                        \"\",\n                        \"\",\n                        \"\",\n                        item.components[i].field1,\n                        item.components[i].field2,\n                        item.components[i].field3,\n                        \"\",\n                        \"\"\n                    ]\n\n                    for(const h of content) {\n                        let td = document.createElement('div');\n                        td.appendChild(document.createTextNode(h));\n                        td.className = 'brief-table-entry-right brief-table-entry';\n                        table.appendChild(td);\n                    }\n                }\n            }\n        }\n\n        this.#brief_element.appendChild(table);\n\n        if(!notables.length && !summary.brief.length){\n            let td = document.createElement('div');\n            td.appendChild(document.createTextNode(\"No mission brief available.\"));\n            this.#brief_element.appendChild(td);\n        }\n    }\n\n    static get_components_from_point(point:NeuronInterfacePoint) {\n        return <MissionBriefComponent>{\n            field1: point.toStringLatitude(),\n            field2: point.toStringLongitude(),\n            field3: point.toStringAltitude(),\n        }\n    }\n\n\n    get_mission_notables(mission_features:MissionFeature[]) {\n        let notables:MissionBriefItem[] = [];\n\n        for(const item of mission_features) {\n            let step:MissionBriefItem = null;\n\n            if(!item.is_flyable()) {\n                if(item instanceof NeuronFeaturePoint) {\n                    const point = item.get_point();\n                    step = {\n                        type: NeuronFeaturePoint.NAME,\n                        description: (point && point.tag) ? point.tag : \"Point of interest\",\n                        components: [point ? NeuronBrief.get_components_from_point(point) : {\n                            field1: \"\",\n                            field2: \"\",\n                            field3: \"\",\n                        }],\n                        time_duration: \"\",\n                        time_transit: \"\"\n                    };\n                // } else if(item instanceof NeuronFeaturePolygon) {\n                } else if(item instanceof NeuronFeaturePolygon) {\n                    const corners = item.get_corners_as_points();\n                    const tag = item.get_label();\n                    step = {\n                        type: NeuronFeaturePolygon.NAME,\n                        description: (tag) ? tag : \"Area of interest\",\n                        components: corners.map(x => NeuronBrief.get_components_from_point(x)),\n                        time_duration: \"\",\n                        time_transit: \"\",\n                    };\n                }\n            }\n\n           if(step)\n                notables.push(step);\n        }\n\n        return notables;\n    }\n\n    get_mission_summary(mission_features:MissionFeature[]) {\n        let summary:MissionSummary = {\n            brief: [],\n            total_distance: 0,\n            total_duration: 0,\n            total_images: 0\n        }\n        const steps = this.#planner.get_mission_as_points();\n        let takeoff_duration = 0;\n        let land_duration = 0;\n        let extra_mission_duration = 0;\n        let takeoff_distance = 0;\n        let land_distance = 0;\n\n        if(steps.length) {\n            //Get the flight speed and lock it to at least 0.1m/s\n            const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n            const flight_speed = Math.max(s ? s : 0.0, 0.1);\n\n            let point_last = null;\n            // let time_takeoff = \"—\";\n            let takeoff_point = steps[0];\n            if(takeoff_point.altitude != 0) {\n                takeoff_point = new NeuronInterfacePoint(steps[0].latitude, steps[0].longitude, 0.0);\n                const takeoff_coords = [takeoff_point, steps[0]];\n                takeoff_distance = flight_distance_from_coords(takeoff_coords);\n                takeoff_duration = takeoff_distance/flight_speed;\n                point_last = takeoff_point;\n                // time_takeoff = \"+\" + flight_time_from_duration(takeoff_duration);\n            }\n\n            let step0:MissionBriefItem = {\n                type: NeuronFeatureWaypoint.NAME,\n                description: \"Take-off at location\",\n                components: [NeuronBrief.get_components_from_point(takeoff_point)],\n                time_duration: \"—\",\n                time_transit: \"—\",\n            };\n\n            summary.brief.push(step0);\n\n            for(const item of mission_features) {\n                let path = item.get_path_coords();\n\n                let time_transit = \"—\";\n                if(path.length && point_last) {\n                    const transit_coords = [point_last, path[0]];\n                    const transit_distance = flight_distance_from_coords(transit_coords);\n                    time_transit = \"+\" + flight_time_from_duration(transit_distance/flight_speed);\n                }\n\n                let step:MissionBriefItem = null;\n                if(item.is_flyable()) {\n                    if(item instanceof NeuronFeatureWaypoint) {\n                        const wait = item.get_wait_duration();\n                        extra_mission_duration += wait;\n                        const image_count = item.get_image_count();\n                        step = {\n                            type: NeuronFeatureWaypoint.NAME,\n                            description: \"Fly to location\" + (image_count ? ' and capture image' : ''),\n                            components: path.map(x => NeuronBrief.get_components_from_point(x)),\n                            time_duration: wait > 0 ? \"+\" + flight_time_from_duration(wait) : \"—\",\n                            time_transit: time_transit\n                        };\n                        summary.total_images += image_count;\n                    } else if(item instanceof NeuronFeatureSurvey) {\n                        let corners = item.get_corners_as_points();\n                        const step_distance = flight_distance_from_coords(path);\n                        const step_duration = \"+\" + flight_time_from_duration(step_distance/flight_speed);\n                        step = {\n                            type: NeuronFeatureSurvey.NAME,\n                            description: \"Survey area with bounds\",\n                            components: corners.map(x => NeuronBrief.get_components_from_point(x)),\n                            time_duration: step_duration,\n                            time_transit: time_transit,\n                        };\n                        summary.total_images += item.get_image_count();\n                    }\n                }\n\n                if(path.length)\n                    point_last = path[path.length - 1];\n\n                if(step)\n                summary.brief.push(step);\n            }\n\n            let time_land = \"—\";\n            let land_point = point_last;\n            let land_component:MissionBriefComponent = {\n                field1: \"—\",\n                field2: \"—\",\n                field3: \"—\"\n            };\n            if(land_point && land_point.altitude != 0) {\n                land_point = new NeuronInterfacePoint(point_last.latitude, point_last.longitude, 0.0);\n                land_component = NeuronBrief.get_components_from_point(land_point);\n                const land_coords = [point_last, land_point];\n                land_distance = flight_distance_from_coords(land_coords);\n                land_duration = land_distance/flight_speed;\n                time_land = \"+\" + flight_time_from_duration(land_duration);\n            }\n\n            let step_n:MissionBriefItem = {\n                type: NeuronFeatureWaypoint.NAME,\n                description: \"Land at location\",\n                components: [land_component],\n                time_duration: time_land,\n                time_transit: \"—\"\n            };\n            summary.brief.push(step_n);\n\n            summary.total_distance = flight_distance_from_coords(steps) + takeoff_distance + land_distance;\n            const total_transit_duration = summary.total_distance/flight_speed;\n            summary.total_duration = total_transit_duration + takeoff_duration + land_duration + extra_mission_duration;\n            const total_time = flight_time_from_duration(summary.total_duration);\n\n            let step_total_time:MissionBriefItem= {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Duration:\",\n                time_duration: total_time,\n            };\n            summary.brief.push(step_total_time);\n\n            let step_total_distance:MissionBriefItem = {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Distance:\",\n                time_duration: `${(summary.total_distance / 1000).toFixed(2)}km`,\n            };\n            summary.brief.push(step_total_distance);\n\n            let step_total_images:MissionBriefItem = {\n                type: \"\",\n                description: \"\",\n                components: [{\n                    field1: \"\",\n                    field2: \"\",\n                    field3: \"\",\n                }],\n                time_transit: \"Images:\",\n                time_duration: summary.total_images > 0 ? summary.total_images.toString() : \"—\",\n            };\n            summary.brief.push(step_total_images);\n        }\n\n        return summary;\n    }\n}\n","import { flight_distance_from_coords, flight_time_from_duration } from \"./neuron_tools_common\";\nimport { NeuronPlanner } from \"./neuron_planner\";\nimport { NeuronDOMFactory } from \"./neuron_dom_factory\";\nimport { NeuronCameraSpecifications } from \"./neuron_interfaces\";\nimport { NeuronOptionsBoolean, NeuronOptionsNumber, NeuronOptions } from \"./neuron_options\";\nimport { NeuronBrief } from \"./neuron_brief\";\nimport { NeuronIcons, neuron_get_icon } from \"./interface_fontawesome\";\n\nexport class NeuronStatistics extends NeuronDOMFactory {\n    #planner:NeuronPlanner;\n    #brief:NeuronBrief;\n    #stats_element_prefix:string;\n    #stats_section_show_display:string;\n\n    #stats_results_element:HTMLElement;\n    #stats_options_element:HTMLElement;\n    #stats_results_hide_element:HTMLElement;\n    #stats_options_hide_element:HTMLElement;\n    #stats_results_title_element:HTMLElement;\n    #stats_options_title_element:HTMLElement;\n\n    //Flight options\n    #dom_option_show_path:HTMLInputElement;\n    #dom_option_speed:HTMLInputElement;\n    //Capture parameters\n    #dom_option_camera_name:HTMLSelectElement;\n    #dom_option_camera_focal_length:HTMLInputElement;\n    #dom_option_camera_image_width:HTMLInputElement;\n    #dom_option_camera_image_height:HTMLInputElement;\n    #dom_option_camera_sensor_width:HTMLInputElement;\n    #dom_option_camera_sensor_height:HTMLInputElement;\n\n    #dom_stat_waypoints:HTMLOutputElement;\n    #dom_stat_distance:HTMLOutputElement;\n    #dom_stat_duration:HTMLOutputElement;\n    #dom_stat_images:HTMLOutputElement;\n\n    static _camera_focal_length_min:number = 0;\n    static _camera_sensor_width_min:number = 0;\n    static _camera_sensor_height_min:number = 0;\n    static _camera_image_width_min:number = 0;\n    static _camera_image_height_min:number = 0;\n\n    #unsub_option_cb:CallableFunction;\n\n    constructor(planner:NeuronPlanner, brief:NeuronBrief, stats_element_prefix:string) {\n        super(stats_element_prefix);\n\n        this.#planner = planner;\n        this.#brief = brief;\n\n        this.#dom_option_show_path = null;\n        this.#dom_option_speed = null;\n        this.#dom_option_camera_name = null;\n        this.#dom_option_camera_focal_length = null;\n        this.#dom_option_camera_image_width = null;\n        this.#dom_option_camera_image_height = null;\n        this.#dom_option_camera_sensor_width = null;\n        this.#dom_option_camera_sensor_height = null;\n\n        this.#stats_options_element = null;\n        this.#stats_results_element = null;\n        this.#stats_options_hide_element = null;\n        this.#stats_results_hide_element = null;\n        this.#stats_options_title_element = null;\n        this.#stats_results_title_element = null;\n        this.#stats_element_prefix = stats_element_prefix;\n        this.#stats_section_show_display = 'grid';\n\n        this.#dom_stat_waypoints = null;\n        this.#dom_stat_distance = null;\n        this.#dom_stat_duration = null;\n        this.#dom_stat_images = null;\n\n        this.set_options_subscriber();\n    }\n\n    set_options_subscriber() {\n        if(this.#unsub_option_cb)\n            this.#unsub_option_cb();\n\n        this.#unsub_option_cb = NeuronOptions.add_callback(this.update_statistics.bind(this));\n        NeuronOptions.set_dom_callback(this.#update_dom_from_options.bind(this));\n    }\n\n    // #get_option_id_from_key(key:NeuronStatisticsOptionKeys) {\n    //     return `${this.#stats_element_prefix}-options-${key}`;\n    // }\n\n    // get_results_id_from_key(key:string) {\n    //     return `${this.#stats_element_prefix}-results-${key}`;\n    // }\n\n    update_statistics() {\n        const coords = this.#planner.get_mission_as_points();\n        const summary = this.#brief.get_mission_summary(this.#planner.get_mission_items());\n        // this.#last_mission_altitude = coords.length ?\n        //     coords[coords.length - 1].altitude :\n        //     0.0;\n\n        // let total_distance = flight_distance_from_coords(coords);\n        const dist_km = summary.total_distance / 1000;\n\n        //Get the flight speed and lock it to at least 0.1m/s\n        // const s = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED);\n        // const flight_speed = Math.max(s ? s : 0.0, 0.1);\n\n        if(this.#dom_stat_waypoints)\n            this.#dom_stat_waypoints.value = coords.length.toFixed(0);\n\n        if(this.#dom_stat_distance)\n            this.#dom_stat_distance.value = `${(dist_km).toFixed(2)}km`;\n\n        if(this.#dom_stat_duration)\n            this.#dom_stat_duration.value = flight_time_from_duration(summary.total_duration);\n\n        if(this.#dom_stat_images)\n            this.#dom_stat_images.value = summary.total_images > 0 ? summary.total_images.toString() : \"---\";\n    }\n\n    #update_option_speed_dom() {\n        if(this.#dom_option_speed)\n            NeuronOptions.set_option_number(NeuronOptionsNumber.MISSION_SPEED, this.#dom_option_speed.valueAsNumber, true, false);\n    }\n\n    #update_option_show_path() {\n        if(this.#dom_option_show_path)\n            NeuronOptions.set_option_boolean(NeuronOptionsBoolean.SHOW_PATH, this.#dom_option_show_path.checked, true, false);\n    }\n\n    #update_dom_from_options() {\n        if(this.#dom_option_show_path)\n            this.#dom_option_show_path.checked = NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH);\n\n        if(this.#dom_option_speed)\n            this.#dom_option_speed.value = NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED).toString();\n\n        this.set_camera(NeuronOptions.get_camera(), false);\n    }\n\n    #gen_dom() {\n        //Options\n        this.#stats_options_element = document.getElementById(`${this.#stats_element_prefix}-options`);\n        this.#stats_options_element.innerHTML = '';\n\n        const t5 = \"Display the calculated flight path on the map\";\n        this.#dom_option_show_path = this._create_dom_input_checkbox(NeuronOptions.get_option_boolean(NeuronOptionsBoolean.SHOW_PATH), this.#update_option_show_path.bind(this));\n        this.#dom_option_show_path.title = t5;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Show path:\", this.#dom_option_show_path, t5));\n        this.#stats_options_element.appendChild(this.#dom_option_show_path);\n\n        const t0 = \"Speed of the aircraft during regular flight in metres per second\";\n        this.#dom_option_speed = this._create_dom_input_number(NeuronOptions.get_option_number(NeuronOptionsNumber.MISSION_SPEED), this.#update_option_speed_dom.bind(this), 0.1);\n        this.#dom_option_speed.title = t0;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Speed (m/s):\", this.#dom_option_speed, t0));\n        this.#stats_options_element.appendChild(this.#dom_option_speed);\n\n        const tb = \"Camera configuration for survey parameters.\";\n        let dom_break = this._create_dom_output();\n        dom_break.title = tb;\n        let dom_break_label = this._create_dom_label(\"Camera Config.\", dom_break, tb)\n        dom_break_label.classList.add('fp-stats-option-content-subtitle');\n        this.#stats_options_element.appendChild(dom_break_label);\n        this.#stats_options_element.appendChild(dom_break);\n\n        let camera = NeuronOptions.get_camera();\n        const t11 = \"Camera preset values for calculations based off of typical drone survey cameras\";\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\n        this.#dom_option_camera_name = this._create_dom_input_select(camera_names, camera_names, this.#update_camera_from_dom.bind(this));\n        this.#dom_option_camera_name.title = t11;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"Camera:\", this.#dom_option_camera_name, t11));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_name);\n        //Manually set the camera name based off of the currently loaded camera\n        this.#set_camera_selector(camera);\n\n        const t12 = \"Camera focal length in millimeters\";\n        this.#dom_option_camera_focal_length = this._create_dom_input_number(camera.focal_length, this.#update_camera_focal_length_from_dom.bind(this), NeuronStatistics._camera_focal_length_min);\n        this.#dom_option_camera_focal_length.title = t12;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"F.Length:\", this.#dom_option_camera_focal_length, t12));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_focal_length);\n\n        const t13 = \"Camera sensor width in millimeters\";\n        this.#dom_option_camera_sensor_width = this._create_dom_input_number(camera.sensor_width, this.#update_camera_sensor_width_from_dom.bind(this), NeuronStatistics._camera_sensor_width_min);\n        this.#dom_option_camera_sensor_width.title = t13;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Width:\", this.#dom_option_camera_sensor_width, t13));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_width);\n\n        const t14 = \"Camera sensor height in millimeters\";\n        this.#dom_option_camera_sensor_height = this._create_dom_input_number(camera.sensor_height, this.#update_camera_sensor_height_from_dom.bind(this), NeuronStatistics._camera_sensor_height_min);\n        this.#dom_option_camera_sensor_height.title = t14;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"S.Height:\", this.#dom_option_camera_sensor_height, t14));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_sensor_height);\n\n        const t15 = \"Camera image width in pixels\";\n        this.#dom_option_camera_image_width = this._create_dom_input_number(camera.image_width, this.#update_camera_image_width_from_dom.bind(this), NeuronStatistics._camera_image_width_min);\n        this.#dom_option_camera_image_width.title = t15;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Width:\", this.#dom_option_camera_image_width, t15));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_width);\n\n        const t16 = \"Camera image height in pixels\";\n        this.#dom_option_camera_image_height = this._create_dom_input_number(camera.image_height, this.#update_camera_image_height_from_dom.bind(this), NeuronStatistics._camera_image_height_min);\n        this.#dom_option_camera_image_height.title = t16;\n        this.#stats_options_element.appendChild(this._create_dom_label(\"I.Height:\", this.#dom_option_camera_image_height, t16));\n        this.#stats_options_element.appendChild(this.#dom_option_camera_image_height);\n\n\n        //Statistics\n        this.#stats_results_element = document.getElementById(`${this.#stats_element_prefix}-results`);\n        this.#stats_results_element.innerHTML = '';\n\n        const t1 = \"Total number of waypoints in the mission plan\";\n        this.#dom_stat_waypoints = this._create_dom_output();\n        this.#dom_stat_waypoints.title = t1;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Waypoints:\", this.#dom_stat_waypoints, t1));\n        this.#stats_results_element.appendChild(this.#dom_stat_waypoints);\n\n        const t2 = \"Total distance traveled during the mission plan\";\n        this.#dom_stat_distance = this._create_dom_output();\n        this.#dom_stat_distance.title = t2;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Distance:\", this.#dom_stat_distance, t2));\n        this.#stats_results_element.appendChild(this.#dom_stat_distance);\n\n        const t3 = \"Total time taken to fly the mission plan\";\n        this.#dom_stat_duration = this._create_dom_output();\n        this.#dom_stat_duration.title = t3;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Duration:\", this.#dom_stat_duration, t3));\n        this.#stats_results_element.appendChild(this.#dom_stat_duration);\n\n        const t4 = \"Total number of images taken during the mission plan\";\n        this.#dom_stat_images = this._create_dom_output();\n        this.#dom_stat_images.title = t4;\n        this.#stats_results_element.appendChild(this._create_dom_label(\"Images:\", this.#dom_stat_images, t4));\n        this.#stats_results_element.appendChild(this.#dom_stat_images);\n\n        //Callbacks for hide\n        this.#stats_results_hide_element = document.getElementById(`${this.#stats_element_prefix}-results-hide`);\n        this.#stats_results_title_element = document.getElementById(`${this.#stats_element_prefix}-results-title`);\n        this.#stats_results_title_element.style.cursor = 'pointer';\n        this.#stats_results_title_element.onclick = this.#toggle_hide_section.bind(\n            this,\n            // this.#stats_results_title_element,\n            this.#stats_results_hide_element,\n            this.#stats_results_element\n        );\n        this.#stats_options_hide_element = document.getElementById(`${this.#stats_element_prefix}-options-hide`);\n        this.#stats_options_title_element = document.getElementById(`${this.#stats_element_prefix}-options-title`);\n        this.#stats_options_title_element.style.cursor = 'pointer';\n        this.#stats_options_title_element.onclick = this.#toggle_hide_section.bind(\n            this,\n            // this.#stats_options_title_element,\n            this.#stats_options_hide_element,\n            this.#stats_options_element\n        );\n    }\n\n    #set_camera_selector(camera:NeuronCameraSpecifications = NeuronOptions.camera_preset_custom) {\n        if(this.#dom_option_camera_name) {\n            let matched_camera:boolean = false;\n\n            //Go through our list and find possible matches for our set camera\n            const camera_matches = NeuronOptions.camera_presets.filter(x => x.name == camera.name);\n            if(camera_matches.length) {\n                const full_matches = camera_matches.filter(x => x.equals(camera));\n                matched_camera = full_matches.length > 0;\n            }\n\n            //If there is a proper match, then use that name (details should be filled in by set_camera())\n            //Otherwise it is a custom camera\n            this.#dom_option_camera_name.value = matched_camera ? camera.name : NeuronOptions.camera_preset_custom.name;\n        }\n    }\n\n    // set_camera(camera:NeuronCameraSpecifications) {\n    //     this.#set_camera(camera);\n    // };\n\n    // #set_camera(camera:NeuronCameraSpecifications, update_calcs:boolean = true) {\n\n    set_camera(camera:NeuronCameraSpecifications, update_settings:boolean = true) {\n        if(update_settings)\n            NeuronOptions.set_camera(camera, true, false);\n\n        this.#set_camera_selector(camera);\n\n        if(this.#dom_option_camera_focal_length)\n            this.#dom_option_camera_focal_length.value = Math.max(NeuronStatistics._camera_focal_length_min, camera.focal_length).toString();\n        if(this.#dom_option_camera_sensor_width)\n            this.#dom_option_camera_sensor_width.value = Math.max(NeuronStatistics._camera_sensor_width_min, camera.sensor_width).toString();\n        if(this.#dom_option_camera_sensor_height)\n            this.#dom_option_camera_sensor_height.value = Math.max(NeuronStatistics._camera_sensor_height_min, camera.sensor_height).toString();\n        if(this.#dom_option_camera_image_width)\n            this.#dom_option_camera_image_width.value = Math.max(NeuronStatistics._camera_image_width_min, camera.image_width).toString();\n        if(this.#dom_option_camera_image_height)\n            this.#dom_option_camera_image_height.value = Math.max(NeuronStatistics._camera_image_height_min, camera.image_height).toString();\n    }\n\n    #update_camera_from_dom() {\n        const value = this.#dom_option_camera_name.value;\n\n        const camera_names = NeuronOptions.camera_presets.map(x => x.name);\n        let camera = NeuronOptions.camera_preset_custom.copy();\n\n        if(camera_names.includes(value)) {\n            const matches = NeuronOptions.camera_presets.filter(x => x.name == value);\n            if(matches.length > 0) {\n                camera = matches[0].copy();\n            }\n        }\n\n        this.set_camera(camera);\n        // this.#calculate_and_update_camera_variables();\n    }\n\n    #update_camera_focal_length_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.focal_length = this.#dom_option_camera_focal_length.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_sensor_width_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.sensor_width = this.#dom_option_camera_sensor_width.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_sensor_height_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.sensor_height = this.#dom_option_camera_sensor_height.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_image_width_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.image_width = this.#dom_option_camera_image_width.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #update_camera_image_height_from_dom() {\n        let camera = NeuronOptions.get_camera();\n        camera.image_height = this.#dom_option_camera_image_height.valueAsNumber;\n        this.set_camera(camera);\n    }\n\n    #toggle_hide_section(button:HTMLElement, section:HTMLElement) {\n        if(section.style.display != 'none') {\n            //Hide\n            section.style.display = 'none';\n        } else {\n            //Show\n            section.style.display = this.#stats_section_show_display;\n        }\n\n        button.innerHTML = '';\n        // let i = document.createElement('i');\n        // i.className = `fas fa-${section.style.display == 'none' ? 'plus' : 'minus'}`;\n        // button.appendChild(i);\n        const icons = neuron_get_icon(section.style.display == 'none' ? NeuronIcons.EXPAND : NeuronIcons.MINIMIZE);\n        for(const i of icons)\n            button.appendChild(i);\n    }\n\n    reset() {\n        this.#gen_dom();\n\n        //Update the planner\n        this.update_statistics();\n    }\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./map.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./map.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./stats_options.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./stats_options.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./plan.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./plan.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./brief.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./brief.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./responsive.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./responsive.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { NeuronOptions } from './neuron_options';\nimport { NeuronInterfacePoint } from './neuron_interfaces';\nimport { NeuronPlanner } from './neuron_planner';\nimport { NeuronMap } from './neuron_map';\nimport { NeuronBrief } from './neuron_brief';\nimport { NeuronStatistics } from './neuron_statistics';\nimport { NeuronHelp } from './neuron_help';\nimport { mm_to_px } from './neuron_tools_common';\nimport { neuron_load_dom_icons } from './interface_fontawesome'\nimport { get_supported_kmx_types } from './neuron_tools_kml'\n\n//TODO: https://www.skovy.dev/blog/tree-shaking-font-awesome?seed=tnv79i\n// import '@fortawesome/fontawesome-free/js/fontawesome'\n// import '@fortawesome/fontawesome-free/js/solid'\n// import '@fortawesome/fontawesome-free/js/regular'\n// import '@fortawesome/fontawesome-free/js/brands'\n\n// import \"../css/theme.css\";  //XXX: Loaded by minimal script in head\nimport \"../css/index.css\";\nimport \"../css/map.css\";\nimport \"../css/stats_options.css\";\nimport \"../css/plan.css\";\nimport \"../css/brief.css\";\nimport \"../css/responsive.css\"; //XXX: Load this last so it gets applied after all other definitions\n\ndeclare global {\n    interface Window {\n        neuron_planner: NeuronPlanner;\n        neuron_map: NeuronMap;\n        neuron_brief: NeuronBrief;\n        neuron_statistics: NeuronStatistics;\n        neuron_help: NeuronHelp;\n    }\n}\n\n/// <reference types=\"webpack/module\" />\nconsole.log(`Loaded V-TOL Neuron, packed with Webpack v${import.meta.webpack}`); // without reference declared above, TypeScript will throw an error\n\n//Initialize all of our options\nNeuronOptions.init();\n\n//All of our preset DOM IDs\nconst element_name_loader = 'loader';\nconst element_name_app = 'app';\nconst element_name_plan = 'fp-plan';\nconst element_prefix_stats = 'fp-stats';\nconst element_name_map = 'fp-map-interactive';\nconst element_name_help = 'fp-map-help';\nconst element_name_brief = 'print-section';\nconst element_prefix_help = 'help';\nconst elements_ignore_help = [\n    'fp-mission'\n]\n\n//Print-specific variables to store for later\nconst print_size_with_margin_mm = {\n    width: 190,   /* 210 */\n    height: 277/2,   /* 297 */\n}\nconst print_size_with_margin_px = {\n    width: mm_to_px(print_size_with_margin_mm.width),\n    height: mm_to_px(print_size_with_margin_mm.height)\n}\n\n//Application variables\nwindow.neuron_planner = new NeuronPlanner(element_name_plan);\nwindow.neuron_map = new NeuronMap(element_name_map, element_name_help, window.neuron_planner);\nwindow.neuron_brief = new NeuronBrief(window.neuron_planner, element_name_brief);\nwindow.neuron_statistics = new NeuronStatistics(window.neuron_planner, window.neuron_brief, element_prefix_stats);\nwindow.neuron_help = new NeuronHelp(element_prefix_help, elements_ignore_help);\n\nfunction show_loader(show:boolean) {\n    const el_loader = document.getElementById(element_name_loader);\n    const el_app = document.getElementById(element_name_app);\n    el_loader.style.display = show ? 'flex' : 'none';\n    el_app.style.display = show ? 'none' : 'flex';\n}\n\nfunction dragOverHandler(event:DragEvent) {\n    // console.log('File(s) in drop zone');\n\n    // Prevent default behavior (Prevent file from being opened)\n    event.preventDefault();\n}\n\nfunction dragDropHandler(event:DragEvent) {\n    event.preventDefault();\n    const kmx_types = get_supported_kmx_types();\n    for(const file of event.dataTransfer.items) {\n        if(file.type == 'application/json') {\n            window.neuron_planner.load_mission_file(file.getAsFile());\n        } else if (kmx_types.includes(file.type)) {\n            window.neuron_planner.import_features_from_kmx(file.getAsFile());\n        }\n    }\n}\n\nlet load_app_data = async () => {\n    //Do the FA switch-out for our DOM icons\n    neuron_load_dom_icons();\n\n    //Need to do this next, because many of the following need to known their final size on reset\n    show_loader(false);\n\n    window.neuron_planner.reset();\n    window.neuron_map.reset();\n    window.neuron_statistics.reset();\n    window.neuron_brief.reset();\n    window.neuron_help.reset();\n\n    window.neuron_planner.set_map(window.neuron_map);\n    window.neuron_planner.on_mission_change(window.neuron_statistics.update_statistics.bind(window.neuron_statistics));\n\n    let el_app = document.getElementById(element_name_map);\n    el_app.ondrop = dragDropHandler;\n    el_app.ondragover = dragOverHandler;\n\n    //Update the map location if we can get the user's current location\n    navigator.geolocation.getCurrentPosition( async (location) => {\n        window.neuron_map.set_location(new NeuronInterfacePoint(location.coords.latitude, location.coords.longitude));\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', load_app_data, false);\nwindow.addEventListener('beforeprint', (event) => {\n    //Turn off the map tools\n    window.neuron_map.toggle_map_tools(false);\n    //Turn off the map tools\n    window.neuron_map.show_map_help(false);\n    //Set the size of the map, and reset it to fit the new size\n    const map = document.getElementById(element_name_map);\n    // map.style.width = `${print_size_with_margin_mm.width}mm`;\n    // map.style.height = `${print_size_with_margin_mm.height}mm`;\n    // window.neuron_map.reset();\n    //Position all visible elements on the map\n    const side_pad = 50;\n\n    let pl = side_pad;\n    let pr = side_pad;\n    if(print_size_with_margin_px.width > map.offsetWidth) {\n        const diff = print_size_with_margin_px.width - map.offsetWidth;\n        pr = -diff + side_pad;\n    } else {\n        pr = side_pad + (map.offsetWidth - print_size_with_margin_px.width);\n    }\n\n    let pt = side_pad;\n    let pb = side_pad;\n    if(print_size_with_margin_px.height > map.offsetHeight) {\n        const diff = print_size_with_margin_px.height - map.offsetHeight;\n        pb = -diff + side_pad;\n    } else {\n        pb = side_pad + (map.offsetHeight - print_size_with_margin_px.height);\n    }\n\n    window.neuron_planner.fit_mission_on_map(true, pl, pt, pr, pb);\n\n    //Generate the brief\n    window.neuron_brief.update_mission_brief();\n});\n\nwindow.addEventListener('afterprint', (event) => {\n    //Turn off the map tools\n    window.neuron_map.toggle_map_tools(true);\n    //Set the size of the map, and reset it to fit the new size\n    const map = document.getElementById(element_name_map);\n    map.style.width = `auto`;\n    map.style.height = `auto`;\n    window.neuron_map.reset();\n    //Position all visible elements on the map\n    // window.neuron_planner.fit_mission_on_map();\n});\n"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_URL_IMPORT_1___","___CSS_LOADER_URL_IMPORT_2___","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","NeuronIcons","_neuron_get_icon_fa","neuron_icon","LOAD_PLAN","SAVE_PLAN","CLEAR_PLAN","UPLOAD_PLAN","CREATE_BRIEF","PLAN_LIST","HELP","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","DELETE","IDENTIFY","REVEAL","HIDE","MINIMIZE","EXPAND","FIT_ZOOM","POINT","POLYGON","IMPORT_FILE","EXPORT_FILE","neuron_get_icon","is_small","opts","transform","size","node","HTMLCollection","default_icon_options","iconUrl","shadowUrl","iconRetinaUrl","get_neuron_map_marker","class_name","className","LeafletContextMenuItem","constructor","text","icon","callback","create_popup_context_dom","popup_title","context_items","marker_context","dom","t","d","ic","classList","add","s","onclick","zero_pad","num","places","padStart","lastId","NeuronUID","prefix","flight_distance_from_coords","coords","total_distance","p1","p2","u1","to_UTM","u2","zone","GetDistance2D","alt_d","Math","pow","abs","altitude","sqrt","flight_time_from_duration","duration","t_h","floor","t_m","t_s","mm_to_px","mm","devicePixelRatio","EPSG_code_from_utm_zone","is_south","zf","projection","get_UTM_is_south","latitude_or_zone","UTMPos","x","y","tag","equals","other","match_tag","copy","relative_point_from_dist_bearing","bearing","distance","degN","deg2rad","PI","cos","sin","b","to_NeuronInterfacePoint","p","NeuronInterfacePoint","projection_code","static","point","latitude","longitude","get_UTM_zone","UTMLine","base_pnt","StartPosition","GridPointTags","Rect","Left","Top","Width","Height","Right","Bottom","MidWidth","MidHeight","diag_distance","remove_item_from_array","array","indexOf","FindLineIntersection","start1","end1","start2","end2","denom","r","PointInPolygon","poly","inside","oldPoint","newPoint","FindLineIntersectionExtension","findClosestPoint","start","answer","current_best","Number","MAX_VALUE","pnt","dist1","findClosestLine","min_distance","angle","METERS_TO_EXTEND","perpendicularOrientation","degrees","AddAngle","start_perpendicular_line","stop_perpendicular_line","intersectedPoints","Map","ordered_min_to_max","line","set","distance_p","has","ordered_keys","Array","from","keys","sort","a","key","filtered_lines","entries","filter","shortest","shorter_pnt","heading","to_leaflet","latlng","lat","lng","from_NeuronInterfacePoint","utm","positions","object","isFinite","j","isObjectOfDataType","isNaN","to_json","use_imperial","use_decimal","toStringLatitude","toStringAltitude","toFixed","toStringLongitude","_altitude_ratio","dd","is_lng","dir","deg","min","sec","NeuronCameraSpecifications","name","focal_length","sensor_width","sensor_height","image_width","image_height","is_valid","get_ground_resolution","res","get_projected_size","get_distance","ground_resolution","ground_span","fov2_w","atan2","tan","get_projection","proj","fov2_h","h2","w2","type","TYPE","version","VERSION","NeuronOptionsBoolean","NeuronOptionsNumber","NeuronOptionsString","NeuronOptions","set_option_boolean","SHOW_PATH","set_option_number","MISSION_SPEED","set_camera","camera_preset_custom","bind","value","trigger_callbacks","trigger_dom","set_option_string","CAMERA_NAME","CAMERA_FOCAL_LENGTH","CAMERA_IMAGE_WIDTH","CAMERA_IMAGE_HEIGHT","CAMERA_SENSOR_WIDTH","CAMERA_SENSOR_HEIGHT","get","get_option_string","get_option_number","get_option_boolean","Boolean","delete","cb","values","camera_presets","NeuronDOMFactory","css_prefix","_create_dom_label","input","description","hide_label","l","htmlFor","title","visibility","_create_dom_output","_create_dom_input_file","on_change","accepts","accept","onchange","_create_dom_input_button","_create_dom_input_textbox","_create_dom_input_number","max","step","_create_dom_input_range","_create_dom_input_checkbox","checked","_create_dom_input_select","labels","selected_option","option","selected","NeuronFeatureBase","super","set_remove_callback","set_change_callback","set_move_callback","_trigger_on_changed","_add_layer_to_map","m","addTo","console","error","_remove_layer_from_map","index_visible","index_hidden","_get_dom","button_class","_button_sizes","b0","zoom_to_feature","bv","toggle_visibility","b1","b2","b4","show_help","b3","remove_feature","on_remove","on_move","get_features","feature","group","fitBounds","getBounds","padding","neuron_map","show_map_help","is_flyable","IS_FLYABLE","get_path_coords","get_dom","but","innerHTML","icons","includes","direction","setTimeout","scrollIntoView","NAME","HELP_KEY","NeuronHelp","help_element_name","ignore_sub_keys","AbortController","stop","abort","reset","help_elements","querySelectorAll","trigger_element","target_element","class_highlight","target_element_ids","split","target_element_id","getElementById","addEventListener","key_hover_start","key_hover_end","HELP_PREFIX_MISSION","NeuronFeatureWaypoint","set_point","add_callback","set_options_subscriber","remove_point_by_context","context","warn","draggable","autoPan","on","menu_items","show_on_plan","bindPopup","get_wait_duration","set_wait_duration","wait_duration","get_image_count","get_capture_image","set_capture_image","capture_image","c","t0","t1","t2","t3","t4","t5","t18","_gsd_ratio","append","set_ground_resolution","from_json","event","from_leaflet","getLatLng","update_marker","update_dom","update_calcs","setLatLng","resolution","get_camera","valueAsNumber","get_filename","ext","Date","now","download_file","filename","burl","createObjectURL","display","body","click","type_kml","type_kmz","kml_extract_features","kml_plain_text","xmlDoc","DOMParser","parseFromString","ret","documentElement","nodeName","markers","paths","polygons","getElementsByTagName","placeMarkName","childNodes","nodeValue","trim","kml_polygons","kml_markers","kml_paths","multi","marker","point_from_coord","path","kml_points","points","polygon","parseFloat","lon","alt","kmz_download_from_neuron_data","waypoints","textXML","kml_data_from_neuron_data","kmz","blobWriter","writer","close","getData","get_kmz_from_kml_data","xmlDocument","implementation","createDocument","kmlNode","documentNode","kml_create_point_node","coordinates","placemarkNode","nameNode","descriptionNode","lineStringNode","coordinatesNode","plist","kml_create_path_node","kml_create_polygon_node","XMLSerializer","serializeToString","kml_document_to_string","pointNode","polygonNode","boundaryNode","ringNode","NeuronFeaturePolygon","corners","planner","set_planner","add_corners","update_polygon","corners_visible","update_show_corners","show_corners","_set_on_change_internal","move_corner_forwards","corner","ind","move_corner_backwards","select_corner","get_polygon","add_corner","remove_point_by_corner","get_corners","get_corners_as_points","add_point_at_location","ne","getNorthEast","sw","getSouthWest","dx","dy","setLatLngs","color","t21","t22","t11","t12","get_label","set_label","label","arr","old_index","new_index","diff","replace_polygon_with_survey","NeuronFeatureSurvey","show_waypoints","TopLeft","update_survey","update_show_waypoints","set_altitude","set_distance","set_spacing","spacing","set_angle","set_overshoot1","overshoot1","set_overshoot2","overshoot2","set_startpos","startpos","set_minLaneSeparation","minLaneSeparation","set_leadin","leadin","get_show_waypoints","get_altitude","get_spacing","get_angle","get_overshoot1","get_overshoot2","get_startpos","get_minLaneSeparation","get_leadin","photo_count","overlap_factor","photo_distance","lane","get_lane_coords","ps","pe","end","lane_distance","ceil","lanes","START","MIDDLE_START","MIDDLE_END","END","t00","t01","t03","t02","tb2","dom_break2","dom_break_label2","t17","_xlap_ratio","t19","tb1","dom_break1","dom_break_label1","TopRight","BottomLeft","BottomRight","t6","t7","t9","t8","t10","get_sidelap","get_overlap","set_sidelap","sidelap","set_overlap","overlap","sidelap_factor","clearTimeout","fire_on_change","minLaneSeparationINMeters","utm_zone","utm_positions","area","utmpos","min_x","min_y","max_x","max_y","getPolyMinMax","diag_dist","grid","lines","left","l_start","l_end","l_next","grid_no","closest_distance","farthest_distance","MIN_VALUE","closest_point","farthest_point","matches","crosses","new_utmpos","newline","start_pos_utm","closest","last_pnt","ans","new_start","utmpos1","MIDDLE","new_end","utmpos2","from_UTMs","CreateGrid","val","v","parseInt","Object","settings_changed","camera","NeuronFeaturePoint","get_point","replace_point_with_waypoint","NeuronPlanner","plan_element_name","get_mission_items","get_mission_as_json","mission_data","set_mission_from_json","settings","load","mission_items","fit_mission_on_map","save_mission_file","as_json","get_mission_as_points","file","Blob","load_mission_file","parse","allow_animate","pad_left","pad_top","pad_right","pad_bottom","Promise","resolve","get_leaflet_map","features","fg","old_snap","zoomSnap","ev","off","paddingTopLeft","paddingBottomRight","animate","export_mission_kml","kml_download_from_neuron_data","set_map","on_mission_change","get_last_item_altitude","add_mission_item","add_mission_items","items","new_ind","remove_mission_item","clear_mission","mission_doms","mission_ids","old_elements","children","el","i_next","nodes","ind_n","ind_nn","insertBefore","old_item","waypoint","survey","import_features_from_kmx_multiple","files","import_features_from_kmx","cb_file_loaded","log","reader","getEntries","got_data","kmx_load_file","run_update","f","bounds","NeuronBrief","brief_element_name","update_mission_brief","mission_features","notables","get_mission_notables","summary","get_mission_summary","table","headings","h","th","components","field1","field2","field3","ind_values_start","td","brief","time_transit","time_duration","get_components_from_point","total_duration","total_images","steps","takeoff_duration","land_duration","extra_mission_duration","takeoff_distance","land_distance","flight_speed","point_last","takeoff_point","step0","wait","image_count","step_duration","time_land","land_point","land_component","step_n","total_transit_duration","step_total_time","step_total_distance","step_total_images","NeuronStatistics","stats_element_prefix","update_statistics","set_dom_callback","dist_km","update_settings","_camera_focal_length_min","_camera_sensor_width_min","_camera_sensor_height_min","_camera_image_width_min","_camera_image_height_min","tb","dom_break","dom_break_label","camera_names","t13","t14","t15","t16","cursor","matched_camera","camera_matches","button","section","init","element_name_map","print_size_with_margin_px","dragOverHandler","preventDefault","dragDropHandler","kmx_types","dataTransfer","neuron_planner","getAsFile","map_element_name","update_path","show","help_key","toggle_map_help","set_location","location","zoom","setView","zoom_to","feature_group","add_feature","add_features","on_double_click","create_point_in_view","create_waypoint_in_view","create_polygon_in_view","create_survey_in_view","path_points","toggle_map_tools","zoomControl","invalidateSize","tiles_grey","attribution","maxZoom","tileSize","zoomOffset","accessToken","tiles_satellite","Street","Satellite","doubleClickZoom","layers","neuron_brief","neuron_statistics","neuron_help","icon_name","icon_id","neuron_load_dom_icons","el_loader","el_app","show_loader","ondrop","ondragover","navigator","geolocation","getCurrentPosition","side_pad","pr","offsetWidth","pb","offsetHeight","width","height"],"sourceRoot":""}